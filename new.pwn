// INSPIRE ROLE PLAY
#include a_samp

//макросы
#define MAX_VEHICLES 			(2000)
#define MAX_OBJECTS             (1000)
#define MAX_PLAYER_NAME         (24)
#define MAX_ACTORS              (1000)
#define MAX_PLAYERS 			(350)
#define MAX_HOTEL 				(16)
#define MAX_FAMILY_COUNT 		(700)
#define MAX_BUSINESS 			(55)
#define MAX_ADVERT_COUNT 		(15)
#define MAX_HOUSE        		(1266)
#define MAX_IP_ADRESS_CONNECT 	(2)
#define MAX_SALUTE 				(50)
#define MAX_GUN_DROP            (150)

#include streamer
#include float
#include inc
#include mxdate
#include a_mysql
#include regex
#include sscanf2
#include dc_cmd
#include other
#include foreach

#define MAX_SQL 256
#define MAX_STR 144
#define SMALL_SIZE 64
#define BIG_SIZE 512
#define ADM_SIZE 2046
#define CAR_SPAWN 900
#define VEHICLE_PARAMS_OFF 0
#define VEHICLE_PARAMS_ON 1
#define DIALOG_STYLE_MSGBOX	0
#define DIALOG_STYLE_INPUT 1
#define DIALOG_STYLE_LIST 2
#define DIALOG_STYLE_PASSWORD 3

#define FD1	"Denis_Adamant"
#define FD2 "Matthew_Cook"
#define FD3 "Vito_Wayne"

#if defined ShowPlayerDialog SPD
#endif

#define ShowPlayerInventory(%0) SPD(%0, 918, DIALOG_STYLE_LIST, "{FF6F00}Инвентарь", "{"#cBLUE"}1.{"#cWHITE"} Аксессуары\n{"#cBLUE"}2.{"#cWHITE"} Личное меню", "Выбрать", "Выход")
#define PlayerToPoint(%0,%1,%2,%3,%4) IsPlayerInRangeOfPoint(%1,%0,%2,%3,%4)
#define IsValidEmail(%1) \
    regex_match(%1, "|([a-z0-9_\\.\\-]{1,20})@([a-z0-9\\.\\-]{1,20})\\.([a-z]{2,4})|is")
#define Difference(%0,%1) (%0 > %1) ? (%0 - %1) : (%1-%0)
#define forveh(%0) for(new ouf, %0=forveh_vehicles[ouf]; ouf<forveh_count; %0=forveh_vehicles[++ouf])
#define GivePVarInt(%0,%1,%2) SetPVarInt(%0,%1,(GetPVarInt(%0,%1) + %2))
#define UngivePVarInt(%0,%1,%2) SetPVarInt(%0,%1,(GetPVarInt(%0,%1) - %2))
#define RandomEx(%1,%2) (random(%2-%1)+%1)
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define publics:%0(%1) forward %0(%1); public %0(%1)
#define mysql_empty(%1,%2) mysql_tquery(%1, %2, "", "")
#define SCMF(%0,%1,%2,%3) format(format_string, 144, %2,%3) && SCM(%0, %1, format_string)
new format_string [144];
//макросы

#pragma dynamic 3000

new bool:	gcontract															[MAX_PLAYERS char];
new bool:	anti																[MAX_PLAYERS char];
new bool:	mask																[MAX_PLAYERS char];
new bool:	cheaters															[MAX_PLAYERS char];
new bool:	forma																[MAX_PLAYERS char];
new bool:   proverkaforma 														[MAX_PLAYERS char];
new bool:	PhoneOnline															[MAX_PLAYERS char];
new bool:   keysvorota      													[MAX_PLAYERS char];
new bool:	PlayerTied															[MAX_PLAYERS char];
new bool:   Engines         													[MAX_VEHICLES char];
new bool:   Light           													[MAX_VEHICLES char];
new bool:	Start																[MAX_VEHICLES char];
new bool:	TaxiDuty															[MAX_PLAYERS char];
new bool:	gCarLock															[MAX_VEHICLES];
new bool:	wanted_f 															= false;
new bool:	AlhambraDJ 															= true;
new bool:	lNews																[MAX_PLAYERS];
new bool:	BigEar																[MAX_PLAYERS];
new bool:	BigEarSms															[MAX_PLAYERS];
new bool:	CellTime															[MAX_PLAYERS];
new bool:	times																[MAX_PLAYERS];
new bool:	boy																	[MAX_PLAYERS];
new bool:	Music																[MAX_PLAYERS];
new bool:	Music2																= false;
new bool:	AGun																[MAX_PLAYERS][47];

//dynamic mayor
new TransportCompany_FareTaxi;
//dynamic mayor

//dynamic candidats
new CandidatsOne[25] = "Нет кандидата";
new CandidatsTwo[25] = "Нет кандидата";
new CandidatsThree[25] = "Нет кандидата";
new KandidatsGolosa[3], Text3D:gVibMarKan[2],Text3D:gVibMarKantwo[2];
new bool:StartVibori = false, svt = 0;
//dynamic candidats

new autopick_mats[MAX_VEHICLES],
    Text3D:mats3Dtxt[MAX_VEHICLES],
    yashik;

new Text3D:breakText[MAX_PLAYERS];

//Setting
enum (<<=1)
{
    sAdminInfo=1,
	sFractionChat,
	sPlayerIDChat,
}
//Setting

static VehicleEnters[MAX_PLAYERS]={0, ...};
static RapidFire[MAX_PLAYERS char]={0, ...};
static WeaponTime[MAX_PLAYERS]={0, ...};

new forveh_vehicles[MAX_VEHICLES];
new forveh_count = 0;
#if !defined IsValidVehicle
     native IsValidVehicle(vehicleid);
#endif
new TransportCompany_FareTicket = 5000;
new ServerRestart[3];
new ProposeInt[2];
new createdvehs;
new createdvehicles[MAX_VEHICLES];
new Text3D:gArmyText[3];
new Taxi_Duty[MAX_VEHICLES];
new Text3D:taxi3d[MAX_VEHICLES];
new GoToHotel[MAX_PLAYERS],
	ItemsHotel,
	Pickup[14],
	ogradazid[11],
	fbiograda[8],
	ammunation,
	LessPick[2]
;

//patrul
new time_wanted[MAX_PLAYERS];
new patrul_id[MAX_PLAYERS];
new tick_wanted[MAX_PLAYERS char];
new Items_Cops;
//patrul

//АШ
new gDSTurn[20];
new Text3D:gDSTurnText;
//АШ

new pickupAccessories;

//Бейсджампинг
new BaseStarting[2] = 0;
new BasePic[3];
new PlayersInBase[1 char];
new Iterator: BaseList<MAX_PLAYERS>;
new AreaBase;
//Бейсджампинг

//NEWS
enum ADVERT_DATA
{
	adSender[24],
	adCheker[24],
	adPhone,
	adText[100],
	adTime,
	adMoney,
	bool:adCheked,
	bool:adBusy,
	bool:adCheking
}
new gAdvert[MAX_ADVERT_COUNT][ADVERT_DATA];
new gAdvertCount;
new gAdvertPrice = 8;
new gAdvertTime;
//NEWS

new gDerevo[38], DerevoP[38], TOTALDEREVO;

//Race
new PlayersInRace [1 char];
new Iterator: RacersList<MAX_PLAYERS>;
new PlayerScore[MAX_PLAYERS char];
new PlayerPosition[MAX_PLAYERS char];
new PlayerWinners[1 char];
new race_str [ 800 ] ;
new racePickup [ 4 ],raceTime = 1,RaceStarting[3] = 0,typeRace;
//Race

enum SAZONE_MAIN
{
	SAZONE_NAME[28],
Float:SAZONE_AREA[6]
};
forward GetZonaName ( Float: x,  Float: y );
forward GetCityName ( Float: x,  Float: y );

//массивы
static const HelpLes[][] = {
	{"{FFFFFF}Добро пожаловать на лесопилку.\n\n"},
	{"Здесь, Вы можете заработать неплохие первоначальные средства!\n"},
	{"Вам нужно срубать деревья и носить древесину на склад, получая деньги за пренесенные киллограммы!\n"},
	{"С одного дерева, Вы можете получить от 30 до 80 кг.\n\n"},
	{"Для того чтобы начать рабочий день, встаньте на синий пикап и нажмите начать!\n"},
	{"После начала работы, у Вас появится чекпоинт!\n"},
	{"Встаньте на него, и нажимайте клавишу ''ЛКМ'' этим самым, Вы срубаете дерево!\n"}
};
static const Float:Derevo[][3] =
{
	{-750.2000122,-157.5370026,66.0350037},
	{-711.8060303,-179.0319977,64.4960022},
	{-679.9680176,-179.4949951,61.8339996},
	{-657.0419922,-112.7610016,61.7270012},
	{-670.2169800,-174.7209930,60.4840012},
	{-645.4423828,-132.9521484,61.6320000},
	{-703.9873047,-108.1845703,66.3079987},
	{-671.0664062,-88.2119141,63.2220001},
	{-659.8007812,-89.8779297,62.2849998},
	{-643.1074219,-147.9228516,63.2989998},
	{-654.3154297,-141.6699219,60.5400009},
	{-663.8720703,-127.9794922,59.9269981},
	{-662.0986328,-148.3554688,59.6180000},
	{-673.1420288,-136.9120026,58.8279991},
	{-723.8759766,-195.5390015,66.3769989},
	{-680.4453125,-148.3261719,59.9189987},
	{-683.3857422,-122.3339844,61.4650002},
	{-688.1484375,-105.6562500,64.1429977},
	{-699.9248047,-129.1474609,65.5139999},
	{-693.5517578,-136.9414062,63.5660019},
	{-713.2568359,-197.9736328,67.3720016},
	{-702.5097656,-190.0068359,65.1600037},
	{-690.4238281,-200.7275391,66.5159988},
	{-690.5312500,-183.6718750,63.4370003},
	{-697.0185547,-177.0214844,62.6329994},
	{-711.5498047,-188.4101562,65.8720016},
	{-740.0239868,-164.3639984,66.3140030},
	{-722.2451172,-184.1347656,65.6930008},
	{-730.7431641,-191.5781250,65.4729996},
	{-727.8164062,-184.1787109,65.3850021},
	{-731.6396484,-159.5820312,65.7979965},
	{-760.5097656,-152.9121094,65.0260010},
	{-755.0498047,-168.6611328,66.5350037},
	{-733.9730225,-143.4779968,65.9619980},
	{-728.1699219,-131.7451172,66.8369980},
	{-708.1710205,-122.8440018,67.9089966},
	{-714.6279907,-147.3619995,66.0390015},
	{-649.9329834,-107.3590012,61.7220001}
};
static const Float: aBusPos [ 1 ] [ 41 ] [ 3 ] =
{
	{
		{1230.9524,-1827.1240,13.5426},
		{1198.3748,-1849.8652,13.5277},
		{1182.6826,-1753.5226,13.5318},
		{1065.2515,-1710.0510,13.5152},
		{1035.0924,-1771.6312,13.5151},
		{1048.0806,-1843.9089,13.5145},
		{1130.1753,-1854.3394,13.5149},
		{1265.3311,-1854.2454,13.5162},
		{1412.7979,-1874.3402,13.5138},
		{1599.4360,-1873.9989,13.5161},
		{1692.2527,-1823.7363,13.5162},
		{1771.7197,-1829.6602,13.5177},
		{1782.4772,-1854.4111,13.5290},
		{1713.8318,-1873.0873,13.5283},
		{1754.9462,-1890.6681,13.5283},
		{1818.5327,-1885.7406,13.5147},
		{1824.0723,-1762.3412,13.5162},
		{1824.2031,-1633.8693,13.5162},
		{1680.4413,-1589.9667,13.5183},
		{1471.4492,-1590.5436,13.5162},
		{1426.9979,-1674.7341,13.5164},
		{1386.9880,-1759.3724,13.5154},
		{1360.7561,-1864.0743,13.5248},
		{1314.5671,-1767.6848,13.5161},
		{1314.9146,-1573.3521,13.5162},
		{1354.4495,-1409.7529,13.4782},
		{1224.7792,-1397.6514,13.2871},
		{1209.0115,-1334.0208,13.5317},
		{1185.7659,-1279.4440,13.4524},
		{1056.2031,-1302.5181,13.6444},
		{1021.0138,-1394.4293,13.2086},
		{732.4651,-1391.8947,13.5967},
		{659.2169,-1393.1476,13.5829},
		{625.1596,-1478.6261,14.6099},
		{673.0801,-1588.9623,14.2108},
		{825.7580,-1606.7648,13.5172},
		{944.5028,-1573.8007,13.5155},
		{1035.0076,-1633.5833,13.5160},
		{1111.4270,-1714.4276,13.5162},
		{1171.9684,-1808.6864,13.5325},
		{1260.1619,-1854.9773,13.5155}
	}
};
static const Float: SellTicket[22][4] =
{
	{1814.4739990,-1699.5080566,13.5249996,0.0000000}, // (1)
	{1772.7149658,-1926.2719727,13.6230001,0.0000000}, // (2)
	{2050.6960449,-1944.5090332,13.6140003,90.0000000}, // (3)
	{2025.2130127,-1925.0639648,13.6029997,270.0000000}, // (4)
	{2125.5080566,-1770.5059814,13.6210003,180.0000000}, // (5)
	{2245.1931152,-1724.7939453,13.5810003,269.9945068}, // (6)
	{2258.6250000,-1739.3139648,13.6160002,89.9890137}, // (7)
	{2228.1188965,-2034.5059814,13.6020002,43.9890137}, // (8)
	{2230.2199707,-2016.9649658,13.6409998,223.9837646}, // (9)
	{1969.3449707,-2146.6960449,13.6190004,180.0000000}, // (10)
	{1166.8389893,-1760.4630127,13.6560001,359.9890137}, // (40)
	{1187.2110596,-1748.9639893,13.6300001,179.9890137}, // (41)
	{1397.1519775,-1813.2280273,13.5850000,179.9835205}, // (42)
	{1381.6469727,-1808.1120605,13.6429996,359.9835205}, // (43)
	{1421.6159668,-1677.4160156,13.5920000,359.9780273}, // (44)
	{1435.9770508,-1665.1009521,13.5889997,179.9780273}, // (45)
	{1535.9300537,-1652.4840088,13.5900002,179.9725342}, // (46)
	{1523.1209717,-1664.8780518,13.5880003,359.9725342}, // (47)
	{1772.7158203,-1914.7812500,13.6020002,0.0000000}, // (49)
	{1829.5040283,-1706.0600586,13.5839996,180.0000000}, // (50)
	{1953.6109619,-1773.3659668,13.5909996,0.0000000}, // (52)
	{1968.8139648,-1776.2209473,13.5860004,180.0000000} // (53)
};
static const nameSetting[3][64] = {
	"Отключить информацию о действиях администрации",
	"Отключить чат фракции",
	"Отключить ID игроков в чате"
};
static const Float:atm_position [24] [3] =
{
   	{1142.8103,-1764.0710,15.5082},{-1676.34570312,434.01806641,8.08183193},{-2033.32604980,159.50723267,29.94120598},{2236.16186523,-1665.79772949,26.27980804},
   	{1367.56359863,-1290.13696289,14.44901943},{1142.44287109,-1763.92932129,14.59816360},{847.58093262,-1799.19348145,14.71945286},{-78.74282837,-1171.64892578,2.95329499},
   	{-1551.53637695,-2737.33691406,49.64560318},{661.71307373,-576.21777344,17.25428581},{557.32824707,-1294.28137207,18.24994087},{-2035.70605469,-102.35491180,36.07402039},
   	{1919.78381348,-1766.21813965,14.44901943},{2843.30444336,1286.17187500,12.29276943},{2187.36035156,2478.89160156,12.14433193},{1587.30920410,2218.34838867,11.96464443},
   	{2174.20336914,1402.93469238,11.96464443},{-818.55200195,1567.63708496,28.01933098},{91.92106628,1180.56555176,19.56620598},{-1282.38098145,2715.18652344,51.16842651},
   	{-2452.32275391,2252.62988281,5.87058449},{-2621.31445312,1415.23510742,7.88521862},{-1648.57336426,1213.76684570,8.12228298},{-2421.45410156,958.35540771,46.18632126}
};
static const PlayerRank[27][18][32] =
{
	{"Кадет","Офицер","Мл.Сержант","Сержант","Ст.Сержант","Прапорщик","Ст.Прапорщик","Мл.Лейтенант","Лейтенант","Ст.Лейтенант","Капитан","Майор","Подполковник","Полковник","Шериф","","",""},
    {"Стажер","Дежурный агент","Мл.Агент","Агент GNK","Агент CID","Глава отдела GNK","Глава отдела CID","Инспектор FBI","Зам.Директора FBI","Директор FBI","","","","","","","",""},
	{"Рядовой","Ефрейтор","Мл.Сержант","Сержант","Ст.Сержант","Старшина","Прапорщик","Мл.Лейтенант","Лейтенант","Ст.Лейтенант","Капитан","Майор","Подполковник","Полковник","Генерал","","",""},
	{"Санитар","Практикант","Интерн","Мед. Брат","Врач","Врач высшей категории","Зам.Заведующего отделения","Завещующий отделением","Заместитель Глав. Врача","Главный врач","","","","","","","",""},
	{"Новицио","Ассосиато","Сомбаттенте","Солдато","Боец","Сотто Капо","Капо","Младший босс","Консильери","Дон","","","","","","","",""},
	{"Вакасю","Кёдай","Сятейгасира","Вакагасира","Со-хобунтё","Камбу","Оядзи","Сайко Комон","Оябун-кобун","Кумитё","","","","","","","",""},
	{"Секретарь","Адвокат","Охранник","Нач.Охраны","Зам.Мэра","Мэр","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","","",""},
	{"Кадет","Офицер","Мл.Сержант","Сержант","Ст.Сержант","Прапорщик","Ст.Прапорщик","Мл.Лейтенант","Лейтенант","Ст.Лейтенант","Капитан","Майор","Подполковник","Полковник","Шериф","","",""},
	{"Стажёр","Консультант","Экзаменатор","Младший Инструктор","Инструктор","Координатор","Младший Менеджер","Старший Менеджер","Директор","Управляющий","","","","","","","",""},
	{"Блайд","Бастер","Крэкер","Гун бро","Ап бро","Гангстер","Федерал Блок","Фолкс","Райч Нигга","Биг Вилли","","","","","","","",""},
	{"Новато","Ординарио","Локал","Верификадо","Бандито","V.E.G","Ассесино","Лидер V.E.G","Падрино","Падре","","","","","","","",""},
	{"Шнырь","Фраер","Бык","Барыга","Блатной","Свояк","Браток","Вор","Вор в законе","Авторитет","","","","","","","",""},
	{"Плэйя","Хастла","Килла","Юонг Г","Гангста","О.Г","Мобста","Де Кинг","Легенд","Мэд Дог","","","","","","","",""},
	{"Стажёр","Помощник редакции","Звукооператор","Оператор","Звукорежиссёр","Режиссёр","Репортер","Ведущий","Редактор","Главный редактор","Тех.Директор","Программный директор","Генеральный директор","","","","",""},
	{"Перро","Тирадо","Геттор","Лас Геррас","Мирандо","Сабио","Инвасор","Тесореро","Нестро","Падре","","","","","","","",""},
	{"Ладрон","Новато","Амиго","Мачо","Джуниор","Эрмано","Бандидо","Ауторидад","Аджунто","Падре","","","","","","","",""},
	{"Рядовой","Ефрейтор","Мл.Сержант","Сержант","Ст.Сержант","Старшина","Прапорщик","Мл.Лейтенант","Лейтенант","Ст.Лейтенант","Капитан","Майор","Подполковник","Полковник","Генерал","","",""},
	{"","","","","","","","","","","","","","","","","",""},
	{"Кадет","Офицер","Мл.Сержант","Сержант","Ст.Сержант","Прапорщик","Ст.Прапорщик","Мл.Лейтенант","Лейтенант","Ст.Лейтенант","Капитан","Майор","Подполковник","Полковник","Шериф","","",""},
	{"","","","","","","","","","","","","","","","","",""},
	{"Ученик","Мясник","Киллер","Агент","Спец. агент","Тихий убийца","Убийца-одиночка","Серийный убийца","Тестер","Профессионал","Зам. директора","Директор","","","","","",""},
	{"Изгой","Новичок","Водила","Стритрейсер","Опытный Стритрейсер","Профессионал","Король драга","Король дрифта","Король улиц","","","","","","","","",""},
	{"Прапорщик","Ст.Прапорщик","Мл.Лейтенант","Лейтенант","Ст.Лейтенант","Капитан","Майор","Подполковник","Полковник","Нач.подразделения SWAT","","","","","","","",""},
	{"Охранник","Начальник Охраны","Пресс-секретарь","Министр Здравохранения","Министр МВД","Министр обороны","Верховный судья","Премьер-министр","Вице-Президент","Президент Штата","","","","","","","",""},
	{"Матрос","Ст.Матрос","Мичман","Cт.Мичман","Лейтенант","Капитан-Лейтенант","Капитан 3 ранга","Капитан 2 ранга","Капитан 1 ранга","Вице-Адмирал","Адмирал","","","","","","",""}
};
static const ChangeSkin[27][20] =
{
	{280,281,282,283,284,285,288,76,300,301,302,303,304,305,306,307,309,310,311}, // LSPD
	{286,163,164,165,166,141,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // FBI
	{287,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Army SF
	{70,274,275,276,219,308,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Medics LS
	{223,124,113,214,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // La Cosa Nostra [LCN]
	{120,123,169,186,118,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Yakuza
	{57,150,98,187,147,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Мэрия Los Santos
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Closed
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Closed
	{280,281,282,283,284,285,288,76,300,301,302,303,304,305,306,307,309,310,311}, // SFPD
	{59,172,189,240}, // Лицензеры
	{102,103,104,195}, // Ballas
	{108,109,110,190}, // Vagos
	{112,111,125,272,214}, // Russian Mafia
	{105,106,107,269,270,271,56}, // Grove
	{250,261,211,217}, // Los Santos News
	{114,115,116,41}, // Aztecas Gang
	{173,174,175,226}, // Rifa Gang
	{287,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Army LV
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Closed
    {280,281,282,283,284,285,288,76,300,301,302,303,304,305,306,307,309,310,311}, // LVPD
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Closed
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Closed
    {60,47,217,67,240,170,29,11,91,0,0,0,0,0,0,0,0,0,0,0}, // Street Racing
    {76,285,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // S.W.A.T
    {17,216,227,287,265,12,208,295,0,0,0,0,0,0,0,0,0,0,0,0}, // Правительство
    {295,191,255,61,287,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0} // Военно Морской Флот
};
static const gSAZones[][SAZONE_MAIN] = {
	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},	{"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},	{"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},		{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},		{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},		{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},	{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},	{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},	{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},	{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},	{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},	{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},	{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},	{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},	{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},	{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},	{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},	{"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},	{"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},		{"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},			{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},		{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},	{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},	{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},		{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},			{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},	{"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},	{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},	{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},	{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},	{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},	{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},	{"Los Santos International",    {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"Los Santos International",    {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},	{"Los Santos International",    {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},	{"Los Santos International",    {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"Los Santos International",    {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},	{"Los Santos International",    {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},		{"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},	{"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},		{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},	{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},	{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},	{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},	{"Mulholland Intersection",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},	{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},	{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},	{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},	{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},	{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},	{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},	{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},	{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},	{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},		{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Industrial Estate",  {1558.00,596.30,-89.00,1823.00,823.20,110.90}},		{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},	{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},	{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},	{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},	{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},	{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},	{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},		{"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},		{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},	{"The Four Dragons Casino",     {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},		{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},		{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},	{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};
static const gSAZonesCity[][SAZONE_MAIN] = {
	{"г. Los Santos",                   {44.60, -2892.90, -242.90, 2997.00, -768.00, 900.00}},
 	{"г. Las Venturas",                 {869.40, 596.30, -242.90, 2997.00, 2993.80, 900.00}},
    {"д. Bone County",                  {-480.50, 596.30, -242.90, 869.40, 2993.80, 900.00}},
    {"д. Tierra Robada",                {-2997.40, 1659.60, -242.90, -480.50, 2993.80, 900.00}},
    {"д. Tierra Robada",                {-1213.90, 596.30, -242.90, -480.50, 1659.60, 900.00}},
    {"г. San Fierro",                   {-2997.40, -1115.50, -242.90, -1213.90, 1659.60, 900.00}},
    {"д. Red County",                   {-1213.90, -768.00, -242.90, 2997.00, 596.30, 900.00}},
    {"д. Flint County",                 {-1213.90, -2892.90, -242.90, 44.60, -768.00, 900.00}},
    {"д. Whetstone",                    {-2997.40, -2892.90, -242.90, -1213.90, -1115.50, 900.00}}
};
static const rangFractionID[27] = {15,10,15,10,10,10,6,0,0,15,9,10,10,10,10,13,10,10,15,0,15,0,12,9,10,10,11};
static const GetAdmin[13][32] = {"Практикант","Ст.Практикант","Мл.Модератор","Модератор","Ст.Модератор","Гл.Модератор","Мл.Администратор","Администратор","Ст.Администратор","Гл.Администратор","Спец.Администратор","Помощник Основателя","Основатель проекта"};
static const GetMember[27][32] = {"LSPD","FBI","Army SF","Мин.Здрав","La Cosa Nostra","Yakuza","Мэрия г.Los-Santos","Закрыто","Закрыто","SFPD","Инструкторы","Ballas Gang","Vagos Gang","Russian Mafia","Grove Street Gang","LS News","Aztecas Gang","Rifa Gang","Army LV","Закрыто","LVPD","Закрыто","Закрыто","Street Racing","S.W.A.T","Правительство","Военно Морской Флот"};
static const gExamTrueAnswer[25]={1,3,4,2,4,3,2,3,1,2,2,1,2,4,3,2,1,3,1,4,2,1,3,1,4};
static const gGunID[8] = {23,24,29,25,30,33,31,34};
static const gGunAmount[8] = {70,180,200,280,300,380,350,500};
static const gExamQuestions[25][90] = {
	"В каком случае разрешен обгон впереди движущегося т/с?",	"Разрешен ли обгон впереди движущегося т/с по городу?",	"Какова макс скорость транспортного средства по автомагистрали?",	"Какова макс скорость транспортного средства по пригороду?",
	"При виде т/с с включенным спец.сигналом, водитель обязан?",	"В каких случаях разрешен обгон с права?",	"Какова макс. скорость транспортного средства по городу?",	"Какого типа установлены перекрестки в штате?",
	"Что такое ДТП?",	"Что следует делать при возникновении ДТП в первую очередь?",	"В каком месте водитель имеет право осуществлять парковку?",	"Что следует делать водителю при проезде перекрестка?",
	"Со скольки лет можно получить водительские права?",	"В каком случае следует пристегивать ремень безопастности?",	"Когда можно включать дальний свет фар?",	"Разрешен ли обгон по двойной сплошной линии?",
	"Можно ли устанавливать спец. Сигнал на личный автомобиль?",	"Разрешен ли обгон по прерывистой линии?",	"Стоит ли соблюдать грузоподъемность тягача?",	"В каком случае можно включать аварийный сигнал?",	"Обязательна ли остановка перед пешеходным переходом?",	"Разрешен ли разворот т/c в туннеле?",
	"Необходимо ли смотреть в зеркала заднего вида при маневре задним ходом?",	"Разрешено ли движение задним ходом на магистрале?",	"Должны ли быть видны гос.номера автомобиля? "
};
static const gExamAnswers[25][4][75] = {
	{"В случае отсутствия очевидной угрозы лобового столкновения.","В случае передвижения за городом.","В случае передвижения по городу.","В случае очевидной угрозы лобового столкновения"}, 	{"Разрешен всегда","Запрещен обгон с лева","Разрешен в случае отсутствия угрозы столкновения","Запрещен всегда"},
	{"60 Км/ч","10 Км/ч","130 Км/ч","150 Км/ч"}, 	{"100 Км/ч","110 Км/ч","60 Км/ч","90 Км/ч"},	{"Продолжить движение в прежнем темпе.","Резко остановить транспортное средство.","Снизить скорость транспортного средства до 40 Км/ч","Постепенно снизить скорость и прижаться к обочине."},
	{"Разрешен всегда","Запрещен","Разрешен в случае поворота впереди движущегося транспортного средства.","Разрешен за городом"},	{"50 Км/ч","60 Км/ч","70 Км/ч","80 Км/ч"},
	{"Регулируемые равнозначных дорог","Регулируемые неравнозначных дорог","Нерегулируемые равнозначных дорог","Нерегулируемые неравнозначных дорог"},	{"Дорожно-транспортное происшествие.","Дорожно-транспортное предприятие.","Дорожно-торговое предприятие.","Дорожно-торговое предприятствие."},
	{"Скрыться с места ДТП.","Оставаться на месте ДТП и Вызвать сотрудников ПО.","Оставаться на месте ДТП и Вызвать службу спасения.","Вызвать сотрудников скорой помощи."}, 	{"По среди дороги","На парковке.","На перекрестке","На тротуаре"},	{"Снизить скорость и проехать при отсутствии помех.","Увеличить скорость.","Проехать не изменяя скорость.","Перелететь его с читом"},	{"16 лет","18 лет","20 лет","25 лет"},
	{"При виде сотрудника ПД","При передвижении за городом"," При передвижении в городе ","В любом случае"}, 	{"В городе","В пробке","На трассе","При проезде на перекрестке"},	{"Только на трассе ","Запрещен","В городе","На перекрестке"},	{"Нет, нельзя","Да","Только на внедорожниках","Только на грузовиках"},
	{"Только для машин со спец.сигналом","Только для велосипедистов","Всегда разрешен","Всегда запрещен"},	{"Да, всегда","Нет, не обязательно","Только при погрузке угля","Только при перевозке людей"},	{"В любом случае","Если надо «Отойти»","При обгоне","При ДТП"},	{"Нет, не обязательно ","Обязательно","Только при виде сотрудников ПД","Только при включенном поворотнике"},
	{"Нет","Только при включенном аварийном сигнале","Только при виде сотрудников ПД","Только при включенном дальнем свете"}, 	{"При включенных фарах","При виде пешехода","Обязательно","Не обязательно"},	{"Нет, не разрешен","Да, разрешен","Только при виде сотрудников ПД","Только при включенном правом поворотнике"},	{"Нет, не должны","Только сзади","Только спереди","Должны спереди и сзади"}
};
static const SpeedLimit[212] ={
	100,100,110,75,90,105,65,85,60,105,90,130,105,90,65,115,100,200,85,100,95,100,95,65,80,200,110,105,105,120,100,100,100,90,105,200,100,100,100,105,100,100,100,100,90,105,100,200,100,200,200,115,100,100,100,100,100,100,100,100,200,125,90,125,200,200,95,95,125,200,100,100,100,100,
	100,105,200,115,90,100,110,60,100,95,100,100,100,200,200,95,100,100,95,100,125,110,105,200,85,100,95,200,125,125,100,95,110,105,100,70,70,200,200,200,100,100,105,105,105,200,200,130,130,125,100,100,100,100,110,100,60,80,80,105,105,95,110,150,150,110,100,120,105,100,100,100,
	100,100,200,100,100,105,100,200,100,95,100,100,105,110,105,100,110,200,200,105,105,110,95,200,200,75,80,100,70,105,100,200,100,100,100,125,95,70,200,100,125,105,100,105,200,200,200,200,200,100,110,110,110,100,100,90,110,110,110,110,200,200,200,100,200,200
};
static const MaxPassengers[27] = {
	0x10331113, 0x11311131, 0x11331313, 0x80133301,	0x1381F110, 0x10311103, 0x10001F10, 0x11113311,	0x13113311, 0x31101100, 0x30001301, 0x11031311,
	0x11111331, 0x10013111, 0x01131100, 0x11111110,	0x11100031, 0x11130221, 0x33113311, 0x11111101,	0x33101133, 0x101001F0, 0x03133111, 0xFF11113F,	0x13330111, 0xFF131111, 0x0000FF3F
};
static const GunObjects[47] = {0,331,333,334,335,336,337,338,339,341,321,322,323,324,325,326,342,343,344,0,0,0,346,347,348,349,350,351,352,353,355,356,372,357,358,359,360,361,362,363,364,365,366,367,368,368,371};
static const SkinMen[62][2] ={
	{66,1000},{15,1000},{36,1000},{50,1000},{95,1000},{96,1000},{136,1000},{143,1000},{155,1000},{2,50000},{14,50000},{24,50000},{58,100000},{262,100000},{241,100000},{242,100000},{7,300000},
	{23,300000},{33,300000},{60,500000},{67,500000},{73,500000},{184,500000},{21,700000},{22,700000},{30,700000},{183,700000},{255,700000},{17,1000000},{45,1000000},{82,1000000},{83,1000000},
	{185,1000000},{290,1000000},{291,1000000},{28,1200000},{29,1200000},{247,1200000},{248,1200000},{254,1200000},{249,1200000},{18,1500000},{19,1500000},{47,1500000},{48,1500000},{101,1500000},{299,1500000},
	{61,2000000},{121,2000000},{227,2000000},{228,2000000},{292,2000000},{293,2000000},{297,2000000},{122,2500000},{117,3500000},{118,3500000},{296,4000000},{295,4500000},{46,5000000},{208,5000000},{294,5000000}
};
static const SkinMale[14][2] ={{192,100000},{216,100000},{193,200000},	{194,300000},	{11,500000},	{219,1000000},{93,2000000},{211,2000000},{233,2000000},{148,3000000},{169,4000000},{141,5000000},{76,5000000},{150,5000000}};
static const ArchiNeMateritsa[33][33] = {"хуй","сука","суки","ебаные","пизда", "тварь","пидор","пидар","пидорас","блять", "блядь","долбаёб"	,"долбаеб","гандон","уёбок","уебок","пиздец","ебало",	"пидарас", "еблан","ебать","охуеть","ебаться","чмошник","сучара","казлина",".ru","ебал","даун","пнх","пидорасы","пидр","хуесосы"};
static const nameGun[47][] = {
	"Кастет", "Гольф клюшка", "Дубинка", "Нож", "Бита", "Лопата",	"Кий", "Катана", "Katana", "Бензо пила", "Фалоэмитатор", "Фалоэмитатор",	"Фалоэмитатор", "Вибратор", "Цветы", "Трость", "Взрывная граната", "Дымовая граната", "Коктель молотова","Error","Error","Error",
	"9mm", "Пистолет с глушителем", "Дигл", "Дробовик", "Обрез", "Дробовик", "Микро узи", "MP5", "AK-47", "M4", "Узи",	"Рифл", "Снайперская винтовка", "Гранатомёт", "Гранатом", "Огнемёт", "Восьмистволка",	"Липкая бомба", "Детонатор", "Спрей", "Огнетушитель", "Фотоаппарат", "Очки ночного виденья",
	"Очки ночного виденья", "Парашют"
};
static const ShopCar[86][2] = {{400,130000},{567,200000},{549,120000},{547,110000},{546,140000},{543,100000},{527,100000},{526,110000},{518,170000},
	{517,150000},{516,140000},{492,140000},{479,110000},{478,100000},{475,190000},{466,110000},{458,120000},{439,150000},{436,100000},{404,100000},
	{419,800000},{586,800000},{581,1000000},{461,1000000},{418,700000},{603,750000},{589,770000},{580,1000000},{579,940000},{561,910000},{555,940000},
	{554,840000},{534,760000},{533,920000},{505,880000},{491,800000},{489,880000},{445,810000},{421,830000},{401,340000},{600,420000},{585,360000},
	{576,350000},{575,460000},{566,340000},{551,480000},{550,480000},{540,330000},{536,400000},{529,440000},{507,450000},{474,370000},{467,390000},
	{426,420000},{422,310000},{412,390000},{405,400000},{477,220000},{471,2100000},{468,1900000},{463,2000000},{521,1900000},{602,2000000},{587,2100000},
	{565,2100000},{562,2200000},{560,2250000},{559,2200000},{558,2100000},{545,1900000},{535,2000000},{480,2400000},{402,4800000},{503,6000000},{502,6000000},
	{494,6000000},{495,5800000},{424,5000000},{434,4800000},{522,4600000},{541,6000000},{506,5100000},{451,6000000},{429,5400000},{415,5600000},{411,6000000}};
static const Float:spawn_car [2] [40] [4] =
{
	{
		{2091.895263,-2520.565185,13.433180,37.902584}, {2094.764160,-2518.331298,13.433194,37.902797}, {2097.488037,-2516.210937,13.433210,37.903057}, {2100.653076,-2513.746093,13.433222,37.903259}, {2104.851806,-2510.477783,13.433242,37.903450}, {2107.984619,-2507.750732,13.433382,38.896286},
		{2111.420898,-2505.282226,13.433529,44.362625}, {2119.425537,-2518.171386,13.437009,21.364038}, {2114.278076,-2520.184326,13.437017,21.363973}, {2109.155517,-2523.806152,13.439718,21.364025}, {2103.543212,-2526.568603,13.439425,21.364072}, {2098.313232,-2530.997314,13.438414,21.364183},
		{2097.627441,-2540.054931,13.440947,21.364278}, {2101.975830,-2539.262207,13.440667,21.364345}, {2105.375244,-2538.512207,13.440439,21.364418}, {2108.870117,-2537.145019,13.440454,21.364492}, {2113.717041,-2535.249755,13.440456,21.364530}, {2118.462158,-2533.393798,13.440476,21.364578},
		{2123.893066,-2544.668457,13.433508,3.160697}, {2119.953613,-2544.885742,13.435308,3.160687}, {2116.225341,-2547.537109,13.434331,3.160625}, {2111.804199,-2547.658203,13.434389,3.160687}, {2105.874023,-2549.084472,13.434020,3.160563}, {2100.804199,-2549.364013,13.434053,3.160625},
		{2093.775634,-2556.532958,13.431475,3.160563}, {2099.526367,-2558.672119,13.430426,3.160625}, {2103.135009,-2558.473388,13.886198,3.160563}, {2111.609130,-2558.004394,13.886105,3.160563}, {2116.906005,-2557.713134,13.886048,3.160563}, {2113.164550,-2571.723876,13.441659,321.873443},
		{2106.754638,-2569.824951,13.825028,321.873382}, {2101.283691,-2568.904785,13.956215,321.873382}, {2094.681884,-2563.722900,13.956216,321.873382}, {2088.453857,-2571.658203,13.952000,321.873382}, {2091.333496,-2576.226562,13.951242,321.873382}, {2094.020751,-2580.314453,13.950592,321.873382},
		{2097.216552,-2589.722900,14.985203,321.873687}, {2077.217773,-2598.296386,13.440001,268.024841}, {2076.595947,-2592.791503,13.422363,268.021179}, {2074.781738,-2584.226318,13.421342,268.021179}
	},
	{
	   	{672.2044,2103.3127,16.2470,177.8561}, {668.3824,2102.3796,16.2030,177.0146}, {664.0132,2102.1299,16.2054,179.0928}, {659.5983,2102.0122,16.1971,178.9829}, {655.3647,2101.7991,16.2386,180.9504}, {650.8540,2101.2305,16.2347,183.3866},
		{650.2929,2111.7456,17.0781,182.7519}, {654.9857,2111.5193,16.9867,179.6493}, {659.1634,2111.3586,16.9531,180.4426}, {663.5944,2111.7275,16.9409,181.3633}, {666.9539,2111.4771,16.9481,180.1949}, {670.0529,2111.6252,16.9527,179.8351},
		{674.6517,2111.3140,16.8065,177.6580}, {674.8973,2119.1531,17.5570,177.8308}, {670.7462,2119.1599,17.5815,178.6785}, {667.4767,2118.9365,17.4795,180.1411}, {663.5541,2118.9109,17.5459,179.1588}, {659.3839,2118.8687,17.5921,180.8173},
		{656.5150,2118.7117,17.5908,181.3367}, {653.0975,2118.6082,17.6121,179.7124}, {653.1479,2124.6274,18.1142,179.5998}, {657.8023,2124.9504,18.0880,180.6734}, {661.5770,2124.6272,18.0182,180.6442}, {664.9161,2124.1855,18.0260,181.8698},
		{668.1638,2123.9641,17.9031,179.0754}, {671.7554,2123.6523,17.8501,176.6323}, {676.2199,2123.3462,17.8528,175.2501}, {676.4521,2131.1335,18.5533,178.2869}, {673.6086,2131.8088,18.5686,177.4951}, {669.5196,2131.8982,18.6098,177.0708},
		{666.6295,2131.7405,18.6057,177.4690}, {663.1808,2131.7803,18.6541,180.2207}, {660.2335,2131.7568,18.7080,180.0066}, {656.9416,2131.7266,18.7175,180.9920}, {654.2312,2131.5225,18.6418,184.7503}, {649.9846,2131.2620,18.7229,183.1566},
		{650.8186,2137.2646,19.0700,180.7624}, {655.8868,2137.0403,19.0259,181.0888}, {663.0311,2137.3953,19.0177,180.3358}, {672.3614,2137.4355,19.0051,179.1938}
	}
};
static const Float:los_santos_race [2] [52] [3] =
{
	{
		{2068.331542,-2486.419189,13.384812}, {1999.593872,-2443.603515,13.390092}, {1975.960693,-2339.038574,13.389539}, {1974.702636,-2264.686767,13.389196}, {1971.640136,-2207.681640,13.388321}, {1917.494628,-2164.439453,13.225696}, {1835.689331,-2164.458984,13.225584}, {1690.865234,-2165.281250,16.534917}, {1561.424682,-2102.565917,33.548648}, {1534.903198,-2038.627441,30.559921},
		{1531.514648,-1925.844116,15.948495}, {1423.284545,-1871.391845,13.225830},
		{1333.105590,-1853.432861,13.231085}, {1198.192626,-1852.575561,13.236808}, {1072.954833,-1851.229614,13.233303}, {1003.930236,-1793.053222,13.893136}, {860.259521,-1771.445312,13.225211}, {703.481445,-1745.561035,13.644369}, {512.652648,-1713.879150,11.951225}, {322.898925,-1700.012817,6.351512}, {181.994613,-1590.681640,13.611264}, {114.987060,-1483.881469,15.716488},
		{183.274917,-1392.328613,47.316024}, {235.005859,-1312.519897,54.946090}, {271.210632,-1238.301635,73.749771}, {352.619964,-1172.180297,76.992782}, {373.219757,-1108.971069,74.678642}, {570.886535,-1040.667602,72.893234}, {681.720703,-987.671081,51.723533}, {636.893554,-893.615478,36.238845}, {614.952941,-761.974304,16.934080}, {695.729675,-834.909667,42.609966},
		{765.860534,-907.398254,43.168628}, {793.615112,-1049.253906,24.705514}, {796.494628,-1348.491088,13.225209},
		{773.605712,-1551.007446,13.219964}, {829.991271,-1606.236572,13.225358},{915.885864,-1572.501342,13.225023}, {1005.193664,-1573.730346,13.225335},
		{1061.528442,-1571.466918,13.002437}, {1132.829345,-1571.714599,12.952020}, {1149.645874,-1663.695434,13.404994}, {1170.087524,-1745.639404,13.021311}, {1172.646362,-1850.471069,13.023327}, {1315.715576,-1855.433837,13.006551}, {1410.950927,-1873.858398,13.006618}, {1532.403076,-1980.743652,22.644147}, {1568.543945,-2112.455322,32.572132}, {1665.617553,-2161.764160,19.083341},
		{1798.388549,-2167.987548,13.006500}, {1917.365234,-2167.838378,13.006553}, {1963.080810,-2218.701660,15.749450}
	},
	{
		{662.1136,2010.5905,8.3228}, {657.7353,1872.6897,5.1959}, {586.1057,1714.4578,7.7091}, {418.1154,1599.8905,17.4339}, {297.1648,1265.8134,14.1913}, {177.7255,1147.1879,13.9948}, {102.8310,1198.1205,18.1525}, {-70.6931,1198.8982,19.3593}, {-267.0687,1197.7285,19.3208}, {-285.8788,1146.9034,19.3216},
		{-346.1357,1113.2706,19.3208}, {-278.4934,1053.4348,19.3162},
		{-196.7210,1005.2441,19.2968}, {-287.8996,812.8679,14.2512}, {-118.4552,813.8665,20.2630}, {-280.5372,686.1677,18.6626}, {-135.5672,613.9775,1.8051}, {-157.0415,408.2657,11.8052}, {-233.1215,167.2598,4.6665}, {-259.8236,-270.1633,1.1824}, {-639.3168,-243.3178,63.0318}, {-948.3567,-242.7244,37.5659},
		{-1040.6711,-452.4373,35.6779}, {-1205.6786,-742.9162,59.9608}, {-1456.2135,-818.1087,73.2588}, {-1761.9790,-692.2874,25.2470}, {-1786.9010,-580.0756,16.0630}, {-1912.3389,-580.1558,24.1691}, {-2169.7244,-479.2166,45.1492}, {-2256.6597,-146.2213,34.8988}, {-2371.9287,502.8568,29.2342}, {-2386.4546,622.7631,32.2222},
		{-2397.6143,708.7435,34.7408}, {-2528.8259,707.2769,27.5800}, {-2751.2197,715.6112,40.8544},
		{-2762.5669,808.2616,52.5233}, {-2807.7095,892.2084,43.6334},{-2881.6519,1074.9255,30.5571}, {-2706.0959,1290.5035,6.7805},
		{-2455.3774,1332.6726,9.8476}, {-2488.4287,1190.7368,37.1849}, {-2675.3164,1330.7024,55.1568}, {-2675.8245,1619.2803,64.8538}, {-2676.9116,2083.7742,55.1786}, {-2737.1616,2354.3936,71.7937}, {-2345.4705,2635.2644,53.5232}, {-1944.3154,2472.3635,54.5395}, {-1705.3647,2151.8735,17.8462}, {-1566.9766,1912.0879,24.0401},
		{-1396.4218,1852.4491,36.0523}, {-1028.8517,1853.8967,59.9197}, {-873.0335,1992.7505,60.0198}
	}
};
static const VehicleNames[212][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring A","Hotring B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","Boxville","Farm Plow","U Trailer" };
//

new spawnpickup[4],
 	AGunAmmo				[MAX_PLAYERS][47],
 	AntiFakeGun				[MAX_PLAYERS],
 	police[MAX_VEHICLES]
;
enum mInfo
{
	mID,
	mOwned[24],
	mOwner,
	Float:mEnter[3],
Text3D:hLabelHot,
	mVW,
	mCar,
	Float:mExit[3],
	mLock,
	mMoney,
	mOplata,
	mVirt,
	Float:mCarDrived
}
new HotelInfo[MAX_HOTEL][mInfo], addhotel;

new
	Float:posCam[MAX_PLAYERS][3],
	Float:Degree[MAX_PLAYERS],
	pickuptook[3],
	dicetime,
	casino[2],
	piro,
	hotelpickup[4],
	semia
;
static const Float: Radius = 1.7;
static const Float: Height = 1.15;
// Register/Login
new Text:TextDraw_Login				[10];
new Text:TextDraw_Register			[20];
new PlayerText:TextDraw_Login_2					[MAX_PLAYERS][2];
new PlayerText:TextDraw_Register_2				[MAX_PLAYERS][3];

static const Player_Skin_Male[] =
{
	212,134,137,230
};
static const Player_Skin_Female[] =
{
	77,54,75
};
new buycard;
// Шахта
new bool:Player_Job_Waxta[MAX_PLAYERS char];
new pickupjob;
// Мойщик окон
new lift[3], PickJob[8], lNomer[MAX_PLAYERS], nLift[3];
new mOkna[6], OknaGame[MAX_PLAYERS], OknaGameEnd[MAX_PLAYERS char], Graz[6];
static const Float:CordOkno[][] =
{
	{1339.65454, -1565.57654, 63.00907},
	{1341.82251, -1566.14990, 62.99990},
	{1326.54797, -1563.01685, 60.16316},
	{1329.11829, -1563.41321, 60.25803},
	{1352.26160, -1568.99622, 62.50860},
	{1354.46155, -1569.67126, 62.50860}
};
// Tuning
new bool:tuninguse;
new Text:Tuning[14];
new PlayerText:Tune[9];
enum TunInfo
{
	Named[15],
	tID
}
static const TWheels[][TunInfo] =
{
	{"Shadow",1073},
	{"Mega",1074},
	{"Rimshine",1075},
	{"Wires",1076},
	{"Classic",1077},
	{"Twist",1078},
	{"Cutter",1079},
	{"Dollar",1083},
	{"Atomic",1085}
};
static const TColor[][TunInfo] =
{
	{"Black",0},
	{"White",1},
	{"Green",128},
	{"Cyan",135},
	{"Blue",152},
	{"Yellow",6},
	{"Grey",252},
	{"Pink",146},
	{"Orange",219}
};
// Counter Strike
#define MAX_DMPLAYER           	50
#define MIN_DMPLAYER            2
#define MP_DeathMatch           1
static const Float: DM_Position[2][4] = {
	{2278.3376,-2501.3538,631.9099,181.4585},
	{2165.1072,-2463.1418,642.5673,182.7303}
};
new DeathMatch_Player;
new DeathMatch_Time;
new DeathMatch_Time_Start;
new bool:PlayerInfo_MP_START[MAX_PLAYERS char];
new DeathMatch_Score[2];
new Text:CounterSText[13];
new pickCounter[3];
//==================================================================================================================
new bool:b_Ghetto[5];

Float:S_GetPlayerDistanceFromPoint(playerid, Float:x, Float:y, Float:z)
{
	new NaN_String[5];
	new Float:Distance = GetPlayerDistanceFromPoint(playerid, x, y, z);
	format(NaN_String, 5, "%f", Distance);
	if(!strcmp(NaN_String, "NaN")) return 3000.0;
	return Distance;
}
#define GetPlayerDistanceFromPoint S_GetPlayerDistanceFromPoint

new player_family [ MAX_PLAYERS ];

enum _fam_enum_
{
	f_id,
	f_name [ 32 ],
	f_chat_color,
	f_creator [ 24 ],
	f_creating_data [ 32 ],
	f_members_amount,
	f_nationality,
	f_online,
}
new family_info [ MAX_FAMILY_COUNT ] [ _fam_enum_ ];
new family_count = 0;
new family_chat_color[ 5 ] [ 12 ] = { "FFFFFF","FFD39B","FFFF00","54FF9F","98F5FF" };

enum VehicleInfo
{
	Float:vehicleX,
	Float:vehicleY,
	Float:vehicleZ,
	vColor1,
	vColor2,
	Float:vDrived,
	Float:vFuel
}
new VehInfo[MAX_VEHICLES][VehicleInfo];

new SaluteColorTypes[] = {19122,19123,19124,19125,19126,19127};
enum Salutes
{
Float:height,
Float:SaluteLeanDir,
	SaluteStatus,
	SaluteExplType,
	SaluteObject,
Float:SaluteExplSize,
Float:SaluteClimeSpeed,
Float:SaluteWindOffset,
bool:SaluteInUse
}
new Salut[MAX_OBJECTS][Salutes];
enum Saluts
{
	Salute,
	SaluteTimer,
	SaluteBox,
bool:SaluteUse,
Float:SalutePos[3]
};
new SALUTEINFOS[MAX_SALUTE][Saluts];

new bool:ORC [MAX_PLAYERS char];
new BizEnter [MAX_PLAYERS char];
new mytimer[MAX_PLAYERS],bool:myti[MAX_PLAYERS];

new kicks[MAX_PLAYERS], bans[MAX_PLAYERS], warns[MAX_PLAYERS], pms[MAX_PLAYERS], jails[MAX_PLAYERS];

new msgs[160];
enum gun_drop
{
Float:Ob_Pos[3],
	obI_jD,
	Ob_Dta[2],
Text3D:LabelGun
};
new g_info[MAX_GUN_DROP][gun_drop];

new timerP[MAX_PLAYERS];
new ProsInfo[MAX_PLAYERS][MAX_VEHICLES];
new balonCraska[MAX_PLAYERS] = 3;

enum VIP_DATA
{
	adSender[24],
	adText[100],
	adID,
	adTime,
	adNumber
}
new gVip[MAX_PLAYERS][VIP_DATA];
new gVipTime;

enum tempik
{
	bus_timer,
	Text3D:bus_text,
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
    pAdvertTime,
    bool:pInHospital,
	bool:pWaitingExam,
	bool:pExamType,
	bool:pOnExam,
	pExamCandidate,
	bool:pSpawn,
	pAFK
}
new pTemp[MAX_PLAYERS][tempik];
enum mapclickcheat
{
Float:LastOnFootPosition[3],
	checkmaptp,
	maptplastclick,
Float:maptp[3]
}
new acstruct[MAX_PLAYERS][mapclickcheat];

new
	kazarma[6],
	VladGzone[5],
	Text3D: BandText[5],
	medshlag[2],
	CountVezit2,
	pokupkas,
	autoshoppick[4],
	buydom
;

new
	Text:	bankmenu[24],
	Text:   ANIMATION[3],
	Text:   ACshop[9],
	Text:	ReconText[32],
	Text:	SHOPAUTOTEXT[12],
	Text:	Logo[4],
	Text:	ProcentDraw[MAX_PLAYERS],
	Text:	AmountLDraw[MAX_PLAYERS]
;

new g_MysqlRaceCheck[MAX_PLAYERS];

//
new vmfgate[2];
new lspdgate;
new sfpdgate[2];
new armygate[3];
new lvpdgate[2];
new autogate;
new fbigate;
new MSH[2][MAX_PLAYERS];
new vmfgates[2][MAX_PLAYERS];
new fbigate2[MAX_PLAYERS];
new lspdgate2[MAX_PLAYERS];
new sfpdgates[2][MAX_PLAYERS];
new armygates[3][MAX_PLAYERS];
new lvpdgates[3][MAX_PLAYERS];
//


new stringer1 [512];
new stringer  [3000];
//txd
new
    PlayerText:DartProjectTD[21][MAX_PLAYERS],
	PlayerText:ShopText[MAX_PLAYERS],
	PlayerText:ReconPlayerText[MAX_PLAYERS][2],
	PlayerText:Bizwar[MAX_PLAYERS][3],
	PlayerText:Capture[MAX_PLAYERS][6],
	PlayerText:ShopACcost[MAX_PLAYERS],
    PlayerText:Race[10][MAX_PLAYERS]
;
//txd
new ZonsWar[3];
new CountOnZone[20];
new FrakCD[20];
new FracVoina[20];
new WantNickChange[MAX_PLAYERS];
new prabota;
new Menu:BuyClothes;
new
	ChangeSkinv[MAX_PLAYERS],
	AntiBan[MAX_PLAYERS],
	hippy[2],
	RegEx:reklamka,
	ammomer,
	gatevorota,
	AlhambraDJID = INVALID_PLAYER_ID,
	JobsDJ[2],
	Float:GMHP[MAX_PLAYERS][2],
	Float:VEHHP[MAX_PLAYERS][2],
	Float:GMARMOUR[MAX_PLAYERS][1],
	BizWarTime = 0,BizHourTime,
	paintPic[4],
	connects,
	derby[11],
	chekmatlva[10],restoran[2],chekmats[3],
	onlinee = 0,onlineeM = 0,onlineeD = 0,onlineeH = 0,onlineeMi = 0,
	caridhouse[MAX_PLAYERS]
;
new SellGun[5];
new SwatDoor[MAX_PLAYERS];
new bool:vehcreat[MAX_VEHICLES];
new antiwarn[MAX_PLAYERS];
new crashcuff[MAX_PLAYERS];
new minstr,ministrcar[2];
new URLW[128];
new Float: MGM[5] = 100.0;
new UMusic[128];
new Float: MusicU[5] = 100.0;
new healpric = 100,smspricels = 50,bool:smsls = false;
new Text3D:Meh3d[MAX_VEHICLES];
new keys[MAX_PLAYERS];
new Float: Armour[MAX_PLAYERS];
stock bool:AntiFakeKill[MAX_PLAYERS];
new ArmyZone;
new PlayerAdminMP;
new TazerTime[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new Mechanics = 0, Police = 0, Medics = 0;
new MechanicCall = INVALID_PLAYER_ID,PoliceCall = INVALID_PLAYER_ID,MedicCall = INVALID_PLAYER_ID;
new WantedPoints[MAX_PLAYERS];
new WantedLevel[MAX_PLAYERS];
new noooc = 1,ghour = 0,gminute = 0,gsecond = 0;
new realtime = 1,wtime = 15,timeshift = 0,shifthour,levelexp = 4;
new MatsArmyCar[MAX_PLAYERS];
new VertMats[MAX_PLAYERS];
new vertmatbi = 0;new armmatbi = 0;new armmatsf = 0;new armyvmf = 0;new lspdmatbi = 50000;new sfpdmats = 50000;new lvpdmats = 50000;new fbimats = 50000;new yakuzamats = 50000;new rmmats = 50000;new lcnmats = 50000;new rifamatbi = 100000;new ballasmatbi = 100000;new groovmatbi = 100000;new vagosmatbi = 100000;new aztekmatbi = 100000;
new Float:TeleportDest[MAX_PLAYERS][3];
new benzovoz[2],comptruck[2],matsfuravagos[1],matsfuragrove[1], matsfuraactek[1],matsfurarifa[1],matsfuraballas[1],lsnewscar[2],lvpdcar[2],swatcar[2],liccar[2], mehanik[2],rentcarsf[2],medicsls[2];
new sapdpatrul[2], sapdcar[2], fbicar[5],sfpdcar[2],armycar[2],vmfcar[2], yakcar[2],ruscar[2],govcar[2], lcncar[2], armcar[2], matscar[2], grovecar[2], ballascar[2], coronoscar[2], vagoscar[2],rifacar[2];
new streetcar[2],victim2[2],lspic[3],medpic[1],rmpic[2],narkoenter,narkoexit,lcnpic[2],yakexit[2],buygunzakon[6],fbidoor[3],lspd[6],sf[5],lvpdpic[7];
new avtosh[4],marenter[2],bankpic[2],serdce[4],ballasvhod[2],rifa[2],mo[2],vagospic[2],aztecpic[2],grooveexit,swatenter,swatenter2,swatexit,swatexit2,grooveenter,skinshop[2],zip[2],plen[2],zona,zonaa,sklad[2],aBusCar[2],TaxiCar[2];
new STimer[MAX_PLAYERS];

stock SetPlayerSkinEx(playerid, skinid)
{
	ClearAnimations(playerid, 1);
	return SetPlayerSkin(playerid, skinid);
}
#define SetPlayerSkin SetPlayerSkinEx
enum nInfo
{
	nLcn,
	nYakuza,
	nRm,
};
enum fInfo
{
	fLsnews,
	fBallas,
	fVagos,
	fGrove,
	fAztek,
	fRifa,
};
new MafiaBank[1][nInfo];
new FracBank[1][fInfo];

enum bInfo
{
	bID,
Float: EnterX,
Float: EnterY,
Float: EnterZ,
Float: ExitX,
Float: ExitY,
Float: ExitZ,
	bOwner[24],
	bPrice,
	bInt,
	bVW,
	bLock,
Text3D:bLabel,
	bMapIcon,
	bPickup,
	bName[32],
	bKrisha,
	bPribil,
Float: BarX,
Float: BarY,
Float: BarZ,
	bLab,
	bCena[9],
	bVhod,
	bNalog,
	bBank,
	bTypeBiz,
Text3D:bLabelBuy,
	bCheck
};
new BizInfo[MAX_BUSINESS][bInfo],BIZES;

enum sbInfo
{
	sID,
	sOwned,
	sOwner[24],
	sMessage[64],
Float:sEntranceX,
Float:sEntranceY,
Float:sEntranceZ,
	sBuyPrice,
	sLocked,
	sPrice,
	sBenz,
	sPriceBenz,
Text3D: sLabel,
	sIcon,
	sTill,
	sbMafia,
};
new SBizzInfo[30][sbInfo];

publics: IsVehicleOccupied(vehicleid)
{
	foreach(new i: Player)
	{
		if(IsPlayerInVehicle(i,vehicleid)) return 1;
	}
	return 0;
}
publics: CallBankLoadBankFrac()
{
	new i = 0;
	if(cache_get_row_count(connects) > 0)
	{
		FracBank[0][fLsnews] = cache_get_field_content_int(0, "FracBank[0][fLsnews]", connects);
		FracBank[0][fBallas] = cache_get_field_content_int(0, "FracBank[0][fBallas]", connects);
		FracBank[0][fVagos] = cache_get_field_content_int(0, "FracBank[0][fVagos]", connects);
		FracBank[0][fGrove] = cache_get_field_content_int(0, "FracBank[0][fGrove]", connects);
		FracBank[0][fAztek] = cache_get_field_content_int(0, "FracBank[0][fAztek]", connects);
		FracBank[0][fRifa] = cache_get_field_content_int(0, "FracBank[0][fRifa]", connects);
		i++;
		printf("[Загрузка]: LoadBankFrac | Загрузка: %d", i);
	}
	else printf("Банк-фрак не загружены.");
	return 1;
}
stock SaveBankFrac()
{
	stringer="";
	mysql_format(connects, stringer,600,"UPDATE `loadbankfrac` SET `FracBank[0][fLsnews]` = '%d',`FracBank[0][fBallas]` = '%d',`FracBank[0][fVagos]` = '%d',`FracBank[0][fGrove]` = '%d',`FracBank[0][fAztek]` = '%d',`FracBank[0][fRifa]` = '%d'"
	,FracBank[0][fLsnews],FracBank[0][fBallas],FracBank[0][fVagos],FracBank[0][fGrove],FracBank[0][fAztek],FracBank[0][fRifa]);
	mysql_empty(connects, stringer);
	return 1;
}
Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2)) return -1.00;
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
enum sInfo
{
	sID,
bool:sSer,
bool:sDialog,
	Schoice,
	SShout[4],
	SAFK[4],
Float:sPos[4],
	sVirt,
	sInt
}
new RINFO[MAX_PLAYERS][sInfo];

new c_vehicle_components_add[MAX_PLAYERS][2][74], vehicle_components_add[MAX_PLAYERS][2][14];
new RegistrationInfo[MAX_PLAYERS][4][64];
enum pInfo
{
	pID, pKey[30],  pNames[24],	pLevel,	bAdmin,	pIP[16],	pMestoJail,	pIpReg[16],	pHousecash,
	pContract,	pDataReg,	pCar[2], bool:kapture[2], Float:pFuelcar,	pNumbercar[25],	pDRInections,	pDMInections,	pMats,	pSex,
	pMuted,	pExp,	pCash,	pPayCheck,	pJailed,	pJailTime,	pDrugs,	pLRInections,	pMRInections,	pRKInections,	pChar,	pJob,	pInt,	pLocal,	pModel,	pPnumber,	pHelper,	pLicense[16], pLicenses[4],	pHouse,	pHotel,
	pBusiness,	pFuelBiz,	pZakonp,  pSkills[6],	pPayDayHad,	pTut,	pWarns,	punWarns,	punWarnstime,	pFuel,	pMarried,	pMuteTime,	pBank,	pWanted,	pVipData,	pVipTime,	pDrugtime,
	pBoxstyle,	pKstyle,	pKickstyle,	pBoxSkill,	pKongfuSkill,	pKickboxSkill,	pHospital,  pAvig,	vig,	bool:pLogin,	pSpawn,	 pAmmo[13],	 pGun[13],	 SalonInfo[2],
	Float:CarPos[4],	pRubInfo[3],	pMedCard,	pGolos,	pVoted,	Float:pHealthPlayer,	pAccessories[2],	Float:PositionAcc[9],	pSettings, pPrison[2], WarnAdmin[24], WarnReason[64], WarnOffline, pLoadNames[24], pCarCash[2],
	pSiga, pSpal, pSgf, pEmail, pBonus, pBankCard, pBankCode, pCardMoney, pCardDate, pAdmDonate
};
new PlayerInfo[MAX_PLAYERS][pInfo];

stock SetPlayerPosEx(playerid, Float:x, Float:y, Float:z)
{
    SetPVarInt(playerid,"Anti_AirFly",gettime()+3);
    return SetPlayerPos( playerid, x, y, z );
}
#define SetPlayerPos SetPlayerPosEx

enum hInfo
{
	hID,
	Float:hEnter[3],
	Float:hExit[3],
	Float:hCar[4],
	hOwner[24],
	hValue,
	hHel,
	hInt,
	hLock,
	hOwned,
	hTakings,
	hKlass,
	hPickup,
	hMIcon,
	hVehSost,
	hStyle,
	hKolesa,
	hBal[4],
	hBenz,
	hNarko,
	hSafe,
	hGun[5],
	hGunAmmo[5],
	hGarage,
	Float:CarDrived[2]
};

new HouseInfo[MAX_HOUSE][hInfo];

enum pHaul{	pLoad, };
enum pMater { zLoad, };
enum sHaul { sLoad, };
enum pMatss
{
	gBallas,
	gVagos,
	gGrove,
	gAztek,
	gRifa,
};

new Furi[1][pMatss];

enum pMat
{
	mCapasity,
	mLoad,
};

new MatHaul[3][pMat];
new PlayerHaul[18][pHaul];
new PlayersHaul[10][sHaul];

new PickupUp[MAX_PLAYERS] = {-1, ...};
enum p_Info
{
	Float: PickX,
	Float: PickY,
	Float: PickZ,
};
new PickupInfo[MAX_PICKUPS][p_Info];
CreatePickupAC(modell, type, Float:X, Float:Y, Float:Z, virtualworld = -1)
{
	new TempID = CreatePickup(modell, type, X, Y, Z, virtualworld);
	PickupInfo[TempID][PickX] = X;
	PickupInfo[TempID][PickY] = Y;
	PickupInfo[TempID][PickZ] = Z;
	return TempID;
}

stock Forveh_CreateVehicle(modelid, Float:x, Float:y, Float:z, Float:angle, color1, color2, respawn_delay)
{
    new vehid = CreateVehicle(modelid, x, y, z,angle, color1, color2, respawn_delay);
	VehInfo[vehid-1][vehicleX] = x;
	VehInfo[vehid-1][vehicleY] = y;
	VehInfo[vehid-1][vehicleZ] = z;
   	VehInfo[vehid][vColor1] = color1;
	VehInfo[vehid][vColor2] = color2;
	VehInfo[vehid-1][vDrived] = 0;
	VehInfo[vehid][vFuel] = 100;
    forveh_vehicles[forveh_count++]=vehid;
    return vehid;
}
#define CreateVehicleEx Forveh_CreateVehicle

stock Forveh_AddStaticVehicle(modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:angle, color1, color2)
{
    new vehid = AddStaticVehicle(modelid, spawn_x, spawn_y, spawn_z, angle, color1, color2);
	VehInfo[vehid-1][vehicleX] = spawn_x;
	VehInfo[vehid-1][vehicleY] = spawn_y;
	VehInfo[vehid-1][vehicleZ] = spawn_z;
   	VehInfo[vehid][vColor1] = color1;
	VehInfo[vehid][vColor2] = color2;
	VehInfo[vehid-1][vDrived] = 0;
	VehInfo[vehid][vFuel] = 100;
    forveh_vehicles[forveh_count++]=vehid;
    return vehid;
}

stock Forveh_AddStaticVehicleEx(modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:angle, color1, color2, respawn_delay)
{
    new vehid = AddStaticVehicleEx(modelid, spawn_x, spawn_y, spawn_z, angle, color1, color2,respawn_delay);
	VehInfo[vehid-1][vehicleX] = spawn_x;
	VehInfo[vehid-1][vehicleY] = spawn_y;
	VehInfo[vehid-1][vehicleZ] = spawn_z;
	VehInfo[vehid][vColor1] = color1;
	VehInfo[vehid][vColor2] = color2;
	VehInfo[vehid-1][vDrived] = 0;
	VehInfo[vehid][vFuel] = 100;
    forveh_vehicles[forveh_count++]=vehid;
    return vehid;
}

stock Forveh_DestroyVehicle(vehicleid)
{
    if(!IsValidVehicle(vehicleid)) return 0;
    for(new i=0;i<forveh_count;i++)
    {
        if(forveh_vehicles[i]==vehicleid)
        {
            forveh_vehicles[i]=forveh_vehicles[--forveh_count];
            break;
        }
    }
    return DestroyVehicle(vehicleid);
}
#define DestroyVehicleEx Forveh_DestroyVehicle
#define DestroyVehicle Forveh_DestroyVehicle

stock IsAMatsCar(carid) return (carid >= matscar[0] && carid <= matscar[1]) ?true:false;
stock IsATaxiCar(carid) return (carid>= TaxiCar[0] && carid<= TaxiCar[1]) ?true:false;
stock ISAMAFIA(playerid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	if(PlayerInfo[playerid][pMRInections]==5 || PlayerInfo[playerid][pMRInections]==6 || PlayerInfo[playerid][pMRInections]==14 ) return 1;
	if(PlayerInfo[playerid][pLRInections]==5|| PlayerInfo[playerid][pLRInections]==6 || PlayerInfo[playerid][pLRInections]==14) return 1;
	return 0;
}
stock IsAGang(playerid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	if(PlayerInfo[playerid][pMRInections]==12 || PlayerInfo[playerid][pMRInections]==13 || PlayerInfo[playerid][pMRInections]==15 || PlayerInfo[playerid][pMRInections]==17 || PlayerInfo[playerid][pMRInections]==18) return 1;
	if(PlayerInfo[playerid][pLRInections]==12 || PlayerInfo[playerid][pLRInections]==13 || PlayerInfo[playerid][pLRInections]==15 || PlayerInfo[playerid][pLRInections]==17 || PlayerInfo[playerid][pLRInections]==18) return 1;
	return 0;
}
stock UpdateSBizz()
{
	for(new b = 0; b < sizeof(SBizzInfo); b++)
	{
		Delete3DTextLabel(SBizzInfo[b][sLabel]);
		DestroyDynamicMapIcon(SBizzInfo[b][sIcon]);
		if(SBizzInfo[b][sOwned] == 0) SBizzInfo[b][sLocked] = 1,format(stringer,164, "{FFFFFF}Заправочная станция: {FFC873}№%i{FFFFFF}\nНазвание заправки: {FFC873}%s{FFFFFF}\nЦена за 1 литр: {FFC873}$%d{FFFFFF}\n\nВведите: {FFC873}/buyfuel{FFFFFF} для покупки", SBizzInfo[b][sID],SBizzInfo[b][sMessage],SBizzInfo[b][sBuyPrice]);
		if(SBizzInfo[b][sOwned] == 1)
		{
			if(SBizzInfo[b][sLocked] == 0) format(stringer,300, "{FFFFFF}Заправочная станция: {FFC873}№%i{FFFFFF}\nНазвание заправки: {FFC873}%s{FFFFFF}\nВладелец: {00C90D}%s{FFFFFF}\nБензина в скважине: {FFC873}%i литров{FFFFFF}\nЦена за 1 литр: {FFC873}$%d{FFFFFF}\n\n{00C90D}Заправка работает{FFFFFF}",SBizzInfo[b][sID],SBizzInfo[b][sMessage],SBizzInfo[b][sOwner],SBizzInfo[b][sBenz],SBizzInfo[b][sPriceBenz]);
			else format(stringer,300, "{FFFFFF}Заправочная станция: {FFC873}№%i{FFFFFF}\nНазвание заправки: {FFC873}%s{FFFFFF}\nВладелец: {00C90D}%s{FFFFFF}\nБензина в скважине: {FFC873}%i литров{FFFFFF}\nЦена за 1 литр: {FFC873}$%d{FFFFFF}\n\n{FF0000}Заправка не работает{FFFFFF}",SBizzInfo[b][sID],SBizzInfo[b][sMessage],SBizzInfo[b][sOwner],SBizzInfo[b][sBenz],SBizzInfo[b][sPriceBenz]);
		}
		SBizzInfo[b][sLabel] = Create3DTextLabel(stringer,COLOR_YELLOW,SBizzInfo[b][sEntranceX], SBizzInfo[b][sEntranceY], SBizzInfo[b][sEntranceZ],20.0,0,1);
		SBizzInfo[b][sIcon] = CreateDynamicMapIcon(SBizzInfo[b][sEntranceX], SBizzInfo[b][sEntranceY], SBizzInfo[b][sEntranceZ], 42, COLOR_WHITE, 0, -1, -1, 50.0);
	}
	return 1;
}
stock UpdateIconHouse(h)
{
	if(HouseInfo[h][hOwned] == 0)
	{
		DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
		DestroyPickup(HouseInfo[h][hPickup]);
		AddStaticPickup(1273, 23, HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2]);
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2], 31, COLOR_WHITE, 0, -1, -1, 200.0);
	}
	if(HouseInfo[h][hOwned] == 1)
	{
		DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
		DestroyPickup(HouseInfo[h][hPickup]);
		AddStaticPickup(19522, 23, HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2]);
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2], 32, COLOR_WHITE, 0, -1, -1, 200.0);
	}
	return 1;
}
stock BuyHouse(h)
{
	if(HouseInfo[h][hOwned] == 0)
	{
		DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
		DestroyPickup(HouseInfo[h][hPickup]);
		AddStaticPickup(1273, 23, HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2]);
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2], 31, COLOR_WHITE, 0, -1, -1, 200.0);
	}
	if(HouseInfo[h][hOwned] == 1)
	{
		DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
		DestroyPickup(HouseInfo[h][hPickup]);
		AddStaticPickup(19522, 23, HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2]);
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2], 32, COLOR_WHITE, 0, -1, -1, 200.0);
	}
	return 1;
}
main()
{
    new a[][] = {"Unarmed (Fist)","Brass K"};
	#pragma unused a
}
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	foreach(new i: Player)
	{
		if(GetPVarType(i, "BBArea"))
		{
			if(areaid == GetPVarInt(i, "BBArea"))
			{
				StopStream(playerid);
				SendClientMessage(playerid, COLOR_GREEN, "Вы покинули зону магнитофона");
    			return 1;
			}
		}
	}
	return 1;
}

public OnPlayerEnterDynamicArea(playerid, areaid)
{
	foreach(new i: Player)
	{
		if(GetPVarType(i, "BBArea"))
		{
			if(areaid == GetPVarInt(i, "BBArea"))
			{
				new station[256];
				GetPVarString(i, "BBStation", station, sizeof(station));
				if(!isnull(station))
				{
					PlayStream(playerid, station, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ"), 30.0, 1);
					SendClientMessage(playerid, COLOR_GREEN, "Вы попали в игровую зону магнитофона");
				}
				return 1;
			}
		}
	}
	if(areaid == AreaBase && GetPVarInt(playerid, "PlayerInBase") && BaseStarting[1] == 1)
	{
	    RemovePlayerWeapon(playerid, 46);
	    SetPlayerPosEx(playerid, 2177.4709,1118.3693,12.6484);
		SetPlayerFacingAngle(playerid, 62.3957);
  		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pDMInections] += 7000;
		SendClientMessage(playerid, -1, "Поздравляем! Вы прошли карту! Вы получаете: 7000 Donate Money!");
		Iter_Remove(BaseList, playerid);
  		PlayersInBase{0} --;
	    DeletePVar(playerid, #BasePopitka);
	    DeletePVar(playerid, #PlayerInBase);
		if (!PlayersInBase{0})
		{
	        PlayersInBase{0} = 0;
	        SendClientMessageToAll(COLOR_LIGHTBLUE, "Информация: Бейсджампинг окончен.");
        	foreach(new s: BaseList) { Iter_Remove(BaseList, s); }
		    BaseStarting[1] = 0;
		}
	}
	return 1;
}

stock StopStream(playerid)
{
	DeletePVar(playerid, "pAudioStream");
	StopAudioStreamForPlayer(playerid);
}

stock PlayStream(playerid, url[], Float:posX = 0.0, Float:posY = 0.0, Float:posZ = 0.0, Float:distance = 50.0, usepos = 0)
{
	if(GetPVarType(playerid, #pAudioStream)) StopAudioStreamForPlayer(playerid);
	else SetPVarInt(playerid, #pAudioStream, 1);
	PlayAudioStreamForPlayer(playerid, url, posX, posY, posZ, distance, usepos);
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    SetPVarInt(playerid,"Anti_AirFly",gettime()+1);
    VehicleEnters[playerid]=vehicleid;
	PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
	return 1;
}

stock IsADepartament(i)
{
	if(IsAArm(i) || IsAMedic(i) || PlayerInfo[i][pMRInections] == 11 || PlayerInfo[i][pMRInections] == 25 || PlayerInfo[i][pMRInections] == 26 || PlayerInfo[i][pMRInections] == 7 || PlayerInfo[i][pMRInections] == 28) return 1;
	return 0;
}

stock IsAMedic(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(PlayerInfo[playerid][pMRInections]==4) return 1;
	if(PlayerInfo[playerid][pLRInections]==4) return 1;
	return 0;
}
stock IsAMayor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pMRInections] == 7 || PlayerInfo[playerid][pMRInections] == 28) return 1;
		else if(PlayerInfo[playerid][pMRInections] == 7 || PlayerInfo[playerid][pMRInections] == 28) return 1;
	}
	return 0;
}
stock IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLRInections];
		new member = PlayerInfo[playerid][pMRInections];
		if(member==1 || member==2 || member==21 || member ==25 || member==10 || member==26 || member == 3) return 1;
		if(leader==21 || leader==2 || leader == 10 || leader == 1 || leader==25 || leader==26 || leader == 3) return 1;
	}
	return 0;
}
stock IsAArm(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLRInections];
		new member = PlayerInfo[playerid][pMRInections];
		if(member==3 || member==19 || member==1 || member==2 || member==21 || member==10 || member==27) return 1;
		else if(leader==3 || leader==19 || leader==27) return 1;
	}
	return 0;
}
stock AntiDMZone(playerid)
{
	return (PlayerToPoint(50.0,playerid,1154.7134,-1767.9990,16.5938)
		||PlayerToPoint(40.0,playerid,829.0444,5.0235,1004.1870)
		||PlayerToPoint(40.0,playerid,1480.9207,-1747.6909,15.3086)
		||PlayerToPoint(10.0,playerid,263.6395,78.5962,1001.0391)
		||PlayerToPoint(10.0,playerid,-2031.7778,-117.3789,1035.1719)
		||PlayerToPoint(30.0,playerid,221.3200,113.1807,999.0156)
		||PlayerToPoint(50.0,playerid,-2042.7015,-92.3698,35.1718)
		||PlayerToPoint(50.0,playerid,360.7816,-29.0249,1076.4578)
		||PlayerToPoint(50.0,playerid,1214.2562, -1310.3021, 13.2000)
		||PlayerToPoint(25.0,playerid,313.6055,-139.1927,999.6016)
		||PlayerToPoint(50.0,playerid,612.7784,-3.6142,1000.9219)
		||PlayerToPoint(50.0,playerid,855.4463,-592.6917,17.9401)
		||PlayerToPoint(2.8,playerid,264.1425,77.4712,1001.0391)
		||PlayerToPoint(30.0,playerid,1529.4911,-1756.5560,1506.5640)
		||PlayerToPoint(30.0,playerid,1362.8073,-1278.7048,13.5469)
		||PlayerToPoint(30.0,playerid,505.2259,-1502.4905,14.4635)
		||PlayerToPoint(70.0,playerid,2396.4465,-649.3321,127.4277)
		||PlayerToPoint(50.0,playerid, 1130.5576,-2.1233,1000.6797)
		||PlayerToPoint(60.0,playerid, 1039.4686,-205.4067,2215.5859)
		||PlayerToPoint(25.0,playerid, -1742.7126,-18.3419,1546.0060)
		||PlayerToPoint(50.0,playerid, -2664.5642,656.6504,3014.4548)
		||PlayerToPoint(50.0,playerid, 294.6484,1806.0520,723.6169)
		||PlayerToPoint(30.0,playerid, -2086.6799,-101.5856,2855.1479)
		||PlayerToPoint(30.0,playerid, -23.3630,-63.0777,1019.4539)
		||PlayerToPoint(30.0,playerid, 221.8414,-8.0247,1002.2109)
		||PlayerToPoint(30.0,playerid, 289.2607,-80.3016,1001.5156)
		||PlayerToPoint(50.0,playerid,1244.8014,-1818.8987,13.4139)) ? true : false;
}

stock SellBusiness(playerid)
{
	if(!IsPlayerInRangeOfPoint( playerid, 10.0, BizInfo[PlayerInfo[playerid][pBusiness]][ EnterX ], BizInfo[PlayerInfo[playerid][pBusiness]][ EnterY ], BizInfo[PlayerInfo[playerid][pBusiness]][ EnterZ ] ) ) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Надо находиться рядом с бизнесом");
	strmid(BizInfo[PlayerInfo[playerid][pBusiness]][bOwner], "None", 0, strlen("None"), 255);
	BizInfo[PlayerInfo[playerid][pBusiness]][bLock] = 0;
	BizInfo[PlayerInfo[playerid][pBusiness]][bPribil] = 0;
	mysql_format(connects, stringer, MAX_STR, "UPDATE `business` SET `bOwner` = 'None', `bLock` = '0', `bPribil` = '0' WHERE `bID` = '%d'", PlayerInfo[playerid][pBusiness]);
	mysql_empty(connects, stringer);
	GiveMoney(playerid,BizInfo[PlayerInfo[playerid][pBusiness]][bPrice]);
	UpdateBizInfo (PlayerInfo[playerid][pBusiness]);
	SaveBusiness(PlayerInfo[playerid][pBusiness]);
	SCMF(playerid,COLOR_WHITE,"Вы продали свой бизнес за {FFFF00}%d",BizInfo[PlayerInfo[playerid][pBusiness]][bPrice]);
	PlayerInfo[playerid][pBusiness] = -1;
	return 1;
}

stock CheckBusiness(bizid)
{
	new query[400];
	new playeridd = GetPlayerID(BizInfo[bizid][bOwner]);
	BizInfo[bizid][bBank] += BizInfo[bizid][bPribil];
	BizInfo[bizid][bPribil] = 0;
	if(!strcmp(BizInfo[bizid][bOwner], "None",true)) {}
	else
	{
		if(BizInfo[bizid][bCheck] < BizInfo[bizid][bNalog])
		{
			if(!IsPlayerConnected(playeridd))
			{
				mysql_format(connects, query, MAX_STR, "UPDATE `accounts` SET `pPbiskey` = '-1' WHERE `Name` = '%s'", BizInfo[bizid][bOwner]);
				mysql_empty(connects, query);
			}
			else
			{
				SCM(playeridd, -1, "Ваш бизнес продан за неуплату помещения.");
				PlayerInfo[playeridd][pBusiness] = -1;
			}
			BizInfo[bizid][bPribil] = 0;
			BizInfo[bizid][bLock] = 0;
			BizInfo[bizid][bBank] = 0;
			BizInfo[bizid][bCheck] = 0;
			strmid(BizInfo[bizid][bOwner], "None", 0, strlen("None"), 255);
			new stringer13[150];
			mysql_format(connects, stringer13,sizeof(stringer13),"UPDATE `business` SET bPribil=0,bLock=0,bBank=0,bCheck=0,bOwner='None' WHERE bID = %d",bizid);
			mysql_empty(connects,stringer13);
			UpdateBizInfo(bizid);
			SaveBusiness(bizid);
		}
		else BizInfo[bizid][bCheck] -= BizInfo[bizid][bNalog];
	}
}

stock ShowBusinessInformation(playerid, bizid)
{
	stringer="";
	format(stringer, BIG_SIZE, "{FFFFFF}Название бизнеса: {269BD8}%s\n\n{FFFFFF}Владелец: {269BD8}%s\n{FFFFFF}Гос. цена: {269BD8}$%i\n{FFFFFF}Состояние: %s\n\n{FFFFFF}- За оплату помещения: {269BD8}$%i\n{FFFFFF}Бюджет бизнеса: {269BD8}$%i",BizInfo[bizid][bName],BizInfo[bizid][bOwner],BizInfo[bizid][bPrice],(BizInfo[bizid][bLock] ? ("{"#cRED"}Закрыт") : ("{"#cGREEN"}Открыт")),BizInfo[bizid][bNalog],BizInfo[bizid][bBank]);
	SPD(playerid,0000,DIALOG_STYLE_MSGBOX,"Бизнес",stringer,"Выход","");
}

stock GetFractionColor(data)
{
	new ftext[20];
	switch(data)
	{
		case 0: ftext = "{FFFFFF}";
		case 1: ftext = "{2641FE}";
		case 2: ftext = "{313131}";
		case 3: ftext = "{33AA33}";
		case 4: ftext = "{A52A2A}";
		case 5: ftext = "{DDA701}";
		case 6: ftext = "{FF0000}";
		case 7: ftext = "{114D71}";
		case 8: ftext = "{B313E7}";
		case 10: ftext = "{2641FE}";
		case 11: ftext = "{FFE7BA}";
		case 12: ftext = "{8813E7}";
		case 13: ftext = "{DBD604}";
		case 14: ftext = "{B4B5B7}";
		case 15: ftext = "{009F00}";
		case 16: ftext = "{40848B}";
		case 17: ftext = "{01FCFF}";
		case 18: ftext = "{83BFBF}";
		case 19: ftext = "{33AA33}";
		case 21: ftext = "{2641FE}";
		case 23: ftext = "{708090}";
		case 24: ftext = "{F45000}";
		case 25: ftext = "{2E8B57}";
		case 26: ftext = "{708090}";
		case 27: ftext = "{33AA33}";
		case 28: ftext = "{114D71}";
		default: ftext = "{FFFFFF}";
	}
	return ftext;
}

stock ResetPlayerWeaponsEx(playerid)
{
	for(new i=0;i<47;i++) AGun[playerid][i]=false, AGunAmmo[playerid][i]=0;
	for(new i=0;i<13;i++) PlayerInfo[playerid][pAmmo][i] = 0, PlayerInfo[playerid][pGun][i] = 0;
	ResetPlayerWeapons(playerid);
}
#define ResetPlayerWeapons ResetPlayerWeaponsEx

stock IsARespa(playerid)
{
	return (PlayerToPoint(50.0,playerid,1995.6483,-1276.6602,26.5264)// баллас
			|| PlayerToPoint(50.0,playerid,2638.1499,-1084.5453,69.4531) // вагос
			||PlayerToPoint(50.0,playerid,2492.7532,-1676.3687,13.3380) // грув
			||PlayerToPoint(50.0,playerid,2165.5298,-1799.6377,13.5394) // ацтек
			||PlayerToPoint(50.0,playerid,2765.1191,-1942.8763,13.2898) // рифа
			||PlayerToPoint(50.0,playerid,-61.2984,1364.5847,1080.2109) // база баллас
			||PlayerToPoint(50.0,playerid,303.6300,309.2500,999.1484)// база вагос
			||PlayerToPoint(50.0,playerid,2496.0129,-1708.9232,1014.7422)// база грув
			||PlayerToPoint(50.0,playerid,-49.7558,1400.3553,1084.4297) // база ацтек
			||PlayerToPoint(50.0,playerid,-223.8400,1410.5100,27.7734)) ? true : false; // база рифов
}
stock IsABankomat(playerid)
{
	return (PlayerToPoint(3.0,playerid,-1676.34570312,434.01806641,7.08183193) || PlayerToPoint(3.0,playerid,-818.55200195,1567.63708496,27.01933098) ||
			PlayerToPoint(3.0,playerid,-2421.45410156,958.35540771,45.18632126) || PlayerToPoint(3.0,playerid,2174.20336914,1402.93469238,10.96464443) ||
			PlayerToPoint(3.0,playerid,-2621.31445312,1415.23510742,6.88521862) || PlayerToPoint(3.0,playerid,1587.30920410,2218.34838867,10.96464443) ||
			PlayerToPoint(3.0,playerid,-2452.32275391,2252.62988281,4.87058449) || PlayerToPoint(3.0,playerid,2187.36035156,2478.89160156,11.14433193) ||
			PlayerToPoint(3.0,playerid,-1282.38098145,2715.18652344,50.16842651) || PlayerToPoint(3.0,playerid,-2033.32604980,159.50723267,28.94120598) ||
			PlayerToPoint(3.0,playerid,91.92106628,1180.56555176,18.56620598) || PlayerToPoint(3.0,playerid,2236.16186523,-1665.79772949,15.27980804) ||
			PlayerToPoint(3.0,playerid,847.58093262,-1799.19348145,13.71945286) || PlayerToPoint(3.0,playerid,1367.56359863,-1290.13696289,13.44901943) ||
			PlayerToPoint(3.0,playerid,-78.74282837,-1171.64892578,1.95329499) || PlayerToPoint(3.0,playerid,1142.44287109,-1763.92932129,13.59816360) ||
			PlayerToPoint(3.0,playerid,-1551.53637695,-2737.33691406,48.64560318) ||
			PlayerToPoint(3.0,playerid,661.71307373,-576.21777344,16.25428581) ||
			PlayerToPoint(3.0,playerid,557.32824707,-1294.28137207,17.24994087) ||
			PlayerToPoint(3.0,playerid,-2035.70605469,-102.35491180,35.07402039) ||
			PlayerToPoint(3.0,playerid,1919.78381348,-1766.21813965,13.44901943))? true : false;
}
PJ(carid){switch (GetVehicleModel(carid)){case 534,535,536,558,559,560,561,562,565,576,483,567:return 1;}return 0;}
stock IsABoat(carid)
{
	switch (GetVehicleModel(carid))
	{
		case 472, 473, 493, 595, 484,
		430, 452..454, 446 : return 1;
	}
	return 0;
}

enum MzoneInfo
{
	bFrakVlad,bNapad,bBiz,bMesto,bCountDead[15],bType
}
new MZInfo[MzoneInfo];

enum change
{
	hProdaet,
	hPokypaet,
	hCena
}
new ChangeHouse[MAX_PLAYERS][change];
enum GangZoneInfo
{
	gID,
Float:gCoords[4],
	gFrakVlad,
	gNapad,
	ZoneOnBattle,
	gTime,
	gzTimer,
	gStartGZ,
string:GZName[30],
string:strcpt[30]
}
new GZInfo[104][GangZoneInfo];


publics: LoadGZ()
{
	new time = GetTickCount();
	new rows = cache_get_row_count(connects);
	if(!rows) return printf("GangZone не загружены.");
	for(new i = 0; i < rows; i++)
	{
	    GZInfo[i][gCoords][0] = cache_get_field_content_float(i, "gCoords1", connects);
        GZInfo[i][gCoords][1] = cache_get_field_content_float(i, "gCoords2", connects);
        GZInfo[i][gCoords][2] = cache_get_field_content_float(i, "gCoords3", connects);
        GZInfo[i][gCoords][3] = cache_get_field_content_float(i , "gCoords4", connects);
        GZInfo[i][gFrakVlad] = cache_get_field_content_int(i, "gFrakVlad", connects);
		GZInfo[i][gID] = GangZoneCreate(GZInfo[i][gCoords][0],GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]);
	}
	for(new i = 0x0; i < sizeof(VladGzone); i++)  VladGzone[i] = 0;
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		switch(GZInfo[i][gFrakVlad])
		{
			case 12: VladGzone[0]++;
			case 13: VladGzone[1]++;
			case 15: VladGzone[2]++;
			case 17: VladGzone[3]++;
			case 18: VladGzone[4]++;
		}
	}
	printf("[Загрузка]: LoadGangZone | Загружено: %d | Time: %d (ms)", rows, GetTickCount()-time);
	return 1;
}

stock SaveGZ(i)
{
	new query[100];
 	format(query, sizeof(query), "UPDATE `zone` SET `gFrakVlad` = '%i' WHERE `gID` = '%i'",GZInfo[i][gFrakVlad], i);
	mysql_empty(connects, query);
	return 1;
}

stock IsAPlane(carid){switch(GetVehicleModel(carid)){case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:return 1;}return 0;}
stock BezBenzacar(carid){switch(GetVehicleModel(carid)){case 462,510,481,509:return 1;}return 0;}

stock PutPlayerInVeh(playerid, vehicleid, seatid)
{
    VehicleEnters[playerid]=vehicleid;
	PutPlayerInVehicle(playerid, vehicleid, seatid);
	return 1;
}
#define PutPlayerInVehicle PutPlayerInVeh
stock LoadPlayerDraws(playerid)
{
    // Tuning
    Tune[0] = CreatePlayerTextDraw(playerid,88.000000, 149.000000, "Shadow");
    Tune[1] = CreatePlayerTextDraw(playerid,88.000000, 168.000000, "Mega");
   	Tune[2] = CreatePlayerTextDraw(playerid,88.000000, 190.000000, "Rimshine");
    Tune[3] = CreatePlayerTextDraw(playerid,88.000000, 213.000000, "Wires");
    Tune[4] = CreatePlayerTextDraw(playerid,88.000000, 233.000000, "Classic");
    Tune[5] = CreatePlayerTextDraw(playerid,87.000000, 254.000000, "Twist");
    Tune[6] = CreatePlayerTextDraw(playerid,87.000000, 275.000000, "Cutter");
    Tune[7] = CreatePlayerTextDraw(playerid,87.000000, 293.000000, "Dollar");
    Tune[8] = CreatePlayerTextDraw(playerid,87.000000, 312.000000, "Atomic");
    for(new i; i != 9; i++)
    {
	    PlayerTextDrawBackgroundColor(playerid,Tune[i], 255);
	    PlayerTextDrawFont(playerid,Tune[i], 2);
	    PlayerTextDrawLetterSize(playerid,Tune[i], 0.300000, 1.000000);
	    PlayerTextDrawColor(playerid,Tune[i], -1);
	    PlayerTextDrawSetOutline(playerid,Tune[i], 0);
	    PlayerTextDrawSetProportional(playerid,Tune[i], 1);
	    PlayerTextDrawSetShadow(playerid,Tune[i], 0);
	    PlayerTextDrawUseBox(playerid,Tune[i], 1);
	    PlayerTextDrawBoxColor(playerid,Tune[i], 0);
	    PlayerTextDrawTextSize(playerid,Tune[i], 170.000000, 10.000000);
	    PlayerTextDrawSetSelectable(playerid,Tune[i], true);
	}
	//
	ProcentDraw[playerid] = TextDrawCreate(500.5, 190.0, "_");
	TextDrawBackgroundColor(ProcentDraw[playerid], COLOR_BLACK);
	TextDrawLetterSize(ProcentDraw[playerid],0.200000,1.000000);
	TextDrawFont(ProcentDraw[playerid], 2);
	TextDrawColor(ProcentDraw[playerid], COLOR_BLUE);
	TextDrawSetOutline(ProcentDraw[playerid], 1);
	TextDrawSetProportional(ProcentDraw[playerid],1);
	TextDrawSetShadow(ProcentDraw[playerid],1);

	AmountLDraw[playerid] = TextDrawCreate(500.5, 200.0, "_");
	TextDrawBackgroundColor(AmountLDraw[playerid], COLOR_BLACK);
	TextDrawLetterSize(AmountLDraw[playerid],0.200000,1.000000);
	TextDrawFont(AmountLDraw[playerid], 2);
	TextDrawColor(AmountLDraw[playerid], COLOR_BLUE);
	TextDrawSetOutline(AmountLDraw[playerid], 1);
	TextDrawSetProportional(AmountLDraw[playerid],1);
	TextDrawSetShadow(AmountLDraw[playerid],1);

    ShopACcost[playerid] = CreatePlayerTextDraw(playerid, 534.000305, 361.718566, "None");
	PlayerTextDrawLetterSize(playerid, ShopACcost[playerid], 0.132333, 0.571259);
	PlayerTextDrawAlignment(playerid, ShopACcost[playerid], 1);
	PlayerTextDrawColor(playerid, ShopACcost[playerid], -1);
	PlayerTextDrawSetShadow(playerid, ShopACcost[playerid], 1);
	PlayerTextDrawSetOutline(playerid, ShopACcost[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, ShopACcost[playerid], 51);
	PlayerTextDrawFont(playerid, ShopACcost[playerid], 2);
	PlayerTextDrawSetProportional(playerid, ShopACcost[playerid], 1);

	Race[0][playerid] = CreatePlayerTextDraw(playerid, 640.334045, 120.551856, "usebox");
	PlayerTextDrawLetterSize(playerid, Race[0][playerid], 0.000000, 13.309654);
	PlayerTextDrawTextSize(playerid, Race[0][playerid], 506.666656, 0.000000);
	PlayerTextDrawAlignment(playerid, Race[0][playerid], 1);
	PlayerTextDrawColor(playerid, Race[0][playerid], 0);
	PlayerTextDrawUseBox(playerid, Race[0][playerid], true);
	PlayerTextDrawBoxColor(playerid, Race[0][playerid], 103182250);
	PlayerTextDrawSetShadow(playerid, Race[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[0][playerid], 0);
	PlayerTextDrawFont(playerid, Race[0][playerid], 1);

	Race[1][playerid] = CreatePlayerTextDraw(playerid, 638.666687, 125.944572, "usebox");
	PlayerTextDrawLetterSize(playerid, Race[1][playerid], 0.000000, 5.295255);
	PlayerTextDrawTextSize(playerid, Race[1][playerid], 509.333282, 0.000000);
	PlayerTextDrawAlignment(playerid, Race[1][playerid], 1);
	PlayerTextDrawColor(playerid, Race[1][playerid], 0);
	PlayerTextDrawUseBox(playerid, Race[1][playerid], true);
	PlayerTextDrawBoxColor(playerid, Race[1][playerid], -8912726);
	PlayerTextDrawSetShadow(playerid, Race[1][playerid], 9);
	PlayerTextDrawSetOutline(playerid, Race[1][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[1][playerid], 41215);
	PlayerTextDrawFont(playerid, Race[1][playerid], 0);

	Race[2][playerid] = CreatePlayerTextDraw(playerid, 513.333374, 128.177764, "1.");
	PlayerTextDrawLetterSize(playerid, Race[2][playerid], 0.240666, 1.272296);
	PlayerTextDrawAlignment(playerid, Race[2][playerid], 1);
	PlayerTextDrawColor(playerid, Race[2][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[2][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[2][playerid], 51);
	PlayerTextDrawFont(playerid, Race[2][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[2][playerid], 1);

	Race[3][playerid] = CreatePlayerTextDraw(playerid, 513.000000, 142.696304, "2.");
	PlayerTextDrawLetterSize(playerid, Race[3][playerid], 0.240666, 1.272296);
	PlayerTextDrawAlignment(playerid, Race[3][playerid], 1);
	PlayerTextDrawColor(playerid, Race[3][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[3][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[3][playerid], 51);
	PlayerTextDrawFont(playerid, Race[3][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[3][playerid], 1);

	Race[4][playerid] = CreatePlayerTextDraw(playerid, 513.333251, 156.800003, "3.");
	PlayerTextDrawLetterSize(playerid, Race[4][playerid], 0.240666, 1.272296);
	PlayerTextDrawAlignment(playerid, Race[4][playerid], 1);
	PlayerTextDrawColor(playerid, Race[4][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[4][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[4][playerid], 51);
	PlayerTextDrawFont(playerid, Race[4][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[4][playerid], 1);

	Race[5][playerid] = CreatePlayerTextDraw(playerid, 511.333465, 202.429656, "Racers:");
	PlayerTextDrawLetterSize(playerid, Race[5][playerid], 0.204000, 0.990222);
	PlayerTextDrawAlignment(playerid, Race[5][playerid], 1);
	PlayerTextDrawColor(playerid, Race[5][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[5][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[5][playerid], 51);
	PlayerTextDrawFont(playerid, Race[5][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[5][playerid], 1);

	Race[6][playerid] = CreatePlayerTextDraw(playerid, 511.333374, 211.555618, "Point:");
	PlayerTextDrawLetterSize(playerid, Race[6][playerid], 0.204000, 0.990222);
	PlayerTextDrawAlignment(playerid, Race[6][playerid], 1);
	PlayerTextDrawColor(playerid, Race[6][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[6][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[6][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[6][playerid], 51);
	PlayerTextDrawFont(playerid, Race[6][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[6][playerid], 1);

	Race[7][playerid] = CreatePlayerTextDraw(playerid, 530.333251, 182.933288, FD2);
	PlayerTextDrawLetterSize(playerid, Race[7][playerid], 0.262666, 1.317925);
	PlayerTextDrawAlignment(playerid, Race[7][playerid], 1);
	PlayerTextDrawColor(playerid, Race[7][playerid], -1061109505);
	PlayerTextDrawSetShadow(playerid, Race[7][playerid], 1);
	PlayerTextDrawSetOutline(playerid, Race[7][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[7][playerid], 51);
	PlayerTextDrawFont(playerid, Race[7][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[7][playerid], 1);

	Race[8][playerid] = CreatePlayerTextDraw(playerid, 511.599548, 219.851867, "Time: 00:00");
	PlayerTextDrawLetterSize(playerid, Race[8][playerid], 0.203998, 0.990221);
	PlayerTextDrawAlignment(playerid, Race[8][playerid], 1);
	PlayerTextDrawColor(playerid, Race[8][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[8][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[8][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[8][playerid], 51);
	PlayerTextDrawFont(playerid, Race[8][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[8][playerid], 1);

	Race[9][playerid] = CreatePlayerTextDraw(playerid, 511.666778, 228.148193, "Race type: sprint;");
	PlayerTextDrawLetterSize(playerid, Race[9][playerid], 0.203998, 0.990221);
	PlayerTextDrawAlignment(playerid, Race[9][playerid], 1);
	PlayerTextDrawColor(playerid, Race[9][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[9][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[9][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[9][playerid], 51);
	PlayerTextDrawFont(playerid, Race[9][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[9][playerid], 1);
	//Спидометр
    DartProjectTD[0][playerid] = CreatePlayerTextDraw(playerid,443.666625, 329.363037, "PreviewModel");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[0][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid,DartProjectTD[0][playerid], 217.333343, 136.474136);
	PlayerTextDrawAlignment(playerid,DartProjectTD[0][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[0][playerid], 229);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[0][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[0][playerid], 0x00000000);
	PlayerTextDrawFont(playerid,DartProjectTD[0][playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid,DartProjectTD[0][playerid], 849);
	PlayerTextDrawSetPreviewRot(playerid,DartProjectTD[0][playerid], 107.000000, 360.000000, 0.000000, 1.000000);
	//TextDrawSetSelectable(DartProjectTD[0][playerid], true);

	DartProjectTD[1][playerid] = CreatePlayerTextDraw(playerid,503.666778, 384.533294, "100");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[1][playerid], 0.413666, 2.612147);
	PlayerTextDrawAlignment(playerid,DartProjectTD[1][playerid], 2);
	PlayerTextDrawColor(playerid,DartProjectTD[1][playerid], -1);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[1][playerid], -1);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[1][playerid], -205);
	PlayerTextDrawFont(playerid,DartProjectTD[1][playerid], 2);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[1][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[1][playerid], true);

	DartProjectTD[2][playerid] = CreatePlayerTextDraw(playerid,545.333435, 415.814910, "Fuel:");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[2][playerid], 0.221663, 1.284739);
	PlayerTextDrawAlignment(playerid,DartProjectTD[2][playerid], 2);
	PlayerTextDrawColor(playerid,DartProjectTD[2][playerid], -154);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[2][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[2][playerid], -205);
	PlayerTextDrawFont(playerid,DartProjectTD[2][playerid], 2);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[2][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[2][playerid], true);

	DartProjectTD[3][playerid] = CreatePlayerTextDraw(playerid,559.333557, 415.985290, "300");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[3][playerid], 0.221663, 1.284739);
	PlayerTextDrawAlignment(playerid,DartProjectTD[3][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[3][playerid], -1);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[3][playerid], -1);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[3][playerid], -205);
	PlayerTextDrawFont(playerid,DartProjectTD[3][playerid], 2);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[3][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[3][playerid], true);

	DartProjectTD[4][playerid] = CreatePlayerTextDraw(playerid,542.333312, 378.151855, "usebox");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[4][playerid], 0.000000, 1.175922);
	PlayerTextDrawTextSize(playerid,DartProjectTD[4][playerid], 538.333251, 0.000000);
	PlayerTextDrawAlignment(playerid,DartProjectTD[4][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[4][playerid], 0);
	PlayerTextDrawUseBox(playerid,DartProjectTD[4][playerid], true);
	PlayerTextDrawBoxColor(playerid,DartProjectTD[4][playerid], -1954311169);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[4][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[4][playerid], 0x00000000);
	PlayerTextDrawFont(playerid,DartProjectTD[4][playerid], 0);
	//TextDrawSetSelectable(DartProjectTD[4][playerid], true);

	DartProjectTD[5][playerid] = CreatePlayerTextDraw(playerid,570.333557, 390.766784, "usebox");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[5][playerid], 0.000000, -0.190742);
	PlayerTextDrawTextSize(playerid,DartProjectTD[5][playerid], 538.333435, 0.000000);
	PlayerTextDrawAlignment(playerid,DartProjectTD[5][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[5][playerid], 0);
	PlayerTextDrawUseBox(playerid,DartProjectTD[5][playerid], true);
	PlayerTextDrawBoxColor(playerid,DartProjectTD[5][playerid], -1954311169);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[5][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[5][playerid], 0x00000000);
	PlayerTextDrawFont(playerid,DartProjectTD[5][playerid], 0);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[5][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[5][playerid], true);

	DartProjectTD[6][playerid] = CreatePlayerTextDraw(playerid,555.999877, 377.907348, "usebox");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[6][playerid], 0.000000, 2.742588);
	PlayerTextDrawTextSize(playerid,DartProjectTD[6][playerid], 551.999755, 0.000000);
	PlayerTextDrawAlignment(playerid,DartProjectTD[6][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[6][playerid], 0);
	PlayerTextDrawUseBox(playerid,DartProjectTD[6][playerid], true);
	PlayerTextDrawBoxColor(playerid,DartProjectTD[6][playerid], -1954311169);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[6][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[6][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[6][playerid], 0x00000000);
	PlayerTextDrawFont(playerid,DartProjectTD[6][playerid], 0);
	//TextDrawSetSelectable(DartProjectTD[6][playerid], true);

	DartProjectTD[7][playerid] = CreatePlayerTextDraw(playerid,570.333251, 377.662872, "usebox");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[7][playerid], 0.000000, 2.742588);
	PlayerTextDrawTextSize(playerid,DartProjectTD[7][playerid], 566.333068, 0.000000);
	PlayerTextDrawAlignment(playerid,DartProjectTD[7][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[7][playerid], 0);
	PlayerTextDrawUseBox(playerid,DartProjectTD[7][playerid], true);
	PlayerTextDrawBoxColor(playerid,DartProjectTD[7][playerid], -1954311169);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[7][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[7][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[7][playerid], 0x00000000);
	PlayerTextDrawFont(playerid,DartProjectTD[7][playerid], 0);
	//TextDrawSetSelectable(DartProjectTD[7][playerid], true);

	DartProjectTD[8][playerid] = CreatePlayerTextDraw(playerid,538.666625, 366.696319, "1");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[8][playerid], 0.208664, 0.915555);
	PlayerTextDrawAlignment(playerid,DartProjectTD[8][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[8][playerid], -1);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[8][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[8][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[8][playerid], 51);
	PlayerTextDrawFont(playerid,DartProjectTD[8][playerid], 1);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[8][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[8][playerid], true);

	DartProjectTD[9][playerid] = CreatePlayerTextDraw(playerid,552.333190, 366.866668, "2");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[9][playerid], 0.208664, 0.915555);
	PlayerTextDrawAlignment(playerid,DartProjectTD[9][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[9][playerid], -1);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[9][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[9][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[9][playerid], 51);
	PlayerTextDrawFont(playerid,DartProjectTD[9][playerid], 1);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[9][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[9][playerid], true);

	DartProjectTD[10][playerid] = CreatePlayerTextDraw(playerid,552.333251, 404.370391, "3");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[10][playerid], 0.208664, 0.915555);
	PlayerTextDrawAlignment(playerid,DartProjectTD[10][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[10][playerid], -1);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[10][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[10][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[10][playerid], 51);
	PlayerTextDrawFont(playerid,DartProjectTD[10][playerid], 1);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[10][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[10][playerid], true);

	DartProjectTD[11][playerid] = CreatePlayerTextDraw(playerid,565.666564, 366.792419, "4");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[11][playerid], 0.208664, 0.915555);
	PlayerTextDrawAlignment(playerid,DartProjectTD[11][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[11][playerid], -1);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[11][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[11][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[11][playerid], 51);
	PlayerTextDrawFont(playerid,DartProjectTD[11][playerid], 1);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[11][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[11][playerid], true);

	DartProjectTD[12][playerid] = CreatePlayerTextDraw(playerid,566.333190, 404.710998, "N");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[12][playerid], 0.208664, 0.915555);
	PlayerTextDrawAlignment(playerid,DartProjectTD[12][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[12][playerid], -1);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[12][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[12][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[12][playerid], 51);
	PlayerTextDrawFont(playerid,DartProjectTD[12][playerid], 1);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[12][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[12][playerid], true);

	DartProjectTD[13][playerid] = CreatePlayerTextDraw(playerid,519.666320, 399.488708, "KM/H");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[13][playerid], 0.158665, 0.699850);
	PlayerTextDrawAlignment(playerid,DartProjectTD[13][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[13][playerid], -155);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[13][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[13][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[13][playerid], 51);
	PlayerTextDrawFont(playerid,DartProjectTD[13][playerid], 1);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[13][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[13][playerid], true);

	DartProjectTD[14][playerid] = CreatePlayerTextDraw(playerid,503.666625, 405.955657, "Subaru");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[14][playerid], 0.124332, 0.936294);
	PlayerTextDrawAlignment(playerid,DartProjectTD[14][playerid], 2);
	PlayerTextDrawColor(playerid,DartProjectTD[14][playerid], -167);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[14][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[14][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[14][playerid], 51);
	PlayerTextDrawFont(playerid,DartProjectTD[14][playerid], 2);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[14][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[14][playerid], true);

	DartProjectTD[15][playerid] = CreatePlayerTextDraw(playerid,587.000122, 372.525939, " Health:");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[15][playerid], 0.124332, 0.936294);
	PlayerTextDrawAlignment(playerid,DartProjectTD[15][playerid], 2);
	PlayerTextDrawColor(playerid,DartProjectTD[15][playerid], -154);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[15][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[15][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[15][playerid], 51);
	PlayerTextDrawFont(playerid,DartProjectTD[15][playerid], 2);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[15][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[15][playerid], true);

	DartProjectTD[16][playerid] = CreatePlayerTextDraw(playerid,577.666625, 385.970428, "Locked:");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[16][playerid], 0.124332, 0.936294);
	PlayerTextDrawAlignment(playerid,DartProjectTD[16][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[16][playerid], -154);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[16][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[16][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[16][playerid], 51);
	PlayerTextDrawFont(playerid,DartProjectTD[16][playerid], 2);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[16][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[16][playerid], true);

	DartProjectTD[17][playerid] = CreatePlayerTextDraw(playerid,598.000000, 372.451934, "1000 HP");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[17][playerid], 0.124332, 0.936294);
	PlayerTextDrawAlignment(playerid,DartProjectTD[17][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[17][playerid], -6617089);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[17][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[17][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[17][playerid], 51);
	PlayerTextDrawFont(playerid,DartProjectTD[17][playerid], 2);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[17][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[17][playerid], true);

	DartProjectTD[18][playerid] = CreatePlayerTextDraw(playerid,598.333312, 386.140808, "on");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[18][playerid], 0.124332, 0.936294);
	PlayerTextDrawAlignment(playerid,DartProjectTD[18][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[18][playerid], 80281855);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[18][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[18][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[18][playerid], 51);
	PlayerTextDrawFont(playerid,DartProjectTD[18][playerid], 2);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[18][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[18][playerid], true);

	DartProjectTD[19][playerid] = CreatePlayerTextDraw(playerid,577.999938, 399.414916, "Engine:");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[19][playerid], 0.124332, 0.936294);
	PlayerTextDrawAlignment(playerid,DartProjectTD[19][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[19][playerid], -154);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[19][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[19][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[19][playerid], 51);
	PlayerTextDrawFont(playerid,DartProjectTD[19][playerid], 2);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[19][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[19][playerid], true);

	DartProjectTD[20][playerid] = CreatePlayerTextDraw(playerid,598.666625, 399.585266, "on");
	PlayerTextDrawLetterSize(playerid,DartProjectTD[20][playerid], 0.124332, 0.936294);
	PlayerTextDrawAlignment(playerid,DartProjectTD[20][playerid], 1);
	PlayerTextDrawColor(playerid,DartProjectTD[20][playerid], 80281855);
	PlayerTextDrawSetShadow(playerid,DartProjectTD[20][playerid], 0);
	PlayerTextDrawSetOutline(playerid,DartProjectTD[20][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,DartProjectTD[20][playerid], 51);
	PlayerTextDrawFont(playerid,DartProjectTD[20][playerid], 2);
	PlayerTextDrawSetProportional(playerid,DartProjectTD[20][playerid], 1);
	//TextDrawSetSelectable(DartProjectTD[20][playerid], true);

	ShopText[playerid] = CreatePlayerTextDraw(playerid,509.000000,180.000000,"Model: Landstalker");
	PlayerTextDrawBackgroundColor(playerid,ShopText[playerid],255);
	PlayerTextDrawFont(playerid,ShopText[playerid],1);
	PlayerTextDrawSetOutline(playerid,ShopText[playerid],1);
	PlayerTextDrawSetShadow(playerid,ShopText[playerid],0);
	PlayerTextDrawLetterSize(playerid,ShopText[playerid],0.270000,1.200000);
	PlayerTextDrawColor(playerid,ShopText[playerid],-1);
	PlayerTextDrawSetProportional(playerid,ShopText[playerid],1);

	ReconPlayerText[playerid][0] = CreatePlayerTextDraw(playerid,589.00, 145.00, "Nik Anson~n~ID: 666");
	PlayerTextDrawAlignment(playerid,ReconPlayerText[playerid][0], 2);
	PlayerTextDrawLetterSize(playerid,ReconPlayerText[playerid][0],  0.240000, 0.899999);
	ReconPlayerText[playerid][1] = CreatePlayerTextDraw(playerid,578.00, 165.00, "1 : 1 / 8~n~0~n~0~n~50~n~0~n~0 / 0~n~86~n~0 : 0 ~n~0 / 0 : 0%~n~0 / 0 : 0%~n~23 : 0");
	PlayerTextDrawLetterSize(playerid,ReconPlayerText[playerid][1], 0.199999, 0.899999);
	for(new x; x < 2; x ++)
	{
		PlayerTextDrawBackgroundColor(playerid,ReconPlayerText[playerid][x], 255);
		PlayerTextDrawFont(playerid,ReconPlayerText[playerid][x], 1);
		PlayerTextDrawColor(playerid,ReconPlayerText[playerid][x], -1);
		PlayerTextDrawSetOutline(playerid,ReconPlayerText[playerid][x], 1);
		PlayerTextDrawSetProportional(playerid,ReconPlayerText[playerid][x], 1);
		PlayerTextDrawSetShadow(playerid,ReconPlayerText[playerid][x],0);
	}
}
stock NewTextDrawsLoad(playerid)
{
	Capture[playerid][0] = CreatePlayerTextDraw(playerid, 107.000000, 293.000000, "_");
	PlayerTextDrawAlignment(playerid, Capture[playerid][0], 2);
	PlayerTextDrawBackgroundColor(playerid, Capture[playerid][0], 255);
	PlayerTextDrawFont(playerid, Capture[playerid][0], 1);
	PlayerTextDrawLetterSize(playerid, Capture[playerid][0], 1.120000, 3.200000);
	PlayerTextDrawColor(playerid, Capture[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid, Capture[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, Capture[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, Capture[playerid][0], 1);
	PlayerTextDrawUseBox(playerid, Capture[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, Capture[playerid][0], 112);
	PlayerTextDrawTextSize(playerid, Capture[playerid][0], 43.000000, 206.000000);
	PlayerTextDrawSetSelectable(playerid, Capture[playerid][0], 0);

	Capture[playerid][1] = CreatePlayerTextDraw(playerid, 5.000000, 292.000000, "_");//time
	PlayerTextDrawBackgroundColor(playerid, Capture[playerid][1], 255);
	PlayerTextDrawFont(playerid, Capture[playerid][1], 1);
	PlayerTextDrawLetterSize(playerid, Capture[playerid][1], 0.490000, 1.000000);
	PlayerTextDrawColor(playerid, Capture[playerid][1], 96492799);
	PlayerTextDrawSetOutline(playerid, Capture[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, Capture[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, Capture[playerid][1], 0);

	Capture[playerid][2] = CreatePlayerTextDraw(playerid, 5.000000, 302.000000, "_");//banda napad
	PlayerTextDrawBackgroundColor(playerid, Capture[playerid][2], 255);
	PlayerTextDrawFont(playerid, Capture[playerid][2], 1);
	PlayerTextDrawLetterSize(playerid, Capture[playerid][2], 0.480000, 1.000000);
	PlayerTextDrawColor(playerid, Capture[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid, Capture[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, Capture[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, Capture[playerid][2], 0);

	Capture[playerid][3] = CreatePlayerTextDraw(playerid, 5.000000, 312.000000, "_");//banda vlad
	PlayerTextDrawBackgroundColor(playerid, Capture[playerid][3], 255);
	PlayerTextDrawFont(playerid, Capture[playerid][3], 1);
	PlayerTextDrawLetterSize(playerid, Capture[playerid][3], 0.480000, 1.000000);
	PlayerTextDrawColor(playerid, Capture[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid, Capture[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, Capture[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, Capture[playerid][3], 0);

	Bizwar[playerid][0] = CreatePlayerTextDraw(playerid, 5.000000, 292.000000, "_");//time
	PlayerTextDrawBackgroundColor(playerid, Bizwar[playerid][0], 255);
	PlayerTextDrawFont(playerid, Bizwar[playerid][0], 1);
	PlayerTextDrawLetterSize(playerid, Bizwar[playerid][0], 0.490000, 1.000000);
	PlayerTextDrawColor(playerid, Bizwar[playerid][0], 96492799);
	PlayerTextDrawSetOutline(playerid, Bizwar[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, Bizwar[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, Bizwar[playerid][0], 0);

	Bizwar[playerid][1] = CreatePlayerTextDraw(playerid, 5.000000, 302.000000, "_");//banda napad
	PlayerTextDrawBackgroundColor(playerid, Bizwar[playerid][1], 255);
	PlayerTextDrawFont(playerid, Bizwar[playerid][1], 1);
	PlayerTextDrawLetterSize(playerid, Bizwar[playerid][1], 0.480000, 1.000000);
	PlayerTextDrawColor(playerid, Bizwar[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid, Bizwar[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, Bizwar[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, Bizwar[playerid][1], 0);

	Bizwar[playerid][2] = CreatePlayerTextDraw(playerid, 5.000000, 312.000000, "_");//banda vlad
	PlayerTextDrawBackgroundColor(playerid, Bizwar[playerid][2], 255);
	PlayerTextDrawFont(playerid, Bizwar[playerid][2], 1);
	PlayerTextDrawLetterSize(playerid, Bizwar[playerid][2], 0.480000, 1.000000);
	PlayerTextDrawColor(playerid, Bizwar[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid, Bizwar[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, Bizwar[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, Bizwar[playerid][2], 0);

}
stock RemovedObjects(playerid)
{
    // Tuning
    RemoveBuildingForPlayer(playerid, 3687, 2135.7422, -2186.4453, 15.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3687, 2162.8516, -2159.7500, 15.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3687, 2150.1953, -2172.3594, 15.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3622, 2135.7422, -2186.4453, 15.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3622, 2150.1953, -2172.3594, 15.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3622, 2162.8516, -2159.7500, 15.6719, 0.25);
	//Мэрия
	RemoveBuildingForPlayer(playerid, 4024, 1479.8672, -1790.3984, 56.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 4044, 1481.1875, -1785.0703, 22.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 1527, 1448.2344, -1755.8984, 14.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1407.1953, -1749.3125, 13.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1405.2344, -1821.1172, 13.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1417.9766, -1832.5313, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1405.5781, -1831.6953, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 4174, 1435.7656, -1823.6641, 15.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1456.3984, -1832.5313, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1504.8438, -1832.5313, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1404.9141, -1765.2656, 12.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 4173, 1427.2734, -1756.1797, 15.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1415.3125, -1748.5625, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1429.5313, -1748.4219, 12.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1438.0313, -1747.9375, 13.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1447.9063, -1748.2266, 12.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 4002, 1479.8672, -1790.3984, 56.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3980, 1481.1875, -1785.0703, 22.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 4003, 1481.0781, -1747.0313, 33.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1529.2891, -1832.9141, 15.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1549.5313, -1832.3125, 12.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1555.6641, -1830.5938, 13.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 4175, 1524.4141, -1823.8516, 15.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1554.8203, -1816.1563, 13.4766, 0.25);
	//Дома гетто new
	RemoveBuildingForPlayer(playerid, 3695, 2239.9297, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3695, 2282.9922, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3695, 2314.8203, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3695, 2352.7188, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3695, 2387.8203, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2229.0469, -1810.0313, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1807.3281, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1801.8672, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2230.4141, -1815.1484, 11.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2234.4844, -1817.9297, 12.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1791.0000, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1796.4531, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3584, 2239.9297, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1775.5078, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1780.9844, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2228.6719, -1767.2734, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2226.1641, -1770.0469, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1307, 2249.8672, -1815.4141, 12.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 669, 2254.7266, -1827.4375, 12.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2259.9453, -1796.0703, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2258.3438, -1804.7422, 12.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2259.2656, -1773.2422, 11.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 17886, 2264.0391, -1789.2578, 20.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1791.0000, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1796.4531, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1807.3281, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1801.8672, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1770.0469, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1775.5078, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2265.2969, -1780.9844, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2275.3906, -1820.7266, 12.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2268.1875, -1810.0313, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2273.6953, -1810.0313, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3584, 2282.9922, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2267.8125, -1767.2734, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2273.3359, -1767.3438, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2271.6484, -1772.3984, 8.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2285.7578, -1762.1250, 12.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2297.8984, -1793.8203, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2297.3828, -1798.5391, 8.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2297.1484, -1775.8750, 8.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2305.0625, -1810.0313, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1807.3281, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1801.8672, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1791.0000, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1796.4531, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3584, 2314.8203, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1775.5078, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1770.0469, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2302.1719, -1780.9844, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2304.7813, -1767.3828, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1307, 2322.6484, -1815.4141, 12.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2332.8281, -1817.7109, 12.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2341.7578, -1810.0313, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1807.3281, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2341.7578, -1817.7266, 8.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1801.8672, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2335.6484, -1796.6328, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1791.0000, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1796.4531, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2334.7109, -1785.0625, 12.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1775.5078, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1780.9844, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 17887, 2343.6094, -1784.5078, 20.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2338.8672, -1770.0469, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2341.3828, -1767.2734, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 669, 2329.1875, -1765.5234, 12.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 2349.6172, -1763.3438, 11.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3584, 2352.7188, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2367.6484, -1802.7969, 8.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2367.6484, -1780.7734, 11.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2378.3359, -1818.7266, 8.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1800.4688, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1805.9297, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2376.9922, -1813.9297, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1811.3828, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1780.9844, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1789.6016, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1795.0547, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2376.6172, -1767.2734, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1770.0469, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1408, 2374.1016, -1775.5078, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2399.9766, -1815.9922, 11.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 3584, 2387.8203, -1790.6953, 17.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 2398.5781, -1782.7734, 10.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2387.0234, -1763.6406, 12.1797, 0.25);
	//FBI
	RemoveBuildingForPlayer(playerid, 6071, 1087.9844, -1682.3281, 19.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1051.8750, -1680.5156, 14.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1051.2500, -1678.0234, 13.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1058.3125, -1695.7656, 14.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 6063, 1087.9844, -1682.3281, 19.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1097.4297, -1699.4219, 14.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1101.6563, -1699.5625, 14.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1130.5391, -1684.3203, 15.8906, 0.25);
	//Военкомат Los Santos
	RemoveBuildingForPlayer(playerid, 1268, 218.2266, -1434.5625, 24.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 6362, 201.4453, -1476.8516, 17.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 6350, 247.3906, -1454.8281, 37.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 1259, 218.2266, -1434.5625, 24.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 203.1953, -1429.2031, 15.8125, 0.25);
	//SPAWN
	RemoveBuildingForPlayer(playerid, 5033, 1745.203, -1882.851, 26.140, 68.970);
	RemoveBuildingForPlayer(playerid, 5055, 1745.203, -1882.851, 26.140, 68.970);
	RemoveBuildingForPlayer(playerid, 1280, 1715.764, -1914.492, 13.028, 3.626);
	RemoveBuildingForPlayer(playerid, 4821, 1745.203, -1882.851, 26.140, 102.564);
	RemoveBuildingForPlayer(playerid, 4961, 1745.203, -1882.851, 26.140, 102.564);
	RemoveBuildingForPlayer(playerid, 634, 1712.929, -1868.210, 12.132, 7.269);
	RemoveBuildingForPlayer(playerid, 634, 1721.023, -1868.210, 12.132, 7.269);
	RemoveBuildingForPlayer(playerid, 1280, 1726.101, -1893.179, 13.112, 3.626);
	RemoveBuildingForPlayer(playerid, 673, 1727.195, -1893.156, 11.445, 8.848);
	RemoveBuildingForPlayer(playerid, 1226, 1726.349, -1897.160, 12.608, 6.614);
	RemoveBuildingForPlayer(playerid, 1259, 1841.335, -1836.460, 18.562, 21.016);
	RemoveBuildingForPlayer(playerid, 1268, 1841.335, -1836.460, 18.562, 21.016);
	RemoveBuildingForPlayer(playerid, 620, 1731.476, -1846.710, 10.804, 22.657);
	RemoveBuildingForPlayer(playerid, 620, 1687.437, -1881.007, 11.562, 22.657);
	RemoveBuildingForPlayer(playerid, 1226, 1715.052, -1843.214, 13.106, 6.614);
	RemoveBuildingForPlayer(playerid, 673, 1723.929, -1829.796, 11.445, 8.848);
	RemoveBuildingForPlayer(playerid, 700, 1732.671, -1830.078, 11.445, 11.084);
	RemoveBuildingForPlayer(playerid, 1226, 1724.989, -1860.813, 13.215, 6.614);
	RemoveBuildingForPlayer(playerid, 5024, 1748.843, -1883.031, 14.187, 75.808);
	RemoveBuildingForPlayer(playerid, 620, 1762.828, -1846.710, 10.804, 22.657);
	RemoveBuildingForPlayer(playerid, 1226, 1755.756, -1860.835, 13.008, 6.614);
	RemoveBuildingForPlayer(playerid, 1226, 1783.552, -1860.691, 12.944, 6.614);
	RemoveBuildingForPlayer(playerid, 1226, 1808.091, -1860.662, 12.776, 6.614);
	RemoveBuildingForPlayer(playerid, 620, 1794.117, -1846.710, 10.804, 22.657);
	RemoveBuildingForPlayer(playerid, 1226, 1773.517, -1901.454, 12.922, 6.614);
	RemoveBuildingForPlayer(playerid, 1226, 1773.576, -1931.300, 12.759, 6.614);
	RemoveBuildingForPlayer(playerid, 1226, 1807.323, -1931.318, 12.911, 6.614);
	RemoveBuildingForPlayer(playerid, 1226, 1807.598, -1901.946, 13.523, 6.614);
	RemoveBuildingForPlayer(playerid, 673, 1727.195, -1930.898, 11.445, 8.848);
	RemoveBuildingForPlayer(playerid, 1226, 1726.761, -1926.884, 13.360, 6.614);
	RemoveBuildingForPlayer(playerid, 1280, 1726.132, -1923.924, 12.887, 3.626);
	RemoveBuildingForPlayer(playerid, 673, 1727.195, -1916.304, 11.445, 8.848);
	RemoveBuildingForPlayer(playerid, 1280, 1716.139, -1909.844, 13.082, 3.626);
	RemoveBuildingForPlayer(playerid, 1280, 1726.132, -1908.942, 12.823, 3.626);
	RemoveBuildingForPlayer(playerid, 620, 1687.437, -1923.460, 11.562, 22.657);
	RemoveBuildingForPlayer(playerid, 955, 1729.770, -1943.510, 13.636, 3.335);
	RemoveBuildingForPlayer(playerid, 963, 1746.582, -1943.096, 13.370, 2.972);
	RemoveBuildingForPlayer(playerid, 962, 1756.609, -1943.074, 13.443, 2.972);
	RemoveBuildingForPlayer(playerid, 620, 1703.468, -1846.710, 10.804, 22.657);
	RemoveBuildingForPlayer(playerid, 673, 1704.742, -1829.796, 11.445, 8.848);
	RemoveBuildingForPlayer(playerid, 1226, 1742.208, -1833.792, 13.318, 6.614);
	RemoveBuildingForPlayer(playerid, 5024, 1748.843, -1883.031, 14.187, 0.250);
	RemoveBuildingForPlayer(playerid, 5083, 1748.843, -1883.031, 14.187, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1774.757, -1901.539, 16.375, 0.250);
	//Церковь NEW
	RemoveBuildingForPlayer(playerid, 4025, 1777.8359, -1773.9063, 12.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 4070, 1719.7422, -1770.7813, 23.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1531, 1724.7344, -1741.5000, 14.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 4215, 1777.5547, -1775.0391, 36.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1700.8516, -1778.3984, 12.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1701.3047, -1794.4297, 12.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1701.1484, -1753.2266, 12.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1701.2578, -1764.4844, 12.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1700.8984, -1743.9844, 12.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3986, 1719.7422, -1770.7813, 23.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1791.1797, -1816.6328, 14.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1788.5078, -1816.5703, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1796.9609, -1817.3906, 14.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1801.8828, -1817.3047, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 4019, 1777.8359, -1773.9063, 12.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1727.6172, -1423.7656, 14.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 1831.4688, -1798.2031, 12.7031, 0.25);
	//ЗаправкаГетто
	RemoveBuildingForPlayer(playerid, 1412, 1917.3203, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1912.0547, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1906.7734, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1927.8516, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1922.5859, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1938.3906, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1933.1250, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1821.1250, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1815.8594, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1810.5938, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1805.3281, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1948.9844, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1943.6875, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1800.0625, 13.8125, 0.25);
	//
	//DomNaKOlesahPokupka
	RemoveBuildingForPlayer(playerid, 4969, 1932.429, -2123.406, 15.945, 0.250);
	RemoveBuildingForPlayer(playerid, 1531, 1936.882, -2134.906, 14.218, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1921.015, -2153.351, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 1413, 1921.015, -2148.070, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 4984, 1880.710, -2112.632, 21.257, 0.250);
	RemoveBuildingForPlayer(playerid, 5087, 1880.710, -2112.632, 21.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1413, 1921.015, -2137.507, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1921.015, -2142.789, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 1413, 1921.015, -2121.250, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1921.015, -2126.531, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 1372, 1920.054, -2122.414, 12.687, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1921.015, -2115.976, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 1413, 1921.015, -2110.695, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 5017, 1932.429, -2123.406, 15.945, 0.250);
	RemoveBuildingForPlayer(playerid, 1532, 1939.601, -2116.757, 12.679, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1944.804, -2136.257, 15.851, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1944.804, -2110.296, 15.851, 0.250);

	//Доп.Автомастерская
	RemoveBuildingForPlayer(playerid, 3643, 992.4844, -896.2813, 46.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3643, 1005.0625, -895.5547, 45.8594, 0.25);

	RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1467.9844, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1485.1719, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1704.7656, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1692.2344, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1466.4688, -1637.9609, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);

	RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1466.4688, -1637.9609, 15.6328, 0.25);

	RemoveBuildingForPlayer(playerid, 3980, 1481.1875, -1785.0703, 22.3828, 50);

	RemoveBuildingForPlayer(playerid, 1283, 1373.4609, -1872.2266, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 4901, 1391.5703, -1891.5859, 18.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 5058, 1457.5625, -1895.9297, 22.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 4880, 1391.5703, -1891.5859, 18.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 1357, 1487.6953, -1848.1094, 12.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1372, 1486.2109, -1848.1250, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 1488.9219, -1848.2734, 12.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 1515.3828, -1850.0547, 12.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 1514.4219, -1850.0391, 12.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 1372, 1516.6875, -1850.0547, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1372, 1538.9453, -1849.2734, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 1538.8359, -1847.6250, 13.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 1220, 1538.3906, -1847.9297, 12.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1220, 1539.1016, -1847.2969, 12.9297, 0.25);
}

public OnPlayerConnect(playerid)
{
	if(ServerRestart[0])
	{
		SendClientMessage(playerid,0xffcc00ff,"Сейчас происходит рестарт сервера!");
		SendClientMessage(playerid,0xffcc00ff,"Пожалуйста, дождитесь его завершения");
		return KickEx(playerid, 2221);
	}
	new ip[24]; GetPlayerIp(playerid,ip,24);
	new num_ip = GetNumberOfPlayersOnThisIP(ip);
	if(num_ip > MAX_IP_ADRESS_CONNECT) return KickEx(playerid, 985);
	ORC{playerid} = false;
	new welcome = CreatePlayerObject(playerid, 19353, 1326.3205, -1061.3629, 3361.4370, 0.0000, 0.0000, 0.1119);
	SetPlayerObjectMaterialText(playerid, welcome, "WELCOME TO", 0, 140, "Arial", 60, 1, -1, 0, 1);
	new GM = CreatePlayerObject(playerid, 19353, 1326.3111, -1060.4824, 3360.9765, 0.0000, 0.0000, 0.0119);
	SetPlayerObjectMaterialText(playerid, GM, "Motel", 0, 140, "Arial", 60, 1, -584707328, 0, 1);
	new One = CreatePlayerObject(playerid, 19353, 1303.8493, -1052.3643, 3360.6499, 0.0000, 0.0000, 0.5054);
	SetPlayerObjectMaterialText(playerid, One, "1", 0, 140, "Arial", 24, 0, -16777216, 0, 1);
	new Three = CreatePlayerObject(playerid, 19353, 1311.6671, -1054.5961, 3360.7399, 0.0000, 0.0000, 90.1329);
	SetPlayerObjectMaterialText(playerid, Three, "3", 0, 140, "Arial", 24, 0, -16777216, 0, 1);
	new Two = CreatePlayerObject(playerid, 19353, 1306.2587, -1054.5959, 3360.7600, 0.0000, 0.0000, 89.6797);
	SetPlayerObjectMaterialText(playerid, Two, "2", 0, 140, "Arial", 24, 0, -16777216, 0, 1);
	new Four = CreatePlayerObject(playerid, 19353, 1312.8812, -1040.9591, 3362.5368, 0.0000, 0.0000, 269.8480);
	SetPlayerObjectMaterialText(playerid, Four, "4", 0, 140, "Arial", 24, 0, -16777216, 0, 1);
	new Five = CreatePlayerObject(playerid, 19353, 1304.2636, -1042.5581, 3364.5268, 0.0000, 0.0000, -0.2243);
	SetPlayerObjectMaterialText(playerid, Five, "5", 0, 140, "Arial", 24, 0, -16777216, 0, 1);
	new Six = CreatePlayerObject(playerid, 19353, 1304.2663, -1052.3632, 3366.5368, 0.0000, 0.0000, -0.5376);
	SetPlayerObjectMaterialText(playerid, Six, "6", 0, 140, "Arial", 24, 0, -16777216, 0, 1);
	new Seven = CreatePlayerObject(playerid, 19353, 1306.2598, -1054.5830, 3366.5668, 0.0000, 0.0000, 92.5232);
	SetPlayerObjectMaterialText(playerid, Seven, "7", 0, 140, "Arial", 24, 0, -16777216, 0, 1);
	new Eight = CreatePlayerObject(playerid, 19353, 1311.6481, -1054.5913, 3366.5568, 0.0000, 0.0000, 88.1365);
	SetPlayerObjectMaterialText(playerid, Eight, "8", 0, 140, "Arial", 24, 0, -16777216, 0, 1);
	new Nine = CreatePlayerObject(playerid, 19353, 1314.8303, -1051.5362, 3366.5368, 0.0000, 0.0000, 180.8840);
	SetPlayerObjectMaterialText(playerid, Nine, "9", 0, 140, "Arial", 24, 0, -16777216, 0, 1);
	new Ten = CreatePlayerObject(playerid, 19353, 1313.1229, -1040.9505, 3368.3715, 0.0000, 0.0000, -89.5018);
	SetPlayerObjectMaterialText(playerid, Ten, "10", 0, 140, "Arial", 24, 0, -16777216, 0, 1);
	new Eleven = CreatePlayerObject(playerid, 19353, 1304.7093, -1042.4293, 3370.3615, 0.0000, 0.0000, -0.5142);
	SetPlayerObjectMaterialText(playerid, Eleven, "11", 0, 140, "Arial", 24, 0, -16777216, 0, 1);
	new Telve = CreatePlayerObject(playerid, 19353, 1304.7103, -1052.3718, 3372.3715, 0.0000, 0.0000, -1.1408);
	SetPlayerObjectMaterialText(playerid, Telve, "12", 0, 140, "Arial", 24, 0, -16777216, 0, 1);
	new Thirteen = CreatePlayerObject(playerid, 19353, 1306.5559, -1054.5883, 3372.3615, 0.0000, 0.0000, 92.5465);
	SetPlayerObjectMaterialText(playerid, Thirteen, "13", 0, 140, "Arial", 24, 0, -16777216, 0, 1);
	new Fourteen = CreatePlayerObject(playerid, 19353, 1311.6640, -1054.6016, 3372.3515, 0.0000, 0.0000, 89.4134);
	SetPlayerObjectMaterialText(playerid, Fourteen, "14", 0, 140, "Arial", 24, 0, -16777216, 0, 1);
	new Fifthteen = CreatePlayerObject(playerid, 19353, 1315.2268, -1051.5493, 3372.3515, 0.0000, 0.0000, 179.3408);
	SetPlayerObjectMaterialText(playerid, Fifthteen, "15", 0, 140, "Arial", 24, 0, -16777216, 0, 1);
	PreloadAllAnims(playerid);
	GetPlayerName(playerid, PlayerInfo[playerid][pNames], 24);
	GetPlayerIp(playerid,PlayerInfo[playerid][pIP],16);
	g_MysqlRaceCheck[playerid]++;
	LoadPlayerDraws(playerid);
	NewTextDrawsLoad(playerid);
	RemovedObjects(playerid);
	ClearAnimations(playerid);
	SetPlayerDataToDefault(playerid);
	return 1;
}
stock SetPlayerDataToDefault(playerid)
{
	//
	SetPVarInt(playerid, #Tel, 999);
	SetPVarInt(playerid, #Mobile, 999);
	SetPVarInt(playerid, #HealOffer, 999);
    SetPVarInt(playerid, #PEfir, 999);
   	SetPVarInt(playerid, #RepairOffer, 999);
	SetPVarInt(playerid, #FreeOffer, 999);
	SetPVarInt(playerid, #ZoneOffer, 999);
	SetPVarInt(playerid, #LiveOfferls, 999);
	SetPVarInt(playerid, #TicketOffer,999);
	SetPVarInt(playerid, #DrugOffer,999);
	SetPVarInt(playerid, #LiveOfferls, 999);
	SetPVarInt(playerid, #CarOffer, 999);
	SetPVarInt(playerid, #ProposeOffer, 999);
	SetPVarInt(playerid, #MarryWitnessOffer, 999);
	SetPVarInt(playerid, #TalkingLivels, 999);
	SetPVarInt(playerid, #TalkingLive, 999);
	SetPVarInt(playerid, #SelectChar, 999);
	SetPVarInt(playerid, #MarryWitness, 999);
	SetPVarInt(playerid, #sellerbiz, 999);
	//

	//
	SetPVarInt(playerid, #ChosenSkin, GetPVarInt(playerid, #OldSkin));
	SetPVarInt(playerid, #InviteSkin, GetPVarInt(playerid, #InviteSkin));
	SetPVarInt(playerid, #OldSkin, GetPlayerSkin(playerid));
	SetPVarInt(playerid, #OldSkin, 230);
	//

	//
	lNomer[playerid] = 0;
 	OknaGame[playerid] = -1;
    OknaGameEnd{playerid} = 0;
	//
	PlayerInfo[playerid][pHealthPlayer] = 100;
	pTemp[playerid][bus_timer] = 0;
    pTemp[playerid][pInHospital] = false;
    pTemp[playerid][pExamType] = false;
    pTemp[playerid][pExamCandidate] = INVALID_PLAYER_ID;
   	pTemp[playerid][pOnExam] = false;
	pTemp[playerid][pSpawn] = false;
	pTemp[playerid][pAFK] = 0;
	//

	//
	TaxiDuty{playerid} = false;
	mask{playerid} = false;
	myti[playerid] = false;
	cheaters{playerid} = false;
	anti{playerid} = false;
	times[playerid] = true;
	boy[playerid] = false;
	PhoneOnline{playerid} = false;
	lNews[playerid] = false;
	BigEar[playerid] = false;
	BigEarSms[playerid] = false;
	//

	//
	strdel(PlayerInfo[playerid][pLoadNames],0,24);strdel(RegistrationInfo[playerid][0],0,24);strdel(RegistrationInfo[playerid][1],0,24);strdel(RegistrationInfo[playerid][2],0,24);RegistrationInfo[playerid][3][0] = 0;
	VehicleEnters[playerid] = INVALID_VEHICLE_ID;
	AntiFakeGun[playerid] = 0;
	BizEnter{playerid} = 255;
	AntiBan[playerid] = 0;
	Armour[playerid] = 0;
	antiwarn[playerid] = 0;
	crashcuff[playerid] = 0;
	MatsArmyCar[playerid]=0;
	WantedPoints[playerid] = 0;
	WantedLevel[playerid] = 0;
	PlayerTied{playerid} = false;
	//

	//
	RINFO[playerid][sID] = INVALID_PLAYER_ID;
	RINFO[playerid][Schoice] = 0;
	RINFO[playerid][sSer] = false;
	RINFO[playerid][sDialog] = false;
	//

	//
	PlayerInfo[playerid][pLogin] = false;
	PlayerInfo[playerid][pSpawn] = 1;
	PlayerInfo[playerid][pHospital] = 0;
	PlayerInfo[playerid][pLevel] = 0;
	for(new A = 0x0, B = 0x0; B != 4; B++)
	{
		PlayerInfo[playerid][pLicenses][B] = 0;
		if(A==1)PlayerInfo[playerid][kapture][A] = false,PlayerInfo[playerid][pCar][A] = 0, PlayerInfo[playerid][pPrison][A] = 0, PlayerInfo[playerid][pCarCash][A] = 0;
		else if(A==2)PlayerInfo[playerid][pRubInfo][A] = 0;
		else if(A==5)PlayerInfo[playerid][pSkills][A] = 0;
		A++;
	}
	PlayerInfo[playerid][WarnOffline] = 0;
	PlayerInfo[playerid][SalonInfo][0] = INVALID_VEHICLE_ID;
	PlayerInfo[playerid][SalonInfo][1] = 0;
	PlayerInfo[playerid][bAdmin] = 0;
	PlayerInfo[playerid][pHousecash] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pMats] = 0;
	PlayerInfo[playerid][pHouse] = -1;
	PlayerInfo[playerid][pHotel] = -1;
	PlayerInfo[playerid][pBusiness] = -1;
	PlayerInfo[playerid][pFuelBiz] = -1;
	PlayerInfo[playerid][pDRInections] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pChar] = 90;
	PlayerInfo[playerid][pExp] = 1;
	PlayerInfo[playerid][pDrugtime] = 0;
	PlayerInfo[playerid][pPayCheck] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pDrugs] = 0;
	PlayerInfo[playerid][pLRInections] = 0;
	PlayerInfo[playerid][pMRInections] = 0;
	PlayerInfo[playerid][pInt] = 0;
	PlayerInfo[playerid][pLocal] = 255;
	PlayerInfo[playerid][pModel] = 230;
	PlayerInfo[playerid][pPayDayHad] = 1;
	PlayerInfo[playerid][pTut] = 0;
	PlayerInfo[playerid][pWarns] = 0;
	PlayerInfo[playerid][pBank] = 0;
	PlayerInfo[playerid][pBoxSkill] = 0;
	PlayerInfo[playerid][pKongfuSkill] = 0;
	PlayerInfo[playerid][pKickboxSkill] = 0;
	PlayerInfo[playerid][pMuteTime] = 0;
	PlayerInfo[playerid][pMedCard] = 0;
	PlayerInfo[playerid][pSettings] = 65535;
	//

	SetSpawnInfo(playerid, 0, 0, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	ResetPlayerWeapons(playerid);
	SetPlayerArmourAC(playerid,0);
	SetPlayerColor(playerid,COLOR_WHITE);
}
SPD(playerid, dialogid, style, caption[], info[], button1[], button2[])
{
	ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
	SetPVarInt(playerid, #USEDIALOGID, dialogid);
	return 1;
}
stock RemovePlayerWeapon(playerid, weaponid)
{
	if(!IsPlayerConnected(playerid) || weaponid < 0 || weaponid > 50) return;
	new saveweapon[13], saveammo[13];
	for(new slot = 0; slot < 13; slot++) GetPlayerWeaponData(playerid, slot, saveweapon[slot], saveammo[slot]);
	ResetPlayerWeapons(playerid);
	for(new slot; slot < 13; slot++)
	{
		if(saveweapon[slot] == weaponid || saveammo[slot] == 0) continue;
		GivePlayerWeaponAC(playerid, saveweapon[slot], saveammo[slot]);
	}
	GivePlayerWeaponAC(playerid, 0, 1);
}
publics: changekey(playerid,giveplayerid[])
{
	new Password[16];
	if(!cache_get_row_count(connects)) return 1;
	cache_get_field_content(0, "password", Password, connects);
	DeletePVar(playerid, "ChangePass");
	SPD(playerid,1228,DIALOG_STYLE_PASSWORD, "{FF6F00}Смена админ пароля", "{FFFFFF}Введите старый пароль", "Далее", "Отмена");
	return 1;
}
publics: alogin1(playerid,giveplayerid[])
{
	new Password[16];
	if(!cache_get_row_count(connects))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Вы не администратор!");
		if(PlayerInfo[playerid][bAdmin] > 0) PlayerInfo[playerid][bAdmin] = 0;
		return 1;
	}
	cache_get_field_content(0, "password", Password, connects);
	if(!strcmp(Password,"qwerty",true)) SetPVarInt(playerid,#aLogin,1),SPD(playerid,1227,DIALOG_STYLE_PASSWORD, "{FF6F00}Админ регистрация", "{FFFFFF}Введите пароль\n\nПароль должен состоять из латинских букв и цифр\n размером от 6 до 15 символов", "Вход", "Отмена");
	else SetPVarInt(playerid,#aLogin,0),SPD(playerid,1227,DIALOG_STYLE_PASSWORD, "{FF6F00}Админ авторизация", "{FFFFFF}Введите пароль\n\nПароль должен состоять из латинских букв и цифр\n размером от 6 до 15 символов", "Вход", "Отмена");
	return 1;
}
publics: alogin(playerid,giveplayerid[])
{
	new inputtext[16], stringer228[150],sctring[5];
	if(!cache_get_row_count(connects)) return SendClientMessage(playerid, COLOR_WHITE, "Вы не администратор");
	GetPVarString(playerid,"inputtext",inputtext,sizeof(inputtext));
	format(stringer228, 150, "UPDATE `admin` SET `password` = '%s' WHERE `name` = '%s' LIMIT 1", inputtext, PlayerInfo[playerid][pNames]);
	mysql_empty(connects, stringer228);
	SendClientMessage(playerid, COLOR_GREEN, "Поздравляем! Вы получили доступ модератора");
	SetPVarInt(playerid, #dostup, 1);
	cache_get_field_content(0, "level", stringer228, connects); PlayerInfo[playerid][bAdmin] = strval(stringer228);
	cache_get_field_content(0, "Type", sctring, connects); PlayerInfo[playerid][pAdmDonate] = strval(sctring);
	new pip[24]; GetPlayerIp(playerid,pip,24);
	format(stringer228, MAX_STR, "%s авторизовался [IP: %s]",PlayerInfo[playerid][pNames],pip);
	ABroadCast(0xc3ef15FF,stringer228,1);
	format(stringer, BIG_SIZE, "\n\n{FFFFFF}Поздравлем Вас с постом администратора\nЭтот пост отвественный и выдан Вам не просто так\nВаши обязанности на посту:\n1. Уважать игроков, администраторов и старшую администрацию\n2. Отвечать на репорты\n3. Следить за фракциями\n4. Помогать старшей адм-ции.\nВам запрещено:\n1. Влазить в РП процесс\n2. Игнорировать репорт.\n3. Без доказательств выдавать наказания.\n\nЖелаем Вам благоприятного администратирования");
	SPD(playerid, 92831, DIALOG_STYLE_MSGBOX,"ОБЯЗАТЕЛЬНО К ОЗНАКОМЛЕНИЮ!", stringer, "Продолжить","");
	UpdatePlayerData(playerid, "bAdmin",PlayerInfo[playerid][bAdmin]), UpdatePlayerData(playerid, "donateadm", PlayerInfo[playerid][pAdmDonate]);
	return 1;
}
publics: changepass(playerid,inputtext[])
{
	if(!cache_get_row_count(connects)) return SendClientMessage(playerid, COLOR_WHITE, "Неверный пароль");
	SetPVarInt(playerid, #ChangePass,1);
	SPD(playerid,1228,DIALOG_STYLE_PASSWORD, "{FF6F00}Смена админ пароля", "{FFFFFF}Введите новый пароль", "Далее", "Отмена");
	return 1;
}
publics: password(playerid,inputtext[])
{
	new stringer228[144];
	if(!cache_get_row_count(connects))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Неверный пароль");
		SetPVarInt(playerid, "Popytki", GetPVarInt(playerid, "Popytki") + 1);
		if(GetPVarInt(playerid, "Popytki") > 3)
		{
			DeletePVar(playerid, "Popytki");
			SetTimerEx("PlayerKick",500,false,"d", playerid);
		}
	}
	else
	{
		SetPVarInt(playerid, "dostup", 1);
		cache_get_field_content(0, "level", stringer228, connects);
		PlayerInfo[playerid][bAdmin] = strval(stringer228),UpdatePlayerData(playerid, "bAdmin",PlayerInfo[playerid][bAdmin]);
		format(stringer228, sizeof(stringer228),"Вы авторизировались как модератор %d уровня", PlayerInfo[playerid][bAdmin]);
		SendClientMessage(playerid,COLOR_YELLOW, stringer228);
		new pip[24]; GetPlayerIp(playerid,pip,24);
		format(stringer228, sizeof(stringer228), "%s авторизовался [IP: %s]",PlayerInfo[playerid][pNames],pip);
		ABroadCast(0xc3ef15FF,stringer228,1);
	}
	return 1;
}
publics: Moderator(playerid,giveplayerid[],level,type)
{
	new statics[228];
	if(cache_get_row_count(connects))
	{
		cache_get_field_content(0, "level", statics, connects);
		if(strval(statics) != 0)
		{
			if(level == 0)
			{
				format(stringer, MAX_STR, "DELETE FROM `admin` WHERE `name`='%s'", giveplayerid);
				mysql_empty(connects, stringer);
				format(stringer, MAX_STR, "UPDATE `accounts` SET `bAdmin` = '0' WHERE `Name` = '%s'",giveplayerid);
				mysql_empty(connects, stringer);
				format(stringer, SMALL_SIZE, "%s успешно удален из списка модераторов", giveplayerid);
				SendClientMessage(playerid, COLOR_LIGHTRED, stringer);
			}
			else
			{
				format(statics, 150, "UPDATE `admin` SET  `level` = '%d' WHERE `name` = '%s' LIMIT 1", level,giveplayerid);
				mysql_empty(connects, statics);
				format(stringer, MAX_STR, "Уровень администратирования у %s изменен на %d", giveplayerid, level);
				SendClientMessage(playerid, COLOR_GREEN, stringer);
			}
		}
	}
	else
	{
		if(level == 0) return SendClientMessage(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Игрок не администратор.");
		new years, months, days,data[32];
		getdate(years, months, days);
		format(data, 32, "%02d.%02d.%04d", days, months, years);
		format(stringer, BIG_SIZE, "INSERT INTO `admin` (`Name`, `level`, `LastCon`, `Postavil`, `Data`, `Type`) VALUES ('%s', %d, '%s', '%s', '%s', '%d')", giveplayerid, level, data, PlayerInfo[playerid][pNames], data, type);
		mysql_empty(connects, stringer);
		format(stringer, MAX_STR, "%s успешно добавлен в список модераторов. Уровень полномочий %d", giveplayerid, level);
		SendClientMessage(playerid, COLOR_GREEN, stringer);
	}
	return 1;
}
stock DonateLog(playerid, cena, name[])
{
	new msg[164], years, months, days, data[32];
	getdate(years, months, days);
	format(data, 32, "%02d.%02d.%04d", days, months, years);
	mysql_format(connects, msg, 164, "INSERT INTO `donate_log` (`NamePlayer`, `Price`, `Name`, `Date`) VALUES ('%s', '%d', '%s', '%s')", PlayerInfo[playerid][pNames],cena,name,data);
	mysql_empty(connects, msg);
	return 1;
}
stock GangMenu(playerid)
{
	if(PlayerToPoint(3.0,playerid,-71.5424,1366.1405,1080.2185) || PlayerToPoint(3.0,playerid,300.4856,302.5443,1003.5391)
			|| PlayerToPoint(3.0,playerid,2492.0986,-1710.9407,1014.7422) || PlayerToPoint(3.0,playerid,-45.9193,1401.2159,1084.4370)
			|| PlayerToPoint(3.0,playerid,-219.9765,1406.8613,27.7656))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
		if(PlayerToPoint(3.0,playerid,-71.5424,1366.1405,1080.2185) && PlayerInfo[playerid][pMRInections] !=12) return SCM(playerid, 0x65969AAA, "Вы не состоите в Ballas Gang");
		else if(PlayerToPoint(3.0,playerid,300.5243,302.4783,1003.5391) && PlayerInfo[playerid][pMRInections] !=13) return SCM(playerid, 0x65969AAA, "Вы не состоите в Vagos Gang");
		else if(PlayerToPoint(3.0,playerid,2492.0986,-1710.9407,1014.7422) && PlayerInfo[playerid][pMRInections] !=15) return SCM(playerid, 0x65969AAA, "Вы не состоите в Grove Gang");
		else if(PlayerToPoint(3.0,playerid,-45.9193,1401.2159,1084.4370) && PlayerInfo[playerid][pMRInections] !=17) return SCM(playerid, 0x65969AAA, "Вы не состоите в Aztec Gang");
		else if(PlayerToPoint(3.0,playerid,-220.2540,1406.5323,27.7656) && PlayerInfo[playerid][pMRInections] !=18) return SCM(playerid, 0x65969AAA, "Вы не состоите в Rifa Gang");
		SPD(playerid, 7171, DIALOG_STYLE_LIST,"{FF6F00}Меню банды:", "{1C93E8}[ 1 ] {FFFFFF}Положить материалы\n{1C93E8}[ 2 ] {FFFFFF}Взять материалы\n{1C93E8}[ 3 ] {FFFFFF}Положить деньги в банк\n{1C93E8}[ 4 ] {FFFFFF}Снять деньги с банка\n{1C93E8}[ 5 ] {FFFFFF}Статистика", "Ок", "Скрыть");
	}
	return 1;
}
stock TuneDialog(playerid)
{
	DeletePVar(playerid, "carid_1");
	if(caridhouse[playerid]==GetPlayerVehicleID(playerid)) SetPVarInt(playerid, "carid_1", 1);
	if(GetPVarInt(playerid, #vehicle_id_two) == GetPlayerVehicleID(playerid)) SetPVarInt(playerid, "carid_1", 2);
	return SPD(playerid,8595,DIALOG_STYLE_LIST,"{FF6F00}Тюнинг меню","[1]> Покраска\n[2]> Закись азота(Нитро)\n[3]> Диски\n[4]> Покрасочные работы\n[5]> Спойлер\n[6]> Передний бампер\n[7]> Задний бампер\n[8]> Гидравлика","Далее","Закрыть");
}
stock IsATune(playerid) return (PlayerToPoint(5.0,playerid,1369.8450,-1898.7551,14.4922) || PlayerToPoint(5.0,playerid,1378.3544,-1898.6478,14.4922) || PlayerToPoint(5.0,playerid,1017.8367,-918.4339,42.0710)) ? true : false;
stock Empty_Message(const string[])
{
	for(new i; string[i] != 0x0; i++) { switch(string[i]) { case 0x20: continue; default: return 0; } }
	return 1;
}
stock PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
	return 0;
}
stock PreloadAllAnims(playerid)
{
	PreloadAnimLib(playerid,"DANCING");
	PreloadAnimLib(playerid,"PAULNMAC");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"MISC");
	PreloadAnimLib(playerid,"SWEET");
	PreloadAnimLib(playerid,"SPRAYCAN");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"RYDER");
	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"BAR");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"benchpress");
	PreloadAnimLib(playerid,"BSKTBALL");
	PreloadAnimLib(playerid,"CAMERA");
	PreloadAnimLib(playerid,"CAR");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"GHANDS");
	PreloadAnimLib(playerid,"GRAFFITI");
	PreloadAnimLib(playerid,"GRAVEYARD");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"INT_OFFICE");
	PreloadAnimLib(playerid,"LOWRIDER");
	PreloadAnimLib(playerid,"MEDIC");
	PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"RAPPING");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"DODGE");
	PreloadAnimLib(playerid,"MD_END");
	PreloadAnimLib(playerid,"MUSCULAR");
	PreloadAnimLib(playerid,"MD_CHASE");
	PreloadAnimLib(playerid,"FAT");
 	PreloadAnimLib(playerid,"DANCING");
	PreloadAnimLib(playerid,"SCRATCHING");
	PreloadAnimLib(playerid,"GYMNASIUM");
	PreloadAnimLib(playerid,"JST_BUISNESS");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"PLAYIDLES");
	PreloadAnimLib(playerid,"ROB_BANK");
	PreloadAnimLib(playerid,"PED");
}

GoAnim(playerid,alib[],aanim[],Float:atime,amove,ax,ay,az,af,ac)
{
	if(GetPVarInt(playerid, "PLAYERANIM")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Закончите прежнюю анимацию, перед использованием новой. Клавиша: L-ALT");
	ApplyAnimation(playerid,alib,aanim,atime,amove,ax,ay,az,af,ac);
	for(new i ; i < 3; i++) TextDrawShowForPlayer(playerid, ANIMATION[i]);
	SetPVarInt(playerid, "PLAYERANIM",1);
	return 1;
}
stock DeleteAdministration(targetid,name[])
{
	PlayerInfo[targetid][pAvig] = 0;
	PlayerInfo[targetid][bAdmin] = 0;
	UpdatePlayerData(targetid,"pAvig",PlayerInfo[targetid][pAvig]);
	mysql_format(connects,stringer1, MAX_STR, "DELETE FROM `admin` WHERE `name`='%s'", name);
	mysql_empty(connects, stringer1);
	mysql_format(connects, stringer1, MAX_STR, "UPDATE `accounts` SET `bAdmin` = '0' WHERE `Name` = '%s'",name);
	mysql_empty(connects, stringer1);
	KickEx(targetid,2);
	return 1;
}
stock ObshiakGang()
{
	new strings[264];
	format(strings,sizeof(strings),"{FFFFFF}Территорий под контролем: {FF7800}%i\n\n\n{FFFFFF}Склад\n{6C006C}Ballas Gang\n{FFFFFF}В банке банды: {FF7800}$%i\n{FFFFFF}На складе: {FF7800}%i м.\n{CAFA0A}нажмите: 'F'",VladGzone[0],FracBank[0][fBallas],ballasmatbi);
	Update3DTextLabelText(BandText[0], 0xFF8000AA, strings);
	format(strings,sizeof(strings),"{FFFFFF}Территорий под контролем: {FF7800}%i\n\n\n{FFFFFF}Склад\n{FFE100}Vagos Gang\n{FFFFFF}В банке банды: {FF7800}$%i\n{FFFFFF}На складе: {FF7800}%i м.\n{CAFA0A}нажмите: 'F'",VladGzone[1],FracBank[0][fVagos],vagosmatbi);
	Update3DTextLabelText(BandText[1], 0xFF8000AA, strings);
	format(strings,sizeof(strings),"{FFFFFF}Территорий под контролем: {FF7800}%i\n\n\n{FFFFFF}Склад\n{1D8C00}Grove St.\n{FFFFFF}В банке банды: {FF7800}$%i\n{FFFFFF}На складе: {FF7800}%i м.\n{CAFA0A}нажмите: 'F'",VladGzone[2],FracBank[0][fGrove],groovmatbi);
	Update3DTextLabelText(BandText[2], 0xFF8000AA, strings);
	format(strings,sizeof(strings),"{FFFFFF}Территорий под контролем: {FF7800}%i\n\n\n{FFFFFF}Склад\n{35C0CD}Aztec Gang.\n{FFFFFF}В банке банды: {FF7800}$%i\n{FFFFFF}На складе: {FF7800}%i м.\n{CAFA0A}нажмите: 'F'",VladGzone[3],FracBank[0][fAztek],aztekmatbi);
	Update3DTextLabelText(BandText[3], 0xFF8000AA, strings);
	format(strings,sizeof(strings),"{FFFFFF}Территорий под контролем: {FF7800}%i\n\n\n{FFFFFF}Склад\n{015C65}Rifa Gang.\n{FFFFFF}В банке банды: {FF7800}$%i\n{FFFFFF}На складе: {FF7800}%i м.\n{CAFA0A}нажмите: 'F'",VladGzone[4],FracBank[0][fRifa],rifamatbi);
	Update3DTextLabelText(BandText[4], 0xFF8000AA, strings);
	return 1;
}
publics:family_callback(playerid, text[])
{
	new temp [32];
	family_count = cache_get_row_count(connects);
	mysql_real_escape_string ( text, temp ) ;
	for ( new f = 1; f != family_count ; f++ )
	{
		if(strfind(temp, family_info[f][f_name],true) != -1)
		{
			SendClientMessage(playerid,COLOR_GREY,"Семья с таким названием уже существует");
			return SPD(playerid,993,DIALOG_STYLE_INPUT,"{FF6F00}Создание семьи","\n\n{6495ED}Внимание! Вы хотите создать семью.\nСоздание семьи стоит: 35 рублей\n\nЕсли Вы согласны, введите название семьи:","Создать","Отмена");
		}
		break;
	}
	if(PlayerInfo[playerid][pRubInfo][0] < 35) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно рублей.");
	new query_string [ 256 ];
	format  ( query_string, sizeof query_string, "INSERT INTO `family_system` ( `fam_id`, `fam_name`, `fam_creator`, `fam_members_amount`, `fam_data` ) VALUES ( '%d', '%s', '%s', '1', NOW( ))", family_count+1,temp, PlayerInfo[playerid][pNames]) ;
	mysql_empty ( connects, query_string) ;
	player_family [ playerid ] = family_count + 1;
	family_info [ player_family [ playerid ] ] [ f_id ] = family_count + 1;
	format(family_info [ player_family [ playerid ] ] [ f_name ], 32 , temp);
	format(family_info [ player_family [ playerid ] ] [ f_creator ], 24, PlayerInfo[playerid][pNames]);
	family_info [ player_family [ playerid ] ] [ f_chat_color ] = 0;
	family_info [ player_family [ playerid ] ] [ f_members_amount ] = 1;
	family_info [ player_family [ playerid ] ] [ f_online ] = 1;
	new year, month,day;
	getdate(year, month, day);
	format(family_info [ player_family [ playerid ] ] [ f_creating_data ], 32,"%02d-%02d-%d",year, month, day);
	SCMF(playerid, -1, "Поздравляем! Вы создали семью {2E8B57}%s{FFFFFF}. Чтобы открыть меню семьи введите {2E8B57}/familypanel.",temp);
	format ( query_string, sizeof query_string, "UPDATE `family_system` SET `fam_members_amount` = '%d' WHERE `fam_id` = '%d' LIMIT 1",family_info [player_family [ playerid ]] [ f_members_amount ], player_family [ playerid ]);
	mysql_empty ( connects, query_string) ;
	UpdatePlayerData(playerid, "family", player_family[playerid]);
	family_count ++;
	return 1;
}
#define ShowPlayerDialog SPD
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(strfind(inputtext,"%",true)!=-1 || strfind(inputtext, "'",true) !=-1 || strfind(inputtext, "=",true) !=-1 || strfind(inputtext, "pRub",true) != -1) return SCM(playerid,-1, "• {AC0000}[Ошибка] {ffffff}Вы используете запрещенные символы.");
	for(new i=0;i<strlen(inputtext);i++)if(inputtext[i]=='%')inputtext[i]='#';
	while(strfind(inputtext,"%s",true)!=-1) strdel(inputtext,strfind(inputtext,"%s",true),strfind(inputtext,"%s",true)+2);
	while(strfind(inputtext,"%",true)!=-1) strdel(inputtext,strfind(inputtext,"%",true),strfind(inputtext,"%",true)+2);
	new gun,ammo, money;
	new gunname[32];
	new params[2];
	switch(dialogid)
	{
	    case 9158:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0: SPD(playerid, 9159, DIALOG_STYLE_LIST, "{FF6F00}Выберите карту", "{FFFFFF}1. Дебетовая карта\n2. Кредитная карта", "Открыть", "Отмена");
	            case 1:
				{
				    if(PlayerInfo[playerid][pBankCard] != 1 && PlayerInfo[playerid][pBankCard] != 2) return SCM(playerid, COLOR_GREY, "У Вас нет карты!");
					SPD(playerid, 9161, DIALOG_STYLE_INPUT, "{FF6F00}Безопасность", "{FFFFFF}Введите Ваш персональный пин-код!", "Принять", "Отмена");
				}
			}
	    }
	    case 9161:
	    {
	        if(!response) return SPD(playerid, 9158, DIALOG_STYLE_LIST, "{FF6F00}Управление банковскими картами", "{FFFFFF}1. Открыть банковскую карту\n2. Управление банковской картой\n3. Пополнение счёта карты\n4. Погашение кредита", "Выбрать", "Отмена");
	        if(PlayerInfo[playerid][pBankCode] == strval(inputtext) && !GetPVarInt(playerid, #card_active)) return SPD(playerid, 9162, DIALOG_STYLE_LIST, "{FF6F00}Управление банковской картой", "{FFFFFF}1. Просмотреть счёт карты\n2. Снятие наличных средств\n3. Пополнение счёта карты\n4. Погашение кредита", "Принять", "Отмена"), SetPVarInt(playerid, #card_active, true);
	        return 1;
	    }
	    case 9162:
	    {
	        new year_d,month_d,day_d;
  			if(GetPVarInt(playerid, #card_dolg_one))
			{
			    if(!response)
			    {
			        if(PlayerInfo[playerid][pCardMoney] < 250000) return SCM(playerid, COLOR_GREY, "На Вашей банковской карте не достаточно средств!");
			        new timeCard = getdate(year_d,month_d,day_d);
	   		 		new timeDate = PlayerInfo[playerid][pCardDate]-timeCard;
					SCMF(playerid, COLOR_ORANGE, "До окончания срока действия кредита оставалось: %d дней, в данный момент, Ваш кредит погашен!", timeDate);
					PlayerInfo[playerid][pCardMoney] -= 250000, PlayerInfo[playerid][pCardDate] = 0;
					SCM(playerid, COLOR_GREY, "-=============[Банк]-=============");
					SCM(playerid, -1, "С Вашей банковской карты снято: {FF6F00}$250000");
					SCMF(playerid, -1, "Остаток средств на Вашей карте: {FF6F00}%i", PlayerInfo[playerid][pCardMoney]);
					SCM(playerid, COLOR_GREY, "-=============[Банк]-=============");
					SCM(playerid, -1, "Отправитель: {FF6F00}Банк г.Los-Santos | INSPIRE");
					return SPD(playerid, 9162, DIALOG_STYLE_LIST, "{FF6F00}Управление банковской картой", "{FFFFFF}1. Просмотреть счёт карты\n2. Снятие наличных средств\n3. Пополнение счёта карты\n4. Погашение кредита", "Принять", "Отмена"), DeletePVar(playerid, #card_dolg_one);
			    }
			    if(PlayerInfo[playerid][pCash] < 250000) return SCM(playerid, COLOR_GREY, "У Вас не достаточно наличных средств!");
       			new timeCard = getdate(year_d,month_d,day_d);
	   		 	new timeDate = PlayerInfo[playerid][pCardDate]-timeCard;
				SCMF(playerid, COLOR_ORANGE, "До окончания срока действия кредита оставалось: %d дней, в данный момент, Ваш кредит погашен!", timeDate);
			    PlayerInfo[playerid][pCash] -= 250000, PlayerInfo[playerid][pCardDate] = 0;
			    SCMF(playerid, COLOR_ORANGE, "Остаток наличных средств: %i$", PlayerInfo[playerid][pCash]);
		    	return SPD(playerid, 9162, DIALOG_STYLE_LIST, "{FF6F00}Управление банковской картой", "{FFFFFF}1. Просмотреть счёт карты\n2. Снятие наличных средств\n3. Пополнение счёта карты\n4. Погашение кредита", "Принять", "Отмена"), DeletePVar(playerid, #card_dolg_one);
			}
	        if(!response) return DeletePVar(playerid, #card_active);
	        if(GetPVarInt(playerid, #card_check)) return SPD(playerid, 9162, DIALOG_STYLE_LIST, "{FF6F00}Управление банковской картой", "{FFFFFF}1. Просмотреть счёт карты\n2. Снятие наличных средств\n3. Пополнение счёта карты\n4. Погашение кредита", "Принять", "Отмена"), DeletePVar(playerid, #card_check);
			if(GetPVarInt(playerid, #card_minus))
			{
			    if(strval(inputtext) < 1 || strval(inputtext) > PlayerInfo[playerid][pCardMoney]) return SCM(playerid, COLOR_GREY, "Значение не должно быть меньше 1 и больше Вашего баланса карты!"), SPD(playerid, 9162, DIALOG_STYLE_LIST, "{FF6F00}Управление банковской картой", "{FFFFFF}1. Просмотреть счёт карты\n2. Снятие наличных средств\n3. Пополнение счёта карты\n4. Погашение кредита", "Принять", "Отмена"),DeletePVar(playerid, #card_minus);
				PlayerInfo[playerid][pCardMoney] -= strval(inputtext);
				PlayerInfo[playerid][pCash] += strval(inputtext);
				return SPD(playerid, 9162, DIALOG_STYLE_LIST, "{FF6F00}Управление банковской картой", "{FFFFFF}1. Просмотреть счёт карты\n2. Снятие наличных средств\n3. Пополнение счёта карты\n4. Погашение кредита", "Принять", "Отмена"), DeletePVar(playerid, #card_minus);
			}
			if(GetPVarInt(playerid, #card_plus))
			{
                if(strval(inputtext) < 1 || strval(inputtext) > PlayerInfo[playerid][pCash]) return SCM(playerid, COLOR_GREY, "Значение не должно быть меньше 1 и больше Вашего баланса!"), SPD(playerid, 9162, DIALOG_STYLE_LIST, "{FF6F00}Управление банковской картой", "{FFFFFF}1. Просмотреть счёт карты\n2. Снятие наличных средств\n3. Пополнение счёта карты\n4. Погашение кредита", "Принять", "Отмена"),DeletePVar(playerid, #card_plus);
                PlayerInfo[playerid][pCardMoney] += strval(inputtext);
                PlayerInfo[playerid][pCash] -= strval(inputtext);
                return SPD(playerid, 9162, DIALOG_STYLE_LIST, "{FF6F00}Управление банковской картой", "{FFFFFF}1. Просмотреть счёт карты\n2. Снятие наличных средств\n3. Пополнение счёта карты\n4. Погашение кредита", "Принять", "Отмена"), DeletePVar(playerid, #card_plus);
			}
			if(GetPVarInt(playerid, #card_dolg)) return SPD(playerid, 9162, DIALOG_STYLE_MSGBOX, "{FF6F00}Выбор оплаты", "{FFFFFF}Пожалуйста, выберите чем Вы будете оплачивать задолжность.", "Наличные", "Картой"), SetPVarInt(playerid, #card_dolg_one, true), DeletePVar(playerid, #card_dolg);
			switch(listitem)
	        {
	            case 0:
	            {
	                new bank_card [ 10 ];
	                switch(PlayerInfo[playerid][pBankCard])
	                {
	                    case 1: bank_card = "Дебетовой";
	                    case 2: bank_card = "Кредитной";
	                }
	                format(stringer1, 180, "{FFFFFF}Состояние счёта Вашей %s карты составляет:\n\n\t\t{FF6F00}%i{FFFFFF} долларов",bank_card,PlayerInfo[playerid][pCardMoney]);
	                SPD(playerid, 9162, DIALOG_STYLE_MSGBOX, "{FF6F00}Состояние счёта", stringer1, "Принять",""), SetPVarInt(playerid, #card_check, true);
	            }
	            case 1: SPD(playerid, 9162, DIALOG_STYLE_INPUT, "{FF6F00}Снятие средств со счёта", "{FFFFFF}Введите количество средств для снятия!", "Снять", "Отмена"), SetPVarInt(playerid, #card_minus, true);
	            case 2: SPD(playerid, 9162, DIALOG_STYLE_INPUT, "{FF6F00}Пополнение средств на счёт", "{FFFFFF}Введите количество средств для пополнения!", "Пополнить", "Отмена"), SetPVarInt(playerid, #card_plus, true);
				case 3: if(PlayerInfo[playerid][pBankCard] == 2 && PlayerInfo[playerid][pCardDate]-getdate(year_d,month_d,day_d) > 0) SPD(playerid, 9162, DIALOG_STYLE_MSGBOX, "{FF6F00}Погашение кредита", "{FFFFFF}Здравствуйте, у Вас имеется задолжность в размере 250.000$\n\nВы желаете погасить данный долг?","Погасить", "Отмена"), SetPVarInt(playerid, #card_dolg, true);
	        }
	    }
	    case 9159:
	    {
			if(!response) return 1;
			switch(listitem)
			{
			    case 0:
			    {
			        stringer="";
					strcat(stringer,"{FF6F00}\t\t\tОсобенности карты дебетовая:\n\n");
					strcat(stringer,"{FFFFFF}Данная карта отличается от кредитной тем, что на данную карту деньги ложить должны только Вы!\n");
					strcat(stringer,"В отличии от карты кредитная, в ней, за месяц, Вам нужно будет вернуть 250.000$ которые были выданы человеку во время регистрации как стартовый капитал!\n");
					strcat(stringer,"Первый взнос в регистрации карты составляет: 15.000$\n\n{FF6F00}\t\t\tБанк штата Inspire");
					SPD(playerid, 9160, DIALOG_STYLE_MSGBOX, "{FF6F00}Регистрация дебетовой карты", stringer, "Регистрация", "Отмена");
					SetPVarInt(playerid, #list_card, 0);
			    }
			    case 1:
			    {
			        stringer="";
  					strcat(stringer,"{FF6F00}\t\t\t\t\tОсобенности карты кредитная:\n\n");
					strcat(stringer,"{FFFFFF}На данную карту, сразу же после регистрации поступит стартовый капитал в размере 250.000$\n");
					strcat(stringer,"Но! В течении десяти дней, с Вашей карты будет изъяны данные средства!\nЕсли, на счёту Вашей карты, в окончании десяти дней не будет находится 250.000$ или же Вы не погасите данный долг, Вы будете задолжником в банке!\n");
					strcat(stringer,"Первый взнос в регистрации карты составляет: 20.000$\n\n{FF6F00}\t\t\t\t\tБанк штата Inspire");
					SPD(playerid, 9160, DIALOG_STYLE_MSGBOX, "{FF6F00}Регистрация кредитной карты", stringer, "Регистрация", "Отмена");
					SetPVarInt(playerid, #list_card, 1);
			    }
			}
	    }
	    case 9160:
	    {
	        if(!response) return 1;
	        switch(GetPVarInt(playerid, #list_card))
	        {
	            case 0:
	            {
	                if(PlayerInfo[playerid][pCash] < 15000 || PlayerInfo[playerid][pBankCard] & 1 && PlayerInfo[playerid][pBankCard] & 2) return SCM(playerid, COLOR_GREY, "У Вас уже имеется дебетовая/кредитная карта, или у Вас не досточно средств!");
	                PlayerInfo[playerid][pBankCard] = 1;
	                PlayerInfo[playerid][pBankCode] = RandomEx(1111,9999);
					PlayerInfo[playerid][pCash] -= 15000;
					SCMF(playerid, -1, "Регистрация карты прошла успешно! Дебетовая карта зарегистрирована на Имя %s. Ваш персональный PIN-CODE: %i", PlayerInfo[playerid][pNames],PlayerInfo[playerid][pBankCode]);
					mysql_format(connects, stringer1, MAX_SQL, "UPDATE `accounts` SET `bankcard` = '%i', `bankcode` = '%i' WHERE `id` = '%d'", PlayerInfo[playerid][pBankCard], PlayerInfo[playerid][pBankCode], PlayerInfo[playerid][pID]);
					mysql_empty(connects, stringer1);
					DeletePVar(playerid, #list_card);
	            }
	            case 1:
	            {
	            	if(PlayerInfo[playerid][pCash] < 20000 || PlayerInfo[playerid][pBankCard] & 2 && PlayerInfo[playerid][pBankCard] & 1) return SCM(playerid, COLOR_GREY, "У Вас уже имеется кредитная/дебетовая карта, или у Вас не досточно средств!");
					if(PlayerInfo[playerid][pPayDayHad] < 3) return SCM(playerid, COLOR_GREY, "Для получения, нужно отыграть 3 часа на сервере!");
					PlayerInfo[playerid][pBankCard] = 2;
	            	PlayerInfo[playerid][pBankCode] = RandomEx(1111,9999);
	            	PlayerInfo[playerid][pCardMoney] = 250000, PlayerInfo[playerid][pCash] -= 20000;
	            	new year_d, month_d, day_d;
	            	new date_card = getdate(year_d,month_d,day_d);
	            	PlayerInfo[playerid][pCardDate] += date_card+10;
	            	SCMF(playerid, -1, "Регистрация карты прошла успешно! Кредитная карта зарегистрирована на Имя %s. Ваш персональный PIN-CODE: %i", PlayerInfo[playerid][pNames],PlayerInfo[playerid][pBankCode]);
	            	SCM(playerid, COLOR_ORANGE, "На счёт Вашей банковской карты поступил платеж в размере: 250.000$");
	            	mysql_format(connects, stringer1, 210, "UPDATE `accounts` SET `bankcard` = '%i', `bankcode` = '%i', `cardmoney` = '%i', `carddate` = '%i' WHERE `id` = '%d'", PlayerInfo[playerid][pBankCard], PlayerInfo[playerid][pBankCode], PlayerInfo[playerid][pCardMoney], PlayerInfo[playerid][pCardDate], PlayerInfo[playerid][pID]);
					mysql_empty(connects, stringer1);
					DeletePVar(playerid, #list_card);
	            }
	        }
	    }
		case 551:
		{
			if(!response)
			{
			    SCM(Taxi_Duty[GetPlayerVehicleID(playerid)]-1,COLOR_GREY,"Пассажир отменил маршрут.");
				DeletePVar(Taxi_Duty[GetPlayerVehicleID(playerid)]-1,"Taxi_Duty_Player");
			}
			else
			{
				SetPlayerCheckpoint(Taxi_Duty[GetPlayerVehicleID(playerid)]-1,GetPVarFloat(playerid,"fX_map"),GetPVarFloat(playerid,"fY_map"),GetPVarFloat(playerid,"fZ_map"), 5.0);
				SCM(Taxi_Duty[GetPlayerVehicleID(playerid)]-1,COLOR_GREY,"Пассажир подтвердил маршрут.");
			}
			DeletePVar(playerid,"fX_map");
			DeletePVar(playerid,"fY_map");
			DeletePVar(playerid,"fZ_map");
			DeletePVar(Taxi_Duty[GetPlayerVehicleID(playerid)]-1,"GiveInfoTaxi");
			return true;
		}
	    case 1111:
		{
			if(response)
			{
			    if(!strlen(inputtext) || strlen(inputtext) > 24) return ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_INPUT, "{FF6F00}Регистрация", "{FFFFFF}Введите пароль!", "Выбрать", "Отмена");
				for(new i = strlen(inputtext); i != 0; --i)
				{
					switch(inputtext[i])
					{
						case 'А'..'Я', 'а'..'я', '=', ' ': return ShowPlayerDialog(playerid, 1113, DIALOG_STYLE_INPUT, "{FF6F00}Авторизация", "{FFFFFF}Введите пароль!", "Выбрать", "Отмена");
					}
				}
				strmid(PlayerInfo[playerid][pKey], inputtext, 0, 64, 255);
				PlayerTextDrawSetString(playerid, TextDraw_Register_2[playerid][1], inputtext);
				SetPVarInt(playerid,"InputPas",true);
			}
			DeletePVar(playerid,"ClickRegister");
			return true;
		}
		case 1112:
		{
			if(response)
			{
				if(strlen(inputtext) < 6 || strlen(inputtext) > 40) return ShowPlayerDialog(playerid, 1112, DIALOG_STYLE_INPUT, "{FF6F00}Регистрация", "{FFFFFF}Введите Вашу E-mail почту!", "Выбрать", "Отмена");
				for(new i = strlen(inputtext); i != 0; --i)
				{
					switch(inputtext[i])
					{
						case 'А'..'Я', 'а'..'я', '=', ' ': return ShowPlayerDialog(playerid, 1112, DIALOG_STYLE_INPUT, "{FF6F00}Регистрация", "{FFFFFF}Введите Вашу E-mail почту!", "Выбрать", "Отмена");
					}
				}
				if(!IsValidEmail(inputtext))
				{
					SendClientMessage(playerid, COLOR_GREY, "Неверный формат электронного адреса!");
					return ShowPlayerDialog(playerid, 1112, DIALOG_STYLE_INPUT, "{FF6F00}Регистрация", "{FFFFFF}Введите Вашу E-mail почту!", "Выбрать", "Отмена");
				}
				strmid(PlayerInfo[playerid][pEmail], inputtext, 0, 64, 255);
				PlayerTextDrawSetString(playerid, TextDraw_Register_2[playerid][2], inputtext);
				SetPVarInt(playerid,"InputSecretPas",true);
			}
			DeletePVar(playerid,"ClickRegister");
			return true;
		}
		case 1113:
		{
			if(!response) return DeletePVar(playerid,"ClickRegister");
			if(!strlen(inputtext) || strlen(inputtext) > 24) return ShowPlayerDialog(playerid, 1113, DIALOG_STYLE_INPUT, "{FF6F00}Авторизация", "{FFFFFF}Введите пароль!", "Выбрать", "Отмена");
			for(new i = strlen(inputtext); i != 0; --i)
			{
				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', '=', ' ': return ShowPlayerDialog(playerid, 1113, DIALOG_STYLE_INPUT, "{FF6F00}Авторизация", "{FFFFFF}Введите пароль!", "Выбрать", "Отмена");
				}
			}
			SetPVarString(playerid,"TD_Password_Input",inputtext);
			PlayerTextDrawSetString(playerid, TextDraw_Login_2[playerid][1], inputtext);
			SetPVarInt(playerid,"InputPas",true);
			DeletePVar(playerid,"ClickRegister");
			return true;
		}
	    case 1551:
	    {
	        if(!response) return RemovePlayerFromVehicle(playerid);
	        ShowPlayerDialog(playerid,1552,2,"{FF6F00}Выбор маршрута [#1]","{FFFFFF}1. ЖДЛС - Автошкола ($4680 один круг)","Принять","Отмена");
	        return 1;
	    }
	    case 1552:
	    {
	        if(!response) return RemovePlayerFromVehicle(playerid);
			new route = listitem;
			if(GetPlayerVehicleID(playerid) == INVALID_VEHICLE_ID || (GetVehicleModel(GetPlayerVehicleID(playerid)) != 431 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 437)) return 1;
			PlayerInfo[playerid][pCash] -= 1000;
			new r_name [ 50 ];
			switch(listitem)
			{
			    case 0: r_name = "{"#cGREEN"}ЖДЛС {FFFFFF}- {"#cGREEN"}Автошкола";
			}
			new msg [ 128 ] ;
			format( msg , sizeof msg , "%s\nДля проезда нужен: {FFFFFF}проездной билет", r_name);
			if(pTemp[playerid][bus_text] != Text3D:INVALID_3DTEXT_ID) pTemp[playerid][bus_text] = CreateDynamic3DTextLabel(msg,COLOR_WHITE,0.0,0.0,3.0,40.0,INVALID_PLAYER_ID,GetPlayerVehicleID(playerid));
			SetPVarInt(playerid, #busID, GetPlayerVehicleID(playerid));
			SetPVarInt(playerid, #busRoute, route);
			SetPVarInt(playerid, #busPos, 0);
			SetPlayerRaceCheckpoint(playerid,1,aBusPos[route][0][0],aBusPos[route][0][1],aBusPos[route][0][2],aBusPos[route][1][0],aBusPos[route][1][1],aBusPos[route][1][2],4.0);
	        return 1;
	    }
	    case 766:
	    {
	        if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][pCash] < 15000) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств, требуется: 15.000$");
					GameTextForPlayer(playerid, "~r~-15000$", 5000, 1);
					PlayerInfo[playerid][pCash] -= 15000;
					BizInfo[BizEnter{playerid}][bPribil] += 15000;
					GivePlayerWeaponAC(playerid,24,100);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили оружие Deagle и 100 патронов.");
				}
				case 1:
				{
					if(PlayerInfo[playerid][pCash] < 5000) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств, требуется: 5.000$");
					GameTextForPlayer(playerid, "~r~-5000$", 5000, 1);
					PlayerInfo[playerid][pCash] -= 5000;
					BizInfo[BizEnter{playerid}][bPribil] += 5000;
					GivePlayerWeaponAC(playerid,23,100);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили оружие SD pistol и 100 патронов.");
				}
				case 2:
				{
					if(PlayerInfo[playerid][pCash] < 10000) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств, требуется: 10.000$");
					GameTextForPlayer(playerid, "~r~-10000$", 5000, 1);
					PlayerInfo[playerid][pCash] -= 10000;
					BizInfo[BizEnter{playerid}][bPribil] += 10000;
					GivePlayerWeaponAC(playerid,31,100);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили оружие M4 и 100 патронов.");
				}
				case 3:
				{
					if(PlayerInfo[playerid][pCash] < 10000) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств, требуется: 10.000$");
					GameTextForPlayer(playerid, "~r~-10000$", 5000, 1);
					PlayerInfo[playerid][pCash] -= 10000;
					BizInfo[BizEnter{playerid}][bPribil] += 10000;
					GivePlayerWeaponAC(playerid,30,100);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили оружие AK-47 и 100 патронов.");
				}
				case 4:
				{
					if(PlayerInfo[playerid][pCash] < 3000) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств, требуется: 3.000$");
					GameTextForPlayer(playerid, "~r~-3000$", 5000, 1);
					PlayerInfo[playerid][pCash] -= 3000;
					BizInfo[BizEnter{playerid}][bPribil] += 3000;
					GivePlayerWeaponAC(playerid,5,1);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили Биту.");
				}
				case 5:
				{
					if(PlayerInfo[playerid][pCash] < 3000) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств, требуется: 3.000$");
					GameTextForPlayer(playerid, "~r~-3000$", 5000, 1);
					PlayerInfo[playerid][pCash] -= 3000;
					GivePlayerWeaponAC(playerid,1,1);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили Кастет.");
				}
				case 6:
				{
					if(PlayerInfo[playerid][pCash] < 45000) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств, требуется: 45.000$");
					GameTextForPlayer(playerid, "~r~-45000$", 5000, 1);
					PlayerInfo[playerid][pCash] -= 45000;
					BizInfo[BizEnter{playerid}][bPribil] += 45000;
					GivePlayerWeaponAC(playerid,34,15);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили оружие Sniper Rifle и 15 патронов.");
				}
			}
	    }
 		case 959:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0:
			    {
			   		SetPlayerInterior(playerid, 0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerPosEx(playerid,1075.9745,-1702.7065,13.5469);
					SetPlayerFacingAngle(playerid, 178.2976);
			    }
			    case 1:
			    {
			   		SetPlayerInterior(playerid, 0);
					PlayerInfo[playerid][pInt] = 0;
					TogglePlayerControllable(playerid, false);
					SetTimerEx("UnFreez", 3000, 0, "d", playerid);
					SetPlayerPosEx(playerid,1110.7749,-1677.8087,13.6528);
					SetPlayerFacingAngle(playerid, 266.2759);
			    }
			}
		}
 		case 9191:
		{
			if(!response) return 1;
			format(stringer, 86, "%s(%d) покинул организацию по собственному желанию.", PlayerInfo[playerid][pNames], playerid);
			SendFamilyMessage(PlayerInfo[playerid][pMRInections], COLOR_YELLOW, stringer);
			PlayerInfo[playerid][pMRInections] = 0;
			PlayerInfo[playerid][pRKInections] = 0;
			PlayerInfo[playerid][pLRInections] = 0;
			PlayerInfo[playerid][pJob] = 0;
			SetPlayerArmourAC(playerid,0);
			SpawnPlayer(playerid);
			SCM(playerid, COLOR_BLUE, "Вы были уволены по собственному желанию!");
			return 1;
		}
		case 116:
		{
			if(!response) return 1;
			new setting = 1 << listitem;
			if(!(PlayerInfo[playerid][pSettings] & setting)) PlayerInfo[playerid][pSettings] |= setting;
			else PlayerInfo[playerid][pSettings] ^= setting;
			UpdatePlayerData(playerid,"pSettings",PlayerInfo[playerid][pSettings]);
			ShowSettings(playerid);
		}
		case 918:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0:
				{
				    new sctr[144];
				    format(sctr, sizeof sctr, "{"#cBLUE"}1.{"#cWHITE"} Шапка [%d]\n{"#cBLUE"}2.{"#cWHITE"} Очки [%d]", PlayerInfo[playerid][pAccessories][0], PlayerInfo[playerid][pAccessories][1]);
					SPD(playerid, 919, DIALOG_STYLE_LIST, "{FF6F00}Аксессуары", sctr , "Выбрать", "Выход");
				}
			    case 1: cmd::mm(playerid);
			}
		}
		case 919:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0: ShowPlayerDialog(playerid,920,2, "{FF6F00}Действия [Шапка]","{"#cBLUE"}1.{"#cWHITE"} Использовать\n{"#cBLUE"}2.{"#cWHITE"} Изменить позицию\n{"#cBLUE"}3.{"#cWHITE"} Снять\n{"#cBLUE"}4.{"#cWHITE"} Выбросить","Выбрать","Закрыть");
			    case 1: ShowPlayerDialog(playerid,921,2, "{FF6F00}Действия [Очки]","{"#cBLUE"}1.{"#cWHITE"} Использовать\n{"#cBLUE"}2.{"#cWHITE"} Снять\n{"#cBLUE"}3.{"#cWHITE"} Выбросить","Выбрать","Закрыть");
			}
		}
		case 920:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0:
			    {
					if(PlayerInfo[playerid][pAccessories][0] < 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет шапки");
					SetPlayerAttachedObject(playerid,0,PlayerInfo[playerid][pAccessories][0],2,PlayerInfo[playerid][PositionAcc][0],PlayerInfo[playerid][PositionAcc][1], PlayerInfo[playerid][PositionAcc][2],PlayerInfo[playerid][PositionAcc][3],PlayerInfo[playerid][PositionAcc][4],PlayerInfo[playerid][PositionAcc][5], PlayerInfo[playerid][PositionAcc][6], PlayerInfo[playerid][PositionAcc][7],PlayerInfo[playerid][PositionAcc][8]);
					MeAction(playerid, "надел(а) шапку");
				}
			    case 1:
			    {
			        if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) EditAttachedObject(playerid, 0);
			    }
			    case 2:
				{
		            if(PlayerInfo[playerid][pAccessories][0] < 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет шапки");
					RemovePlayerAttachedObject(playerid, 0);
					MeAction(playerid, "снял(а) шапку");
				}
			    case 3:
			    {
			        if(PlayerInfo[playerid][pAccessories][0] < 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет шапки");
					PlayerInfo[playerid][pAccessories][0] = 0;
					UpdatePlayerData(playerid, "pAcessories1", PlayerInfo[playerid][pAccessories][0]);
					SCM(playerid, -1, "Вы успешно выбросили шапку");
					MeAction(playerid, "выбросил(а) шапку");
					RemovePlayerAttachedObject(playerid, 0);
			    }
			}
		}
		case 921:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0:
			    {
					if(PlayerInfo[playerid][pAccessories][1] < 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет очков");
					SetPlayerAttachedObject(playerid,1,PlayerInfo[playerid][pAccessories][1],2,0.1, 0.03, 0.0, 0.0, 90.0, 90.0);
					MeAction(playerid, "надел(а) очки");
			    }
			    case 1:
				{
		            if(PlayerInfo[playerid][pAccessories][1] < 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет очков");
					RemovePlayerAttachedObject(playerid, 1);
					MeAction(playerid, "снял(а) очки");
				}
			    case 2:
			    {
			        if(PlayerInfo[playerid][pAccessories][1] < 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет очков");
					PlayerInfo[playerid][pAccessories][1] = 0;
					UpdatePlayerData(playerid, "pAcessories2", PlayerInfo[playerid][pAccessories][1]);
					SCM(playerid, -1, "Вы успешно выбросили очки");
					MeAction(playerid, "выбросил(а) очки");
					RemovePlayerAttachedObject(playerid, 1);
			    }
			}
		}
	 	case 8890:
		{
			if(!response) return 1;
			if(!GetPVarInt(playerid, "ShopACOne"))
			{
				SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Для покупки данной шапки, нажмите клавишу ''CONFIRM''");
				SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Если Вы хотите просмотреть другие шапки, нажмите на иконку шапки!");
				SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Для выхода из магазина, нажмите клавишу ''EXIT''");
			}
			if(GetPVarInt(playerid, "ShopACOne") && GetPVarInt(playerid, "AccessoriesCost") != 0) SetPVarInt(playerid, "AccessoriesCost", 0);
   			if(GetPVarInt(playerid, "ShopACOne")) RemovePlayerAttachedObject(playerid,GetPVarInt(playerid, "ShopACOne"));
   			if(PlayerInfo[playerid][pAccessories][0] != 0x0) RemovePlayerAttachedObject(playerid,PlayerInfo[playerid][pAccessories][0]);
			switch(listitem)
			{
			    case 0: { SetPVarInt(playerid, "ShopACOne", 18970); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3500); else SetPVarInt(playerid, "AccessoriesCost", 3500);  }
			    case 1: { SetPVarInt(playerid, "ShopACOne", 18969); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3400); else SetPVarInt(playerid, "AccessoriesCost", 3400); }
			    case 2: { SetPVarInt(playerid, "ShopACOne", 18968); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3640); else SetPVarInt(playerid, "AccessoriesCost", 3640); }
			    case 3: { SetPVarInt(playerid, "ShopACOne", 18973); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3240); else SetPVarInt(playerid, "AccessoriesCost", 3240); }
			    case 4: { SetPVarInt(playerid, "ShopACOne", 18972); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3520); else SetPVarInt(playerid, "AccessoriesCost", 3520); }
			    case 5: { SetPVarInt(playerid, "ShopACOne", 18950); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3750); else SetPVarInt(playerid, "AccessoriesCost", 3750); }
			    case 6: { SetPVarInt(playerid, "ShopACOne", 18949); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3560); else SetPVarInt(playerid, "AccessoriesCost", 3560); }
			    case 7: { SetPVarInt(playerid, "ShopACOne", 18951); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3250); else SetPVarInt(playerid, "AccessoriesCost", 3250); }
			    case 8: { SetPVarInt(playerid, "ShopACOne", 18946); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 5000); else SetPVarInt(playerid, "AccessoriesCost", 5000); }
			    case 9: { SetPVarInt(playerid, "ShopACOne", 18932); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 4500); else SetPVarInt(playerid, "AccessoriesCost", 4500); }
			    case 10: { SetPVarInt(playerid, "ShopACOne", 18926); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3000); else SetPVarInt(playerid, "AccessoriesCost", 3000); }
			    case 11: { SetPVarInt(playerid, "ShopACOne", 18945); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 4000); else SetPVarInt(playerid, "AccessoriesCost", 4000); }
			}
			new sttr[15];
			format(sttr,sizeof(sttr),"%d$",GetPVarInt(playerid, "AccessoriesCost"));
			PlayerTextDrawSetString(playerid,ShopACcost[playerid], sttr);
			SetPlayerAttachedObject(playerid,0,GetPVarInt(playerid, "ShopACOne"),2,0.1, 0.03, 0.0, 0.0, 90.0, 90.0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) EditAttachedObject(playerid, 0), SetPVarInt(playerid, "check_for_clicked", 1);
		}
		case 8891:
		{
			if(!response) return 1;
			if(GetPlayerSkin(playerid) == 9 || GetPlayerSkin(playerid) == 10 || GetPlayerSkin(playerid) == 39 || GetPlayerSkin(playerid) == 77 || GetPlayerSkin(playerid) == 78 || GetPlayerSkin(playerid) == 79 || GetPlayerSkin(playerid) == 137 || GetPlayerSkin(playerid) == 136 || GetPlayerSkin(playerid) == 230) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}На данную одежду, не подходит данный аксессуар");
			if(!GetPVarInt(playerid, "ShopACTwo"))
			{
				SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Для покупки данных очков, нажмите клавишу ''CONFIRM''");
				SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Если Вы хотите просмотреть другие очки, нажмите на иконку очков!");
				SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Для выхода из магазина, нажмите клавишу ''EXIT''");
			}
			if(GetPVarInt(playerid, "ShopACTwo") && GetPVarInt(playerid, "AccessoriesCost") != 0) SetPVarInt(playerid, "AccessoriesCost", 0);
			if(GetPVarInt(playerid, "ShopACTwo")) RemovePlayerAttachedObject(playerid,GetPVarInt(playerid, "ShopACTwo"));
			if(PlayerInfo[playerid][pAccessories][1] != 0x0) RemovePlayerAttachedObject(playerid,PlayerInfo[playerid][pAccessories][1]);
			switch(listitem)
			{
			    case 0: { SetPVarInt(playerid, "ShopACTwo", 19140); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3500); else SetPVarInt(playerid, "AccessoriesCost", 3500); }
			    case 1: { SetPVarInt(playerid, "ShopACTwo", 19139); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 4000); else SetPVarInt(playerid, "AccessoriesCost", 4000); }
			    case 2: { SetPVarInt(playerid, "ShopACTwo", 19138); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3580); else SetPVarInt(playerid, "AccessoriesCost",3580); }
			    case 3: { SetPVarInt(playerid, "ShopACTwo", 19033); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 5000); else SetPVarInt(playerid, "AccessoriesCost",5000); }
			    case 4: { SetPVarInt(playerid, "ShopACTwo", 19034); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 4500); else SetPVarInt(playerid, "AccessoriesCost",4500); }
			    case 5: { SetPVarInt(playerid, "ShopACTwo", 19031); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 4200); else SetPVarInt(playerid, "AccessoriesCost",4200); }
			    case 6: { SetPVarInt(playerid, "ShopACTwo", 19028); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3100); else SetPVarInt(playerid, "AccessoriesCost",3100); }
			    case 7: { SetPVarInt(playerid, "ShopACTwo", 19025); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3300); else SetPVarInt(playerid, "AccessoriesCost",3300); }
			    case 8: { SetPVarInt(playerid, "ShopACTwo", 19019); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 4300); else SetPVarInt(playerid, "AccessoriesCost",4300); }
			    case 9: { SetPVarInt(playerid, "ShopACTwo", 19012); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3400); else SetPVarInt(playerid, "AccessoriesCost",3400); }
			    case 10: { SetPVarInt(playerid, "ShopACTwo", 19008); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3500); else SetPVarInt(playerid, "AccessoriesCost",3500); }
			    case 11: { SetPVarInt(playerid, "ShopACTwo", 19007); if(GetPVarInt(playerid, "AccessoriesCost") != 0) GivePVarInt(playerid, "AccessoriesCost", 3500); else SetPVarInt(playerid, "AccessoriesCost",3500); }
			}
			new sttr[15];
			format(sttr,sizeof(sttr),"%d$",GetPVarInt(playerid, "AccessoriesCost"));
			PlayerTextDrawSetString(playerid,ShopACcost[playerid], sttr);
			SetPlayerAttachedObject(playerid,1, GetPVarInt(playerid, "ShopACTwo"), 2, 0.1, 0.03, 0.0, 0.0, 90.0, 90.0);
			return 1;
		}
		case 8892:
		{
			if(!response) return 1;
			SetPlayerAttachedObject(playerid, GetPVarInt(playerid, "AttachSlot"), GetPVarInt(playerid, "AttachModel"), GetPVarInt(playerid, "AttachBone"), GetPVarFloat(playerid, "fOffsetX"), GetPVarFloat(playerid, "fOffsetY"), GetPVarFloat(playerid, "fOffsetZ"), GetPVarFloat(playerid, "fRotX"), GetPVarFloat(playerid, "fRotY"), GetPVarFloat(playerid, "fRotZ"), GetPVarFloat(playerid, "fScaleX"), GetPVarFloat(playerid, "fScaleY"), GetPVarFloat(playerid, "fScaleZ"));
			PlayerInfo[playerid][PositionAcc][0] = GetPVarFloat(playerid, "fOffsetX");			PlayerInfo[playerid][PositionAcc][1] = GetPVarFloat(playerid, "fOffsetY");
			PlayerInfo[playerid][PositionAcc][2] = GetPVarFloat(playerid, "fOffsetZ");			PlayerInfo[playerid][PositionAcc][3] = GetPVarFloat(playerid, "fRotX");			PlayerInfo[playerid][PositionAcc][4] = GetPVarFloat(playerid, "fRotY");
			PlayerInfo[playerid][PositionAcc][5] = GetPVarFloat(playerid, "fRotZ");			PlayerInfo[playerid][PositionAcc][6] = GetPVarFloat(playerid, "fScaleX");			PlayerInfo[playerid][PositionAcc][7] = GetPVarFloat(playerid, "fScaleY");			PlayerInfo[playerid][PositionAcc][8] = GetPVarFloat(playerid, "fScaleZ");
			new sctring[300];
			format(sctring, sizeof sctring, "UPDATE `accounts` SET ACfOffsetX = '%f', ACfOffsetY = '%f', ACfOffsetZ = '%f', ACfRotX = '%f', ACfRotY = '%f', ACfRotZ = '%f', ACfScaleX = '%f', ACfScaleY = '%f', ACfScaleZ = '%f' WHERE `Name` = '%s'",GetPVarFloat(playerid, "fOffsetX"), GetPVarFloat(playerid, "fOffsetY"), GetPVarFloat(playerid, "fOffsetZ"), GetPVarFloat(playerid, "fRotX"), GetPVarFloat(playerid, "fRotY"), GetPVarFloat(playerid, "fRotZ"),
			GetPVarFloat(playerid, "fScaleX"), GetPVarFloat(playerid, "fScaleY"), GetPVarFloat(playerid, "fScaleZ"),PlayerInfo[playerid][pNames]);
			mysql_empty(connects, sctring);
            DeletePVar(playerid, "check_for_clicked");DeletePVar(playerid, "AttachSlot");DeletePVar(playerid, "AttachModel");DeletePVar(playerid, "AttachBone");DeletePVar(playerid, "fOffsetX");DeletePVar(playerid, "fOffsetY");
			DeletePVar(playerid, "fOffsetZ");DeletePVar(playerid, "fRotX");DeletePVar(playerid, "fRotY");DeletePVar(playerid, "fRotZ");DeletePVar(playerid, "fScaleX");DeletePVar(playerid, "fScaleY");DeletePVar(playerid, "fScaleZ");
			return 1;
		}
		case 1642:
		{
			if(!response) return 1;
			if(!GetPVarInt(playerid,"StartRabWork"))
			{
				SetPVarInt(playerid, "StartRabWork", 1);
   				SCM(playerid,COLOR_BLUE,"Вы успешно начали свой рабочий день.");
   				SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
       			SetPlayerToTeamColor(playerid);
   				mask{playerid} = false;
   				DeletePVar(playerid, "mask_true");
   				return 1;
   			}
      		SCM(playerid,COLOR_BLUE,"Вы успешно закончили свой рабочий день.");
   			SetPVarInt(playerid, "StartRabWork", 0);
			SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
			RemovePlayerAttachedObject(playerid,3), RemovePlayerAttachedObject(playerid,2);
   			SetPlayerToTeamColor(playerid);
 			return 1;
		}
 		case D_BASE:
		{
			if(!response) return DeletePVar(playerid, "DialogShow");
			SetPVarInt(playerid, "PlayerInBase", 1);
			PlayersInBase{0}++;
			Iter_Add(BaseList, playerid);
			SCM(playerid, -1, "Вы успешно записались на бейсджампинг.");
			PlayerInfo[playerid][pCash] -= 15000;
			DeletePVar(playerid, "DialogShow");
			return 1;
		}
		case dAdvertSend:
		{
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid,CGRAY,"К сожалению, очередь на объявления занята, попробуйте позже");
			new text[100];
			GetPVarString(playerid,"advert",text,100);
			DeletePVar(playerid,"advert");
			new price = strlen(text) * gAdvertPrice;
			if(PlayerInfo[playerid][pCash] < price) return SendClientMessage(playerid,CGRAY,"У вас недостаточно денег");
			gAdvertCount ++;
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++)
			{
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid,CGRAY,"Ошибка (#111)");
			PlayerInfo[playerid][pCash] -= price;
			gAdvert[slot][adMoney] = price;
			format(gAdvert[slot][adSender],24,"%s",PlayerInfo[playerid][pNames]);
			gAdvert[slot][adPhone] = PlayerInfo[playerid][pPnumber];
			format(gAdvert[slot][adText],100,"%s",text);
			gAdvert[slot][adBusy] = true;
			pTemp[playerid][pAdvertTime] = 60;
			new mes[90];
			format(mes, sizeof mes, "[R] Пришло новое объявление от %s | Отредактируйте: /edit", gAdvert[slot][adSender]);
			SendFamilyMessage(16, 0x139BECFF, mes);
		}
		case dAdvertList:
		{
			if(!response) return 1;
			if(!gAdvert[listitem][adBusy] || gAdvert[listitem][adCheked] || gAdvert[listitem][adCheking]) return ShowAdvertList(playerid);
			SetPVarInt(playerid,"editadvert",listitem);
			gAdvert[listitem][adCheking] = true;
			new mes[164];
			format(mes,sizeof(mes),"%s\n1.Отправить\n2.Редактировать\n3.Удалить и отправить администрации\n4.Удалить",gAdvert[listitem][adText]);
			ShowPlayerDialog(playerid,dAdvertAction,2,gAdvert[listitem][adSender],mes,"Принять","Отмена");
		}
		case dAdvertAction:
		{
			new id = GetPVarInt(playerid,"editadvert");
			if(!response)
			{
				gAdvert[id][adCheking] = false;
				return ShowAdvertList(playerid);
			}
			switch(listitem)
			{
				case 1:
				{
					gAdvert[id][adTime] = gAdvertTime;
					gAdvertTime += 30;
					format(gAdvert[id][adCheker],24,"%s",PlayerInfo[playerid][pNames]);
					gAdvert[id][adCheking] = false;
					gAdvert[id][adCheked] = true;
					ShowAdvertList(playerid);
				}
				case 2: ShowPlayerDialog(playerid,dAdvertEdit,1,gAdvert[id][adSender],gAdvert[id][adText],"Принять","Отмена");
				case 3:
				{
					new mes[160];
					format(mes,sizeof(mes),"[AD] %s:%s",gAdvert[id][adSender],gAdvert[id][adText]);
					ABroadCast(CYELLOW,mes,1);
					SendClientMessage(playerid,CYELLOW,mes);
					strdel(gAdvert[id][adSender],0,24);
					gAdvert[id][adPhone] = 0;
					strdel(gAdvert[id][adText],0,100);
					strdel(gAdvert[id][adCheker],0,24);
					gAdvert[id][adBusy] = false;
					gAdvert[id][adCheked] = false;
					gAdvert[id][adCheking] = false;
					gAdvert[id][adTime] = 0;
					if(gAdvertCount > 0) gAdvertCount--;
					ShowAdvertList(playerid);
				}
				case 4:
				{
					strdel(gAdvert[id][adSender],0,24);
					gAdvert[id][adPhone] = 0;
					strdel(gAdvert[id][adText],0,100);
					strdel(gAdvert[id][adCheker],0,24);
					gAdvert[id][adBusy] = false;
					gAdvert[id][adCheked] = false;
					gAdvert[id][adCheking] = false;
					gAdvert[id][adTime] = 0;
					if(gAdvertCount > 0) gAdvertCount--;
					ShowAdvertList(playerid);
				}
				default: {gAdvert[id][adCheking] = false; ShowAdvertList(playerid);}
			}
		}
		case dAdvertEdit:
		{
			new id = GetPVarInt(playerid,"editadvert");
			if(!response)
			{
				gAdvert[id][adCheking] = false;
				return ShowAdvertList(playerid);
			}
			format(gAdvert[id][adText],100,"%s",inputtext);
			gAdvert[id][adTime] = gAdvertTime;
			gAdvertTime += 30;
			format(gAdvert[id][adCheker],24,"%s",PlayerInfo[playerid][pNames]);
			gAdvert[id][adCheking] = false;
			gAdvert[id][adCheked] = true;
			ShowAdvertList(playerid);
		}
		case 4425:
		{
			if(response)
			{
				if(wanted_f == false) return 1;
				if(GetPlayerInterior(patrul_id[playerid]) != 0) return SendClientMessage(playerid,COLOR_GREY,"Не удается обнаружить цель!");
				patrul_id[playerid] = tick_wanted{listitem};
				format(stringer, 128, "[ПАТРУЛИРОВАНИЕ] %s(%d) начал преследование за %s", PlayerInfo[playerid][pNames],playerid,PlayerInfo[patrul_id[playerid]][pNames]);
				foreach(new i: Player)
				{
				    if(IsADepartament(i)) SendClientMessage(i, COLOR_BLUE, stringer);
				}
				SetPVarInt(playerid,"Patrul",1);
				wanted_f = false;
				time_wanted[playerid] = SetTimerEx("CopsWanted",2500,true,"ff",playerid,patrul_id[playerid]);
			}
		}
		case 9953:
		{
			if(!response) return CheckMP(playerid);
		    switch(GetPVarInt(playerid,"PlayerInfo_MP"))
			{
				case MP_DeathMatch:
				{
					DeathMatch_Player--;
					SendClientMessage(playerid, -1, "[CS] Вы отказались от участия в мероприятии.");
				}
			}
		    DeletePVar(playerid,"PlayerInfo_MP");
		    CheckMP(playerid);
		    return true;
		}
		case 9954:
		{
			if(!response) return true;
		    switch(listitem)
		    {
		        case 0:
		        {
					if(GetPVarInt(playerid,"PlayerInfo_MP")) return ShowPlayerDialog(playerid, 9953, DIALOG_STYLE_MSGBOX, "{FF6F00}Counter Strike", "{FFFFFF}Вы хотите отказаться от участии в мероприятии Counter Strike?", "Отказаться", "Назад");
		            if(!DeathMatch_Time) return CheckMP(playerid), SendClientMessage(playerid, COLOR_GREY, "[CS] Регистрация закрыта.");
					if(DeathMatch_Player >= MAX_DMPLAYER) return CheckMP(playerid), SendClientMessage(playerid, COLOR_GREY, "Зарегистрировано максимальное число игроков.");
					DeathMatch_Player++, SetPVarInt(playerid,"PlayerInfo_MP",MP_DeathMatch);
					SendClientMessage(playerid, COLOR_GREEN, "[CS] Вы успешно зарегистрировались на участие в мероприятии.");
					return true;
		        }
		    }
		}
		case 9464:
		{
		    new vehicleid = GetPlayerVehicleID(playerid), carid = GetPVarInt(playerid,"carid_1")-1;
		    if(!response)
			{
			    switch(GetPVarInt(playerid, "TuneType"))
	            {
	                case 1: RemoveVehicleComponent(vehicleid, GetVehicleComponentInSlot(vehicleid, CARMODTYPE_WHEELS));
	                case 2: ChangeVehicleColor(vehicleid, vehicle_components_add[playerid][carid][0], vehicle_components_add[playerid][carid][1]);
	                case 3: ChangeVehiclePaintjob(vehicleid,3);
	                case 4: RemoveVehicleComponent(vehicleid, GetVehicleComponentInSlot(vehicleid, CARMODTYPE_NITRO));
	                case 6: RemoveVehicleComponent(vehicleid, 1087);
	                case 7:
	                {
	                    RemoveVehicleComponent(vehicleid, GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SPOILER));
	                    RemoveVehicleComponent(vehicleid, GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HOOD));
	                    RemoveVehicleComponent(vehicleid, GetVehicleComponentInSlot(vehicleid, CARMODTYPE_ROOF));
	                    RemoveVehicleComponent(vehicleid, GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SIDESKIRT));
	                    RemoveVehicleComponent(vehicleid, GetVehicleComponentInSlot(vehicleid, CARMODTYPE_EXHAUST));
	                    RemoveVehicleComponent(vehicleid, GetVehicleComponentInSlot(vehicleid, CARMODTYPE_FRONT_BUMPER));
	                    RemoveVehicleComponent(vehicleid, GetVehicleComponentInSlot(vehicleid, CARMODTYPE_REAR_BUMPER));
	                    RemoveVehicleComponent(vehicleid, GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_RIGHT));
	                    RemoveVehicleComponent(vehicleid, GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_LEFT));
					}
				}
			}
			// 0,1 - Kraska | 12 - Nitro | 2 - Kolesa | 3 - PaintJob | 7 - Spoiler | 10 - Pered Bamp | 11 - Zadniy bamp | 13 - Gidra
			else
			{
			    new cash;
			    switch(GetPVarInt(playerid, "TuneType"))
	            {
	                case 1:
					{
					    vehicle_components_add[playerid][carid][2] = GetPVarInt(playerid, "ColorT");
						cash = 5000;
					}
	                case 2:
					{
					    vehicle_components_add[playerid][carid][0] = GetPVarInt(playerid, "ColorT");
						vehicle_components_add[playerid][carid][1] = GetPVarInt(playerid, "ColorT");
						cash = 1000;
					}
	                case 3:
					{
					    vehicle_components_add[playerid][carid][3] = GetPVarInt(playerid, "ColorT");
						cash = 5000;
					}
	                case 4:
					{
						switch(GetVehicleComponentInSlot(vehicleid, CARMODTYPE_NITRO))
						{
						    case 1009: vehicle_components_add[playerid][carid][12] = 1009, cash = 5000;
						    case 1008: vehicle_components_add[playerid][carid][12] = 1008, cash = 10000;
						    case 1010: vehicle_components_add[playerid][carid][12] = 1010, cash = 20000;
						}
					}
					case 5: cash = 2000;
	                case 6:
					{
					    vehicle_components_add[playerid][carid][13] = 1087;
						cash = 50000;
					}
	                case 7:
					{
					    vehicle_components_add[playerid][carid][7] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SPOILER);
					    vehicle_components_add[playerid][carid][4] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HOOD);
					    vehicle_components_add[playerid][carid][8] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_ROOF);
					    vehicle_components_add[playerid][carid][9] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_EXHAUST);
					    vehicle_components_add[playerid][carid][10] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_FRONT_BUMPER);
					    vehicle_components_add[playerid][carid][11] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_REAR_BUMPER);
					    vehicle_components_add[playerid][carid][12] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_RIGHT);
					    vehicle_components_add[playerid][carid][13] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_LEFT);
						cash = 500000;
					}
				}
				DeletePVar(playerid, "ColorT");
				if(PlayerInfo[playerid][pCash] < cash) return SendClientMessage(playerid,COLOR_GREY,"У Вас недостаточно денег");
				PlayerInfo[playerid][pCash] -= cash;
				SendClientMessage(playerid, CORANGE, "Вы успешно купили новую деталь");
			}
			return 1;
		}
		case 1010:
	    {
	        if(!response) return SendClientMessage(playerid,CORANGE,"Вы отказались работать!");
			SetPVarInt(playerid,"PSkin",GetPlayerSkin(playerid));
   			SetPlayerSkin(playerid,268);
   			SetPVarInt(playerid, #job_window, true);
			DeletePVar(playerid, #window_money);
			SendClientMessage(playerid,CORANGE,"Вы устроились на работу!");
			SendClientMessage(playerid,CORANGE,"Теперь подойдите к свободному подъемнику!");
	    }
		case 2020:
		{
		    if(!response) return 1;
		    new string[100];
		    DeletePVar(playerid, #job_window);
            SetPlayerSkin(playerid,GetPVarInt(playerid,"PSkin"));
            if(!GetPVarInt(playerid, #window_money)) return SendClientMessage(playerid, CORANGE, "Вы ничего не заработали!");
			PlayerInfo[playerid][pCash] += GetPVarInt(playerid, #window_money)*120;
            format(string, sizeof(string), "Вы заработали %d$. Окон помыто: %d", GetPVarInt(playerid, #window_money)*120, GetPVarInt(playerid, #window_money));
			SendClientMessage(playerid, CORANGE, string);
			DeletePVar(playerid, #window_money);
   			if(lNomer[playerid] == 3) MoveDynamicObject(lift[2], 1353.06506, -1569.89990, 84.81356, 1.00);
		    if(lNomer[playerid] == 2) MoveDynamicObject(lift[1], 1340.48779, -1566.53296, 84.77550, 1.00);
		    if(lNomer[playerid] == 1) MoveDynamicObject(lift[0], 1328.02014, -1563.87646, 84.65142, 1.00);
			lNomer[playerid] = 0;
			nLift[lNomer[playerid]-1] = 0;
		}
  		case 3030:
	    {
	        if(!response) return SendClientMessage(playerid,CORANGE,"Вы  не захотели работать на этом подъемнике!");
			SendClientMessage(playerid,CORANGE,"Вы заняли подъемник №1! ''Нажмите клавишу ALT и езжайте вниз!''");
			lNomer[playerid] = 1;
			nLift[0] = 1;
	    }
	    case 4040:
	    {
	        if(!response) return SendClientMessage(playerid,CORANGE,"Вы  не захотели работать на этом подъемнике!");
	        SendClientMessage(playerid,CORANGE,"Вы заняли подъемник №2! ''Нажмите клавишу ALT и езжайте вниз!''");
			lNomer[playerid] = 2;
			nLift[1] = 1;
	    }
	    case 5555:
	    {
	        switch(listitem)
	        {
	        	case 0: MoveDynamicObject(lift[1], 1340.48779, -1566.53296, 62.44385, 1.00);
	        	case 1: MoveDynamicObject(lift[1], 1340.48779, -1566.53296, 25.38088, 1.00);
	        	case 2: MoveDynamicObject(lift[1], 1340.48779, -1566.53296, 84.77550, 1.00);
         	}
	    }
	    case 6666:
	    {
	        switch(listitem)
	        {
	        	case 0: MoveDynamicObject(lift[0], 1328.02014, -1563.87646, 58.39463, 1.00);
	        	case 1: MoveDynamicObject(lift[0], 1328.02014, -1563.87646, 26.02934, 1.00);
	        	case 2: MoveDynamicObject(lift[0], 1328.02014, -1563.87646, 84.65142, 1.00);
        	}
	    }
	    case 7778:
	    {
	        if(!response) return SendClientMessage(playerid,CORANGE,"Вы  не захотели работать на этом подъемнике!");
     		SendClientMessage(playerid,CORANGE,"Вы заняли подъемник №3! ''Нажмите клавишу ALT и езжайте вниз!''");
			lNomer[playerid] = 3;
			nLift[2] = 1;
	    }
	    case 8888:
	    {
	        switch(listitem)
	        {
	        	case 0: MoveDynamicObject(lift[2], 1353.06506, -1569.89990, 62.31984, 1.00);
	        	case 1: MoveDynamicObject(lift[2], 1353.06506, -1569.89990, 27.48138, 1.00);
	        	case 2: MoveDynamicObject(lift[2], 1353.06506, -1569.89990, 84.81356, 1.00);
        	}
	    }
	    case 8743:
		{
			if(response)
			{
			    if(!Player_Job_Waxta{playerid})
			    {
					Player_Job_Waxta{playerid} = true;
					if(random(2) == 1) SetPlayerSkin(playerid, 260);
					else SetPlayerSkin(playerid, 16);
					SetPVarInt(playerid,"WAXTABLYA",1);
					SetPlayerCheckpoint(playerid, 2288.9595,-914.2254,26.4097, 3.0);
			        SetPlayerAttachedObject(playerid,0, 18634, 14, 0.333391,0.000000,0.042249, 358.219909,268.014739,170.032974, 1.809867,1.108810,1.185773);
					SendClientMessage(playerid, COLOR_GREEN, "Вы начали работу на шахте.");
					SendClientMessage(playerid, COLOR_WHITE, "Добывать металл вы можете в темных месторождениях.");
					SendClientMessage(playerid, COLOR_WHITE, "Чтобы добыть металл, подойдите к месторождению и нажмите ПКМ (правая кнопка мыши)");
			    }
			    else
			    {
			        if(PlayerInfo[playerid][pMRInections]) SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					else SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			        Player_Job_Waxta{playerid} = false;
					if(IsPlayerAttachedObjectSlotUsed(playerid,0)) RemovePlayerAttachedObject(playerid,0);
			    }
			}
			return true;
		}
		case 4455:
		{
		    if(!response) return 1;
			SetPlayerCheckpoint(playerid, HotelInfo[GoToHotel[listitem]][mEnter][0],HotelInfo[GoToHotel[listitem]][mEnter][1],HotelInfo[GoToHotel[listitem]][mEnter][2],3), SCM(playerid, COLOR_GREY, "Чекпоинт к комнате установлен");
			SetPVarInt(playerid, "playerisGPS", 1);
			GoToHotel[playerid] = 999;
			return 1;
		}
		case dVibMar:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(StartVibori) return	SendClientMessage(playerid, CRED, "Выборы уже начаты");
					StartVibori = true;
					SendClientMessageToAll(0xD0E324AA, "Внимание! Начались выборы нового мэра штата. Голоса принимаются в Мэрии г.Los-Santos!");
					svt = gettime()+10800;
					for(new h = 0; h != 2; h++)
					{
						KandidatsGolosa[h] = 0;
						gVibMarKan[h] = Create3DTextLabel("{5DE01B}Проголосовать\n{FFFFFF}Нажмите: 'F'",0xFFFFFFAA,319.5459,1888.9373,907.8959,20.0,h);
						gVibMarKantwo[h] = Create3DTextLabel("{5DE01B}Проголосовать\n{FFFFFF}Нажмите: 'F'",0xFFFFFFAA,323.1256,1888.9172,907.8959,20.0,h);
					}
				}
			case 1: cmd::redmv(playerid);
			case 2:
				{
					if(!StartVibori) return	SendClientMessage(playerid, CRED, "Выборы не проводятся.");
					StartVibori = false;
					SendClientMessage(playerid, CRED, "Выборы окончены.");
					SendClientMessageToAll(0xD0E324AA, "Администрация завершила выборы принудительно!");
					foreach(new i: Player) { if(PlayerInfo[i][pVoted] == 1) { PlayerInfo[i][pVoted] = 0; } }
					mysql_empty(connects,"UPDATE `accounts` SET `pVoted`='0'");
					for(new h; h != 2; h++)
					{
						Delete3DTextLabel(gVibMarKan[h]);
						Delete3DTextLabel(gVibMarKantwo[h]);
					}
				}
			}
			return 1;
		}
	case dVibMarEdit:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid, dVibMarEditC1, DIALOG_STYLE_INPUT,"{FF6F00}Кандидат #1","{FFFFFF}Введите имя кандидата, или оставьте строчку пустой для удаления", "Ввод", "Выйти");
			case 1: ShowPlayerDialog(playerid, dVibMarEditC2, DIALOG_STYLE_INPUT,"{FF6F00}Кандидат #2","{FFFFFF}Введите имя кандидата, или оставьте строчку пустой для удаления", "Ввод", "Выйти");
			case 2: ShowPlayerDialog(playerid, dVibMarEditC3, DIALOG_STYLE_INPUT,"{FF6F00}Кандидат #3","{FFFFFF}Введите имя кандидата, или оставьте строчку пустой для удаления", "Ввод", "Выйти");
			}
			return 1;
		}
	case dVibMarEditC1:
		{
			if(!response) return cmd::redmv(playerid);
			if(strval(inputtext) > 25) return SCM(playerid, CRED, "Запрещенно вводить больше двадцати пяти символов!");
			new ucs = strlen(inputtext);
			if(ucs <=0)
			{
				format(CandidatsOne,40,"Нет кандидата");
				SendClientMessage(playerid,-1,"Кандидат удалён");
				KandidatsGolosa[0] = 0;
				return cmd::redmv(playerid);
			}
			strmid(CandidatsOne, inputtext, 0, strlen(inputtext), 255);
			SCMF(playerid,CRED,"Кандидат #1: %s ",CandidatsOne);
			KandidatsGolosa[0] = 0;
			return cmd::redmv(playerid);
		}
	case dVibMarEditC2:
		{
			if(!response) return cmd::redmv(playerid);
			if(strval(inputtext) > 25) return SCM(playerid, CRED, "Запрещенно вводить больше двадцати пяти символов!");
			new ucs = strlen(inputtext);
			if(ucs <=0)
			{
				format(CandidatsTwo,40,"Нет кандидата");
				SendClientMessage(playerid,-1,"Кандидат удалён");
				KandidatsGolosa[1] = 0;
				return cmd::redmv(playerid);
			}
			strmid(CandidatsTwo, inputtext, 0, strlen(inputtext), 255);
			SCMF(playerid,CRED,"Кандидат #2: %s ",CandidatsTwo);
			KandidatsGolosa[1] = 0;
			return cmd::redmv(playerid);
		}
	case dVibMarEditC3:
		{
			if(!response) return cmd::redmv(playerid);
			if(strval(inputtext) > 25) return SCM(playerid, CRED, "Запрещенно вводить больше двадцати пяти символов!");
			new ucs = strlen(inputtext);
			if(ucs <=0)
			{
				format(CandidatsThree,40,"Нет кандидата");
				SendClientMessage(playerid,-1,"Кандидат удалён");
				KandidatsGolosa[2] = 0;
				return cmd::redmv(playerid);
			}
			strmid(CandidatsThree, inputtext, 0, strlen(inputtext), 255);
			SCMF(playerid,CRED,"Кандидат #3: %s ",CandidatsThree);
			KandidatsGolosa[2] = 0;
			return cmd::redmv(playerid);
		}
	case dVibGolos:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(!strcmp(CandidatsOne, "Нет кандидата")) return SendClientMessage(playerid,CRED,"Кандидат не указан. Голосование невозможно");
					KandidatsGolosa[0] += 1;
					SCMF(playerid, CBLUE, "Вы отдали свой голос за {FFFFFF}%s", CandidatsOne);
					PlayerInfo[playerid][pGolos] = 1;
					SendClientMessage(playerid, CBLUE,"Ваш голос учтён, спасибо, что пришли на выборы.");
					PlayerInfo[playerid][pVoted] = 1;
					UpdatePlayerData(playerid, "pVoted", PlayerInfo[playerid][pVoted]);
					return 1;
				}
			case 1:
				{
					if(!strcmp(CandidatsTwo, "Нет кандидата")) return SendClientMessage(playerid,CRED,"Кандидат не указан. Голосование невозможно");
					KandidatsGolosa[1] += 1;
					SCMF(playerid, CBLUE, "Вы отдали свой голос за {FFFFFF}%s", CandidatsTwo);
					PlayerInfo[playerid][pGolos] = 1;
					SendClientMessage(playerid, CBLUE,"Ваш голос учтён, спасибо, что пришли на выборы.");
					PlayerInfo[playerid][pVoted] = 1;
					UpdatePlayerData(playerid, "pVoted", PlayerInfo[playerid][pVoted]);
					return 1;
				}
			case 2:
				{
					if(!strcmp(CandidatsThree, "Нет кандидата")) return SendClientMessage(playerid,CRED,"Кандидат не указан. Голосование невозможно");
					KandidatsGolosa[2] += 1;
					SCMF(playerid, CBLUE, "Вы отдали свой голос за {FFFFFF}%s", CandidatsThree);
					PlayerInfo[playerid][pGolos] = 1;
					SendClientMessage(playerid, CBLUE,"Ваш голос учтён, спасибо, что пришли на выборы.");
					PlayerInfo[playerid][pVoted] = 1;
					UpdatePlayerData(playerid, "pVoted", PlayerInfo[playerid][pVoted]);
					return 1;
				}
			}
			return 1;
		}
		case D_RACE:
		{
		    if(!response) return DeletePVar(playerid,#DialogShow);
    		if (PlayersInRace{0} >= 40) return SendClientMessage(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Нет мест.");
			if (GetPVarInt(playerid, #PlayerInRace)) return SendClientMessage(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Вы уже зарегистрированы на гонку.");
		    switch(listitem)
		    {
		        case 0:SetPVarInt(playerid,"rVehicle",503);
		        case 1:SetPVarInt(playerid,"rVehicle",506);
		        case 2:SetPVarInt(playerid,"rVehicle",541);
		        case 3:SetPVarInt(playerid,"rVehicle",603);
		        case 4:SetPVarInt(playerid,"rVehicle",411);
		        case 5:SetPVarInt(playerid,"rVehicle",451);
		    }
			ShowPlayerDialog(playerid,D_RACE+2,DIALOG_STYLE_LIST,"{FF6F00}Регистрация на гонку #2 {FFFFFF}(Выберите цвет)","{2D26FF}Синий\n{FF0000}Красный\n{F7FF03}Желтый\n{26FF05}Зеленый\n{FFBA19}Оранжевый\n{FFFFFF}Белый\n{CF29BE}Фиолетовый","Выбрать","Отмена");
			return 1;
		}
		case D_RACE+2:
		{
		    if(!response) return ShowPlayerDialog(playerid,D_RACE+2,DIALOG_STYLE_LIST,"{FF6F00}Регистрация на гонку #2{FFFFFF}(Выберите цвет)","{2D26FF}Синий\n{FF0000}Красный\n{F7FF03}Желтый\n{26FF05}Зеленый\n{FFBA19}Оранжевый\n{FFFFFF}Белый\n{CF29BE}Фиолетовый","Выбрать","Отмена");
			switch(listitem)
		    {
		        case 0:SetPVarInt(playerid,"rColor",198);
		        case 1:SetPVarInt(playerid,"rColor",181);
		        case 2:SetPVarInt(playerid,"rColor",194);
		        case 3:SetPVarInt(playerid,"rColor",154);
		        case 4:SetPVarInt(playerid,"rColor",183);
		        case 5:SetPVarInt(playerid,"rColor",1);
		        case 6:SetPVarInt(playerid,"rColor",171);
		    }
		    SetPVarInt(playerid, #PlayerInRace, 1);
		    PlayersInRace{0}++;
		    Iter_Add(RacersList, playerid);
			PlayerPosition{playerid} = PlayersInRace{0};
			format(format_string,128,"Зарегистрирован новый участник под номером: %d | %s(%d)", PlayersInRace{0}, PlayerInfo[playerid][pNames], playerid);
			RaceChat(COLOR_LIGHTBLUE, format_string);
   			SCM(playerid, COLOR_GREY, "Вы зарегистрировались на гонку, ожидайте начала гонки.");
            SCM(playerid, COLOR_GREY, "Правила / Помощь:");
            SCM(playerid, COLOR_GREY, "- Запрещено покидать транспортное средство во время гонки. (Вы будете изгнаны с гоночных мероприятий).");
            SCM(playerid, COLOR_GREY, "- Если Вы умираете, гонка для Вас моментально окончена.");
            SCM(playerid, COLOR_GREY, "- Запрещено ехать не по трассе, иначе, Вам не будут засчитаны очки.");
			DeletePVar(playerid,"DialogShow");
		    return 1;
		}
		case 123:
	    {
	    	if(!response) return 1;
		    switch(listitem)
		    {
		        case 0: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1);
		        case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
		        case 2: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
		        case 3: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
		        case 4: GoAnim(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
		        case 5: ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
		        case 6: ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
				case 7: ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
				case 8: GoAnim(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
				case 9: GoAnim(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
				case 10: GoAnim(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
				case 11: GoAnim(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
				case 12: ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
				case 13: GoAnim(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
				case 14: GoAnim(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
				case 15: GoAnim(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
				case 16: GoAnim(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
				case 17: ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
				case 18: GoAnim(playerid,"SHOP","SHP_Rob_HandsUP",4.1,1,0,0,0,0,0);
				case 19: GoAnim(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
				case 20: ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
				case 21: GoAnim(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
				case 22: GoAnim(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
				case 23: GoAnim(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
				case 24: ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
		        case 25: ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
		        case 26: GoAnim(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
		        case 27: GoAnim(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
				case 28: GoAnim(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
				case 29: GoAnim(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
				case 30: GoAnim(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
				case 31: GoAnim(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
				case 32: GoAnim(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
				case 33: GoAnim(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
				case 34: GoAnim(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
				case 35: GoAnim(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
				case 36: GoAnim(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
				case 37: GoAnim(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
				case 38: ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
				case 39: ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
				case 40: ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
				case 41: GoAnim(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
				case 42: GoAnim(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
				case 43: GoAnim(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
				case 44: GoAnim(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
		        case 45: GoAnim(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
		        case 46: ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
		        case 47: ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
		        case 48: ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
				case 49: ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
				case 50: ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
				case 51: ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
				case 52: ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
				case 53: ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
				case 54: GoAnim(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
				case 55: GoAnim(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
				case 56: GoAnim(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
				case 57: GoAnim(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
				case 58: GoAnim(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
				case 59: ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
				case 60: GoAnim(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
				case 61: GoAnim(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
				case 62: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
				case 63: GoAnim(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
		    }
	        return 1;
	    }
	    case 9588:
		{
			if(!response) return 1;
			SCM(playerid, COLOR_GREEN, "Вы приняли предложение, и получили медицинскую карту.");
			PlayerInfo[playerid][pMedCard] = 1;
			UpdatePlayerData(playerid, "pMedCard", PlayerInfo[playerid][pMedCard]);
			PlayerInfo[playerid][pCash] -= GetPVarInt(playerid, "myCenaCard");
			PlayerInfo[GetPVarInt(playerid, "myID")][pCash] += GetPVarInt(playerid, "myCenaCard");
			SCMF(GetPVarInt(playerid, "myID"), COLOR_WHITE, "Вы получили $%d за выдачу медицинской карты", GetPVarInt(playerid, "myCenaCard"));
			DeletePVar(playerid, "myID");
			DeletePVar(playerid, "myCenaCard");
			return 1;
		}
		case dMakeGun:
		{
			if(!response) return 1;
			SetPVarInt(playerid,"makegunid",listitem);
			new needgun = gGunAmount[listitem];
			new bool:noneedgun;
			DeletePVar(playerid,"noneedgun");
			for(new i;i<12;i++)
			{
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == gGunID[listitem]) { noneedgun = true; SetPVarInt(playerid,"noneedgun",1); break; }
			}
			if(PlayerInfo[playerid][pMats] < needgun && !noneedgun)
			{
				SCMF(playerid,CGRAY,"Вам нужно %d ед. материалов для сборки данного вида оружия.",needgun);
				ShowMakeGunList(playerid);
				return 1;
			}
			ShowPlayerDialog(playerid,dMakeGun2,1,"{FF6F00}Сборка оружия","{FFFFFF}Сколько патронов вы хотите использовать для этого оружия?","Собрать","Отмена");
		}
		case dMakeGun2:
		{
			if(!response) return 1;
			if(strval(inputtext) < 1 || strval(inputtext) > 500)
			{
				SendClientMessage(playerid,CGRAY,"Неверное к-во патронов");
				ShowMakeGunList(playerid);
				return 1;
			}
			new gunid = GetPVarInt(playerid,"makegunid");
			new needgun = gGunAmount[gunid];
			new weaponid = gGunID[gunid];
			if(!GetPVarInt(playerid,"noneedgun")) PlayerInfo[playerid][pMats] -= needgun;
			DeletePVar(playerid,"noneedgun");
			UpdatePlayerData(playerid, "pMats", PlayerInfo[playerid][pMats]);
			MeAction(playerid,"собрал оружие из материалов");
			GivePlayerWeaponAC(playerid,weaponid,strval(inputtext));
		}
		case 17504:
		{
			if(!response) return SendClientMessage(playerid, COLOR_WHITE, "Выберите песню.");
			switch(listitem)
			{
			case 0:
				{
					if(GetPVarType(playerid, "PlacedBB"))
					{
						foreach(new i: Player)
						{
							if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
							{
								PlayStream(i, "http://air.radiorecord.ru:8102/club_128", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
							}
						}
						SetPVarString(playerid, "BBStation", "http://air.radiorecord.ru:8102/club_128");
					}
				}
			case 1:
				{
					if(GetPVarType(playerid, "PlacedBB"))
					{
						foreach(new i: Player)
						{
							if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
							{
								PlayStream(i, "http://radio.zaycev.fm:9002/ZaycevFM(128)", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
							}
						}
						SetPVarString(playerid, "BBStation", "http://radio.zaycev.fm:9002/ZaycevFM(128)");
					}
				}
			case 2:
				{
					if(GetPVarType(playerid, "PlacedBB"))
					{
						foreach(new i: Player)
						{
							if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
							{
								PlayStream(i, "http://radio02-cn03.akadostream.ru:8108/shanson128.mp3", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
							}
						}
						SetPVarString(playerid, "BBStation", "http://radio02-cn03.akadostream.ru:8108/shanson128.mp3");
					}
				}
			case 3:
				{
					if(GetPVarType(playerid, "PlacedBB"))
					{
						foreach(new i: Player)
						{
							if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
							{
								PlayStream(i, "http://online-radiomelodia.tavrmedia.ua/RadioMelodia.m3u", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
							}
						}
						SetPVarString(playerid, "BBStation", "http://online-radiomelodia.tavrmedia.ua/RadioMelodia.m3u");
					}
				}
			case 4:
				{
					if(GetPVarType(playerid, "PlacedBB"))
					{
						foreach(new i: Player)
						{
							if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
							{
								PlayStream(i, "http://kissfm.ua/v3/kiss-2.m3u", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
							}
						}
						SetPVarString(playerid, "BBStation", "http://kissfm.ua/v3/kiss-2.m3u");
					}
				}
			case 5:
				{
					if(GetPVarType(playerid, "PlacedBB"))
					{
						foreach(new i: Player)
						{
							if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
							{
								PlayStream(i, "http://stream05.akaver.com/skyradio_hi.mp3", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
							}
						}
						SetPVarString(playerid, "BBStation", "http://stream05.akaver.com/skyradio_hi.mp3");
					}
				}
			case 6: ShowPlayerDialog(playerid,17511,DIALOG_STYLE_INPUT, "{FF6F00}Введите ссылку", "{FFFFFF}Вставляйте ссылку на радио / песню", "Включить","Отменить");
			case 7:
				{
					if(GetPVarType(playerid, "PlacedBB"))
					{
						foreach(new i: Player)
						{
							if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
							{
								PlayStream(i, "http://95.211.148.10:8060/live", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
							}
						}
						SetPVarString(playerid, "BBStation", "http://95.211.148.10:8060/live");
					}
				}
			case 8:
				{
					if(GetPVarType(playerid, "PlacedBB"))
					{
						foreach(new i: Player)
						{
							if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
							{
								PlayStream(i, "http://radio.zaycev.fm:9002/rnb/ZaycevFM(128).m3u", GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
							}
						}
						SetPVarString(playerid, "BBStation", "http://radio.zaycev.fm:9002/rnb/ZaycevFM(128).m3u");
					}
				}
			case 9:
				{
					if(GetPVarType(playerid, "BBArea"))
					{
						MeAction(playerid, "выключил магнитофон");
						foreach(new i: Player)
						{
							if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
							{
								StopStream(i);
							}
						}
						DeletePVar(playerid, "BBStation");
					}
					SendClientMessage(playerid, COLOR_WHITE, "Вы выключили магнитофон");
				}
			}
		}
	case 17511:
		{
			if(response)
			{
				if(isnull(inputtext)) return SendClientMessage(playerid, COLOR_WHITE, "Нельзя вставить пустую ссылку!");
				if(strlen(inputtext))
				{
					if(GetPVarType(playerid, "PlacedBB"))
					{
						foreach(new i: Player)
						{
							if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) PlayStream(i, inputtext, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
							SetPVarString(playerid, "BBStation", inputtext);
						}
					}
				}
			}
		}
	case 9000:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: SPD(playerid, 9001, DIALOG_STYLE_LIST, "{FF6F00}Общественные места", "{FF6F00}> {FFFFFF}Мэрия Los-Santos\n{FF6F00}> {FFFFFF}Автошкола\n{FF6F00}> {FFFFFF}Центральный отель\n{FF6F00}> {FFFFFF}Банк Los-Santos\n{FF6F00}> {FFFFFF}Гора Vine-Wood", "Выбрать","Выход");
				case 1: SPD(playerid, 9003, DIALOG_STYLE_LIST, "{FF6F00}Развлечения", "{FF6F00}> {FFFFFF}Counter Strike\n{FF6F00}> {FFFFFF}Casino LS", "Выбрать", "Выход");
				case 2: SPD(playerid, 9004, DIALOG_STYLE_LIST, "{FF6F00}Города", "{FF6F00}> {FFFFFF}г.Los-Santos\n{FF6F00}> {FFFFFF}г.San-Fierro\n{FF6F00}> {FFFFFF}г.Las-Venturas", "Выбрать", "Выход");
				case 3: SPD(playerid, 9002, DIALOG_STYLE_LIST, "{FF6F00}Нелегальные организации", "{FF6F00}> {FFFFFF}The Ballas Gang\n{FF6F00}> {FFFFFF}The Grove Street\n{FF6F00}> {FFFFFF}The Rifa Gang\n{FF6F00}> {FFFFFF}The Aztecas Gang\n{FF6F00}> {FFFFFF}The Vagos Gang\n{FF6F00}> {FFFFFF}La Cosa Nostra\n{FF6F00}> {FFFFFF}Russian Mafia\n{FF6F00}> {FFFFFF}Yakuza", "Выбрать","Выход");
				case 4: SPD(playerid, 9005, DIALOG_STYLE_LIST, "{FF6F00}Государственные организации", "{FF6F00}> {FFFFFF}Полицейские департаменты\n{FF6F00}> {FFFFFF}МЧС\n{FF6F00}> {FFFFFF}Автошкола\n{FF6F00}> {FFFFFF}San Fierro Army\n{FF6F00}> {FFFFFF}Военно Морской Флот\n{FF6F00}> {FFFFFF}Las Venturas Army", "Выбрать", "Выход");
				case 5: SPD(playerid, 9007, DIALOG_STYLE_LIST, "{FF6F00}Работы", "{FF6F00}> {FFFFFF}Лесопилка\n{FF6F00}> {FFFFFF}Автобусник", "Выбрать", "Выход");
			}
		}
	case 9007:
	{
	    if(!response) return cmd::teleport(playerid);
	    switch(listitem)
	    {
	        case 0:
	        {
				SetPlayerPosEx(playerid, -761.8918,-134.2520,65.6949);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
	        }
	        case 1:
	        {
				SetPlayerPosEx(playerid, 1263.3184,-1817.9396,13.3948);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
	        }
	    }
	}
	case 9006:
		{
			if(!response) return SPD(playerid, 9005, DIALOG_STYLE_LIST, "{FF6F00}Государственные организации", "{FF6F00}> {FFFFFF}Полицейские департаменты\n{FF6F00}> {FFFFFF}МЧС\n{FF6F00}> {FFFFFF}Автошкола\n{FF6F00}> {FFFFFF}San Fierro Army\n{FF6F00}> {FFFFFF}Военно Морской Флот\n{FF6F00}> {FFFFFF}Las Venturas Army", "Выбрать", "Выход");
			switch(listitem)
			{
			case 0: // LSPD
				{
					SetPlayerPosEx(playerid, 1548.0996,-1703.7919,5.8906);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 1: // SFPD
				{
					SetPlayerPosEx(playerid, -1604.0522,690.9864,-5.2422);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 2: // LVPD
				{
					SetPlayerPosEx(playerid, 2280.6553,2452.3328,10.8203);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 3: // FBI
				{
					SetPlayerPosEx(playerid, -2442.0017,503.8035,29.9502);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			}
		}
	case 9005:
		{
			if(!response) return cmd::teleport(playerid);
			switch(listitem)
			{
			case 0: SPD(playerid, 9006, DIALOG_STYLE_LIST, "{FF6F00}Полицейские департаменты", "{FF6F00}> {FFFFFF}Los Santos Police Departament\n{FF6F00}> {FFFFFF}San Fierro Police Departament\n{FF6F00}> {FFFFFF}Las Venturas Police Departament\n{FF6F00}> {FFFFFF}FBI", "Выбрать", "Назад");
			case 1: // МЧС
				{
					SetPlayerPosEx(playerid, 1178.2052,-1324.3650,14.1086);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 2: // АВТОШКОЛА
				{
					SetPlayerPosEx(playerid, 755.3259,-1434.9218,13.0958);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 3: // SFa
				{
					SetPlayerPosEx(playerid, -1343.3969,469.8734,7.1875);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 4: // ВМФ
				{
					SetPlayerPosEx(playerid, -2260.8372,2313.4680,4.8125);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 5: // LVa
				{
					SetPlayerPosEx(playerid, 212.3487,1910.7577,17.6406);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			}
		}
	case 9004:
		{
			if(!response) return cmd::teleport(playerid);
			switch(listitem)
			{
			case 0:
				{
					SetPlayerPosEx(playerid, 1362.2567,-1038.9110,25.8683);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 1:
				{
					SetPlayerPosEx(playerid, -1826.1483,160.3359,14.8451);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 2:
				{
					SetPlayerPosEx(playerid, 1797.1667,832.8391,10.6643);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			}
		}
	case 9003:
		{
			if(!response) return cmd::teleport(playerid);
			switch(listitem)
			{
			case 0:
				{
					SetPlayerPosEx(playerid, -2098.4678,86.2418,35.3203);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 1:
				{
					SetPlayerPosEx(playerid, 1022.4281,-1132.7654,23.8281);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			}
		}
	case 9002:
		{
			if(!response) return cmd::teleport(playerid);
			switch(listitem)
			{
			case 0:
				{
					SetPlayerPosEx(playerid, 2013.0505,-1273.6877,23.8203);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 1:
				{
					SetPlayerPosEx(playerid, 2490.0139,-1669.9242,13.3359);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 2:
				{
					SetPlayerPosEx(playerid, 2768.9893,-1947.7357,13.3682);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 3:
				{
					SetPlayerPosEx(playerid, 2178.8835,-1796.6198,13.3682);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 4:
				{
					SetPlayerPosEx(playerid, 2641.8540,-1084.0514,69.4531);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 5:
				{
					SetPlayerPosEx(playerid, 1446.1321,748.9786,10.8203);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 6:
				{
					SetPlayerPosEx(playerid, 953.8283,1734.3771,8.6484);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 7:
				{
					SetPlayerPosEx(playerid, 1467.4531,2773.3977,10.6719);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			}
		}
	case 9001:
		{
			if(!response) return cmd::teleport(playerid);
			switch(listitem)
			{
			case 0:
				{
					SetPlayerPosEx(playerid, 1478.1539,-1739.5426,13.1064);
					SetPlayerFacingAngle(playerid, 270.9968);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 1:
				{
					SetPlayerPosEx(playerid, 755.3259,-1434.9218,13.0958);
					SetPlayerFacingAngle(playerid, 91.4976);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 2:
				{
					SetPlayerPosEx(playerid, 621.5889,-1457.4902,13.9946);
					SetPlayerFacingAngle(playerid, 179.9983);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 3:
				{
					SetPlayerPosEx(playerid, 1464.2767,-1023.5324,23.3923);
					SetPlayerFacingAngle(playerid, 187.9625);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			case 4:
				{
					SetPlayerPosEx(playerid, 1515.5979,-819.1812,70.0426);
					SetPlayerFacingAngle(playerid, 6.3005);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
			}
		}
	case 136:
		{
			if(!response) return 1;
			if(GetPVarInt(playerid, "arenda_took") != 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы уже арендовали свой мопед");
			if(GetPVarInt(playerid, "check_arenda_moped")) return 1;
			PlayerInfo[playerid][pCash] -= 15;
			new Float:x,Float:y,Float:a,Float:z;
			GetPlayerPos(playerid,x,y,z);
			GetPlayerFacingAngle(playerid,a);
			SetPVarInt(playerid, "arenda_took", _:Forveh_AddStaticVehicleEx(462, x,y,z,a, 1,1, 300));
			GetVehicleParamsEx(GetPVarInt(playerid, "arenda_took"),engine,lights,alarm,doors,bonnet,boot,objective);
			VehInfo[GetPVarInt(playerid, "arenda_took")][vFuel] = float(150);
			PutPlayerInVehicle(playerid,GetPVarInt(playerid, "arenda_took"),0);
			SetVehicleParamsEx(GetPVarInt(playerid, "arenda_took"),0,0,alarm,doors,bonnet,boot,objective);
			SetPVarInt(playerid, "check_arenda_moped",1);
			return SendClientMessage(playerid,COLOR_GREY,"Вам был выдан мопед!");
		}
	case 1239:
		{
			if !response *then return 1;
			switch (listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][0]) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств для покупки 50 зарядов.");
					PlayerInfo[playerid][pCash] -= BizInfo[BizEnter{playerid}][bCena][0], SetPVarInt(playerid, "salute_zariad", 50), SCM(playerid, COLOR_GREEN, "Вы успешно приобрели 50 зарядов салюта, будьте осторожны в его использовании. Чтобы запустить салют введите команду /salut");
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][0];
				}
			case 1:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][1]) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств для покупки 150 зарядов.");
					PlayerInfo[playerid][pCash] -= BizInfo[BizEnter{playerid}][bCena][1], SetPVarInt(playerid, "salute_zariad", 150), SCM(playerid, COLOR_GREEN, "Вы успешно приобрели 150 зарядов салюта, будьте осторожны в его использовании. Чтобы запустить салют введите команду /salut");
                    BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][1];
				}
			case 2:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][2]) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств для покупки 350 зарядов.");
					PlayerInfo[playerid][pCash] -= BizInfo[BizEnter{playerid}][bCena][2], SetPVarInt(playerid, "salute_zariad", 350), SCM(playerid, COLOR_GREEN, "Вы успешно приобрели 350 зарядов салюта, будьте осторожны в его использовании. Чтобы запустить салют введите команду /salut");
                    BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][2];
				}
			}
		}
	case 1193:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SPD(playerid, 229, DIALOG_STYLE_LIST, "{FF6F00}Меню банды Grove", "{FFFFFF}Включить/Выключить запрет каптов этой банды", "Принять","Отклонить");
			case 1: SPD(playerid, 230, DIALOG_STYLE_LIST, "{FF6F00}Меню банды Aztec", "{FFFFFF}Включить/Выключить запрет каптов этой банды", "Принять","Отклонить");
			case 2: SPD(playerid, 231, DIALOG_STYLE_LIST, "{FF6F00}Меню банды Ballas", "{FFFFFF}Включить/Выключить запрет каптов этой банды", "Принять","Отклонить");
			case 3: SPD(playerid, 226, DIALOG_STYLE_LIST, "{FF6F00}Меню банды Rifa", "{FFFFFF}Включить/Выключить запрет каптов этой банды", "Принять","Отклонить");
			case 4: SPD(playerid, 227, DIALOG_STYLE_LIST, "{FF6F00}Меню банды Vagos", "{FFFFFF}Включить/Выключить запрет каптов этой банды", "Принять","Отклонить");
			}
		}
	case 229:
		{
			if(!response) return 1;
			if(response)
			{
				if(b_Ghetto[0] == true) return b_Ghetto[0] = false, SCM(playerid, COLOR_GREY, "Вы разрешили банде Grove Street учавствовать в захвате территорий");
				if(b_Ghetto[0] == false) return b_Ghetto[0] = true, SCM(playerid, COLOR_GREY, "Вы запретили банде Grove Street учавствовать в захвате территорий");
			}
		}

	case 230:
		{
			if(!response) return 1;
			if(response)
			{
				if(b_Ghetto[4] == true) return b_Ghetto[4] = false, SCM(playerid, COLOR_GREY, "Вы разрешили банде Aztec учавствовать в захвате территорий");
				if(b_Ghetto[4] == false) return b_Ghetto[4] = true, SCM(playerid, COLOR_GREY, "Вы запретили банде Aztec учавствовать в захвате территорий");
			}
		}

	case 231:
		{
			if(!response) return 1;
			if(response)
			{
				if(b_Ghetto[2] == true) return b_Ghetto[2] = false, SCM(playerid, COLOR_GREY, "Вы разрешили банде East Side Ballas учавствовать в захвате территорий");
				if(b_Ghetto[2] == false) return b_Ghetto[2] = true, SCM(playerid, COLOR_GREY, "Вы запретили банде East Side Ballas учавствовать в захвате территорий");
			}
		}

	case 226:
		{
			if(!response) return 1;
			if(response)
			{
				if(b_Ghetto[3] == true) return b_Ghetto[3] = false, SCM(playerid, COLOR_GREY, "Вы разрешили банде The Rifa Gang учавствовать в захвате территорий");
				if(b_Ghetto[3] == false) return b_Ghetto[3] = true, SCM(playerid, COLOR_GREY, "Вы запретили банде The Rifa Gang учавствовать в захвате территорий");
			}
		}

	case 227:
		{
			if(!response) return 1;
			if(response)
			{
				if(b_Ghetto[1] == true) return b_Ghetto[1] = false, SCM(playerid, COLOR_GREY, "Вы разрешили банде The Vagos Gang учавствовать в захвате территорий");
				if(b_Ghetto[1] == false) return b_Ghetto[1] = true, SCM(playerid, COLOR_GREY, "Вы запретили банде The Vagos Gang учавствовать в захвате территорий");
			}
		}
	case dSellCar:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0: return cmd::sellcar(playerid);
			    case 1:
			    {
				    if(PlayerInfo[playerid][pCar][1] == 462) return SendClientMessage(playerid,COLOR_GRAD1,"Вы не можете продать мопед");
				    return SellCar(playerid, 1);
			    }
			    case 2:
			    {
	    			if(PlayerInfo[playerid][pCar][0] == 462) return SendClientMessage(playerid,COLOR_GRAD1,"Вы не можете продать мопед");
					return SellCar(playerid, 2);
			    }
			}
		}
	case 8237:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0: return cmd::fixcar(playerid);
				case 1: LoadCarPlayer(playerid, 1);
				case 2: LoadCarPlayer(playerid, 2);
			}
		}
	case 2221:
		{
			if(!response)
			{
				if(!GetPVarInt(playerid, "Television")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не смотрите телевизор");
				DeletePVar(playerid, "Television");
				return SpawnPlayer(playerid);
			}
			switch(listitem)
			{
				case 0:
				{
					SetPlayerPosEx(playerid, 1736.0245,-1901.2742,13.3859);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetPVarInt(playerid, "Television", 1);
					InterpolateCameraPos(playerid, 1665.336059, -1862.045654, 45.811603, 1778.136108, -1846.735229, 29.876777, 15000);
					InterpolateCameraLookAt(playerid, 1669.644165, -1863.774780, 43.954059, 1775.281005, -1850.634765, 28.595565, 15000);
					SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Для выхода из просмотра телевизионного оборудования вызовите пульт (/tv) и нажмите на нем клавишу Выкл.");
				}
				case 1:
				{
					SetPlayerPosEx(playerid, 490.9564,-1505.1403,14.5374);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetPVarInt(playerid, "Television", 1);
					InterpolateCameraPos(playerid, 530.241760, -1561.652832, 28.146415, 535.103576, -1462.041381, 23.963079, 14000);
					InterpolateCameraLookAt(playerid, 526.554138, -1558.321289, 27.596752, 531.283142, -1465.246826, 23.604019, 14000);
					SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Для выхода из просмотра телевизионного оборудования вызовите пульт (/tv) и нажмите на нем клавишу Выкл.");
				}
			}
		}
	case 3340:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return 1;
			mysql_format(connects,stringer, MAX_STR, "SELECT * FROM `admin` WHERE `name` = '%s'", strlen(inputtext));
			mysql_tquery(connects, stringer, "Moderator", "dsd",playerid,strlen(inputtext),1);
		}
	case 1228:
		{
			if(!response) return 1;
			switch(GetPVarInt(playerid,"ChangePass"))
			{
			case 0:
				{
					mysql_format(connects,stringer, MAX_STR,"SELECT * FROM `admin` WHERE `name` = '%s' AND `password` = '%e'", PlayerInfo[playerid][pNames], inputtext);
					mysql_tquery(connects, stringer, "changepass","ds", playerid, inputtext);
				}
			case 1:
				{
					format(stringer, MAX_STR, "Вы изменили свой пароль на: %s",inputtext);
					SendClientMessage(playerid, COLOR_REDD, stringer);
					mysql_format(connects,stringer, MAX_STR, "UPDATE `admin` SET  `password` = '%s' WHERE `name` = '%s' LIMIT 1", inputtext, PlayerInfo[playerid][pNames]);
					mysql_empty(connects, stringer);
				}
			}
			return 1;
		}
	case 1227:
		{
			if(!response) return 1;
			switch(GetPVarInt(playerid,"aLogin"))
			{
			case 1:
				{
					if(!strlen(inputtext)|| !strcmp(inputtext, "qwerty", true) || strlen(inputtext) < 6 || strlen(inputtext) > 16 || strfind(inputtext, "=",true) != -1) return SPD(playerid,1227,DIALOG_STYLE_PASSWORD, "{FF6F00}Админ регистрация", "{FFFFFF}Введите пароль\n\nПароль должен состоять из латинских букв и цифр\n размером от 6 до 15 символов", "Вход", "Отмена");
					SetPVarString(playerid,"inputtext",inputtext);
					format(stringer, MAX_STR, "SELECT * FROM `admin` WHERE `name` = '%s'", PlayerInfo[playerid][pNames]);
					mysql_tquery(connects, stringer,"alogin", "ds",playerid,PlayerInfo[playerid][pNames]);
				}
			case 0:
				{
					if(!strlen(inputtext)) return SPD(playerid,1227,DIALOG_STYLE_PASSWORD, "{FF6F00}Админ авторизация", "{FFFFFF}Введите пароль\n\nПароль должен состоять из латинских букв и цифр\n размером от 6 до 15 символов", "Вход", "Отмена");
					mysql_format(connects,stringer, MAX_SQL,"SELECT * FROM `admin` WHERE `name` = '%s' AND `password` = '%e'", PlayerInfo[playerid][pNames], inputtext);
					mysql_tquery(connects, stringer,"password","ds", playerid, inputtext);
				}
			}
			return 1;
		}
	case 333:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: cmd::admins(playerid, "");
			case 1: SPD(playerid, 334, DIALOG_STYLE_INPUT, "{FF6F00}Информация о администраторе", "{FFFFFF}Введите ID администратора, о котором хотите узнать информацию", "Далее", "Выход");
			}
		}

	case 334:
		{
			if(!response) return 1;
			if(sscanf(inputtext, "d",params[0])) return SPD(playerid, 334, DIALOG_STYLE_INPUT, "{FF6F00}Информация о администраторе", "{FFFFFF}Введите ID администратора, о котором хотите узнать информацию", "Далее", "Выход");
			if(!strlen(inputtext)) return SPD(playerid, 334, DIALOG_STYLE_INPUT, "{FF6F00}Информация о администраторе", "{FFFFFF}Вводить можно только цифрами.", "Далее", "Выход");
			for(new i = strlen(inputtext); i != 0; --i)
			{
				switch(inputtext[i])
				{
				case 'А'..'Я', 'а'..'я', '=', ' ': return SPD(playerid, 334, DIALOG_STYLE_INPUT, "{FF6F00}Информация о администраторе", "{FFFFFF}Вы ввели запрещенные символы.", "Далее", "Выход");
				}
			}
			format(stringer, MAX_STR, "SELECT * FROM `admin` WHERE `name` = '%s'", PlayerInfo[params[0]][pNames]);
			mysql_tquery(connects, stringer, "CheckCallback", "dd",playerid,params[0]);
			return 1;
		}

	case 993:
		{
			if ( strlen ( inputtext ) < 2 || strlen ( inputtext ) > 28 ) return SendClientMessage(playerid,-1,"Название семьи не может быть больше 28 или меньше 2 сиволов!");
			mysql_tquery(connects, "SELECT * FROM `family_system`", "family_callback", "ds", playerid, inputtext);
			return 1;
		}
	case 994:
		{
			if( !response ) return 1;
			switch(listitem)
			{
			case 0:
				{
					new dialog_string [ 302+30 ], nationality_string [ 28 ];
					new fam_id = player_family [ playerid ];
					switch( family_info [ fam_id ] [ f_nationality ])
					{
					case 1:nationality_string = "Американцы";
					case 2:nationality_string = "Японцы";
					case 3:nationality_string = "Итальянцы";
					case 4:nationality_string = "Мексиканцы";
					case 5:nationality_string = "Латиноамерикансы";
					case 6:nationality_string = "Испансы";
					case 7:nationality_string = "Русские";
					case 8:nationality_string = "Португальцы";
					case 9:nationality_string = "Французы";
					default:nationality_string = "Неизвестно";
					}
					format(dialog_string,sizeof(dialog_string),"\t{FFFFFF}Семья: {FFDD73}%s\n\n{FFFFFF}Национальность: {FFDD73}%s\n{ffffff}Онлайн: {FFDD73}%d{FFFFFF} игрок(ов)\n{ffffff}Состав семьи: {FFDD73}%d{FFFFFF} игрок(ов)\n{ffffff}Дата образования: {FFDD73}%s{ffffff}\n\n\nСоздатель семьи: {FFDD73}%s",
					family_info [ fam_id ] [ f_name ],nationality_string,family_info [ fam_id ] [ f_online ],family_info [ fam_id ] [ f_members_amount ],family_info [ fam_id ] [ f_creating_data ],family_info [ fam_id ] [ f_creator ]);
					SPD(playerid,995,DIALOG_STYLE_MSGBOX,"{FF6F00}Информация о семье",dialog_string,"Назад","");
				}
			case 1:
				{
					new query_string [ 100 ];
					format ( query_string, sizeof query_string, "SELECT `Name`, `family` FROM `accounts` WHERE `family` = '%d'", player_family [ playerid ]);
					mysql_tquery(connects, query_string, "off_family_members_callback", "i", playerid);
				}
			case 2:
				{
					new ofm_string[ 256 ];
					foreach(new i: Player)
					{
						if(player_family [ i ] == player_family [ playerid ])
						{
							cache_get_field_content(0, "Name", ofm_string, connects);
							strcat(ofm_string,PlayerInfo[i][pNames]);
							strcat(ofm_string,"\n");
						}
					}
					ShowPlayerDialog ( playerid, 996 , DIALOG_STYLE_LIST, "{FF6F00}Члены семьи онлайн", ofm_string, "Назад","" ) ;
				}
			case 3:
				{
					new fm_string [ 128 ];
					format(fm_string,sizeof(fm_string),"[Family: %s] %s[%i] покинул семью!",family_info [ player_family [ playerid ]] [ f_name ], PlayerInfo[playerid][pNames], playerid);
					family_message (player_family [ playerid ], -1, fm_string);
					family_info [ player_family [ playerid ]] [ f_online ] --;
					family_info [ player_family [ playerid ]] [ f_members_amount ] --;
					player_family [ playerid ] = 0;
					UpdatePlayerData(playerid, "family", player_family[playerid]);
				}
			case 4:
				{
					new color_dialog [ 128 ];
					format(color_dialog,sizeof(color_dialog),"{%s}Цвет 1\n{%s}Цвет 2\n{%s}Цвет 3\n{%s}Цвет 4\n{%s}Цвет 5",family_chat_color [ 0 ],family_chat_color [ 1 ],family_chat_color [ 2 ],family_chat_color [ 3 ],family_chat_color [ 4 ]);
					SPD(playerid,997,DIALOG_STYLE_LIST,"{FF6F00}Цвет чата",color_dialog,"Выбрать","Отмена");
				}
			case 5:
				{
					SPD(playerid,998,DIALOG_STYLE_LIST,"{FF6F00}Национальность семьи","{FFFFFF}Американцы\nЯпонцы\nИтальянцы\nМексиканцы\nЛатиноамериканцы\nИспанцы\nРусские\nПортугальцы\nФранцузы","Выбрать","Отмена");
				}
			}
		}
	case 995:
		{
			SPD(playerid,994,DIALOG_STYLE_LIST,"{FF6F00}Меню семьи","{FFFFFF}Информация о семье\nЧлены семьи\nЧлены семьи[{00FF7F}Онлайн{FFFFFF}]\n{8B0000}Покинуть семью{FFFFFF}\nИзменить цвет рации семьи\nИзменить национальность семьи","Выбрать","Отмена");
		}
	case 996:
		{
			SPD(playerid,994,DIALOG_STYLE_LIST,"{FF6F00}Меню семьи","{FFFFFF}Информация о семье\nЧлены семьи\nЧлены семьи[{00FF7F}Онлайн{FFFFFF}]\n{8B0000}Покинуть семью{FFFFFF}\nИзменить цвет рации семьи\nИзменить национальность семьи","Выбрать","Отмена");
		}
	case 997:
		{
			if( !response )return SPD(playerid,994,DIALOG_STYLE_LIST,"{FF6F00}Меню семьи","{FFFFFF}Информация о семье\nЧлены семьи\nЧлены семьи[{00FF7F}Онлайн{FFFFFF}]\n{8B0000}Покинуть семью{FFFFFF}\nИзменить цвет рации семьи\nИзменить национальность семьи","Выбрать","Отмена");
			family_info [ player_family [ playerid ]] [ f_chat_color ] = listitem;
			SPD(playerid,994,DIALOG_STYLE_LIST,"{FF6F00}Меню семьи","{FFFFFF}Информация о семье\nЧлены семьи\nЧлены семьи[{00FF7F}Онлайн{FFFFFF}]\n{8B0000}Покинуть семью{FFFFFF}\nИзменить цвет рации семьи\nИзменить национальность семьи","Выбрать","Отмена");
			SendClientMessage(playerid, -1,"Цвет чата семьи изменён!");
			new query_string [ 128 ];
			format ( query_string, sizeof query_string, "UPDATE `family_system` SET `fam_chat_color` = '%d' WHERE `fam_id` = '%d' LIMIT 1",family_info [ player_family [ playerid ]] [ f_chat_color ], player_family [ playerid ]);
			mysql_empty ( connects, query_string) ;
		}
	case 998:
		{
			if( !response )return SPD(playerid,994,DIALOG_STYLE_LIST,"{FF6F00}Меню семьи","{FFFFFF}Информация о семье\nЧлены семьи\nЧлены семьи[{00FF7F}Онлайн{FFFFFF}]\n{8B0000}Покинуть семью{FFFFFF}\nИзменить цвет рации семьи\nИзменить национальность семьи","Выбрать","Отмена");
			family_info [ player_family [ playerid ]] [ f_nationality ] = listitem + 1;
			SPD(playerid,994,DIALOG_STYLE_LIST,"{FF6F00}Меню семьи","{FFFFFF}Информация о семье\nЧлены семьи\nЧлены семьи[{00FF7F}Онлайн{FFFFFF}]\n{8B0000}Покинуть семью{FFFFFF}\nИзменить цвет рации семьи\nИзменить национальность семьи","Выбрать","Отмена");
			SendClientMessage(playerid, -1,"Национальность семьи изменена!");
			new query_string [ 128 ];
			format ( query_string, sizeof query_string, "UPDATE `family_system` SET `fam_nationality` = '%d' WHERE `fam_id` = '%d' LIMIT 1",family_info [ player_family [ playerid ]] [ f_nationality ], player_family [ playerid ]);
			mysql_empty ( connects, query_string) ;

		}
	case 999:
		{
			if( !response )return 1;
			if(IsPlayerConnected(playerid))
			{
				player_family [ playerid ] = GetPVarInt(playerid,"family_id");
				DeletePVar(playerid,"family_id");
				new text_string [ 128 ];
				format(text_string,sizeof(text_string),"{%s}[Family %s] %s присоединился к семье!",family_chat_color [ family_info [ player_family [ playerid ]] [ f_chat_color ] ],family_info [ player_family [ playerid ] ] [ f_name ],PlayerInfo[playerid][pNames]);
				family_message(player_family [ playerid ],-1, text_string);
				family_info [ player_family [ playerid ] ] [ f_online ] += 1;
				family_info [ player_family [ playerid ] ] [ f_members_amount ] += 1;
				new query_string [ 128 ];
				format ( query_string, sizeof query_string, "UPDATE `family_system` SET `fam_members_amount` = '%d' WHERE `fam_id` = '%d' LIMIT 1",family_info [ player_family [ playerid ] ] [ f_members_amount ], player_family [ playerid ]);
				mysql_empty ( connects, query_string) ;
				UpdatePlayerData(playerid, "family", player_family[playerid]);
			}
		}
	case 2572:
		{
			if(!response)
			{
				DestroyVehicleEx(GetPVarInt(playerid, "buy_dom"));
				SetPlayerPosEx(playerid,1934.5973,-2121.4734,13.6949);
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, true);
				SetPlayerVirtualWorld(playerid,0);
				return 1;
			}
			SPD(playerid,2571,DIALOG_STYLE_MSGBOX,"{FF6F00}Покупка дома на колёсах","{FFFFFF}Нажимайте клавишу 'Далее'.\nДля того что бы сменить цвет Вашему дому.","Далее","Оставить");
		}
	case 2571:
		{
			if(!response)
			{
				SetPlayerPosEx(playerid,1934.5973,-2121.4734,13.6949);
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, true);
				SetPlayerVirtualWorld(playerid,0);
				new Float:xx, Float:yy, Float:zz,Float:cc,str[200];
				new luck = random(4)+1;
				if(luck == 1) { xx = 1626.1143; yy = -1817.9647; zz = 13.2528; cc = 267.0863; }
				if(luck == 2) { xx = 1625.9202; yy = -1814.2561; zz = 13.2528; cc = 267.6018; }
				if(luck == 3) { xx = 1617.0933; yy = -1805.4174; zz = 13.2528; cc = 180.0699; }
				if(luck == 4) { xx = 1616.5590; yy = -1834.4907; zz = 13.2528; cc = 175.2687; }
				if(luck == 5) { xx = 1609.9373; yy = -1834.4243; zz = 13.2392; cc = 174.7100; }
				mysql_format(connects,str,sizeof(str),"UPDATE `accounts` SET CarX='%f',CarY='%f',CarZ='%f',CarC='%f' WHERE `Name` = '%s'",
				xx,yy,zz,cc,PlayerInfo[playerid][pNames]);
				PlayerInfo[playerid][CarPos][0] = xx;
				PlayerInfo[playerid][CarPos][1] = yy;
				PlayerInfo[playerid][CarPos][2] = zz;
				PlayerInfo[playerid][CarPos][3] = cc;
				PlayerInfo[playerid][pCash] -= 150000;
				PlayerInfo[playerid][pCar][0] = 508;
				vehicle_components_add[playerid][0][0] = GetPVarInt(playerid, "house_color"), vehicle_components_add[playerid][0][1] = GetPVarInt(playerid, "house_color");
				caridhouse[playerid] = CreateVehicleEx(PlayerInfo[playerid][pCar][0], PlayerInfo[playerid][CarPos][0],PlayerInfo[playerid][CarPos][1],PlayerInfo[playerid][CarPos][2],PlayerInfo[playerid][CarPos][3], vehicle_components_add[playerid][0][0], vehicle_components_add[playerid][0][1],7200);
                format(c_vehicle_components_add[playerid][0],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][0][0],vehicle_components_add[playerid][0][1],vehicle_components_add[playerid][0][2],vehicle_components_add[playerid][0][3],vehicle_components_add[playerid][0][4],
				vehicle_components_add[playerid][0][5],vehicle_components_add[playerid][0][6],vehicle_components_add[playerid][0][7],
				vehicle_components_add[playerid][0][8],vehicle_components_add[playerid][0][9],vehicle_components_add[playerid][0][10],vehicle_components_add[playerid][0][11],vehicle_components_add[playerid][0][12],vehicle_components_add[playerid][0][13]);
				UpdatePlayerData(playerid, "pCar", PlayerInfo[playerid][pCar][0]), UpdatePlayerDataEx(playerid, "cVehcom", c_vehicle_components_add[playerid][0]);
				LockCar(caridhouse[playerid]);
				VehInfo[caridhouse[playerid]][vFuel] = PlayerInfo[playerid][pFuelcar]+20;
				SetVehicleNumberPlate(caridhouse[playerid], PlayerInfo[playerid][pNumbercar]);
				SendClientMessage(playerid,COLOR_GREY,"Вы успешно приобрели Дом на колесах, Он был отбуксирован в {269BD8}г.Лос Сантос.");
				SendClientMessage(playerid,COLOR_GREY,"Что бы узнать местонахождение вашего Дома на колесах, напишите команду {269BD8}/dhouse.");
				return 1;
			}
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 508) return 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			GivePVarInt(playerid, "house_color", 1);
			ChangeVehicleColor(vehicleid, GetPVarInt(playerid, "house_color"), GetPVarInt(playerid, "house_color"));
			SPD(playerid,2571,DIALOG_STYLE_MSGBOX,"{FF6F00}Покупка дома на колёсах","{FFFFFF}Нажимайте клавишу 'Далее'.\nДля того что бы сменить цвет Вашему дому.","Далее","Оставить");
		}
	case 5321:
		{
			if(!response) return 1;
			new house = PlayerInfo[playerid][pHouse];
			if(HouseInfo[house][hGunAmmo][0] < strval(inputtext)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}В Вашем доме нет столько патронов");
			if(strval(inputtext) < 1 || strval(inputtext) > 9999) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя брать меньше 1 и больше 9999");
			GivePlayerWeaponAC(playerid, HouseInfo[house][hGun][0], strval(inputtext));
			HouseInfo[house][hGun][0] = 24; HouseInfo[house][hGunAmmo][0] -= strval(inputtext); cmd::hm(playerid);
			SCMF(playerid, COLOR_BLUE, "Вы успешно взяли оружие с %i патронами", strval(inputtext));
			return 1;
		}
	case 5322:
		{
			if(!response) return 1;
			new house = PlayerInfo[playerid][pHouse];
			if(HouseInfo[house][hGunAmmo][1] < strval(inputtext)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}В Вашем доме нет столько патронов");
			if(strval(inputtext) < 1 || strval(inputtext) > 9999) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя брать меньше 1 и больше 9999");
			GivePlayerWeaponAC(playerid, HouseInfo[house][hGun][1], strval(inputtext));
			HouseInfo[house][hGun][1] = 25; HouseInfo[house][hGunAmmo][1] -= strval(inputtext); cmd::hm(playerid);
			SCMF(playerid, COLOR_BLUE, "Вы успешно взяли оружие с %i патронами", strval(inputtext));
			return 1;
		}
	case 5323:
		{
			if(!response) return 1;
			new house = PlayerInfo[playerid][pHouse];
			if(HouseInfo[house][hGunAmmo][2] < strval(inputtext)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}В Вашем доме нет столько патронов");
			if(strval(inputtext) < 1 || strval(inputtext) > 9999) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя брать меньше 1 и больше 9999");
			GivePlayerWeaponAC(playerid, HouseInfo[house][hGun][2], strval(inputtext));
			HouseInfo[house][hGun][2] = 30; HouseInfo[house][hGunAmmo][2] -= strval(inputtext); cmd::hm(playerid);
			SCMF(playerid, COLOR_BLUE, "Вы успешно взяли оружие с %i патронами", strval(inputtext));
			return 1;
		}
	case 5325:
		{
			if(!response) return 1;
			new house = PlayerInfo[playerid][pHouse];
			if(HouseInfo[house][hGunAmmo][3] < strval(inputtext)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}В Вашем доме нет столько патронов");
			if(strval(inputtext) < 1 || strval(inputtext) > 9999) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя брать меньше 1 и больше 9999");
			GivePlayerWeaponAC(playerid, HouseInfo[house][hGun][3], strval(inputtext));
			HouseInfo[house][hGun][3] = 31; HouseInfo[house][hGunAmmo][3] -= strval(inputtext); cmd::hm(playerid);
			SCMF(playerid, COLOR_BLUE, "Вы успешно взяли оружие с %i патронами", strval(inputtext));
			return 1;
		}
	case 5326:
		{
			if(!response) return 1;
			new house = PlayerInfo[playerid][pHouse];
			if(HouseInfo[house][hGunAmmo][4] < strval(inputtext)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}В Вашем доме нет столько патронов");
			if(strval(inputtext) < 1 || strval(inputtext) > 9999) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя брать меньше 1 и больше 9999");
			GivePlayerWeaponAC(playerid, HouseInfo[house][hGun][4], strval(inputtext));
			HouseInfo[house][hGun][4] = 29; HouseInfo[house][hGunAmmo][4] -= strval(inputtext); cmd::hm(playerid);
			SCMF(playerid, COLOR_BLUE, "Вы успешно взяли оружие с %i патронами", strval(inputtext));
			return 1;
		}
	case 5320:
		{
			if(!response) return cmd::hm(playerid);
			new house = PlayerInfo[playerid][pHouse];
			switch(listitem)
			{
			case 0:
				{
					format(stringer, MAX_STR, "{FFFFFF}Наркотиков в доме: %i гр.\n\nВы хотите взять или положить наркотики?",HouseInfo[house][hNarko]);
					SPD(playerid,5305,0,"{FF6F00}Наркотики:",stringer,"Взять","Положить");
					return 1;
				}
			case 1:
				{
					if(HouseInfo[house][hGun][0] == 0) return SendClientMessage(playerid,COLOR_GRAD1,"В Вашем доме нет пистолетов");
					SPD(playerid, 5321, DIALOG_STYLE_INPUT, "{FF6F00}Домашний сейф", "{FFFFFF}Введите сколько патронов Вы хотите взять:", "Взять","Отмена");
				}
			case 2:
				{
					if(HouseInfo[house][hGun][1] == 0) return SendClientMessage(playerid,COLOR_GRAD1,"В Вашем доме нет дробовиков");
					SPD(playerid, 5322, DIALOG_STYLE_INPUT, "{FF6F00}Домашний сейф", "{FFFFFF}Введите сколько патронов Вы хотите взять:", "Взять","Отмена");
				}
			case 3:
				{
					if(HouseInfo[house][hGun][2] == 0) return SendClientMessage(playerid,COLOR_GRAD1,"В Вашем доме нет AK47");
					SPD(playerid, 5323, DIALOG_STYLE_INPUT, "{FF6F00}Домашний сейф", "{FFFFFF}Введите сколько патронов Вы хотите взять:", "Взять","Отмена");
				}
			case 4:
				{
					if(HouseInfo[house][hGun][3] == 0) return SendClientMessage(playerid,COLOR_GRAD1,"В Вашем доме нет M4");
					SPD(playerid, 5325, DIALOG_STYLE_INPUT, "{FF6F00}Домашний сейф", "{FFFFFF}Введите сколько патронов Вы хотите взять:", "Взять","Отмена");
				}
			case 5:
				{
					if(HouseInfo[house][hGun][4] == 0) return SendClientMessage(playerid,COLOR_GRAD1,"В Вашем доме нет MP5");
					SPD(playerid, 5326, DIALOG_STYLE_INPUT, "{FF6F00}Домашний сейф", "{FFFFFF}Введите сколько патронов Вы хотите взять:", "Взять","Отмена");
				}
			case 6:
				{
				    if(GetPlayerWeapon(playerid) != 0)
				    {
						new Weap[8];
						GetPlayerWeaponData(playerid, 2, Weap[0], Weap[1]);
						GetPlayerWeaponData(playerid, 3, Weap[2], Weap[3]);
						GetPlayerWeaponData(playerid, 5, Weap[4], Weap[5]);
						GetPlayerWeaponData(playerid, 4, Weap[6], Weap[7]);
						if(Weap[0] !=0)
						{
							HouseInfo[house][hGun][0]  = Weap[0];
							HouseInfo[house][hGunAmmo][0]  += Weap[1];
							SendClientMessage(playerid,COLOR_BLUE,"Вы положили пистолет в сейф");
						}
						if(Weap[2] == 25)
						{
							HouseInfo[house][hGun][1]  = Weap[2];
							HouseInfo[house][hGunAmmo][1] += Weap[3];
							SendClientMessage(playerid,COLOR_BLUE,"Вы положили дробовик в сейф");
						}
						if(Weap[4] == 30)
						{
							HouseInfo[house][hGun][2]  = Weap[4];
							HouseInfo[house][hGunAmmo][2]  += Weap[5];
							SendClientMessage(playerid,COLOR_BLUE,"Вы положили AK47 в сейф");
						}
						if(Weap[4] == 31)
						{
							HouseInfo[house][hGun][3]  = Weap[4];
							HouseInfo[house][hGunAmmo][3]  += Weap[5];
							SendClientMessage(playerid,COLOR_BLUE,"Вы положили M4 в сейф");
						}
						if(Weap[6] ==29)
						{
							HouseInfo[house][hGun][4]  = Weap[6];
							HouseInfo[house][hGunAmmo][4]  += Weap[7];
							SendClientMessage(playerid,COLOR_BLUE,"Вы положили MP5 в сейф");
						}
						SaveHouse(house);
						ResetPlayerWeapons(playerid);
						cmd::hm(playerid);
					}
				}
			}
			return 1;
		}
	case 5305:
		{
			if(response) return SPD(playerid,5306,DIALOG_STYLE_INPUT,"{FF6F00}Взять наркотики","{FFFFFF}Введите количество наркотиков, в строчку ниже:","Принять","Отмена");
			else return SPD(playerid,5307,DIALOG_STYLE_INPUT,"{FF6F00}Положить наркотики","{FFFFFF}Введите количество наркотиков, в строчку ниже:","Принять","Отмена");
		}
	case 5307:
		{
			new put;
			put = strval(inputtext);
			if(!response)return cmd::hm(playerid);
			if(put < 1 || put > 1000) return SendClientMessage(playerid, COLOR_GREY, "Допустимые значения: 1 - 1000");
			if(PlayerInfo[playerid][pDrugs] < put) return SendClientMessage(playerid,COLOR_GRAD1,"У вас недостаточно наркотиков");
			if(HouseInfo[PlayerInfo[playerid][pHouse]][hNarko] >= 150) return SendClientMessage(playerid,COLOR_GRAD1,"Вы не можете положить больше.");
			SCMF(playerid,COLOR_BLUE,"Вы положили: %i грамм(а) наркотиков",put);
			PlayerInfo[playerid][pDrugs] -=put;
			HouseInfo[PlayerInfo[playerid][pHouse]][hNarko] +=put;
			return 1;
		}
	case 5306:
		{
			new put;
			put = strval(inputtext);
			if(!response)return cmd::hm(playerid);
			if(put < 1 || put > 100) return SendClientMessage(playerid, COLOR_GREY, "Допустимые значения: 1 - 100");
			if(HouseInfo[PlayerInfo[playerid][pHouse]][hNarko]< put) return SendClientMessage(playerid,COLOR_GRAD1,"Нет столько наркотиков в доме.");
			if(PlayerInfo[playerid][pDrugs] >= 1000) return SendClientMessage(playerid,COLOR_GRAD1,"Вы не можете взять больше");
			SCMF(playerid,COLOR_BLUE,"Вы взяли: %i грамм(а) наркотиков",put);
			PlayerInfo[playerid][pDrugs] +=put;
			HouseInfo[PlayerInfo[playerid][pHouse]][hNarko] -=put;
			return 1;
		}
	case 2323:
		{
			new x;
			switch(GetPVarInt(playerid,"AutoShop"))
			{
			case 3,4: x = 2;
			}
			if(response) SetPVarInt(playerid,"CarShop",x+1);
			else SetPVarInt(playerid,"CarShop",x+2);
			ShowBuyCar(playerid);
			return 1;
		}
	case 2324:
		{
			if(!response)
			{
				if(PlayerInfo[playerid][pBank] < ShopCar[GetPVarInt(playerid, "SelectAvto")][1]) return SCM(playerid,COLOR_WHITE,"На вашем банковском счету недостаточно денег!");
				PlayerInfo[playerid][pCar][1] = ShopCar[GetPVarInt(playerid, "SelectAvto")][0];
				UpdatePlayerData(playerid, "pCar2", PlayerInfo[playerid][pCar][1]);
				vehicle_components_add[playerid][1][0] = GetPVarInt(playerid,"BuyColor"), vehicle_components_add[playerid][1][1] = GetPVarInt(playerid,"BuyColor1");
    			format(c_vehicle_components_add[playerid][1],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][1][0],vehicle_components_add[playerid][1][1],vehicle_components_add[playerid][1][2],vehicle_components_add[playerid][1][3],vehicle_components_add[playerid][1][4],
				vehicle_components_add[playerid][1][5],vehicle_components_add[playerid][1][6],vehicle_components_add[playerid][1][7],
				vehicle_components_add[playerid][1][8],vehicle_components_add[playerid][1][9],vehicle_components_add[playerid][1][10],vehicle_components_add[playerid][1][11],vehicle_components_add[playerid][1][12],vehicle_components_add[playerid][1][13]);
				UpdatePlayerDataEx(playerid, "cVehcom2", c_vehicle_components_add[playerid][1]);
				PlayerInfo[playerid][pBank] -= ShopCar[GetPVarInt(playerid, "SelectAvto")][1];
				PlayerInfo[playerid][pCarCash][1] = ShopCar[GetPVarInt(playerid, "SelectAvto")][1];
				UpdatePlayerData(playerid, "pCarCash2", PlayerInfo[playerid][pCarCash][1]);
				ExitCar(playerid);
				return 1;
			}
			if(PlayerInfo[playerid][pBank] < ShopCar[GetPVarInt(playerid, "SelectAvto")][1]) return SCM(playerid,COLOR_WHITE,"На вашем банковском счету недостаточно денег!");
			PlayerInfo[playerid][pCar][0] = ShopCar[GetPVarInt(playerid, "SelectAvto")][0];
			UpdatePlayerData(playerid, "pCar", PlayerInfo[playerid][pCar][0]);
			vehicle_components_add[playerid][0][0] = GetPVarInt(playerid,"BuyColor"), vehicle_components_add[playerid][0][1] = GetPVarInt(playerid,"BuyColor1");
   			format(c_vehicle_components_add[playerid][0],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][0][0],vehicle_components_add[playerid][0][1],vehicle_components_add[playerid][0][2],vehicle_components_add[playerid][0][3],vehicle_components_add[playerid][0][4],
			vehicle_components_add[playerid][0][5],vehicle_components_add[playerid][0][6],vehicle_components_add[playerid][0][7],
			vehicle_components_add[playerid][0][8],vehicle_components_add[playerid][0][9],vehicle_components_add[playerid][0][10],vehicle_components_add[playerid][0][11],vehicle_components_add[playerid][0][12],vehicle_components_add[playerid][0][13]);
			UpdatePlayerDataEx(playerid, "cVehcom", c_vehicle_components_add[playerid][0]);
			PlayerInfo[playerid][pBank] -= ShopCar[GetPVarInt(playerid, "SelectAvto")][1];
			PlayerInfo[playerid][pCarCash][0] = ShopCar[GetPVarInt(playerid, "SelectAvto")][1];
			UpdatePlayerData(playerid, "pCarCash", PlayerInfo[playerid][pCarCash][0]);
			ExitCar(playerid);
			return 1;
		}
	case 2425:
		{
			if(!response) return 1;
			ExitCar(playerid);
			return 1;
		}
	case 2426:
		{
			if(!response) return  SelectTextDraw(playerid, 0x0080FFFF);
			ExitCar(playerid);
			return 1;
		}
	case 23:
		{
			new house = PlayerInfo[playerid][pHouse];
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(HouseInfo[house][hBal][0] < 1) return SCM(playerid, COLOR_GREY, "В гараже закончились балончики черного цвета.");
					HouseInfo[house][hBal][0] -= 1;
					balonCraska[playerid] = 0;
					ProsInfo[playerid][caridhouse[playerid]] = 0;
					RemovePlayerWeapon(playerid,41);
					GivePlayerWeaponAC(playerid,41,500);
					SCM(playerid,0x5A8285FF,"Вы успешно взяли балончик с краской");
					SCM(playerid,0x5A8285FF,"Теперь подойдите к вашей машине и начните красить (ЛКМ)");
				}
			case 1:
				{
					if(HouseInfo[house][hBal][1] < 1) return SCM(playerid, COLOR_GREY, "В гараже закончились балончики красного цвета.");
					HouseInfo[house][hBal][1] -= 1;
					balonCraska[playerid] = 3;
					ProsInfo[playerid][caridhouse[playerid]] = 0;
					RemovePlayerWeapon(playerid,41);
					GivePlayerWeaponAC(playerid,41,500);
					SCM(playerid,0x5A8285FF,"Вы успешно взяли балончик с краской");
					SCM(playerid,0x5A8285FF,"Теперь подойдите к вашей машине и начните красить (ЛКМ)");
				}
			case 2:
				{
					if(HouseInfo[house][hBal][2] < 1) return SCM(playerid, COLOR_GREY, "В гараже закончились балончики синего цвета.");
					HouseInfo[house][hBal][2] -= 1;
					balonCraska[playerid] = 106;
					ProsInfo[playerid][caridhouse[playerid]] = 0;
					RemovePlayerWeapon(playerid,41);
					GivePlayerWeaponAC(playerid,41,500);
					SCM(playerid,0x5A8285FF,"Вы успешно взяли балончик с краской");
					SCM(playerid,0x5A8285FF,"Теперь подойдите к вашей машине и начните красить (ЛКМ)");
				}
			case 3:
				{
					if(HouseInfo[house][hBal][3] < 1) return SCM(playerid, COLOR_GREY, "В гараже закончились балончики зеленого цвета.");
					HouseInfo[house][hBal][3] -= 1;
					balonCraska[playerid] = 86;
					ProsInfo[playerid][caridhouse[playerid]] = 0;
					RemovePlayerWeapon(playerid,41);
					GivePlayerWeaponAC(playerid,41,500);
					SCM(playerid,0x5A8285FF,"Вы успешно взяли балончик с краской");
					SCM(playerid,0x5A8285FF,"Теперь подойдите к вашей машине и начните красить (ЛКМ)");
				}
			}
			return SaveHouse(house);
		}
	case 7166:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext);
			if(put < 1 || put > 50000) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Допустимые значения: 1 - 50000");
			switch(PlayerInfo[playerid][pMRInections])
			{
			case 12:
				{
					if(FracBank[0][fBallas] < put) return SCM(playerid,0x65969AAA,"В банке банды нет столько денег");
					FracBank[0][fBallas] -=put;
				}
			case 13:
				{
					if(FracBank[0][fVagos] < put) return SCM(playerid,0x65969AAA,"В банке банды нет столько денег");
					FracBank[0][fVagos] -=put;
				}
			case 15:
				{
					if(FracBank[0][fGrove] < put) return SCM(playerid,0x65969AAA,"В банке банды нет столько денег");
					FracBank[0][fGrove] -=put;
				}
			case 17:
				{
					if(FracBank[0][fAztek] < put) return SCM(playerid,0x65969AAA,"В банке банды нет столько денег");
					FracBank[0][fAztek] -=put;
				}
			case 18:
				{
					if(FracBank[0][fRifa] < put) return SCM(playerid,0x65969AAA,"В банке банды нет столько денег");
					FracBank[0][fRifa] -=put;
				}
			}
			SCMF(playerid,COLOR_BLUE,"Вы взяли из банка своей банды: $%i",put);
			GiveMoney(playerid,put);
			ObshiakGang();
			return 1;
		}
	case 7167:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext);
			if(put < 1 || put > 1000000) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Допустимые значения: 1 - 1000000");
			switch(PlayerInfo[playerid][pMRInections])
			{
			case 12:
				{
					if(PlayerInfo[playerid][pCash] < put) return SCM(playerid,0x65969AAA,"Недостаточно средств.");
					FracBank[0][fBallas] +=put;
				}
			case 13:
				{
					if(PlayerInfo[playerid][pCash] < put) return SCM(playerid,0x65969AAA,"Недостаточно средств.");
					FracBank[0][fVagos] +=put;
				}
			case 15:
				{
					if(PlayerInfo[playerid][pCash] < put) return SCM(playerid,0x65969AAA,"Недостаточно средств.");
					FracBank[0][fGrove] +=put;
				}
			case 17:
				{
					if(PlayerInfo[playerid][pCash] < put) return SCM(playerid,0x65969AAA,"Недостаточно средств.");
					FracBank[0][fAztek] +=put;
				}
			case 18:
				{
					if(PlayerInfo[playerid][pCash] < put) return SCM(playerid,0x65969AAA,"Недостаточно средств.");
					FracBank[0][fRifa] +=put;
				}
			}
			SCMF(playerid,COLOR_BLUE,"Вы положили в банк своей банды: $%i",put);
			GiveMoney(playerid,-put);
			ObshiakGang();
			return 1;
		}
	case 7168:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext);
			if(put < 1 || put > 500) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Допустимые значения: 1 - 500");
			if(PlayerInfo[playerid][pMats]+put > 1000) return SCM(playerid,0x65969AAA,"Вы не можете взять больше");
			switch(PlayerInfo[playerid][pMRInections])
			{
			case 12:
				{
					if(ballasmatbi < put) return SCM(playerid,0xB30000AA,"На складе нет столько материалов.");
					ballasmatbi -=put;
				}
			case 13:
				{
					if(vagosmatbi < put) return SCM(playerid,0xB30000AA,"На складе нет столько материалов.");
					vagosmatbi -=put;
				}
			case 15:
				{
					if(groovmatbi < put) return SCM(playerid,0xB30000AA,"На складе нет столько материалов.");
					groovmatbi -=put;
				}
			case 17:
				{
					if(aztekmatbi < put) return SCM(playerid,0xB30000AA,"На складе нет столько материалов.");
					aztekmatbi -=put;
				}
			case 18:
				{
					if(rifamatbi < put) return SCM(playerid,0xB30000AA,"На складе нет столько материалов.");
					rifamatbi -=put;
				}
			}
			PlayerInfo[playerid][pMats] +=put;
			SCMF(playerid,COLOR_BLUE,"Вы взяли со склада своей банды: %i материалов",put);
			format(stringer, MAX_STR, "%s взял(а) со склада банды %i материалов",PlayerInfo[playerid][pNames], put);
			SendFamilyMessage(PlayerInfo[playerid][pMRInections], 0x0080C0AA, stringer);
			format(stringer, MAX_STR, "взял(а) со склада банды материалы", PlayerInfo[playerid][pNames]);
			MeAction(playerid, stringer);
			ObshiakGang();
			return 1;
		}
	case 7169:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext);
			if(put < 1 || put > 1000) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Допустимые значения: 1 - 1000");
			if(PlayerInfo[playerid][pMats] < put) return SCM(playerid,0xBB0000AA,"Недостаточно материалов.");
			switch(PlayerInfo[playerid][pMRInections])
			{
			case 12:
				{
					if(ballasmatbi >=50000) return SCM(playerid,0x65969AAA,"Склад заполнен.");
					ballasmatbi +=put;
				}
			case 13:
				{
					if(vagosmatbi >=50000) return SCM(playerid,0x65969AAA,"Склад заполнен.");
					vagosmatbi +=put;
				}
			case 15:
				{
					if(groovmatbi >=50000) return SCM(playerid,0x65969AAA,"Склад заполнен.");
					groovmatbi +=put;
				}
			case 17:
				{
					if(aztekmatbi >=50000) return SCM(playerid,0x65969AAA,"Склад заполнен.");
					aztekmatbi +=put;
				}
			case 18:
				{
					if(rifamatbi >=50000) return SCM(playerid,0x65969AAA,"Склад заполнен.");
					rifamatbi +=put;
				}
			}
			PlayerInfo[playerid][pMats] -=put;
			SCMF(playerid,COLOR_BLUE,"Вы положили на склад своей банды: %i материалов",put);
			format(stringer, MAX_STR, "%s положил(а) на склад банды %i материалов",PlayerInfo[playerid][pNames], put);
			SendFamilyMessage(PlayerInfo[playerid][pMRInections], 0x0080C0AA, stringer);
			format(stringer, MAX_STR, "положил(а) на склад банды материалы", PlayerInfo[playerid][pNames]);
			MeAction(playerid, stringer);
			ObshiakGang();
			return 1;
		}
	case 7171:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SPD(playerid,7169,DIALOG_STYLE_INPUT,"{FF6F00}Положить материалы:","{FFFFFF}Введите количество в строчку ниже:","Ок","Назад");
			case 1:
				{
					if(PlayerInfo[playerid][pRKInections] < 3) return SCM(playerid,0x65969AAA,"Вам нужен 3 ранг");
					SPD(playerid,7168,DIALOG_STYLE_INPUT,"{FF6F00}Взять материалы:","{FFFFFF}Введите количество в строчку ниже:","Ок","Назад");
				}
			case 2: SPD(playerid,7167,DIALOG_STYLE_INPUT,"{FF6F00}Положить деньги:","{FFFFFF}Введите количество в строчку ниже:","Ок","Назад");
			case 3:
				{
					if(PlayerInfo[playerid][pLRInections] == 0) return SCM(playerid,0x65969AAA,"Вы не являетесь лидером.");
					SPD(playerid,7166,DIALOG_STYLE_INPUT,"{FF6F00}Взять деньги:","{FFFFFF}Введите количество в строчку ниже:","Ок","Назад");
				}
			case 4:
				{
					for(new i =0;i<sizeof(VladGzone);i++)  VladGzone[i] = 0;
					for(new i =0;i<sizeof(GZInfo);i++)
					{
						switch(GZInfo[i][gFrakVlad])
						{
							case 12: VladGzone[0] +=1;
							case 13: VladGzone[1] +=1;
							case 15: VladGzone[2] +=1;
							case 17: VladGzone[3] +=1;
							case 18: VladGzone[4] +=1;
						}
					}
					new stat[290];
					switch(PlayerInfo[playerid][pMRInections])
					{
						case 12:format(stat, 290, "{FFFFFF}Территории под контролем: %i\nВ час банда зарабатывает: {37F222}$%i\n\n{FFFFFF}На складе: %i м.\nВ банке банды: {37F222}$%i",VladGzone[0],200*VladGzone[0],ballasmatbi,FracBank[0][fBallas]);
						case 13:format(stat, 290, "{FFFFFF}Территории под контролем: %i\nВ час банда зарабатывает: {37F222}$%i\n\n{FFFFFF}На складе: %i м.\nВ банке банды: {37F222}$%i",VladGzone[1],200*VladGzone[1],vagosmatbi,FracBank[0][fVagos]);
						case 17:format(stat, 290, "{FFFFFF}Территории под контролем: %i\nВ час банда зарабатывает: {37F222}$%i\n\n{FFFFFF}На складе: %i м.\nВ банке банды: {37F222}$%i",VladGzone[3],200*VladGzone[3],aztekmatbi,FracBank[0][fAztek]);
						case 18:format(stat, 290, "{FFFFFF}Территории под контролем: %i\nВ час банда зарабатывает: {37F222}$%i\n\n{FFFFFF}На складе: %i м.\nВ банке банды: {37F222}$%i",VladGzone[4],200*VladGzone[4],rifamatbi,FracBank[0][fRifa]);
						case 15:format(stat, 290, "{FFFFFF}Территории под контролем: %i\nВ час банда зарабатывает: {37F222}$%i\n\n{FFFFFF}На складе: %i м.\nВ банке банды: {37F222}$%i",VladGzone[2],200*VladGzone[2],groovmatbi,FracBank[0][fGrove]);
					}
					SPD(playerid,2234,DIALOG_STYLE_MSGBOX, "{FF6F00}Статистика:",stat,"Принять","");
				}
			}
			return 1;
		}
	case 8238:
		{
			if(!response) return 1;
			for(new i = strlen(inputtext); i != 0; --i)
			{
				switch(inputtext[i])
				{
				case 'А'..'Я', 'а'..'я', '=', ' ': return SPD(playerid, 8238, DIALOG_STYLE_INPUT, "{FF6F00}Покупка номерного знака","{FFFFFF}Введите номер, который хотите поставить на автомобиль","Повтор","Выход");
				}
			}
			if(!strlen(inputtext)) return SPD(playerid, 8238, DIALOG_STYLE_INPUT, "{FF6F00}Покупка номерного знака","{FFFFFF}Введите номер, который хотите поставить на автомобиль","Повтор","Выход");
			if(strval(inputtext) > 6) return SPD(playerid, 8238, DIALOG_STYLE_INPUT, "{FF6F00}Покупка номерного знака","{FFFFFF}Максимальное числов символов для ввода: 6 (шесть).","Повтор","Выход");
			SCMF(playerid, COLOR_GREEN, "Номерной знак %s успешно куплен. Установить его Вы можете в гараже Вашего дома.",(inputtext));
			PlayerInfo[playerid][pNumbercar] = strval(inputtext);
			UpdatePlayerDataEx(playerid, "pNumbercar", PlayerInfo[playerid][pNumbercar]);
			return 1;
		}
	case 8239:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][0]) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств.");
			if(PlayerInfo[playerid][pHouse] == -1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У вас нет дома");
			#define house PlayerInfo[playerid][pHouse]
			HouseInfo[house][hKolesa] ++;
			PlayerInfo[playerid][pCash] -= BizInfo[BizEnter{playerid}][bCena][0];
			SCMF(playerid, COLOR_WHITE, "Вы успешно приобрели колеса {FF6F00}\"SWITCH\"{FFFFFF} за {FF6F00}%d${FFFFFF}", BizInfo[BizEnter{playerid}][bCena][0]);
			SCM(playerid, COLOR_GREEN, "Установить колеса Вы можете у себя в доме. {FF6F00}(В гараже)");
			#undef house
			return 1;
		}
	case 8244:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][1]) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств.");
			if(PlayerInfo[playerid][pHouse] == -1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У вас нет дома");
			if(HouseInfo[PlayerInfo[playerid][pHouse]][hBenz] == 12) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Ваш гараж полон. (Максимальное количество канистр - 12");
			#define house PlayerInfo[playerid][pHouse]
			HouseInfo[house][hBenz] += 6;
			PlayerInfo[playerid][pCash] -= BizInfo[BizEnter{playerid}][bCena][1];
			SCMF(playerid, COLOR_WHITE, "Вы успешно приобрели {FF6F00}\"6 канистр(60 литров) бензина\"{FFFFFF} за {FF6F00}%d${FFFFFF}", BizInfo[BizEnter{playerid}][bCena][1]);
			SCM(playerid, COLOR_GREEN, "Пополнить свой бак и воспользоватся канистрой Вы можете в гараже.");
			#undef house
			return 1;

		}
	case 8245:
		{
			if(!response) return 1;
			#define house PlayerInfo[playerid][pHouse]
			if(house == -1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет дома");
			switch(listitem)
			{
			case 0:
				{
				    if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][2]) return SCMF(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет %d$",BizInfo[BizEnter{playerid}][bCena][2]);
					HouseInfo[house][hBal][0] += 1;
					SCM(playerid,0x8D8DFF00,"Вы успешно приобрели балончик с краской.");
					PlayerInfo[playerid][pCash] -= BizInfo[BizEnter{playerid}][bCena][2];
				}
			case 1:
				{
				    if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][3]) return SCMF(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет %d$",BizInfo[BizEnter{playerid}][bCena][3]);
					HouseInfo[house][hBal][1] += 1;
					SCM(playerid,0x8D8DFF00,"Вы успешно приобрели балончик с краской.");
					PlayerInfo[playerid][pCash] -= BizInfo[BizEnter{playerid}][bCena][3];
				}
			case 2:
				{
				    if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][4]) return SCMF(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет %d$",BizInfo[BizEnter{playerid}][bCena][4]);
					HouseInfo[house][hBal][2] += 1;
					SCM(playerid,0x8D8DFF00,"Вы успешно приобрели балончик с краской.");
					PlayerInfo[playerid][pCash] -= BizInfo[BizEnter{playerid}][bCena][4];
				}
			case 3:
				{
				    if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][5]) return SCMF(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет %d$",BizInfo[BizEnter{playerid}][bCena][5]);
					HouseInfo[house][hBal][3] += 1;
					SCM(playerid,0x8D8DFF00,"Вы успешно приобрели балончик с краской.");
					PlayerInfo[playerid][pCash] -= BizInfo[BizEnter{playerid}][bCena][5];
				}
			}
			SaveHouse(house);
			#undef house
			return 1;
		}
	case 2283:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: return 1; //SPD(playerid, 8238, DIALOG_STYLE_INPUT, "{FF6F00}Покупка номерного знака","{FFFFFF}Введите номер, который хотите поставить на автомобиль","Принять","Выход");
				case 1:
				{
				    stringer="";
				    format(stringer, BIG_SIZE,"{FFFFFF}Колеса - {FF6F00}SWITCH.{FFFFFF}\nСтоимость: {FF6F00}%d${FFFFFF}\nМодель - {FF6F00}Sport{FFFFFF}\nЦвет литья - {FF6F00}Оранжевый{FFFFFF}\nОсобенности - {FF6F00}Не продаются в Автомастерских{FFFFFF}\n\nВы хотите приобрести колеса?", BizInfo[BizEnter{playerid}][bCena][0]);
					SPD(playerid, 8239, DIALOG_STYLE_MSGBOX, "{FF6F00}Покупка колес SWITCH",stringer,"Купить","Выход");
				}
				case 2:
				{
				    stringer="";
				    format(stringer, BIG_SIZE, "{FFFFFF}Тип - {FF6F00}Жидкость.{FFFFFF}\nСтоимость: {FF6F00}%d${FFFFFF}\nКоличество - {FF6F00}6 канистр ( 60 литров ){FFFFFF}\nОсобенности - {FF6F00}Не продаются на Заправках{FFFFFF}\n\nВы хотите приобрести канистры?", BizInfo[BizEnter{playerid}][bCena][1]);
					SPD(playerid, 8244, DIALOG_STYLE_MSGBOX, "{FF6F00}Покупка канистр с бензином",stringer,"Купить","Выход");
				}
				case 3:
				{
					format(stringer, MAX_STR,"» {FFFFFF}Черный балончик [%d$]\n» Красный балончик [%d$]\n» Синий балончик [%d$]\n» Зеленый балончик [%d$]", BizInfo[BizEnter{playerid}][bCena][2], BizInfo[BizEnter{playerid}][bCena][3], BizInfo[BizEnter{playerid}][bCena][4], BizInfo[BizEnter{playerid}][bCena][5]);
					SPD(playerid, 8245, DIALOG_STYLE_LIST, "{FF6F00}Покупка балончиков с краской",stringer,"Принять","Выход");
				}
			}
			return 1;
		}
	case 5301:
		{
			if(!response) return 1;
			SPD(playerid, 5300, DIALOG_STYLE_LIST, "{FF6F00}Панель управления домом", "{FFFFFF}» Открыть / Закрыть (Дом)\n» Продать дом государству\n» Ремонт\n» Установка деталей на автомобиль\n» Вещи в гараже\n» Перекраска домашнего автомобиля\n» Домашний сейф\n» Покупка улучшений", "Выбрать", "Отмена");
			return 1;
		}
	case 2929:
		{
			if(!response) return 1;
			new bouse = PlayerInfo[playerid][pBusiness];
			if (bouse == -1) return 1;
			if(!strlen(inputtext)) return SPD(playerid,2929,DIALOG_STYLE_INPUT,"Перевод денег на счёт бизнеса","Введите сумму,которую хотите перевести.","Ok","Отмена");
			if(strval(inputtext) < 1000 || strval(inputtext) > 1000000) return SCM(playerid, -1, "Минимальная сумма $1000, максимальная - $1000000!");
			if(PlayerInfo[playerid][pBank] < strval(inputtext)) return	SCM(playerid, -1, "У вас нет столько денег!");
			BizInfo[bouse][bBank] += strval(inputtext);
			PlayerInfo[playerid][pBank] -= strval(inputtext);
			SCMF(playerid, 0xFFFF00AA, "Вы положили на счёт Вашего бизнеса %d вирт", strval(inputtext));
			UpdateBusinessData(bouse, "bBank",BizInfo[bouse][bBank]);
			return 1;
		}
	case dBusiness:
		{
			if(!response) return 1;
			new bizid = PlayerInfo[playerid][pBusiness];
			if(bizid == -1) return 1;
			switch(listitem)
			{
				case 0: ShowBusinessInformation(playerid,bizid);
				case 1:
					{
						if(BizInfo[bizid][bLock] == 0) return BizInfo[bizid][bLock] = 1,SCM(playerid, COLOR_REDD, "Вы закрыли свой бизнес.");
						if(BizInfo[bizid][bLock] == 1) return BizInfo[bizid][bLock] = 0,SCM(playerid, COLOR_GREEN, "Вы открыли свой бизнес.");
					}
				case 2: SellBusiness(playerid);
				case 3: SPD(playerid,71,2,"{FF6F00}Изменение цен","{FFFFFF}Цена за вход в бизнес\nТовар №1\nТовар №2\nТовар №3\nТовар №4\nТовар №5\nТовар №6\nТовар №7\nТовар №8\nТовар №9","Далее","Отмена");
				case 4: SetPlayerCheckpoint(playerid,BizInfo[bizid][EnterX],BizInfo[bizid][EnterY],BizInfo[bizid][EnterZ],8.0), SetPVarInt(playerid, "gps_pic", 832);
				case 5: SPD(playerid,dBusinessBank,DIALOG_STYLE_LIST,"{FF6F00}Бизнес","{FFFFFF}1. Посмотреть сумму в кассе\n2. Положить деньги в кассу\n3. Снять деньги с кассы","Далее","Назад");
			}
			return 1;
		}
	case dBusinessBank:
		{
			if(!response) return 1;
			new biz = PlayerInfo[playerid][pBusiness];
			switch(listitem)
			{
			case 0: format(stringer,SMALL_SIZE,"{"#cWHITE"}В кассе: {"#cGREEN"}$%i",BizInfo[biz][bBank]),SPD(playerid,0000,0,"Бизнес",stringer,"OK","");
			case 1: SPD(playerid,dBusinessPut,DIALOG_STYLE_INPUT,"Бизнес","Укажите сумму, которую вы хотите положить в кассу","Положить","Отмена");
			case 2: SPD(playerid,dBusinessGet,DIALOG_STYLE_INPUT,"Бизнес","Укажите сумму, которую вы хотите взять из кассы","Взять","Отмена");
			}
			return 1;
		}
	case dBusinessPut:
		{
			if(!response) return 1;
			new biz = PlayerInfo[playerid][pBusiness];
			if(PlayerInfo[playerid][pCash] < strval(inputtext)) return SCM(playerid, COLOR_GREEN, "У Вас нет таких средств, что бы положить их в кассу");
			BizInfo[biz][bBank] += strval(inputtext);
			PlayerInfo[playerid][pCash] -= strval(inputtext);
			MeAction(playerid,"положил деньги в кассу");
			return 1;
		}
	case dBusinessGet:
		{
			if(!response) return 1;
			new biz = PlayerInfo[playerid][pBusiness];
			if(BizInfo[biz][bBank] < strval(inputtext)) return SCM(playerid, COLOR_GREEN, "В кассе нет таких денег");
			BizInfo[biz][bBank] -= strval(inputtext);
			PlayerInfo[playerid][pCash] += strval(inputtext);
			MeAction(playerid,"взял(-а) деньги с кассы");
			return 1;
		}
	case 232:
		{
			if(!response) return 1;
			if(sscanf(inputtext, "d",params[0])) return SPD(playerid,232,DIALOG_STYLE_INPUT,"Change","'	Введите ид игрока	'","Далее","Отмена");
			PlayerSpects(playerid,params[0]);
			return 1;
		}
	case 233:
		{
			if(!response) return 1;
			if(sscanf(inputtext,"s[100]",params[0])) return SPD(playerid,233,DIALOG_STYLE_INPUT,"Warn","'	Введите причину варна	'","Далее","Отмена");
			format(stringer, SMALL_SIZE, "%d %s", RINFO[playerid][sID], params[0]);
			cmd::warn(playerid, stringer);
			return 1;
		}
	case 234:
		{
			if(!response) return 1;
			if(sscanf(inputtext, "s[100]", params[0])) return SPD(playerid,234,DIALOG_STYLE_INPUT,"Kick","'	Введите причину варна	'","Далее","Отмена");
			format(stringer, SMALL_SIZE, "%d %s", RINFO[playerid][sID], params[0]);
			cmd::kick(playerid, stringer);
			return 1;
		}
	case 235:
		{
			if(!response) return 1;
			if(sscanf(inputtext, "ds[100]", params[0], params[1])) return SPD(playerid,235,DIALOG_STYLE_INPUT,"Ban","'	Введите дни и причину бана (через запятую)	'","Далее","Отмена");
			format(stringer, SMALL_SIZE, "%d %d %s", RINFO[playerid][sID], params[0], params[1]);
			cmd::ban(playerid, stringer);
			return 1;
		}
	case 236:
		{
			if(!response) return 1;
			if(sscanf(inputtext, "ds[100]", params[0], params[1])) return SPD(playerid,236,DIALOG_STYLE_INPUT,"SBan","'	Введите дни и причину бана (через запятую)	'","Далее","Отмена");
			format(stringer, SMALL_SIZE, "%d %d %s", RINFO[playerid][sID], params[0], params[1]);
			cmd::sban(playerid, stringer);
			return 1;
		}
	case 237:
		{
			if(!response) return 1;
			if(sscanf(inputtext, "s[100]", params[0])) return SPD(playerid,237,DIALOG_STYLE_INPUT,"IBan","'	Введите причину бана	'","Далее","Отмена");
			format(stringer, SMALL_SIZE, "%d %s", RINFO[playerid][sID], params[0]);
			cmd::iban(playerid, stringer);
			return 1;
		}
	case 239:
		{
			if(!response) return 1;
			if(sscanf(inputtext,"ds[100]",params[0],params[1])) return SPD(playerid,239,DIALOG_STYLE_INPUT,"Prison","'	Введите время и причину присона (через запятую)	'","Далее","Отмена");
			format(stringer, SMALL_SIZE, "%d %d %s", RINFO[playerid][sID], params[0], params[1]);
			cmd::prison(playerid, stringer);
			return 1;
		}
	case 240:
		{
			if(!response) return 1;
			if(sscanf(inputtext,"ds[100]",params[0],params[1])) return SPD(playerid,240,DIALOG_STYLE_INPUT,"Mute","'	Введите время и причину мута (через запятую)	'","Далее","Отмена");
			format(stringer, SMALL_SIZE, "%d %d %s", RINFO[playerid][sID], params[0], params[1]);
			cmd::mute(playerid, stringer);
			return 1;
		}
	case 238:
		{
			if(!response) return 1;
			TogglePlayerSpectating(playerid,false);
			SpawnPlayer(playerid);
			return 1;
		}
	case 56:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: SetPlayerColor(playerid,0xFFFFFF20);
				case 1: SetPlayerColor(playerid,0xFF0000FF);
				case 2: SetPlayerColor(playerid,0x808080FF);
				case 3: SetPlayerColor(playerid,0x008000FF);
				case 4: SetPlayerColor(playerid,0xFFFF00FF);
				case 5: SetPlayerColor(playerid,0x0000FFFF);
				case 6: SetPlayerColor(playerid,0xFFA500FF);
				case 7: SetPlayerColor(playerid,0x32CD32FF);
				case 8: SetPlayerColor(playerid,0xFF00FFFF);
				case 9: SetPlayerColor(playerid,0xDC143CFF);
				case 10: SetPlayerColor(playerid,0xFF0000FF1);
				case 11: SetPlayerColor(playerid,0xFF0000FF2);
				case 12: SetPlayerColor(playerid,0xFF0000FF3);
				case 13: SetPlayerColor(playerid,0xFF0000FF4);
				case 14: SetPlayerColor(playerid,0xFF0000FF5);
				}
			}
			return 1;
		}
	case 60:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: SetPlayerColor(playerid,0xFFFFFF20);
				case 1: SetPlayerColor(playerid,0xFF0000FF);
				case 2: SetPlayerColor(playerid,0x808080FF);
				case 3: SetPlayerColor(playerid,0x008000FF);
				case 4: SetPlayerColor(playerid,0xFFFF00FF);
				case 5: SetPlayerColor(playerid,0x0000FFFF);
				case 6: SetPlayerColor(playerid,0xFFA500FF);
				case 7: SetPlayerColor(playerid,0x32CD32FF);
				case 8: SetPlayerColor(playerid,0xFF00FFFF);
				case 9: SetPlayerColor(playerid,0xFF00FFFF);
				case 10: SetPlayerColor(playerid,0xFF00FFFF);
				}
			}
			return 1;
		}
	case 62:
		{
			if( !response ) return 1;
			if(!strlen(inputtext)) return SPD(playerid, 62 , 1, "{FF6F00}Название бизнеса", "{FFFFFF}Пожалуйста, введите название будущего бизнеса.", "Далее", "Выход");
			BIZES++;
			strmid(BizInfo[BIZES][bName], inputtext, 0, strlen(inputtext), 32);
			BizInfo[BIZES][bVW] = BIZES;
			mysql_format(connects,stringer,MAX_SQL,"INSERT INTO `business` (`bID`,`bName`,`bVW`,`bKrisha`,`bPribil`) VALUES ('%d','%s','%d','0','0')",BIZES,BizInfo[ BIZES ][ bName ],BizInfo[BIZES][bVW]);
			mysql_empty(connects, stringer);
			SCMF(playerid,COLOR_BLUE,"Успех: Вы создали бизнес {FFFF00}(%d ID){FFFFFF}. Название: {FFFF00}%s",BIZES,BizInfo[BIZES][bName]);
			SPD(playerid, 63, 1, "{FF6F00}Цена", "{FFFFFF}Введите цену для бизнеса:", "Далее", "");
			return 1;
		}
	case 63:
		{
			if(!strlen(inputtext)) return SPD(playerid, 63, 1, "{FF6F00}Цена", "{FFFFFF}Введите цену для бизнеса", "Далее", "");
			new cena = strval(inputtext);
			BizInfo[ BIZES ][ bPrice ] = cena;
			mysql_format(connects, stringer, MAX_STR, "UPDATE `business` SET `bOwner` = 'None', `bPrice` = '%d' WHERE `bID` = %d", BizInfo[BIZES][bPrice], BIZES);
			mysql_empty(connects, stringer);
			SCMF(playerid,COLOR_BLUE,"Успех: Вы установили цену бизнеса: {FFFF00}%d",BizInfo[BIZES][bPrice]);
			SPD(playerid, 83, DIALOG_STYLE_LIST, "{FF6F00}Принадлежность", "{FFFFFF}Russian Mafia\nYakuza\nLa Cosa Nostra", "Далее", "");
			return 1;
		}
	case 83:
		{
			switch(listitem)
			{
				case 0: BizInfo[BIZES][bKrisha] = 14;
				case 1: BizInfo[BIZES][bKrisha] = 6;
				case 2: BizInfo[BIZES][bKrisha] = 5;
			}
			UpdateBusinessData(BIZES, "bKrisha",BizInfo[BIZES][bKrisha]);
			SPD(playerid, 64, 2, "{FF6F00}Тип бизнеса", "{FFFFFF}Магазин 24/7\nНочной клуб\nBurger Shot\nБар\nАвтозапчасти\nПиротехника\nМагазин Аксессуаров\nОружейный магазин", "Далее", "");
			return 1;
		}
	case 64:
		{
			switch(listitem)
			{
			case 0:
				{
					BizInfo[BIZES][ExitX] = -25.9464;
					BizInfo[BIZES][ExitY] = -187.0333;
					BizInfo[BIZES][ExitZ] = 1003.5469;
					BizInfo[BIZES][BarX] = -29.1162;
					BizInfo[BIZES][BarY] = -184.9743;
					BizInfo[BIZES][BarZ] = 1003.5469;
					BizInfo[BIZES][bInt] = 17;
					BizInfo[BIZES][bTypeBiz] = 1;
				}
			case 1:
				{
					BizInfo[BIZES][ExitX] = 1084.0266;
					BizInfo[BIZES][ExitY] = -0.0448;
					BizInfo[BIZES][ExitZ] = 977.6364;
					BizInfo[BIZES][BarX] = 1059.6506;
					BizInfo[BIZES][BarY] = 2.3665;
					BizInfo[BIZES][BarZ] = 977.6364;
					BizInfo[BIZES][bInt] = 17;
					BizInfo[BIZES][bTypeBiz] = 2;
				}
			case 2:
				{
					BizInfo[BIZES][ExitX] = 364.374;
					BizInfo[BIZES][ExitY] = -73.8216;
					BizInfo[BIZES][ExitZ] = 1001.51;
					BizInfo[BIZES][BarX] = 377.551;
					BizInfo[BIZES][BarY] = -67.5435;
					BizInfo[BIZES][BarZ] = 1001.52;
					BizInfo[BIZES][bInt] = 10;
					BizInfo[BIZES][bTypeBiz] = 3;
				}
			case 3:
				{
					BizInfo[BIZES][ExitX] = 502.074401;
					BizInfo[BIZES][ExitY] = -70.826499;
					BizInfo[BIZES][ExitZ] = 998.757812;
					BizInfo[BIZES][BarX] = 498.8632;
					BizInfo[BIZES][BarY] = -75.8470;
					BizInfo[BIZES][BarZ] = 998.7578;
					BizInfo[BIZES][bInt] = 11;
					BizInfo[BIZES][bTypeBiz] = 4;
				}
			case 4:
				{
					BizInfo[BIZES][ExitX] = -1749.4625;
					BizInfo[BIZES][ExitY] = -21.3246;
					BizInfo[BIZES][ExitZ] = 1546.0060;
					BizInfo[BIZES][bInt] = 1;
					BizInfo[BIZES][bTypeBiz] = 5;
				}
 			case 5:
				{
					BizInfo[BIZES][ExitX] = -2240.7788;
					BizInfo[BIZES][ExitY] = 137.0987;
					BizInfo[BIZES][ExitZ] = 1035.4141;
					BizInfo[BIZES][bInt] = 6;
					BizInfo[BIZES][bTypeBiz] = 6;
				}
 			case 6:
				{
					BizInfo[BIZES][ExitX] = 847.2238;
					BizInfo[BIZES][ExitY] = 118.4597;
					BizInfo[BIZES][ExitZ] = 3265.6738;
					BizInfo[BIZES][bInt] = 1;
					BizInfo[BIZES][bTypeBiz] = 7;
				}
			case 7:
				{
					BizInfo[BIZES][ExitX] = 285.8641;
					BizInfo[BIZES][ExitY] = -86.0143;
					BizInfo[BIZES][ExitZ] = 1001.5229;
					BizInfo[BIZES][bInt] = 4;
					BizInfo[BIZES][bTypeBiz] = 8;
				}
			}
			new Float: Pos[ 3 ];
			GetPlayerPos ( playerid, Pos [ 0 ], Pos [ 1 ], Pos [ 2 ] );
			BizInfo[BIZES][EnterX] = Pos[0];
			BizInfo[BIZES][EnterY] = Pos[1];
			BizInfo[BIZES][EnterZ] = Pos[2];
			mysql_format(connects, stringer, 300, "UPDATE `business` SET EnterX = '%f', EnterY = '%f', EnterZ = '%f', ExitX = '%f', ExitY = '%f', ExitZ = '%f', BarX = '%f', BarY = '%f', BarZ = '%f', bInt = '%d', bVW = '%d', bTypeBiz = '%d' WHERE bID = '%d'",
			BizInfo[BIZES][EnterX],BizInfo[BIZES][EnterY],BizInfo[BIZES][EnterZ],BizInfo[BIZES][ExitX],BizInfo[BIZES][ExitY],BizInfo[BIZES][ExitZ],BizInfo[BIZES][BarX],BizInfo[BIZES][BarY],BizInfo[BIZES][BarZ],BizInfo[BIZES][bInt], BizInfo[BIZES][bVW], BizInfo[BIZES][bTypeBiz], BIZES);
			mysql_empty(connects, stringer);
			SaveBusiness(BIZES);
			BizInfo[BIZES][bLab] = CreateDynamicPickup(1239,1,BizInfo[BIZES][ BarX ], BizInfo[BIZES][ BarY ], BizInfo[BIZES][ BarZ ],BizInfo[BIZES][ bVW ],BizInfo[BIZES][ bInt ],-1,100.0);
			new strin[200];
			format(strin, sizeof(strin), "{FFFF00}%s\n{FFFFFF}Бизнес находится на продаже\nЦена: {FFFF00}%i$", BizInfo[BIZES][bName],BizInfo[BIZES][bPrice]);
			BizInfo[ BIZES ][ bLabel ] = CreateDynamic3DTextLabel(strin, 0xC4DAADFF, BizInfo[ BIZES ][ EnterX ], BizInfo[ BIZES ][ EnterY ], BizInfo[ BIZES ][ EnterZ ], 15.0,INVALID_PLAYER_ID,INVALID_PLAYER_ID,1,-1,-1,-1,100.0);
			UpdateBizInfo(BIZES);
			return 1;
		}
	case 65:
		{
			if( response )
			{

				for(new i = 1; i <= BIZES; i++)
				{
					if(IsPlayerInRangeOfPoint( playerid, 1.0, BizInfo[ i ][ EnterX ], BizInfo[ i ][ EnterY ], BizInfo[ i ][ EnterZ ] ) )
					{
						if(!strcmp( BizInfo[ i ][ bOwner ], "None", true ) )
						{
							if(PlayerInfo[playerid][bAdmin] > 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Администрации запрещено иметь бизнес");
							if(PlayerInfo[playerid][pBusiness] != -1) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} У тебя уже есть бизнес");
							if(PlayerInfo[playerid][pFuelBiz] != -1) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} У тебя уже есть бизнес");
							if(PlayerInfo[playerid][pCash] < BizInfo[ i ][ bPrice ]) return SCM( playerid, -1, "У Вас нет денег для покупки данного бизнеса!" );
							strmid(BizInfo[i][bOwner], PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), 255);
							mysql_format(connects, stringer, 100, "UPDATE `business` SET `bOwner` = '%s',`bNalog` = '1000' WHERE `bID` = '%d'", PlayerInfo[playerid][pNames], PlayerInfo[playerid][pBusiness]);
							mysql_empty(connects, stringer);
							GiveMoney(playerid,-BizInfo[i][bPrice]);
							PlayerInfo[playerid][pBusiness] = i;
							BizInfo[i][bNalog] = 1000;
							if(BizInfo[i][bTypeBiz] == 5 || BizInfo[i][bTypeBiz] == 7)
							{
      							TogglePlayerControllable(playerid, false);
								SetTimerEx("UnFreez", 3000, 0, "d", playerid);
							}
							SCMF(playerid,COLOR_WHITE,"Успешно: Вы приобрели бизнес: {FFFF00}№%i{FFFFFF}. По цене: {FFFF00}%i$",PlayerInfo[playerid][pBusiness],BizInfo[i][bPrice]);
							SCM(playerid,-1,"• {FFC800}[Подсказка] {ffffff}Не забудьте заплатить за бизнес, каждый час с него снимается налог.");
							SCM(playerid,-1,"• {FFC800}[Подсказка] {ffffff}Положить денег на счёт бизнеса можно в банке (/gps -> Основное -> Банк).");
							SetPlayerPosEx( playerid, BizInfo[ i ][ ExitX ], BizInfo[ i ][ ExitY ], BizInfo[ i ][ ExitZ ] ), SetPlayerInterior( playerid, BizInfo[ i ][ bInt ] ), SetPlayerVirtualWorld( playerid, BizInfo[ i ][ bVW ] ), BizEnter{playerid}= PlayerInfo[playerid][pBusiness];
							SCM(playerid,-1,"• {FFC800}[Подсказка] {ffffff}Чтобы выйти с бизнеса введите /exit");
							UpdateBizInfo ( PlayerInfo[playerid][pBusiness] );
							SaveBusiness(PlayerInfo[playerid][pBusiness]);
							BizEnter{playerid} = PlayerInfo[playerid][pBusiness];
							return 1;
						}
						else
						{
							if(BizInfo[i][bLock] == 1 && PlayerInfo[playerid][pBusiness] != i)return GameTextForPlayer(playerid, "~r~Closed", 5000, 6);
							if(BizInfo[i][bVhod] != 0)
							{
								if(PlayerInfo[playerid][pCash]-BizInfo[i][bVhod] >= 0)
								{
									GiveMoney(playerid,-BizInfo[i][bVhod]);
									BizInfo[i][bPribil] += BizInfo[i][bVhod];
								}
								else  return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Извините, но у Вас не хватает денег на вход");
							}
							if(BizInfo[i][bTypeBiz] == 5 || BizInfo[i][bTypeBiz] == 7)
							{
      							TogglePlayerControllable(playerid, false);
								SetTimerEx("UnFreez", 3000, 0, "d", playerid);
							}
							SCM(playerid,COLOR_GREY,"Помощь: Чтобы выйти с бизнеса введите /exit или нажмите ALT у выхода");
							BizEnter{playerid} = i, SetPlayerPosEx( playerid, BizInfo[ i ][ ExitX ], BizInfo[ i ][ ExitY ], BizInfo[ i ][ ExitZ ] ), SetPlayerInterior( playerid, BizInfo[ i ][ bInt ] ), SetPlayerVirtualWorld( playerid, BizInfo[ i ][ bVW ]);
						}
					}
				}
			}
			return 1;
		}
	case 66:
		{
			if(!response) return 1;
			if(IsPlayerInRangeOfPoint(playerid, 4.0, BizInfo[BizEnter{playerid}][ ExitX ], BizInfo[BizEnter{playerid}][ ExitY ], BizInfo[BizEnter{playerid}][ ExitZ ] ))
			{
				if(BizEnter{playerid} != 255)
				{
				    if(BizInfo[BizEnter{playerid}][ bID ] == 23 || BizInfo[BizEnter{playerid}][ bID ] == 31 || BizInfo[BizEnter{playerid}][ bID ] == 32)
				    {
				       	TogglePlayerControllable(playerid, false);
						SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				    }
					SetPlayerInterior( playerid, 0 );
					SetPlayerPosEx( playerid, BizInfo[BizEnter{playerid}][ EnterX ], BizInfo[BizEnter{playerid}][ EnterY ], BizInfo[BizEnter{playerid}][ EnterZ ] );
					SetPlayerVirtualWorld( playerid, 0 );
					BizEnter{playerid} = 255;
				}
			}
			return 1;
		}
	case 67:
		{
			if(!response) return 1;
			new Float:health;
			GetPlayerHealth(playerid,health);
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][0]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					if(health+5 > 100) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Вы уже напились");
					SetPlayerHealthAC(playerid,health+5);
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][0]);
					BizInfo[BizEnter{playerid}][bPribil] +=BizInfo[BizEnter{playerid}][bCena][0];
					ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0,1);
					SetPlayerAttachedObject(playerid,4,1486,6,0.070999,0.030000,0.041999,10.2,-10.599999,-11.599997,1,1,1);
				}
			case 1:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][1]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					if(health+5 > 100) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Вы уже напились");
					SetPlayerHealthAC(playerid,health+5);
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][1]);
					BizInfo[BizEnter{playerid}][bPribil] +=BizInfo[BizEnter{playerid}][bCena][1];
					ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0,1);
					SetPlayerAttachedObject(playerid,4,1486,6,0.070999,0.030000,0.041999,10.2,-10.599999,-11.599997,1,1,1);
				}
			case 2:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][2]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					if(health+5 > 100) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Вы уже напились");
					SetPlayerHealthAC(playerid,health+5);
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][2]);
					BizInfo[BizEnter{playerid}][bPribil] +=BizInfo[BizEnter{playerid}][bCena][2];
					ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0,1);
					SetPlayerAttachedObject(playerid,4,1486,6,0.070999,0.030000,0.041999,10.2,-10.599999,-11.599997,1,1,1);
				}
			case 3:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][3]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0,1);
					SetPlayerAttachedObject(playerid,4,1486,6,0.070999,0.030000,0.041999,10.2,-10.599999,-11.599997,1,1,1);
					if(GetPlayerHealth(playerid, health) < 100)
					{
						if(GetPlayerDrunkLevel(playerid) < 20000)
						{
							SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
							if(health+20 < 100) SetPlayerHealthAC(playerid,health+20);
						}
					}
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][3]);
					BizInfo[BizEnter{playerid}][bPribil] +=BizInfo[BizEnter{playerid}][bCena][3];
				}
			case 4:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][4]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0,1);
					SetPlayerAttachedObject(playerid,4,1486,6,0.070999,0.030000,0.041999,10.2,-10.599999,-11.599997,1,1,1);
					if(GetPlayerHealth(playerid, health) < 100)
					{
						if(GetPlayerDrunkLevel(playerid) < 20000)
						{
							SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
							if(health+30 < 100) SetPlayerHealthAC(playerid,health+30);
						}
					}
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][4]);
					BizInfo[BizEnter{playerid}][bPribil] +=BizInfo[BizEnter{playerid}][bCena][4];
				}
			case 5:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][5]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0,1);
					SetPlayerAttachedObject(playerid,4,1486,6,0.070999,0.030000,0.041999,10.2,-10.599999,-11.599997,1,1,1);
					if(GetPlayerHealth(playerid, health) < 100)
					{
						if(GetPlayerDrunkLevel(playerid) < 20000)
						{
							SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
							if(health+35 < 100) SetPlayerHealthAC(playerid,health+35);
						}
					}
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][5]);
					BizInfo[BizEnter{playerid}][bPribil] +=BizInfo[BizEnter{playerid}][bCena][5];
				}
			case 6:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][6]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0,1);
					SetPlayerAttachedObject(playerid,4,1486,6,0.070999,0.030000,0.041999,10.2,-10.599999,-11.599997,1,1,1);
					if(GetPlayerHealth(playerid, health) < 100)
					{
						if(GetPlayerDrunkLevel(playerid) < 20000)
						{
							SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
							if(health+40 < 100) SetPlayerHealthAC(playerid,health+40);
						}
					}
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][6]);
					BizInfo[BizEnter{playerid}][bPribil] +=BizInfo[BizEnter{playerid}][bCena][6];
				}
			case 7:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][7]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0,1);
					SetPlayerAttachedObject(playerid,4,1486,6,0.070999,0.030000,0.041999,10.2,-10.599999,-11.599997,1,1,1);
					if(GetPlayerHealth(playerid, health) < 100)
					{
						if(GetPlayerDrunkLevel(playerid) < 20000)
						{
							SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
							if(health+50 < 100) SetPlayerHealthAC(playerid,health+50);
						}
					}
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][7]);
					BizInfo[BizEnter{playerid}][bPribil] +=BizInfo[BizEnter{playerid}][bCena][7];
				}
			case 8:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][8]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0,1);
					SetPlayerAttachedObject(playerid,4,1486,6,0.070999,0.030000,0.041999,10.2,-10.599999,-11.599997,1,1,1);
					if(GetPlayerHealth(playerid, health) < 100)
					{
						if(GetPlayerDrunkLevel(playerid) < 20000)
						{
							SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
							if(health+60 < 100) SetPlayerHealthAC(playerid,health+60);
						}
					}
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][8]);
					BizInfo[BizEnter{playerid}][bPribil] +=BizInfo[BizEnter{playerid}][bCena][8];
				}
			}
			UpdateBusinessData(BizEnter{playerid}, "bPribil",BizInfo[BizEnter{playerid}][bPribil]);
			SetTimerEx("clearattach", 3000, 0, "d", playerid);
			return 1;
		}
	case 68:
		{
			if(!response) return 1;
			new Float:health;
			GetPlayerHealth(playerid,health);
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][0]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					if(health+10 > 100) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} В тебя столько не влезет");
					SetPlayerHealthAC(playerid,health+10);
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][0];
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][0]);
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
					SetPlayerAttachedObject(playerid, 4, 2880, 6);
				}
			case 1:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][1]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					if(health+15 > 100) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} В тебя столько не влезет");
					SetPlayerHealthAC(playerid,health+15);
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][1];
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][1]);
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
					SetPlayerAttachedObject(playerid, 4, 2880, 6);
				}
			case 2:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][2]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					if(health+20 > 100) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} В тебя столько не влезет");
					SetPlayerHealthAC(playerid,health+20);
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][2];
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][2]);
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
					SetPlayerAttachedObject(playerid, 4, 2880, 6);
				}
			case 3:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][3]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					if(health+25 > 100) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} В тебя столько не влезет");
					SetPlayerHealthAC(playerid,health+25);
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][3];
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][3]);
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
					SetPlayerAttachedObject(playerid, 4, 2880, 6);
				}
			case 4:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][4]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					if(health+30 > 100) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} В тебя столько не влезет");
					SetPlayerHealthAC(playerid,health+30);
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][4];
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][4]);
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
					SetPlayerAttachedObject(playerid, 4, 2880, 6);
				}
			case 5:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][5]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					if(health+35 > 100) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} В тебя столько не влезет");
					SetPlayerHealthAC(playerid,health+35);
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][5];
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][5]);
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
					SetPlayerAttachedObject(playerid, 4, 2880, 6);
				}
			case 6:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][6]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					if(health+40 > 100) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} В тебя столько не влезет");
					SetPlayerHealthAC(playerid,health+40);
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][6];
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][6]);
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
					SetPlayerAttachedObject(playerid, 4, 2880, 6);
				}
			case 7:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][7]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					if(health+45 > 100) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} В тебя столько не влезет");
					SetPlayerHealthAC(playerid,health+45);
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][7];
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][7]);
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
					SetPlayerAttachedObject(playerid, 4, 2880, 6);
				}
			case 8:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][8]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					if(health+50 > 100) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} В тебя столько не влезет");
					SetPlayerHealthAC(playerid,health+50);
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][8];
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][8]);
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
					SetPlayerAttachedObject(playerid, 4, 2880, 6);
				}
			}
			SetTimerEx("clearattach", 3000, 0, "d", playerid);
			UpdateBusinessData(BizEnter{playerid}, "bPribil",BizInfo[BizEnter{playerid}][bPribil]);
			return 1;
		}
		case 69:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][0]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					new randomize = 10000 + random(99999);
					PlayerInfo[playerid][pPnumber] = randomize;
					SCMF(playerid,0x139BECFF,"Ваш новый номер: %i", randomize);
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][0];
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][0]);
				}
				case 1:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][1]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					SCM(playerid, COLOR_GREY, "Временно в разработке");//gHouses[PlayerInfo[playerid][pHouse]][hHel] += 5;
					//BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][1];
					//GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][1]);
					//SCM(playerid,COLOR_GREY,"Вы купили аптечки в дом");
				}
				case 2:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][2]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					GivePlayerWeaponAC(playerid, 43, 10);
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][2];
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][2]);
					SCM(playerid,COLOR_GREY,"Вы купили фотоаппарат");
				}
				case 3:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][3]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					GivePlayerWeaponAC(playerid, 14, 1);
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][3];
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][3]);
					SCM(playerid,COLOR_GREY,"Вы купили цветы");
				}
				case 4:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][6]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					mask{playerid} = true;
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][6];
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][6]);
					SCM(playerid,COLOR_GREY,"Вы купили маску '/mask' - надеть");
				}
				case 5:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][7]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					if(GetPVarInt(playerid, "pHealing") != 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы уже имеете аптечку");
					SetPVarInt(playerid, "pHealing",1);
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][7];
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][7]);
					SCM(playerid,COLOR_GREY,"Вы купили аптечку '/healme' - использовать");
				}
				case 6:
				{
					if(PlayerInfo[playerid][pCash] < BizInfo[BizEnter{playerid}][bCena][8]) return SCM(playerid,COLOR_GREY,"{d83927}Ошибка {FFFFFF}|{e3e3e3} Не хватает денег");
					if(GetPVarInt(playerid, "boomBox")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы уже имеете магнитофон");
					SetPVarInt(playerid, "boomBox",1);
					BizInfo[BizEnter{playerid}][bPribil] += BizInfo[BizEnter{playerid}][bCena][8];
					GiveMoney(playerid,-BizInfo[BizEnter{playerid}][bCena][8]);
					SCM(playerid,COLOR_GREY,"Вы купили магнитофон '/recorder' - установить");
				}
				case 7:
				{
				    if(PlayerInfo[playerid][pSiga] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть пачка сигарет");
				    ShowPlayerDialog(playerid, 7485, 2, "{FF6F00}Пачка сигарет","{FFFFFF}Parlament\nKent\nWinston\nLucky Strike\nMarlboro","Купить","Отмена");
				}
				case 8:
				{
				    if(PlayerInfo[playerid][pSpal] > 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть зажигалка");
					if(PlayerInfo[playerid][pCash] < 100) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
					SendClientMessage(playerid,0x0099FFAA, "Вы купили зажигалку. Для использования введите {FFCC00}/smoke");
					PlayerInfo[playerid][pSpal] = 20;
					new query[140];
					format(query,sizeof(query),"UPDATE `accounts` SET `spal` = '%d' WHERE `Name` = '%s'",PlayerInfo[playerid][pSpal],PlayerInfo[playerid][pNames]);
					mysql_empty(connects, query);
                    BizInfo[BizEnter{playerid}][bPribil] += 100;
					GiveMoney(playerid, -100);
				}
			}
			UpdateBusinessData(BizEnter{playerid}, "bPribil",BizInfo[BizEnter{playerid}][bPribil]);
			return 1;
		}
		case 7485:
		{
			if(!response) return 1;
		    if(PlayerInfo[playerid][pCash] < 150) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько денег");
			SendClientMessage(playerid,0x0099FFAA, "Вы купили пачку сигарет. Для использования введите {FFCC00}/smoke");
			BizInfo[BizEnter{playerid}][bPribil] += 150;
			PlayerInfo[playerid][pSiga] += 20;
			PlayerInfo[playerid][pSgf] = listitem+1;
			GiveMoney(playerid, -150);
			new query[140];
			format(query,sizeof(query),"UPDATE `accounts` SET `siga` = '%d', `sgf` = '%d' WHERE `Name` = '%s'",PlayerInfo[playerid][pSiga],PlayerInfo[playerid][pSgf],PlayerInfo[playerid][pNames]);
			mysql_empty(connects, query);
			UpdateBusinessData(BizEnter{playerid}, "bPribil",BizInfo[BizEnter{playerid}][bPribil]);
			return 1;
		}
		case 71:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: SPD(playerid,72,1,"{FF6F00}Цены","{FFFFFF}Введите новую цену за вход в Ваш бизнес | 0 - убрать.","Далее","Отмена");
				case 1: SPD(playerid,73,1,"{FF6F00}Цены","{FFFFFF}Введите новую цену за товар №1","Далее","Отмена");
				case 2: SPD(playerid,74,1,"{FF6F00}Цены","{FFFFFF}Введите новую цену за товар №2","Далее","Отмена");
				case 3: SPD(playerid,75,1,"{FF6F00}Цены","{FFFFFF}Введите новую цену за товар №3","Далее","Отмена");
				case 4: SPD(playerid,76,1,"{FF6F00}Цены","{FFFFFF}Введите новую цену за товар №4","Далее","Отмена");
				case 5: SPD(playerid,77,1,"{FF6F00}Цены","{FFFFFF}Введите новую цену за товар №5","Далее","Отмена");
				case 6: SPD(playerid,78,1,"{FF6F00}Цены","{FFFFFF}Введите новую цену за товар №6","Далее","Отмена");
				case 7: SPD(playerid,79,1,"{FF6F00}Цены","{FFFFFF}Введите новую цену за товар №7","Далее","Отмена");
				case 8: SPD(playerid,80,1,"{FF6F00}Цены","{FFFFFF}Введите новую цену за товар №8","Далее","Отмена");
				case 9: SPD(playerid,81,1,"{FF6F00}Цены","{FFFFFF}Введите новую цену за товар №9","Далее","Отмена");
			}
			return 1;
		}
	case 72:
		{
			if(!response) return 1;
			if(strval(inputtext) > 500 || strval(inputtext) < 0) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Можно от 0 до 500 $");
			if(strval(inputtext) == 0)
			{
			    BizInfo[PlayerInfo[playerid][pBusiness]][bVhod] = 0;
			    SCM(playerid, COLOR_YELLOW, "Вы успешно убрали цену за вход.");
			    UpdateBizInfo(PlayerInfo[playerid][pBusiness]);
			    UpdateBusinessData(PlayerInfo[playerid][pBusiness], "bVhod",0);
			}
			BizInfo[PlayerInfo[playerid][pBusiness]][bVhod] = strval(inputtext);
			SCMF(playerid,COLOR_BLUE,"Вы успешно установили новую цену за вход : %d.",strval(inputtext));
			UpdateBizInfo(PlayerInfo[playerid][pBusiness]);
			UpdateBusinessData(PlayerInfo[playerid][pBusiness], "bVhod",BizInfo[PlayerInfo[playerid][pBusiness]][bVhod]);
			return 1;
		}
	case 73:
		{
			if(!response) return 1;
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 5)
			{
				if(strval(inputtext) > 150000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 150000 $");
			}
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 6)
			{
				if(strval(inputtext) > 100000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 100000 $");
			}
			else if(strval(inputtext) > 5000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 5000 $");
			BizInfo[PlayerInfo[playerid][pBusiness]][bCena][0] = strval(inputtext);
			SCMF(playerid,COLOR_WHITE,"Вы успешно установили новую цену товар №1 : {FFFF00}%d.",strval(inputtext));
			UpdateBusinessData(PlayerInfo[playerid][pBusiness], "bCena1",BizInfo[PlayerInfo[playerid][pBusiness]][bCena][0]);
			return 1;
		}
	case 74:
		{
			if(!response) return 1;
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 4)
			{
				if(strval(inputtext) > 150000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 150000 $");
			}
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 5)
			{
				if(strval(inputtext) > 100000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 100000 $");
			}
			else if(strval(inputtext) > 5000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 5000 $");
			BizInfo[PlayerInfo[playerid][pBusiness]][bCena][1] = strval(inputtext);
			SCMF(playerid,COLOR_WHITE,"Вы успешно установили новую цену товар №2 : {FFFF00}%d.",strval(inputtext));
			UpdateBusinessData(PlayerInfo[playerid][pBusiness], "bCena2",BizInfo[PlayerInfo[playerid][pBusiness]][bCena][1]);
			return 1;
		}
	case 75:
		{
			if(!response) return 1;
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 4)
			{
				if(strval(inputtext) > 150000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 150000 $");
			}
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 5)
			{
				if(strval(inputtext) > 100000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 100000 $");
			}
			else if(strval(inputtext) > 5000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 5000 $");
			BizInfo[PlayerInfo[playerid][pBusiness]][bCena][2] = strval(inputtext);
			SCMF(playerid,COLOR_WHITE,"Вы успешно установили новую цену товар №3 : {FFFF00}%d.",strval(inputtext));
			UpdateBusinessData(PlayerInfo[playerid][pBusiness], "bCena3",BizInfo[PlayerInfo[playerid][pBusiness]][bCena][2]);
			return 1;
		}
	case 76:
		{
			if(!response) return 1;
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 4)
			{
				if(strval(inputtext) > 150000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 150000 $");
			}
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 5)
			{
				if(strval(inputtext) > 100000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 100000 $");
			}
			else if(strval(inputtext) > 5000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 5000 $");
			BizInfo[PlayerInfo[playerid][pBusiness]][bCena][3] = strval(inputtext);
			SCMF(playerid,COLOR_WHITE,"Вы успешно установили новую цену товар №4 : {FFFF00}%d.",strval(inputtext));
			UpdateBusinessData(PlayerInfo[playerid][pBusiness], "bCena4",BizInfo[PlayerInfo[playerid][pBusiness]][bCena][3]);
			return 1;
		}
	case 77:
		{
			if(!response) return 1;
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 4)
			{
				if(strval(inputtext) > 150000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 150000 $");
			}
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 5)
			{
				if(strval(inputtext) > 100000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 100000 $");
			}
			else if(strval(inputtext) > 5000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 5000 $");
			BizInfo[PlayerInfo[playerid][pBusiness]][bCena][4] = strval(inputtext);
			SCMF(playerid,COLOR_WHITE,"Вы успешно установили новую цену товар №5 : {FFFF00}%d.",strval(inputtext));
			UpdateBusinessData(PlayerInfo[playerid][pBusiness], "bCena5",BizInfo[PlayerInfo[playerid][pBusiness]][bCena][4]);
			return 1;
		}
	case 78:
		{
			if(!response) return 1;
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 4)
			{
				if(strval(inputtext) > 150000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 150000 $");
			}
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 5)
			{
				if(strval(inputtext) > 100000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 100000 $");
			}
			else if(strval(inputtext) > 5000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 5000 $");
			BizInfo[PlayerInfo[playerid][pBusiness]][bCena][5] = strval(inputtext);
			SCMF(playerid,COLOR_WHITE,"Вы успешно установили новую цену товар №6 : {FFFF00}%d.",strval(inputtext));
			UpdateBusinessData(PlayerInfo[playerid][pBusiness], "bCena6",BizInfo[PlayerInfo[playerid][pBusiness]][bCena][5]);
			return 1;
		}
	case 79:
		{
			if(!response) return 1;
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 4)
			{
				if(strval(inputtext) > 150000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 150000 $");
			}
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 5)
			{
				if(strval(inputtext) > 100000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 100000 $");
			}
			else if(strval(inputtext) > 5000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 5000 $");
			BizInfo[PlayerInfo[playerid][pBusiness]][bCena][6] = strval(inputtext);
			SCMF(playerid,COLOR_WHITE,"Вы успешно установили новую цену товар №7 : {FFFF00}%d.",strval(inputtext));
			UpdateBusinessData(PlayerInfo[playerid][pBusiness], "bCena7",BizInfo[PlayerInfo[playerid][pBusiness]][bCena][6]);
			return 1;
		}
	case 80:
		{
			if(!response) return 1;
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 4)
			{
				if(strval(inputtext) > 150000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 150000 $");
			}
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 5)
			{
				if(strval(inputtext) > 100000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 100000 $");
			}
			else if(strval(inputtext) > 5000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 5000 $");
			BizInfo[PlayerInfo[playerid][pBusiness]][bCena][7] = strval(inputtext);
			SCMF(playerid,COLOR_WHITE,"Вы успешно установили новую цену товар №8 : {FFFF00}%d.",strval(inputtext));
			UpdateBusinessData(PlayerInfo[playerid][pBusiness], "bCena8",BizInfo[PlayerInfo[playerid][pBusiness]][bCena][7]);
			return 1;
		}
	case 81:
		{
			if(!response) return 1;
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 4)
			{
				if(strval(inputtext) > 150000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 150000 $");
			}
			if(BizInfo[PlayerInfo[playerid][pBusiness]][bTypeBiz] == 5)
			{
				if(strval(inputtext) > 100000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 100000 $");
			}
			else if(strval(inputtext) > 5000 || strval(inputtext) < 1) return SCM(playerid, COLOR_GREY, "{d83927}Ошибка {FFFFFF}|{e3e3e3} Нельзя меньше 1 и больше 5000 $");
			BizInfo[PlayerInfo[playerid][pBusiness]][bCena][8] = strval(inputtext);
			SCMF(playerid,COLOR_WHITE,"Вы успешно установили новую цену товар №9 : {FFFF00}%d.",strval(inputtext));
			UpdateBusinessData(PlayerInfo[playerid][pBusiness], "bCena9",BizInfo[PlayerInfo[playerid][pBusiness]][bCena][8]);
			return 1;
		}
	case 82:
		{
			if(!response)
			{
				SCMF(GetPVarInt(playerid, "sellerbiz"),COLOR_RED,"%s отказался от покупки Вашего бизнеса",PlayerInfo[playerid][pNames]);
				SetPVarInt(playerid, "sellerbiz", 999);
				DeletePVar(playerid, "bizcost");
				return 1;
			}
			SCMF(GetPVarInt(playerid, "sellerbiz"),COLOR_WHITE,"Вы продали свой бизнес {FFFF00}%s{FFFFFF} за {FFFF00}%d",BizInfo[GetPVarInt(playerid, "sellerbiz")][bName],GetPVarInt(playerid, "bizcost"));
			SCMF(playerid,COLOR_WHITE,"Вы купили бизнес {FFFF00}%s{FFFFFF} за {FFFF00}%d",BizInfo[GetPVarInt(playerid, "sellerbiz")][bName],GetPVarInt(playerid, "bizcost"));
			strmid(BizInfo[PlayerInfo[GetPVarInt(playerid, "sellerbiz")][pBusiness]][bOwner], PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), 255);
			new stringer13[150];
			mysql_format(connects,stringer13,sizeof(stringer13),"UPDATE `business` SET `bOwner` = '%s' WHERE `bID` = '%d'",PlayerInfo[playerid][pNames],PlayerInfo[GetPVarInt(playerid, "sellerbiz")][pBusiness]);
			mysql_empty(connects,stringer13);
			GiveMoney(playerid,-GetPVarInt(playerid, "bizcost"));
			GiveMoney(GetPVarInt(playerid, "sellerbiz"),GetPVarInt(playerid, "bizcost"));
			PlayerInfo[playerid][pBusiness] = PlayerInfo[GetPVarInt(playerid, "sellerbiz")][pBusiness];
			PlayerInfo[GetPVarInt(playerid, "sellerbiz")][pBusiness] = -1;
			SetPVarInt(playerid, "sellerbiz", 999);
			DeletePVar(playerid, "bizcost");
			UpdateBizInfo(PlayerInfo[playerid][pBusiness]);
			return 1;
		}

	case 8004:
		{
			if(!response) return 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			switch(listitem)
			{
				case 0: SPD(playerid, 8011, 2, "{FF6F00}Список дисков", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\nT wist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomi c", "OK", "Назад");
				case 1: AddVehicleComponent(vehicleid,1087), PlayerPlaySound(playerid,1133,0.0,0.0,0.0), SPD(playerid, 8004, 2, "{FF6F00}Тюнинг меню", "[1] Диски\n[2] Гидравлика\n[3] Архангел Тюнинг\n[4] Цвет\n[5] Винилы\n[6] Нитро[10x] ", "Выбрать", "Назад");
				case 2:
				{
					new Car = GetPlayerVehicleID(playerid), Model = GetVehicleModel(Car);
					switch(Model)
					{
						case 559,560,561,562,565: SPD(playerid, 8012, 2, "{FF6F00}Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "Выбрать", "Назад");
						default: SCM(playerid,COLOR_WHITE, "Вы должны быть в: Elegy, Stratum, Flash, Sultan, Uranus");
					}
				}
				case 3: SPD(playerid, 8013, 2, "{FF6F00}Выбор цвета", "Красный\nГолубой\nЖелтый\nЗеленый\nСерый\nОранжев ый\nЧерный\nБелый", "Выбрать", "Назад");
				case 4: SPD(playerid, 8014, 2, "{FF6F00}Выбор винила", "Винил №1\nВинил №2\nВинил №3", "Выбрать", "Назад");
				case 5: AddVehicleComponent(vehicleid,1010);
			}
		}
	case 8011:
		{
			if(!response) return SPD(playerid, 8004, 2, "{FF6F00}Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы ", "Выбрать", "Назад");
			new vehicleid = GetPlayerVehicleID(playerid);
			switch(listitem)
			{
				case 0: AddVehicleComponent(vehicleid,1073);
				case 1: AddVehicleComponent(vehicleid,1074);
				case 2: AddVehicleComponent(vehicleid,1076);
				case 3: AddVehicleComponent(vehicleid,1077);
				case 4: AddVehicleComponent(vehicleid,1075);
				case 5: AddVehicleComponent(vehicleid,1079);
				case 6: AddVehicleComponent(vehicleid,1078);
				case 7: AddVehicleComponent(vehicleid,1080);
				case 8: AddVehicleComponent(vehicleid,1081);
				case 9: AddVehicleComponent(vehicleid,1082);
				case 10: AddVehicleComponent(vehicleid,1083);
				case 11: AddVehicleComponent(vehicleid,1084);
				case 12: AddVehicleComponent(vehicleid,1085);
			}
			PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
			SPD(playerid, 8011, 2, "{FF6F00}Список дисков", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\nT wist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomi c", "OK", "Назад");
			return 1;
		}
	case 8013:
		{
			if(!response) return SPD(playerid, 8004, 2, "{FF6F00}Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы ", "Выбрать", "Назад");
			new vehicleid = GetPlayerVehicleID(playerid);
			switch(listitem)
			{
				case 0: ChangeVehicleColor(vehicleid, 3, 3);
				case 1: ChangeVehicleColor(vehicleid, 79, 79);
				case 2: ChangeVehicleColor(vehicleid, 65, 65);
				case 3: ChangeVehicleColor(vehicleid, 86, 86);
				case 4: ChangeVehicleColor(vehicleid, 9, 9);
				case 5: ChangeVehicleColor(vehicleid, 6, 6);
				case 6: ChangeVehicleColor(vehicleid, 0, 0);
				case 7: ChangeVehicleColor(vehicleid, 1, 1);
			}
			PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
			SPD(playerid, 8013, 2, "{FF6F00}Выбор цвета", "Красный \nГолубой \nЖелтый \nЗеленый \nСерый \nОранжевый \nЧерный \nБелый", "Готово", "Назад");
			return 1;
		}
	case 8014:
		{
			if(!response) return SPD(playerid, 8004, 2, "{FF6F00}Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы ", "Выбрать", "Назад");
			new vehicleid = GetPlayerVehicleID(playerid);
			ChangeVehiclePaintjob(vehicleid,listitem+1);
			PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
			SPD(playerid, 8014, 2, "{FF6F00}Выбор винила", "Винил №1 \nВинил №2 \nВинил №3 ", "Готово", "Назад");
			return 1;
		}
	case 8012:
		{
			if(!response) return SPD(playerid, 8004, 2, "{FF6F00}Тюнинг меню", "[1] Диски\n[2] Гидравлика\n[3] Архангел Тюнинг\n[4] Цвет\n[5] Винилы\n[6] Нитро[10x]", "Выбрать", "Назад");
			new vehicleid = GetPlayerVehicleID(playerid);
			new cartype = GetVehicleModel(vehicleid);
			switch(listitem)
			{
				case 0:
				{
					switch(cartype)
					{
						case 562: AddVehicleComponent(vehicleid,1172);
						case 560: AddVehicleComponent(vehicleid,1170);
						case 565: AddVehicleComponent(vehicleid,1152);
						case 559: AddVehicleComponent(vehicleid,1173);
						case 561: AddVehicleComponent(vehicleid,1157);
						case 558: AddVehicleComponent(vehicleid,1165);
					}
					PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
					SPD(playerid, 8012, 2, "{FF6F00}Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
				}
				case 1:
				{
					switch(cartype)
					{
						case 562: AddVehicleComponent(vehicleid,1171);
						case 560: AddVehicleComponent(vehicleid,1169);
						case 565: AddVehicleComponent(vehicleid,1153);
						case 559: AddVehicleComponent(vehicleid,1160);
						case 561: AddVehicleComponent(vehicleid,1155);
						case 558: AddVehicleComponent(vehicleid,1166);
					}
					PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
					SPD(playerid, 8012, 2, "{FF6F00}Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
				}
				case 2:
				{
					switch(cartype)
					{
						case 562: AddVehicleComponent(vehicleid,1148);
						case 560: AddVehicleComponent(vehicleid,1140);
						case 565: AddVehicleComponent(vehicleid,1151);
						case 559: AddVehicleComponent(vehicleid,1161);
						case 561: AddVehicleComponent(vehicleid,1156);
						case 558: AddVehicleComponent(vehicleid,1167);
					}
					PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
					SPD(playerid, 8012, 2, "{FF6F00}Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
				}
				case 3:
				{
					switch(cartype)
					{
						case 562: AddVehicleComponent(vehicleid,1149);
						case 560: AddVehicleComponent(vehicleid,1141);
						case 565: AddVehicleComponent(vehicleid,1150);
						case 559: AddVehicleComponent(vehicleid,1159);
						case 561: AddVehicleComponent(vehicleid,1154);
						case 558: AddVehicleComponent(vehicleid,1168);
					}
					PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
					SPD(playerid, 8012, 2, "{FF6F00}Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
				}
				case 4:
				{
					switch(cartype)
					{
						case 562: AddVehicleComponent(vehicleid,1146);
						case 560: AddVehicleComponent(vehicleid,1139);
						case 565: AddVehicleComponent(vehicleid,1050);
						case 559: AddVehicleComponent(vehicleid,1158);
						case 561: AddVehicleComponent(vehicleid,1160);
						case 558: AddVehicleComponent(vehicleid,1163);
					}
					PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
					SPD(playerid, 8012, 2, "{FF6F00}Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
				}
				case 5:
				{
					switch(cartype)
					{
						case 562: AddVehicleComponent(vehicleid,1147);
						case 560: AddVehicleComponent(vehicleid,1138);
						case 565: AddVehicleComponent(vehicleid,1049);
						case 559: AddVehicleComponent(vehicleid,1162);
						case 561: AddVehicleComponent(vehicleid,1058);
						case 558: AddVehicleComponent(vehicleid,1164);
					}
					PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
					SPD(playerid, 8012, 2, "{FF6F00}Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
				}
				case 6:
				{
					switch(cartype)
					{
						case 562: AddVehicleComponent(vehicleid,1041), AddVehicleComponent(vehicleid,1039);
						case 560: AddVehicleComponent(vehicleid,1031), AddVehicleComponent(vehicleid,1030);
						case 565: AddVehicleComponent(vehicleid,1052), AddVehicleComponent(vehicleid,1048);
						case 559: AddVehicleComponent(vehicleid,1070), AddVehicleComponent(vehicleid,1072);
						case 561: AddVehicleComponent(vehicleid,1057), AddVehicleComponent(vehicleid,1063);
						case 558: AddVehicleComponent(vehicleid,1093), AddVehicleComponent(vehicleid,1095);
					}
					PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
					SPD(playerid, 8012, 2, "{FF6F00}Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
				}
				case 7:
				{
					switch(cartype)
					{
						case 562: AddVehicleComponent(vehicleid,1036), AddVehicleComponent(vehicleid,1040);
						case 560: AddVehicleComponent(vehicleid,1026), AddVehicleComponent(vehicleid,1027);
						case 565: AddVehicleComponent(vehicleid,1051), AddVehicleComponent(vehicleid,1047);
						case 559: AddVehicleComponent(vehicleid,1069), AddVehicleComponent(vehicleid,1071);
						case 561: AddVehicleComponent(vehicleid,1056), AddVehicleComponent(vehicleid,1062);
						case 558: AddVehicleComponent(vehicleid,1090), AddVehicleComponent(vehicleid,1094);
					}
					PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
					SPD(playerid, 8012, 2, "{FF6F00}Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
				}
				case 8:
				{
					switch(cartype)
					{
						case 562: AddVehicleComponent(vehicleid,1035);
						case 560: AddVehicleComponent(vehicleid,1033);
						case 565: AddVehicleComponent(vehicleid,1052);
						case 559: AddVehicleComponent(vehicleid,1068);
						case 561: AddVehicleComponent(vehicleid,1061);
						case 558: AddVehicleComponent(vehicleid,1091);
					}
					PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
					SPD(playerid, 8012, 2, "{FF6F00}Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
				}
				case 9:
				{
					switch(cartype)
					{
						case 562: AddVehicleComponent(vehicleid,1038);
						case 560: AddVehicleComponent(vehicleid,1032);
						case 565: AddVehicleComponent(vehicleid,1054);
						case 559: AddVehicleComponent(vehicleid,1067);
						case 561: AddVehicleComponent(vehicleid,1055);
						case 558: AddVehicleComponent(vehicleid,1088);
					}
					PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
					SPD(playerid, 8012, 2, "{FF6F00}Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
				}
				case 10:
				{
					switch(cartype)
					{
						case 562: AddVehicleComponent(vehicleid,1037);
						case 560: AddVehicleComponent(vehicleid,1029);
						case 565: AddVehicleComponent(vehicleid,1045);
						case 559: AddVehicleComponent(vehicleid,1066);
						case 561: AddVehicleComponent(vehicleid,1059);
						case 558: AddVehicleComponent(vehicleid,1089);
					}
					PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
					SPD(playerid, 8012, 2, "{FF6F00}Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
				}
				case 11:
				{
					switch(cartype)
					{
						case 562: AddVehicleComponent(vehicleid,1034);
						case 560: AddVehicleComponent(vehicleid,1028);
						case 565: AddVehicleComponent(vehicleid,1046);
						case 559: AddVehicleComponent(vehicleid,1065);
						case 561: AddVehicleComponent(vehicleid,1064);
						case 558: AddVehicleComponent(vehicleid,1092);
					}
					PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
					SPD(playerid, 8012, 2, "{FF6F00}Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
				}
			}
		}
	case 8595:
		{
			if(!response) return DeletePVar(playerid, "carid_1");
			switch(listitem)
			{
				case 0: {
					new listitems[] = "[1]> Черный\t\t50.000$\n[2]> Красный\t\t50.000$\n[3]> Серый\t\t50.000$\n[4]> Белый\t\t50.000$\n[5]> Синий\t\t50.000$\n[6]> Голубой\t\t50.000$\n[7]> Зелёный\t\t50.000$";
					SPD(playerid, 8596, DIALOG_STYLE_LIST, "{FF6F00}Покраска", listitems, "Выбрать", "Назад"); }
				case 1: {
					format(stringer,128,"[1]> Nitro x2\t\t10.000$\n[2]> Nitro x5\t\t20.000$\n[3]> Nitro x10\t\t30.000$");
					SPD(playerid,8598,DIALOG_STYLE_LIST,"{FF6F00}Закись азота(Нитро)",stringer,"Выбрать","Назад"); }
				case 2: {
					format(stringer,256,"[1]> Shadow\t\t15.000$\n[2]> Mega\t\t15.000$\n[3]> Wires\t\t15.000$\n[4]> Classic\t\t15.000$\n[5]> Twist\t\t15.000$\n[6]> Grove\t\t15.000$\n[7]> Atomic\t\t20.000$\n[8]> Dollar [Premium]\t30.000$");
					SPD(playerid,8599,DIALOG_STYLE_LIST,"{FF6F00}Смена дисков",stringer,"Выбрать","Назад"); }
				case 3: {
					format(stringer,150,"[1]> Покрасочная работа #1\t\t10.000$\n[2]> Покрасочная работа #2\t\t20.000$\n[3]> Покрасочная работа #3\t\t30.000$\n[4]> Удалить покрасочную работу");
					SPD(playerid,8620,DIALOG_STYLE_LIST,"{FF6F00}Покрасочные работы",stringer,"Выбрать","Назад"); }
				case 4: {
					new c = GetPlayerVehicleID(playerid);
					new getmodel = GetVehicleModel(c);
					if(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558) {
						SPD(playerid,8601,DIALOG_STYLE_LIST,"{FF6F00}Спойлера","[1]> X-Flow\t\t20.000$\n[2]> Alien\t\t20.000$","Выбрать","Отмена"); }
					else SCM(playerid,-1,"Данная деталь недоступна для вашей модели"),TuneDialog(playerid); }
				case 5: {
					new c = GetPlayerVehicleID(playerid);
					new getmodel = GetVehicleModel(c);
					if(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558  || getmodel == 534  || getmodel == 536  || getmodel == 535  || getmodel == 576) {
						SPD(playerid,8602,DIALOG_STYLE_LIST,"{FF6F00}Передний бампер","[1]> X-Flow\t\t20.000$\n[2]> Alien\t\t20.000$","Выбрать","Отмена"); }
					else SCM(playerid,-1,"Данная деталь недоступна для вашей модели"),TuneDialog(playerid); }
				case 6: {
					new c = GetPlayerVehicleID(playerid);
					new getmodel = GetVehicleModel(c);
					if(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558  || getmodel == 534  || getmodel == 536  || getmodel == 535  || getmodel == 576) {
						SPD(playerid,8603,DIALOG_STYLE_LIST,"{FF6F00}Задний бампер","[1]> X-Flow\t\t20.000$\n[2]> Alien\t\t20.000$","Выбрать","Отмена"); }
					else SCM(playerid,-1,"Данная деталь недоступна для вашей модели"),TuneDialog(playerid);}
				case 7: {
					format(stringer,128,"Стоимость гидравлики составляет: 90000$\nВы точно хотите купить?");
					SPD(playerid,9483,DIALOG_STYLE_MSGBOX,"{FF6F00}Гидравлика",stringer,"Да","Назад");
				}
			}
		}
		
	case 9483:
		{
			if(!response) return DeletePVar(playerid, "carid_1");
			if(PlayerInfo[playerid][pCash] < 90000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 90.000$");
			GameTextForPlayer(playerid, "~y~-90.000~r~$", 5000, 1);
			PlayerInfo[playerid][pCash] -= 90000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			TuneDialog(playerid);
			SCM(playerid,COLOR_WHITE,"Вы установили Гидравлику!");
			vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][13] = 1087;
			AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
		}
	case 8596:
		{
			if(!response) return TuneDialog(playerid);
			switch(listitem)
			{
				case 0: {
					if(PlayerInfo[playerid][pCash] < 50000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 50.000$");
					GameTextForPlayer(playerid, "~y~-50.000~r~$", 5000, 1);
					PlayerInfo[playerid][pCash] -= 50000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TuneDialog(playerid);
					vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0] = 000,vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1] = 000;
					ChangeVehicleColor(GetPlayerVehicleID(playerid),000,000);
				}
				case 1: {
					if(PlayerInfo[playerid][pCash] < 50000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 50.000$");
					GameTextForPlayer(playerid, "~y~-50.000~r~$", 5000, 1);
					PlayerInfo[playerid][pCash] -= 50000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TuneDialog(playerid);
					vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0] = 003,vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1] = 003;
					ChangeVehicleColor(GetPlayerVehicleID(playerid),003,003);
				}
				case 2: {
					if(PlayerInfo[playerid][pCash] < 50000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 50.000$");
					GameTextForPlayer(playerid, "~y~-50.000~r~$", 5000, 1);
					PlayerInfo[playerid][pCash] -= 50000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TuneDialog(playerid);
					vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0] = 013,vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1] = 013;
					ChangeVehicleColor(GetPlayerVehicleID(playerid),013,013);
				}
				case 3: {
					if(PlayerInfo[playerid][pCash] < 50000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 50.000$");
					GameTextForPlayer(playerid, "~y~-50.000~r~$", 5000, 1);
					PlayerInfo[playerid][pCash] -= 50000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TuneDialog(playerid);
					vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0] = 001,vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1] = 001;
					ChangeVehicleColor(GetPlayerVehicleID(playerid),001,001);
				}
				case 4: {
					if(PlayerInfo[playerid][pCash] < 50000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 50.000$");
					GameTextForPlayer(playerid, "~y~-50.000~r~$", 5000, 1);
					PlayerInfo[playerid][pCash] -= 50000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TuneDialog(playerid);
					vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0] = 079,vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1] = 079;
					ChangeVehicleColor(GetPlayerVehicleID(playerid),079,079);
				}
				case 5: {
					if(PlayerInfo[playerid][pCash] < 50000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 50.000$");
					GameTextForPlayer(playerid, "~y~-50.000~r~$", 5000, 1);
					PlayerInfo[playerid][pCash] -= 50000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TuneDialog(playerid);
					vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0] = 002,vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1] = 002;
					ChangeVehicleColor(GetPlayerVehicleID(playerid),002,002);
				}
				case 6: {
					if(PlayerInfo[playerid][pCash] < 50000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 50.000$");
					GameTextForPlayer(playerid, "~y~-50.000~r~$", 5000, 1);
					PlayerInfo[playerid][pCash] -= 50000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TuneDialog(playerid);
					vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0] = 086,vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1] = 086;
					ChangeVehicleColor(GetPlayerVehicleID(playerid),086,086);
				}
			}
			format(c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][3],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][4],
			vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][5],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][6],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][7],
			vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][8],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][9],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][10],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][11],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][12],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][13]);
			if(GetPVarInt(playerid,"carid_1")-1 == 0) UpdatePlayerData(playerid, "pCar", PlayerInfo[playerid][pCar][GetPVarInt(playerid,"carid_1")-1]), UpdatePlayerDataEx(playerid, "cVehcom", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);
			if(GetPVarInt(playerid,"carid_1")-1 == 1) UpdatePlayerData(playerid, "pCar2", PlayerInfo[playerid][pCar][GetPVarInt(playerid,"carid_1")-1]), UpdatePlayerDataEx(playerid, "cVehcom2", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);
		}
	case 8598:
	{
			if(response)
			{
				switch(listitem)
				{
					case 0: {
							if(PlayerInfo[playerid][pCash] < 10000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 10.000$");
							GameTextForPlayer(playerid, "~y~-10.000~r~$", 5000, 1);
							PlayerInfo[playerid][pCash] -= 10000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SCM(playerid,COLOR_WHITE,"Вы установили Nitro x2!");
							vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][12] = 1008;
							AddVehicleComponent(GetPlayerVehicleID(playerid),1008);}
					case 1: {
							if(PlayerInfo[playerid][pCash] < 20000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 20.000$");
							GameTextForPlayer(playerid, "~y~-20.000~r~$", 5000, 1);
							PlayerInfo[playerid][pCash] -= 20000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SCM(playerid,COLOR_WHITE,"Вы установили Nitro x5!");
							vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][12] = 1009;
							AddVehicleComponent(GetPlayerVehicleID(playerid),1009);}
					case 2: {
							if(PlayerInfo[playerid][pCash] < 30000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 30.000$");
							GameTextForPlayer(playerid, "~y~-30.000~r~$", 5000, 1);
							PlayerInfo[playerid][pCash] -= 30000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SCM(playerid,COLOR_WHITE,"Вы установили Nitro x10!");
							vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][12] = 1010;
							AddVehicleComponent(GetPlayerVehicleID(playerid),1010);
						}
				}
   				format(c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][3],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][4],
				vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][5],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][6],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][7],
				vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][8],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][9],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][10],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][11],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][12],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][13]);
				if(GetPVarInt(playerid,"carid_1")-1 == 0) UpdatePlayerData(playerid, "pCar", PlayerInfo[playerid][pCar][GetPVarInt(playerid,"carid_1")-1]), UpdatePlayerDataEx(playerid, "cVehcom", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);
				if(GetPVarInt(playerid,"carid_1")-1 == 1) UpdatePlayerData(playerid, "pCar2", PlayerInfo[playerid][pCar][GetPVarInt(playerid,"carid_1")-1]), UpdatePlayerDataEx(playerid, "cVehcom2", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);
			}
			TuneDialog(playerid);
	}
	case 8599: {
			if(response){
				switch(listitem){
				case 0: {
						if(PlayerInfo[playerid][pCash] < 15000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 15.000$");
						GameTextForPlayer(playerid, "~y~-15.000~r~$", 5000, 1);
						PlayerInfo[playerid][pCash] -= 15000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SCM(playerid,COLOR_WHITE,"Вы поставили диски Shadow!");
						vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2] = 1073;
						AddVehicleComponent(GetPlayerVehicleID(playerid),1073); TuneDialog(playerid);}
				case 1: {
						if(PlayerInfo[playerid][pCash] < 15000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 15.000$");
						GameTextForPlayer(playerid, "~y~-15.000~r~$", 5000, 1);
						PlayerInfo[playerid][pCash] -= 15000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SCM(playerid,COLOR_WHITE,"Вы поставили диски Mega!");
						vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2] = 1074;
						AddVehicleComponent(GetPlayerVehicleID(playerid),1074);
						TuneDialog(playerid);}
				case 2: {
						if(PlayerInfo[playerid][pCash] < 15000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 15.000$");
						GameTextForPlayer(playerid, "~y~-15.000~r~$", 5000, 1);
						PlayerInfo[playerid][pCash] -= 15000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SCM(playerid,COLOR_WHITE,"Вы поставили диски Wires!");
						vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2] = 1076;
						AddVehicleComponent(GetPlayerVehicleID(playerid),1076);
						TuneDialog(playerid);}
				case 3: {
						if(PlayerInfo[playerid][pCash] < 15000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 15.000$");
						GameTextForPlayer(playerid, "~y~-15.000~r~$", 5000, 1);
						PlayerInfo[playerid][pCash] -= 15000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SCM(playerid,COLOR_WHITE,"Вы поставили диски Classic!");
						vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2] = 1077;
						AddVehicleComponent(GetPlayerVehicleID(playerid),1077);
						TuneDialog(playerid);}
				case 4: {
						if(PlayerInfo[playerid][pCash] < 15000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 15.000$");
						GameTextForPlayer(playerid, "~y~-15.000~r~$", 5000, 1);
						PlayerInfo[playerid][pCash] -= 15000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SCM(playerid,COLOR_WHITE,"Вы поставили диски Twist!");
						vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2] = 1078;
						AddVehicleComponent(GetPlayerVehicleID(playerid),1078);
						TuneDialog(playerid);}
				case 5: {
						if(PlayerInfo[playerid][pCash] < 15000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 15.000$");
						GameTextForPlayer(playerid, "~y~-15.000~r~$", 5000, 1);
						PlayerInfo[playerid][pCash] -= 15000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SCM(playerid,COLOR_WHITE,"Вы поставили диски Grove!");
						vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2] = 1081;
						AddVehicleComponent(GetPlayerVehicleID(playerid),1081);
						TuneDialog(playerid);}
				case 6: {
						if(PlayerInfo[playerid][pCash] < 20000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 20.000$");
						GameTextForPlayer(playerid, "~y~-20.000~r~$", 5000, 1);
						PlayerInfo[playerid][pCash] -= 20000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SCM(playerid,COLOR_WHITE,"Вы поставили диски Atomic!");
						vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2] = 1085;
						AddVehicleComponent(GetPlayerVehicleID(playerid),1085);
						TuneDialog(playerid);}
				case 7: {
						if(PlayerInfo[playerid][pCash] < 30000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 30.000$");
						GameTextForPlayer(playerid, "~y~-30.000~r~$", 5000, 1);
						PlayerInfo[playerid][pCash] -= 30000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SCM(playerid,COLOR_WHITE,"Вы поставили диски Dollar for Premium!");
						vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2] = 1083;
						AddVehicleComponent(GetPlayerVehicleID(playerid),1083);
						TuneDialog(playerid);}}
  				format(c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][3],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][4],
				vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][5],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][6],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][7],
				vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][8],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][9],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][10],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][11],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][12],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][13]);
				if(GetPVarInt(playerid,"carid_1")-1 == 0) UpdatePlayerData(playerid, "pCar", PlayerInfo[playerid][pCar][GetPVarInt(playerid,"carid_1")-1]), UpdatePlayerDataEx(playerid, "cVehcom", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);
				if(GetPVarInt(playerid,"carid_1")-1 == 1) UpdatePlayerData(playerid, "pCar2", PlayerInfo[playerid][pCar][GetPVarInt(playerid,"carid_1")-1]), UpdatePlayerDataEx(playerid, "cVehcom2", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);}
			else TuneDialog(playerid);}
	case 8620: {
			if(response){
				switch(listitem){
				case 0: {
						if(PlayerInfo[playerid][pCash] < 10000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 10.000$");
						GameTextForPlayer(playerid, "~y~-10.000~r~$", 5000, 1);
						PlayerInfo[playerid][pCash] -= 10000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SCM(playerid,COLOR_WHITE,"Вы оплатили 10000$ за покрасочную работу!");
						vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][3] = 1;
						ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1);
						TuneDialog(playerid);}
				case 1: {
						if(PlayerInfo[playerid][pCash] < 20000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 20.000$");
						GameTextForPlayer(playerid, "~y~-20.000~r~$", 5000, 1);
						PlayerInfo[playerid][pCash] -= 20000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SCM(playerid,COLOR_WHITE,"Вы оплатили 20000$ за покрасочную работу!");
						vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][3] = 2;
						ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),2);
						TuneDialog(playerid);}
				case 2: {
						if(PlayerInfo[playerid][pCash] < 30000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 30.000$");
						GameTextForPlayer(playerid, "~y~-30.000~r~$", 5000, 1);
						PlayerInfo[playerid][pCash] -= 30000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SCM(playerid,COLOR_WHITE,"Вы оплатили 30000$ за покрасочную работу!");
						vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][3] = 3;
						ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3);
						TuneDialog(playerid);}
				case 3: {
						ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3);
						vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][3] = 255;
						TuneDialog(playerid);
						SCM(playerid,COLOR_WHITE,"Вы удалили покрасочную работу на авто");}}
				format(c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][3],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][4],
				vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][5],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][6],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][7],
				vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][8],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][9],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][10],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][11],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][12],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][13]);
				if(GetPVarInt(playerid,"carid_1")-1 == 0) UpdatePlayerData(playerid, "pCar", PlayerInfo[playerid][pCar][GetPVarInt(playerid,"carid_1")-1]), UpdatePlayerDataEx(playerid, "cVehcom", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);
				if(GetPVarInt(playerid,"carid_1")-1 == 1) UpdatePlayerData(playerid, "pCar2", PlayerInfo[playerid][pCar][GetPVarInt(playerid,"carid_1")-1]), UpdatePlayerDataEx(playerid, "cVehcom2", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);}
			else TuneDialog(playerid); TuneDialog(playerid); }
	case 8601: {
			if(response){
				new tunes[2], c = GetPlayerVehicleID(playerid);
				if(GetVehicleModel(c) == 562) tunes[0] = 1146, tunes[1] = 1147;
				else if(GetVehicleModel(c) == 560) tunes[0] = 1138, tunes[1] = 1139;
				else if(GetVehicleModel(c) == 565) tunes[0] = 1049, tunes[1] = 1050;
				else if(GetVehicleModel(c) == 561) tunes[0] = 1058, tunes[1] = 1060;
				else if(GetVehicleModel(c) == 559) tunes[0] = 1158, tunes[1] = 1162;
				else if(GetVehicleModel(c) == 558) tunes[0] = 1063, tunes[1] = 1064;
				else return SCM(playerid,-1,"Данная деталь 'Спойлер' недоступна для вашей модели"),TuneDialog(playerid);
				if(PlayerInfo[playerid][pCash] < 20000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 20.000$");
				GameTextForPlayer(playerid, "~y~-20.000~r~$", 5000, 1);
				PlayerInfo[playerid][pCash] -= 20000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SCM(playerid,COLOR_WHITE,"Вы установили Спойлер!");
				AddVehicleComponent(c, tunes[listitem]);
				vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][7] = tunes[listitem];
				format(c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][3],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][4],
				vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][5],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][6],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][7],
				vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][8],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][9],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][10],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][11],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][12],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][13]);
				if(GetPVarInt(playerid,"carid_1")-1 == 0) UpdatePlayerData(playerid, "pCar", PlayerInfo[playerid][pCar][GetPVarInt(playerid,"carid_1")-1]), UpdatePlayerDataEx(playerid, "cVehcom", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);
				if(GetPVarInt(playerid,"carid_1")-1 == 1) UpdatePlayerData(playerid, "pCar2", PlayerInfo[playerid][pCar][GetPVarInt(playerid,"carid_1")-1]), UpdatePlayerDataEx(playerid, "cVehcom2", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);
				TuneDialog(playerid);}
			else TuneDialog(playerid); }
	case 8602: {
			if(response){
				new tuneb[2], c = GetPlayerVehicleID(playerid);
				if(GetVehicleModel(c) == 562) tuneb[0] = 1171, tuneb[1] = 1172;
				else if(GetVehicleModel(c) == 560) tuneb[0] = 1169, tuneb[1] = 1170;
				else if(GetVehicleModel(c) == 575) tuneb[0] = 1174, tuneb[1] = 1175;
				else if(GetVehicleModel(c) == 565) tuneb[0] = 1152, tuneb[1] = 1153;
				else if(GetVehicleModel(c) == 561) tuneb[0] = 1155, tuneb[1] = 1157;
				else if(GetVehicleModel(c) == 559) tuneb[0] = 1160, tuneb[1] = 1173;
				else if(GetVehicleModel(c) == 558) tuneb[0] = 1165, tuneb[1] = 1166;
				else if(GetVehicleModel(c) == 534) tuneb[0] = 1179, tuneb[1] = 1185;
				else if(GetVehicleModel(c) == 536) tuneb[0] = 1181, tuneb[1] = 1182;
				else if(GetVehicleModel(c) == 535) tuneb[0] = 1188, tuneb[1] = 1189;
				else if(GetVehicleModel(c) == 576) tuneb[0] = 1190, tuneb[1] = 1191;
				else return SCM(playerid,-1,"Данная деталь 'Передний бампер' недоступна для вашей модели"),TuneDialog(playerid);
				if(PlayerInfo[playerid][pCash] < 20000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 20.000$");
				GameTextForPlayer(playerid, "~y~-20.000~r~$", 5000, 1);
				PlayerInfo[playerid][pCash] -= 20000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SCM(playerid,COLOR_WHITE,"Вы установили Передний бампер!");
				AddVehicleComponent(c, tuneb[listitem]);
				vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][10] = tuneb[listitem];
				format(c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][3],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][4],
				vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][5],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][6],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][7],
				vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][8],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][9],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][10],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][11],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][12],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][13]);
				if(GetPVarInt(playerid,"carid_1")-1 == 0) UpdatePlayerData(playerid, "pCar", PlayerInfo[playerid][pCar][GetPVarInt(playerid,"carid_1")-1]), UpdatePlayerDataEx(playerid, "cVehcom", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);
				if(GetPVarInt(playerid,"carid_1")-1 == 1) UpdatePlayerData(playerid, "pCar2", PlayerInfo[playerid][pCar][GetPVarInt(playerid,"carid_1")-1]), UpdatePlayerDataEx(playerid, "cVehcom2", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);
				TuneDialog(playerid);}
			else TuneDialog(playerid); }
	case 8603: {
			if(response){
				new tuneg[2], c = GetPlayerVehicleID(playerid);
				if(GetVehicleModel(c) == 562) tuneg[0] = 1148, tuneg[1] = 1149;
				else if(GetVehicleModel(c) == 560) tuneg[0] = 1140, tuneg[1] = 1141;
				else if(GetVehicleModel(c) == 575) tuneg[0] = 1176, tuneg[1] = 1177;
				else if(GetVehicleModel(c) == 565) tuneg[0] = 1150, tuneg[1] = 1151;
				else if(GetVehicleModel(c) == 561) tuneg[0] = 1154, tuneg[1] = 1156;
				else if(GetVehicleModel(c) == 559) tuneg[0] = 1159, tuneg[1] = 1161;
				else if(GetVehicleModel(c) == 558) tuneg[0] = 1167, tuneg[1] = 1168;
				else if(GetVehicleModel(c) == 534) tuneg[0] = 1178, tuneg[1] = 1180;
				else if(GetVehicleModel(c) == 536) tuneg[0] = 1183, tuneg[1] = 1184;
				else if(GetVehicleModel(c) == 535) tuneg[0] = 1186, tuneg[1] = 1187;
				else if(GetVehicleModel(c) == 576) tuneg[0] = 1192, tuneg[1] = 1193;
				else return SCM(playerid,-1,"Данная деталь 'Задний бампер' недоступна для вашей модели"),TuneDialog(playerid);
				if(PlayerInfo[playerid][pCash] < 20000) return SCM(playerid, COLOR_GRAD1, "{F70000}x {ADAEAD}У тебя не достаточно денег. Нужно{5BD93B} 20.000$");
				GameTextForPlayer(playerid, "~y~-20.000~r~$", 5000, 1);
				PlayerInfo[playerid][pCash] -= 20000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SCM(playerid,COLOR_WHITE,"Вы установили Передний бампер!");
				AddVehicleComponent(c, tuneg[listitem]);
				vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][11] = tuneg[listitem];
				format(c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][3],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][4],
				vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][5],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][6],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][7],
				vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][8],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][9],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][10],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][11],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][12],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][13]);
				if(GetPVarInt(playerid,"carid_1")-1 == 0) UpdatePlayerData(playerid, "pCar", PlayerInfo[playerid][pCar][GetPVarInt(playerid,"carid_1")-1]), UpdatePlayerDataEx(playerid, "cVehcom", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);
				if(GetPVarInt(playerid,"carid_1")-1 == 1) UpdatePlayerData(playerid, "pCar2", PlayerInfo[playerid][pCar][GetPVarInt(playerid,"carid_1")-1]), UpdatePlayerDataEx(playerid, "cVehcom2", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);
				TuneDialog(playerid);}
			else TuneDialog(playerid); }
	case 1001:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: cmd::ahelp(playerid);
					case 1: cmd::teleport(playerid);
					case 2: if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true)) SPD(playerid, 3725, DIALOG_STYLE_LIST, "{FF6F00}Выберите действие", "{FFFFFF}[0] Продать все дома\n[1] Установить интеръер\n[2] Распределить по классам\n[3] Распределить по интеръерам\n[4] Продать все бизнесы\n[5] Убрать дома по 0$\n[6] Распределить цены\n[7] Продать все заправки", "Выбрать", "Меню");
					case 3: if(PlayerInfo[playerid][bAdmin] >= 10) SPD(playerid, 6050, DIALOG_STYLE_LIST, "{FF6F00}Выберите действие", "{FFFFFF}[0] Очистить чат\n[1] Устроиться на работу\n[2] Проверить склады фракций\n[3] Установить погоду\n[4] Установить время суток", "Выбрать", "Меню");
					case 4: if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true) || !strcmp(PlayerInfo[playerid][pNames], "No", true)) SPD(playerid, 6019, DIALOG_STYLE_LIST, "{FF6F00}Выберите действие", "{FFFFFF}[0] Предварительный рестарт сервера\n{7FB151}[1] Сохранение всех файлов\n{FFFFFF}[2] Сохранить дома и бизнесы\n{FFFFFF}[3] Включить PayDay", "Выбрать", "Меню");
					case 5: if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true) || !strcmp(PlayerInfo[playerid][pNames], "No", true)) { SPD(playerid, 9078, 1, "{FF6F00}Уволить игрока [Offline]"," {FFFFFF}Введите имя игрока в поле ввода", "Готово", "Отмена"); }
					case 6: if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true) || !strcmp(PlayerInfo[playerid][pNames], "No", true)) { SPD(playerid, 9079, 1, "{FF6F00}Снять лидера [Offline]"," {FFFFFF}Введите имя игрока в поле ввода", "Готово", "Отмена"); }
					case 7: if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true) || !strcmp(PlayerInfo[playerid][pNames], "No", true)) SPD(playerid, 9080, 1, "{FF6F00}Снять админа [Offline]"," {FFFFFF}Введите имя игрока в поле ввода", "Готово", "Отмена");
					case 8: SendRconCommand("reloadbans");
				}
			}
			return 1;
		}
	case 10:
		{
			if(response)
			{
				while(strfind(inputtext,"%",true)!=-1) strdel(inputtext,strfind(inputtext,"%",true),strfind(inputtext,"%",true)+2);
				if(PlayerInfo[playerid][pMuteTime] > 0) return 1;
				if(GetPVarInt(playerid, "anti_flood_report") > gettime()) return SCM(playerid, COLOR_GREY,"Писать в репорт можно один раз в минуту.");
				format(stringer, MAX_STR, "%s[%d]: {FFCD00}%s", PlayerInfo[playerid][pNames], playerid, (inputtext));
				AllVidem(0xff4f00ff, stringer, 1);
				SCM(playerid,CGREEN, stringer);
				SCM(playerid,CGREEN,"Ожидайте, в ближайшее время Вам ответит администратор / помощник сервера.");
				SetPVarInt(playerid,"anti_flood_report",gettime()+60);
				return 1;
			}
			else return cmd::mm(playerid);
		}
	case 7765:
		{
			if(response)
			{
				new i = playerid;
				if(!strcmp(inputtext, "1",true))
				{
					if(GetPlayerMoney(i) > 10000)
					{
						GivePlayerWeaponAC(i, 24, 50); GivePlayerWeaponAC(i, 29, 500); GivePlayerWeaponAC(i, 25, 50); GivePlayerWeaponAC(i, 4, 1);
						PlayerInfo[playerid][pCash] -= 10000;
						SCM(i, COLOR_LIGHTBLUE, "Вы приобрели комплект оружия № 1");
					}
					else SCM(i, COLOR_WHITE, "У вас недостаточно денег");
				}
				else if(!strcmp(inputtext, "2",true))
				{
					if(GetPlayerMoney(i) > 20000)
					{
						GivePlayerWeaponAC(i, 24, 50); GivePlayerWeaponAC(i, 29, 500); GivePlayerWeaponAC(i, 25, 50); GivePlayerWeaponAC(i, 31, 500); GivePlayerWeaponAC(i, 4, 1);
						PlayerInfo[playerid][pCash] -= 20000;
						SCM(i, COLOR_LIGHTBLUE, "Вы приобрели комплект оружия № 2");
					}
					else SCM(i, COLOR_WHITE, "У вас недостаточно денег");
				}
				else if(!strcmp(inputtext, "3",true))
				{
					if(GetPlayerMoney(i) > 30000)
					{
						GivePlayerWeaponAC(i, 24, 50); GivePlayerWeaponAC(i, 29, 500); GivePlayerWeaponAC(i, 25, 50); GivePlayerWeaponAC(i, 30, 500); GivePlayerWeaponAC(i, 4, 1);
						PlayerInfo[playerid][pCash] -= 30000;
						SCM(i, COLOR_LIGHTBLUE, "Вы приобрели комплект оружия № 3");
					}
					else SCM(i, COLOR_WHITE, "У вас недостаточно денег");
				}
				else if(!strcmp(inputtext, "4",true))
				{
					if(GetPlayerMoney(i) > 40000)
					{
						GivePlayerWeaponAC(i, 24, 50); GivePlayerWeaponAC(i, 29, 500); GivePlayerWeaponAC(i, 25, 50); GivePlayerWeaponAC(i, 31, 500); GivePlayerWeaponAC(i, 4, 1); GivePlayerWeaponAC(i, 34, 20);
						PlayerInfo[playerid][pCash] -= 40000;
						SCM(i, COLOR_LIGHTBLUE, "Вы приобрели комплект оружия № 4");
					}
					else SCM(i, COLOR_WHITE, "У вас недостаточно денег");
				}
				else if(!strcmp(inputtext, "5",true))
				{
					if(GetPlayerMoney(i) > 50000)
					{
						GivePlayerWeaponAC(i, 24, 50); GivePlayerWeaponAC(i, 29, 500); GivePlayerWeaponAC(i, 25, 50); GivePlayerWeaponAC(i, 30, 500); GivePlayerWeaponAC(i, 4, 1); GivePlayerWeaponAC(i, 34, 20);
						PlayerInfo[playerid][pCash] -= 50000;
						SCM(i, COLOR_LIGHTBLUE, "Вы приобрели комплект оружия № 5");
					}
					else SCM(i, COLOR_WHITE, "У вас недостаточно денег");
				}
				else if(!strcmp(inputtext, "6",true))
				{
					if(GetPlayerMoney(i) > 60000)
					{
						GivePlayerWeaponAC(i, 24, 50); GivePlayerWeaponAC(i, 29, 500); GivePlayerWeaponAC(i, 25, 50); GivePlayerWeaponAC(i, 31, 500); GivePlayerWeaponAC(i, 4, 1); GivePlayerWeaponAC(i, 34, 20);
						PlayerInfo[playerid][pCash] -= 60000;
						SCM(i, COLOR_LIGHTBLUE, "Вы приобрели комплект оружия № 6");
					}
					else SCM(i, COLOR_WHITE, "У вас недостаточно денег");
				}
				else if(!strcmp(inputtext, "7",true))
				{
					if(GetPlayerMoney(i) > 70000)
					{
						GivePlayerWeaponAC(i, 24, 50); GivePlayerWeaponAC(i, 29, 500); GivePlayerWeaponAC(i, 25, 50); GivePlayerWeaponAC(i, 30, 500); GivePlayerWeaponAC(i, 4, 1); GivePlayerWeaponAC(i, 34, 20);
						PlayerInfo[playerid][pCash] -= 70000;
						SCM(i, COLOR_LIGHTBLUE, "Вы приобрели комплект оружия № 7");
					}
					else SCM(i, COLOR_WHITE, "У вас недостаточно денег");
				}
				else SCM(i, COLOR_WHITE, "Вы ввели неверный номер набора.");
			}
			return 1;
		}
	case 3002:
		{

			if(response)
			{
				if(!strlen(inputtext))return SPD(playerid,3002,DIALOG_STYLE_INPUT,"Цена за Звонки и SMS","Введите сумму","Скрыть","Отмена");
				#define moneys strval(inputtext)
				if(moneys < 1 || moneys > 600)
				{
					SCM(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 600!");
					SPD(playerid,3002,DIALOG_STYLE_INPUT,"Цена за Звонки и SMS","Введите сумму","Скрыть","Отмена");
					return 1;
				}
				format(stringer, MAX_STR, "[SN] Цена за Звонки и SMS, в размере %d вирт. установлена Главным редактором %s.", moneys, PlayerInfo[playerid][pNames]);
				SendFamilyMessage(16,COLOR_YELLOW2, stringer);
				smspricels = moneys;
				return 1;
				#undef moneys
			}
			return 1;
		}
	case 22572:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] < SellGun[3]) return SCM(playerid,COLOR_GRAD1,"У вас недостаточно денег");
				SCMF(SellGun[4],0x6ab1ffaa,"Вы продали оружие - %s",PlayerInfo[playerid][pNames]);
				SCMF(playerid,0x6ab1ffaa,"Вы купили оружие у - %s",PlayerInfo[SellGun[4]][pNames]);
				PlayerInfo[SellGun[0]][pCash] -=SellGun[3];
				GivePlayerWeaponAC(SellGun[0],SellGun[1],SellGun[2]);
				PlayerInfo[SellGun[4]][pMats] -= (2*SellGun[2]);
				PlayerInfo[SellGun[4]][pCash] +=SellGun[3];
				format(stringer,MAX_STR, "сделал оружие из материалов и передал в руки %s",PlayerInfo[SellGun[4]][pNames],PlayerInfo[playerid][pNames]);
				MeAction(playerid, stringer);
				return 1;
			}
			return 1;
		}
	case 9126:
		{
			if(!response) return RemoveFromVehicle(playerid), TogglePlayerControllable(playerid, true);
			if(PlayerInfo[playerid][pCash] < 5000)
			{
				SCM(playerid, COLOR_RED, "Недостаточно денег");
				RemoveFromVehicle(playerid);
				TogglePlayerControllable(playerid, true);
				return 1;
			}
			PlayerInfo[playerid][pCash] -= 5000;
			SetPVarInt(playerid, "arenda",1);
			TogglePlayerControllable(playerid, true);
			SCM(playerid, COLOR_GREEN, "Вы арендовали транспорт");
			return 1;
		}
	case 10092:
		{
			if(!response) return 1;
			SetPVarInt(playerid, "useguns",1);
			SPD(playerid, 10098, DIALOG_STYLE_LIST, "{FF6F00}Устройство на работу","{FFFFFF}Механик {"#cBLUE"}[2 уровень]{FFFFFF}\nРазвозчик продуктов {"#cBLUE"}[4 уровень]{FFFFFF}\nВодитель автобуса {"#cBLUE"}[3 уровень]{FFFFFF}\nТаксист {"#cBLUE"}[2 уровень]", "Устроиться", "Выход");
			return 1;
		}
	case 70:
		{
			new house = PlayerInfo[playerid][pHouse];
			if(response)
			{
				for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if (!PlayerToPoint(3, playerid,HouseInfo[i][hExit][0], HouseInfo[i][hExit][1], HouseInfo[i][hExit][2]) || GetPlayerVirtualWorld(playerid) != i+50) continue;
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPosEx(playerid,HouseInfo[i][hEnter][0],HouseInfo[i][hEnter][1],HouseInfo[i][hEnter][2]);
					PlayerInfo[playerid][pInt] = 0;
					PlayerInfo[playerid][pLocal] = 255;
				}
			}
			else
			{
				if (PlayerInfo[playerid][pHouse] != -1 && !PlayerToPoint(20, playerid,HouseInfo[house][hExit][0],HouseInfo[house][hExit][1],HouseInfo[house][hExit][2])) return SCM(playerid, COLOR_GRAD1,"Войти в гараж можно только в своем доме.");
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid, 1);
				SetPlayerVirtualWorld(playerid, house+50);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), house+50);
				SetPlayerFacingAngle(playerid, 88.0212);
				SetPlayerPosEx(playerid,2495.1804,-2565.7500,2501.0859);
				return 1;
			}
			return 1;
		}
	case 889:
		{
			new h = PlayerInfo[playerid][pHotel];
			if(!response)
			{
				if(h != INVALID_PLAYER_ID && PlayerInfo[playerid][pHotel] != -1 && strcmp(PlayerInfo[playerid][pNames], HotelInfo[h][mOwned], true) == 0)
				{
					TogglePlayerControllable(playerid, false);
					SetTimerEx("UnFreez", 3000, 0, "d", playerid);
					SetPlayerInterior(playerid, 1);
					SetPlayerVirtualWorld(playerid, h+50);
					SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), h+50);
					SetPlayerFacingAngle(playerid, 269.0959);
					SetPlayerPosEx(playerid, 1177.3361,-1081.6122,1002.8329);
					return 1;
				}
				else return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не являетесь владельцем комнаты");
			}
			for(new i = 1; i< MAX_HOTEL; i++)
			{
				if(PlayerToPoint(3, playerid, HotelInfo[i][mExit][0], HotelInfo[i][mExit][1], HotelInfo[i][mExit][2]) && GetPlayerVirtualWorld(playerid) == HotelInfo[i][mVW])
				{
					TogglePlayerControllable(playerid, false);
					SetTimerEx("UnFreez", 3000, 0, "d", playerid);
					PlayerInfo[playerid][pLocal] = 255;
					SetPlayerInterior(playerid, 2);
					SetPlayerVirtualWorld(playerid, HotelInfo[i][mVirt]);
					SetPlayerPosEx(playerid, HotelInfo[i][mEnter][0], HotelInfo[i][mEnter][1], HotelInfo[i][mEnter][2]);
				}
			}
		}
	case 1146:
		{
			if(!response) return 1;
			new fractionid = listitem;
			SetPVarInt(playerid,"actfraction",fractionid);
			new mes[256];
			for(new i;i<20;i++)
			{
				new skinid = ChangeSkin[fractionid][i];
				if(!skinid) break;
				if(!i) format(mes,sizeof(mes),"Скин %d [%d]",i+1,skinid);
				else format(mes,sizeof(mes),"%s\nСкин %d [%d]",mes,i+1,skinid);
			}
			new actplayerid = GetPVarInt(playerid,"actplayerid");
			ShowPlayerDialog(playerid,9185,2,PlayerInfo[actplayerid][pNames],mes,"Принять","Отмена");
			return 1;
		}
	case 9185:
	{
	 	if(!response) return DeletePVar(playerid, "actplayerid");
		new actplayerid = GetPVarInt(playerid,"actplayerid");
		new fractionid = GetPVarInt(playerid,"actfraction");
		new skinid = ChangeSkin[fractionid][listitem];
		new rank = rangFractionID[fractionid];
		new query[140];
		format(query,sizeof(query),"UPDATE `accounts` SET `pMRInections` = '%d', `pRKInections` = '%d', `pModel` = '%d', `pLRInections` = '%d' WHERE `id` = '%d'",fractionid+1,rank,skinid,fractionid+1,PlayerInfo[actplayerid][pID]);
		mysql_empty(connects, query);
		PlayerInfo[actplayerid][pMRInections] = fractionid+1;
		PlayerInfo[actplayerid][pLRInections] = fractionid+1;
		PlayerInfo[actplayerid][pRKInections] = rank;
		PlayerInfo[actplayerid][pModel] = skinid;
		PlayerInfo[actplayerid][pJob] = 0;
		SetPlayerToTeamColor(actplayerid);
		new day,month,year,hour,minuite,second;
		getdate(year, month, day);
		gettime(hour,minuite,second);
		FixHour(hour);
		hour = shifthour;
		new data2[64];
		format(data2, 16, "%02d.%02d.%d в %02d:%d",day,month,year,hour,minuite);
		mysql_format(connects, stringer, MAX_SQL, "INSERT INTO `logs` (`Text`, `Date`) VALUES ('%s выдал лидерку %s фракции %d','%s')",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1],data2);
		mysql_empty(connects, stringer);
		SCMF(playerid, CYELLOW,"%s {"#cWHITE"}был назначен лидером фракции {"#cINFO"}\"%s\"",PlayerInfo[actplayerid][pNames],GetMember[fractionid]);
		SCMF(actplayerid, CINFO, "Администратор %s назначил вас лидером фракции \"%s\"",PlayerInfo[playerid][pNames],GetMember[fractionid]);
		new mes[128];
		format(mes,sizeof(mes),"Администратор %s назначил %s лидером фракции \"%s\"",PlayerInfo[playerid][pNames],PlayerInfo[actplayerid][pNames],GetMember[fractionid]);
		ABroadCast(0xff0000ff, mes, 1);
		SetPlayerSkin(actplayerid,skinid);
		if(StartRabWork(actplayerid))
		{
			SCM(actplayerid,COLOR_BLUE,"Ваш рабочий день успешно начат!");
			SetPVarInt(actplayerid, "StartRabWork", 1);
		}
		return 1;
	}
	case 1145:
		{
  			if(!response) return DeletePVar(playerid, "actinplayerid");
			new actplayerid = GetPVarInt(playerid,"actinplayerid");
			new fractionid = GetPVarInt(actplayerid, "pOfferFractionid");
			new skinid = ChangeSkin[fractionid-1][listitem];
			if(PlayerInfo[playerid][pMRInections] != fractionid) return SendClientMessage(playerid,CGRAY,"Ошибка #002");
			PlayerInfo[actplayerid][pModel] = skinid;
			SetPlayerSkin(actplayerid,PlayerInfo[actplayerid][pModel]);
			UpdatePlayerData(actplayerid,"pModel",PlayerInfo[actplayerid][pModel]);
			SCMF(actplayerid, CINFO, "Лидер/Заместитель %s сменил вам фракционный скин!",PlayerInfo[playerid][pNames]);
			DeletePVar(actplayerid, "pOfferFractionid");
			DeletePVar(playerid, "actinplayerid");
			return 1;
		}
	case 1147:
		{
			if(!response)
			{
				SCM(playerid, -1, "Вы отказались от предложения");
				SCM(GetPVarInt(playerid, "Player"),-1,"Игрок отказался от предложения");
				DeletePVar(playerid, "Player");
				DeletePVar(playerid, "idFraction");
				return 1;
			}
			new fractionid = GetPVarInt(playerid, "pOfferFractionid")-1;
			new offer = GetPVarInt(playerid, "Player");
			new mes[256];
			for(new i;i<20;i++)
			{
				new skinid = ChangeSkin[fractionid][i];
				if(!skinid) break;
				if(!i) format(mes,sizeof(mes),"Скин %d [%d]",i+1,skinid);
				else format(mes,sizeof(mes),"%s\nСкин %d [%d]",mes,i+1,skinid);
			}
			SendClientMessage(playerid,CINFO,"Ждите, пока лидер выберет одежду для Вас");
			ShowPlayerDialog(offer,1144,2,PlayerInfo[playerid][pNames],mes,"Принять","");
			return 1;
		}
	case 1144:
		{
  			if(!response) return 1;
			new actplayerid = GetPVarInt(playerid,"actinplayerid");
			new fractionid = GetPVarInt(actplayerid, "pOfferFractionid");
			new skinid = ChangeSkin[fractionid-1][listitem];
			if(PlayerInfo[playerid][pMRInections] != fractionid) return SendClientMessage(playerid,CGRAY,"Ошибка #001");
			PlayerInfo[actplayerid][pMRInections] = fractionid;
			PlayerInfo[actplayerid][pRKInections] = 1;
			PlayerInfo[actplayerid][pModel] = skinid;
			PlayerInfo[actplayerid][pJob] = 0;
			SetPlayerToTeamColor(actplayerid);
			new query[256];
			format(query,sizeof(query),"UPDATE `accounts` SET `pRKInections` = '%d', `pRKInections` = '1', `pModel` = '%d', `pJob` = '0' WHERE `id` = '%d'",fractionid,skinid,PlayerInfo[actplayerid][pID]);
			mysql_empty(connects, query);
			new mes[128];
			format(mes,sizeof(mes),"%s был принят во фракцию \"%s\"",PlayerInfo[actplayerid][pNames],GetMember[PlayerInfo[actplayerid][pMRInections]-1]);
			SendClientMessage(playerid,CINFO,mes);
			format(mes,sizeof(mes),"Вы были приняты во фракцию \"%s\"",GetMember[PlayerInfo[actplayerid][pMRInections]-1]);
			SendClientMessage(actplayerid,CINFO,mes);
   			SetPlayerSkin(actplayerid,skinid);
			if(StartRabWork(actplayerid))
			{
				SCM(actplayerid,COLOR_BLUE,"Ваш рабочий день успешно начат!");
				SetPVarInt(actplayerid, "StartRabWork", 1);
			}
			return 1;
		}
	case dExamType:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 1:
				{
					if(PlayerInfo[playerid][pLicenses][0] == 1) return SendClientMessage(playerid,CGRAY,"У вас уже есть права");
					ShowPlayerDialog(playerid,dAutoExam1,0,"{FF6F00}Автошкола","{"#cINFO"}\t\t\t\t\t\tШкола вождения\n\n{"#cWHITE"}Добро пожаловать в автошколу. Чтобы сдать на права Вам нужно выполнить следующие действия\n1. Прочитайте и запомните ПДД\n2. Сдайте тест на знание ПДД\n3. Сдайте практический экзамен иструктору","Далее","Выход");
				}
				case 2:
				{
					if(PlayerInfo[playerid][pLicenses][1] == 1) return SendClientMessage(playerid,CGRAY,"У вас уже есть лицензия пилота");
					ShowPlayerDialog(playerid,dAirExam1,0,"{FF6F00}Летная школа","{"#cINFO"}\t\t\t\t\t\tЛетная школа\n\n{"#cWHITE"}Добро пожаловать в летную школу. Чтобы получить лицензию пилота вам необходимо:\n1. Прочитайте и запомните ПВП\n2. Сдайте тест на знание ПВП\n3. Заплатите $3000 за проведение экзамена\n4. Сдайте практический экзамен иструктору","Далее","Выход");
				}
			}
		}
	case dAutoExam1:
		{
			if(!response) return 1;
			stringer = "";
			stringer[0] = 0;
			strcat(stringer,"Общие положения:\n");
			strcat(stringer,"1.Разрешенная скорость передвижения для т/с, по городу - 60 км/ч, за городом - 110 км/ч, на автомагистралях - 150 км/ч.\n");
			strcat(stringer,"2.При необходимости, водитель обязан пропустить т/с со спец.сигналом (Полиция,Служба спасения,Скорая помощь) , а именно: постепенно снижая скорость, прижаться к обочине.\n");
			strcat(stringer,"3.Перекрестки в штате являются нерегулируемыми. Разрешается проезд на запрещающие сигналы светофора.\n");
			strcat(stringer,"4.По требованию работника правоoхранительных органов, водитель обязан остановиться и выполнить все перечисленные требования сотрудника правоохранительных органов.\n");
			strcat(stringer,"5.В случае возникновения ДТП(Дорожно-транспортного происшествия) водитель обязан: \n");
			strcat(stringer,"  а) оставаться на месте ДТП;\n");
			strcat(stringer,"  б) Вызвать сотрудников правоохоранительных органов;\n");
			strcat(stringer,"  в) Вызвать сотрудников скорой помощи, если того требует ситуация.\n");
			strcat(stringer,"6.Водитель обязан пропускать пешеходов, в специальных местах для перехода (перекрестки, специальная разметка).\n");
			strcat(stringer,"7.Водитель обязан осуществлять парковку транспортного средства только на стоянках, либо на обочине, заезжая при этом только 2-мя колесами.\n");
			strcat(stringer,"Запрещается:\n");
			strcat(stringer,"1. Выезд на полосу встречного движения при очевидной угрозе лобового столкновения.\n");
			strcat(stringer,"2. Экстренное торможение без везкой причины, в случае возникновения поломки т/с, по мере возможности Вам следует:\n");
			strcat(stringer," а) прижаться к обочине;\n");
			strcat(stringer," б) включить сигнал, оповещающий об аварийной ситуации.\n");
			strcat(stringer,"3.Обгон впереди движущегося т/с с правой стороны,обгон разрешен лишь в случае поворота впереди движущегося т/с.\n");
			strcat(stringer,"4.Нарушение установленного скоростного лимита.\n");
			strcat(stringer,"5.Управление транспортным средством в нетрезвом виде.");
			strcat(stringer,"6. Разворот в туннелях строго запрещен.");
			strcat(stringer,"7. Движение транспортного средства задним ходом разрешается при условии, что этот маневр будет безопасен и не создаст помех другим участникам движения.\n");
			strcat(stringer,"При необходимости водитель должен прибегнуть к помощи других лиц.");
			strcat(stringer,"8. На автомагистралях запрещается: движение задним ходом и учебная езда.");
			ShowPlayerDialog(playerid,dAutoExam2,0,"{FF6F00}Школа вождения",stringer,"Продолжить","Отмена");
		}
		case dAutoExam2:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,dAutoExam3,0,"{FF6F00}Школа вождения","{"#cWHITE"}Сейчас Вам будет предложено пройти тест.\nЧтобы получить доступ к практическому экзамену\nВам нужно правильно ответить на все 5 вопросов","Далее","Отмена");
		}
		case dAutoExam3:
		{
			if(!response) return 1;
			ShowTestQuestion(playerid,0,5,dAutoTest1);
		}
		case dAutoTest1:
		{
			if(!response) return 1;
			new q = GetPVarInt(playerid, "pTestNumber");
			if(!listitem) return ShowTestQuestion(playerid,0,2,dAutoTest1,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален");
			ShowTestQuestion(playerid,5,10,dAutoTest2);
		}
		case dAutoTest2:
		{
			if(!response) return 1;
			new q = GetPVarInt(playerid, "pTestNumber");
			if(!listitem) return ShowTestQuestion(playerid,2,4,dAutoTest2,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален");
			ShowTestQuestion(playerid,10,15,dAutoTest3);
		}
		case dAutoTest3:
		{
			if(!response) return 1;
			new q = GetPVarInt(playerid, "pTestNumber");
			if(!listitem) return ShowTestQuestion(playerid,4,6,dAutoTest3,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален");
			ShowTestQuestion(playerid,15,20,dAutoTest4);
		}
		case dAutoTest4:
		{
			if(!response) return 1;
			new q = GetPVarInt(playerid, "pTestNumber");
			if(!listitem) return ShowTestQuestion(playerid,6,8,dAutoTest4,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален");
			ShowTestQuestion(playerid,20,25,dAutoTest5);
		}
		case dAutoTest5:
		{
			if(!response) return 1;
			new q = GetPVarInt(playerid, "pTestNumber");
			if(!listitem) return ShowTestQuestion(playerid,8,12,dAutoTest5,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален");
			new instr = 0;
			foreach(new i: Player)
			{
			    if(PlayerInfo[i][pMRInections] != 11) continue;
			    instr++;
			}
			if(instr <= 0)
			{
				PlayerInfo[playerid][pLicenses][0] = 1;
				format(PlayerInfo[playerid][pLicense],16,"%d,%d,%d,%d",PlayerInfo[playerid][pLicenses][0],PlayerInfo[playerid][pLicenses][1],PlayerInfo[playerid][pLicenses][2],PlayerInfo[playerid][pLicenses][3]);
				UpdatePlayerDataEx(playerid, "pLics", PlayerInfo[playerid][pLicense]);
				SendClientMessage(playerid,CGREEN,"Поздравляем, Вы сдали тест. В связи с тем, что в сети нет инстукторов, Вам были выдана лицензия.");
				return 1;
			}
			else instr = 0;
			if(gDSTurn[19] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"К сожалению все места в очереди заняты");
			for(new i=19;i>=0;i--)
			{
				if(gDSTurn[i] == playerid) return SendClientMessage(playerid,CGRAY,"Вы уже стоите в очереди");
				if(i && gDSTurn[i] == INVALID_PLAYER_ID) continue;
				gDSTurn[i+1] = playerid;
				break;
			}
			pTemp[playerid][pExamType] = false;
			pTemp[playerid][pWaitingExam] = true;
			SendClientMessage(playerid,CGREEN,"Поздравляем, Вы сдали тест. Ждите, Вас Вызовут для прохождения экзамена.");
			SendClientMessage(playerid,CGREEN,"Не Выходите из автошколы");
		}
		case dAirExam1:
		{
			if(!response) return 1;
			stringer = "";
			stringer[0] = 0;
			strcat(stringer,"Правила визуального полета:\n");
			strcat(stringer,"1. Управлять воздушным транспортом разрешается лицам, достигшим 18 лет и имеющим лицензию на управление указанным транспортом.\n");
			strcat(stringer,"2. Управление воздушным транспортом в состоянии наркотического или алкогольного опьянения строго запрещается.\n");
			strcat(stringer,"3. Во время управления воздушным транспортным средством запрещается разговаривать по телефону и отвлекаться от управления.\n");
			strcat(stringer,"4. При сближении с воздушным судном, двигающимся вам навстречу, необходимо отклониться от текущего курса на 30 градусов вправо, после расхождения, вернуться на прежний курс\n");
			strcat(stringer,"5. Ограничения скорости для воздушного транспорта отсутствуют. \n");
			strcat(stringer,"6. Ограничения высоты полета для воздушного транспорта отсутствуют.\n");
			strcat(stringer,"7. Полеты над базами ВВС и ВСН для гражданских воздушных судов категорически запрещены. При пролете над военными базам по вам может быть открыт огонь на поражение без предупреждения\n");
			strcat(stringer,"8. Выполнение фигур высшего пилотажа разрешается только лицам, достигшим 21 года и имеющим стаж управления воздушными судами не менее 3-х лет.\n");
			strcat(stringer,"9. Выполнение фигур высшего пилотажа разрешается только над незаселеной зоной.");
			strcat(stringer,"10. Выполнение фигур высшего пилотажа с пассажирами на борту запрещается.\n");
			ShowPlayerDialog(playerid,dAirExam2,0,"{FF6F00}Летная школа",stringer,"Далее","Отмена");
		}
		case dAirExam2:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,dAirExam3,0,"{FF6F00}Летная школа","{"#cWHITE"}Сейчас Вам будет предложено пройти тест.\nЧтобы получить доступ к практическому экзамену\nВам нужно правильно ответить на все 8 вопросов","Далее","Отмена");
		}
		case dAirExam3:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,dAirExam4,2,"{FF6F00}Летная школа","{FFFFFF}Со скольки лет разрешено управлять воздушным траспортом?\n1. С 18\n2. С 20\n3. С 21\n4. С 16","Далее","Отмена");
		}
		case dAirExam4:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam4,2,"{FF6F00}Летная школа","{FFFFFF}Со скольки лет разрешено управлять воздушным траспортом?\n1. С 18\n2. С 20\n3. С 21\n4. С 16","Далее","Отмена");
				case 1:ShowPlayerDialog(playerid,dAirExam5,2,"{FF6F00}Летная школа","{FFFFFF}Управление воздушным траспортом в состоянии наркотического или алкогольного опьянения\n1.Запрещается\n2.Разрешается\n3.Не рекомендуется","Далее","Отмена");
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dAirExam5:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam5,2,"{FF6F00}Летная школа","{FFFFFF}Управление воздушным траспортом в состоянии наркотического или алкогольного опьянения\n1.Запрещается\n2.Разрешается\n3.Не рекомендуется","Далее","Отмена");
				case 1:ShowPlayerDialog(playerid,dAirExam6,2,"{FF6F00}Летная школа","{FFFFFF}Что из перечисленного запрещается во время управления воздушным транспортом?\n1.Оглядываться по сторонам\n2.Разговаривать по рации\n3.Разговаривать по телефону и отвлекаться от управления","Далее","Отмена");
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dAirExam6:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam6,2,"{FF6F00}Летная школа","{FFFFFF}Что из перечисленного запрещается во время управления воздушным транспортом?\n1.Оглядываться по сторонам\n2.Разговаривать по рации\n3.Разговаривать по телефону и отвлекаться от управления","Далее","Отмена");
				case 3:ShowPlayerDialog(playerid,dAirExam7,2,"{FF6F00}Летная школа","{FFFFFF}Что необходимо сделать при сближении с другим воздушным судном?\n1.Отклониться от курса на 20 градусов влево\n2.Отклониться от курса на 90 градусов вправо\n3.Отклониться от курса на 30 градусов вправо\n4.Изменить высоту\n5.Изменить скорость","Далее","Отмена");
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dAirExam7:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam7,2,"{FF6F00}Летная школа","{FFFFFF}Что необходимо сделать при сближении с другим воздушным судном?\n1.Отклониться от курса на 20 градусов влево\n2.Отклониться от курса на 90 градусов вправо\n3.Отклониться от курса на 30 градусов вправо\n4.Изменить высоту\n5.Изменить скорость","Далее","Отмена");
				case 3:ShowPlayerDialog(playerid,dAirExam8,2,"{FF6F00}Летная школа","{FFFFFF}Ограничение скорости для воздушного транспорта:\n1.60 км/ч\n2.120 км/ч\n3.180 км/ч\n4.220 км/ч\n5.Отсутствует","Далее","Отмена");
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dAirExam8:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam8,2,"{FF6F00}Летная школа","{FFFFFF}Ограничение скорости для воздушного транспорта:\n1.60 км/ч\n2.120 км/ч\n3.180 км/ч\n4.220 км/ч\n5.Отсутствует","Далее","Отмена");
				case 5:ShowPlayerDialog(playerid,dAirExam9,2,"{FF6F00}Летная школа","{FFFFFF}Ограничение высоты полёта воздушного транспорта:\n1.Отсутствует\n2. 100 м\n3. 200 м\n4. 500 м\n5. 1 км","Далее","Отмена");
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dAirExam9:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam9,2,"{FF6F00}Летная школа","{FFFFFF}Ограничение высоты полёта воздушного транспорта:\n1.Отсутствует\n2. 100 м\n3. 200 м\n4. 500 м\n5. 1 км","Далее","Отмена");
				case 1:ShowPlayerDialog(playerid,dAirExam10,2,"{FF6F00}Летная школа","{FFFFFF}Полёты над военными базами для гражданских лиц:\n1.Запрещены\n2.Разрешены в дневное время\n3.Разрешены в ночное время\n4.Разрешены","Далее","Отмена");
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dAirExam10:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam10,2,"{FF6F00}Летная школа","{FFFFFF}Полёты над военными базами для гражданских лиц:\n1.Запрещены\n2.Разрешены в дневное время\n3.Разрешены в ночное время\n4.Разрешены","Далее","Отмена");
				case 1:ShowPlayerDialog(playerid,dAirExam11,2,"{FF6F00}Летная школа","{FFFFFF}Выполнение фигур высшего пилотажа:\n1.Разрешено с 20 лет\n2.Разрешено с 21 года\n3.Разрешено с 25 лет\n4.Запрещено","Далее","Отмена");
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dAirExam11:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:ShowPlayerDialog(playerid,dAirExam11,2,"{FF6F00}Летная школа","{FFFFFF}Выполнение фигур высшего пилотажа:\n1.Разрешено с 20 лет\n2.Разрешено с 21 года\n3.Разрешено с 25 лет\n4.Запрещено","Далее","Отмена");
				case 2:
				{
 					new instr = 0;
					foreach(new i: Player)
					{
					    if(PlayerInfo[i][pMRInections] != 11) continue;
					    instr++;
					}
					if(instr <= 0)
					{
						PlayerInfo[playerid][pLicenses][1] = 1;
						format(PlayerInfo[playerid][pLicense],16,"%d,%d,%d,%d",PlayerInfo[playerid][pLicenses][0],PlayerInfo[playerid][pLicenses][1],PlayerInfo[playerid][pLicenses][2],PlayerInfo[playerid][pLicenses][3]);
						UpdatePlayerDataEx(playerid, "pLics", PlayerInfo[playerid][pLicense]);
						SendClientMessage(playerid,CGREEN,"Поздравляем, Вы сдали тест. В связи с тем, что в сети нет инстукторов, Вам были выдана лицензия.");
						return 1;
					}
					else instr = 0;
					if(gDSTurn[19] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"К сожалению все места в очереди заняты");
					for(new i=19;i>=0;i--)
					{
						if(gDSTurn[i] == playerid) return SendClientMessage(playerid,CGRAY,"Вы уже стоите в очереди");
						if(i && gDSTurn[i] == INVALID_PLAYER_ID) continue;
						gDSTurn[i+1] = playerid;
						break;
					}
					pTemp[playerid][pWaitingExam] = true;
					pTemp[playerid][pExamType] = true;
					SendClientMessage(playerid,CGREEN,"Поздравляем, Вы сдали тест. Ждите, Вас Вызовут для прохождения экзамена.");
					SendClientMessage(playerid,CGREEN,"Не Выходите из автошколы");
				}
				default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
		case dExamResult:
		{
		    if(!response) return 1;
			new actplayerid = pTemp[playerid][pExamCandidate];
			if(!IsPlayerConnected(actplayerid) || !pTemp[actplayerid][pOnExam]) return SendClientMessage(playerid,CWHITE,"Экзаменуемый вышел. Экзамен завершен");
			if(listitem == 1)
			{
				if(pTemp[actplayerid][pExamType] == false) PlayerInfo[actplayerid][pLicenses][0] = 1;
				if(pTemp[actplayerid][pExamType] == true) PlayerInfo[actplayerid][pLicenses][1] = 1;
				format(PlayerInfo[actplayerid][pLicense],16,"%d,%d,%d,%d",PlayerInfo[actplayerid][pLicenses][0],PlayerInfo[actplayerid][pLicenses][1],PlayerInfo[actplayerid][pLicenses][2],PlayerInfo[actplayerid][pLicenses][3]);
				UpdatePlayerDataEx(actplayerid, "pLics", PlayerInfo[actplayerid][pLicense]);
				SendClientMessage(actplayerid,CGREEN,"Поздравляем. Вы сдали экзамен.");
				SendClientMessage(playerid,CGREEN,"Экзамен завершен");
				PlayerInfo[playerid][pCash] -= 250;
			}
			else
			{
				SendClientMessage(actplayerid,CBADINFO,"Вы провалили экзамен.");
				SendClientMessage(playerid,CGREEN,"Экзамен завершен");
			}
			pTemp[playerid][pOnExam] = false;
			pTemp[playerid][pExamCandidate] = INVALID_PLAYER_ID;
			pTemp[actplayerid][pOnExam] = false;
		}
	case 10099:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][pJob] == 15) return SCM(playerid,COLOR_GREY,"Вы уже работаете диджеем.");
			PlayerInfo[playerid][pJob] = 15;
			SCM(playerid, COLOR_WHITE, "Вас успешно приняли на работу DiskJokey[DJ].");
			SCM(playerid, 0x6ab1ffaa, "Пропишите /mm чтобы посмотреть команды..");
			SCM(playerid, COLOR_WHITE, "Место включения музыку обозначено у Вас на карте!");
			SetPlayerCheckpoint(playerid, 1056.5503,-13.5629,979.3359, 1.0),SetPVarInt(playerid, "playerisGPS", 1);
			return 1;
		}
	case 5522:
		{
			if(response)
			{
				new Float:tempheal;
				GetPlayerHealth(playerid,tempheal);
				if(tempheal >= 100.0) return SCM(GetPVarInt(playerid, "HealOffer"), COLOR_GRAD1,"Этот человек здоров!");
				if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid, "HealPrice")) return 	SCM(GetPVarInt(playerid, "HealOffer"), COLOR_GREY, "У этого человека нет столько денег на руках!");
				PlayerInfo[GetPVarInt(playerid, "HealOffer")][pCash] +=GetPVarInt(playerid, "HealPrice");
				PlayerInfo[playerid][pCash] -=GetPVarInt(playerid, "HealPrice");
				SCMF(GetPVarInt(playerid, "HealOffer"),0x6ab1ffaa,"Вы вылечили %s за %d вирт",PlayerInfo[playerid][pNames], GetPVarInt(playerid, "HealPrice"));
				PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
				format(stringer,SMALL_SIZE, "~g~+100hp", playerid);
				GameTextForPlayer(playerid, stringer, 5000, 1);
				SetPlayerHealthAC(playerid, 100);
				if(PlayerInfo[playerid][pHospital] == 1) PlayerInfo[playerid][pHospital] = 0, pTemp[playerid][pInHospital] = false, SCM(playerid,COLOR_GREEN,"Медик ускорил ваш курс лечения. Теперь вы можете покинуть больницу.");
				return 1;
			}
			else return 1;
		}
	case 6622:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid, "FreePrice"))
				{
					SCM(GetPVarInt(playerid, "FreeOffer"), COLOR_GREY, "У этого человека нет столько денег на руках!");
					SCM(playerid, COLOR_GREY, "У Вас нет столько денег!");
					return 1;
				}
				PlayerInfo[GetPVarInt(playerid, "FreeOffer")][pCash] +=GetPVarInt(playerid, "FreePrice");
				PlayerInfo[playerid][pCash] -=GetPVarInt(playerid, "FreePrice");
				SCMF(playerid,0x6ab1ffaa,"Адвокат %s выпустил вас за %d вирт!", PlayerInfo[GetPVarInt(playerid, "FreeOffer")][pNames], GetPVarInt(playerid, "FreePrice"));
				SCMF(GetPVarInt(playerid, "FreeOffer"),0x6ab1ffaa,"Вы выпустили %s за %d вирт!",PlayerInfo[playerid][pNames], GetPVarInt(playerid, "FreePrice"));
				SetPlayerInterior(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerPosEx(playerid,1553.4962,-1675.2714,16.1953);//Тюрьма
				SetPlayerFacingAngle(playerid, 95.0636);
				PlayerInfo[playerid][pJailTime] = 0;
				PlayerInfo[playerid][pJailed] = 0;
				format(stringer,SMALL_SIZE, "~g~Freedom");
				WantedLevel[playerid] = 0;
				PlayerInfo[playerid][pWanted] = 0;
				UpdatePlayerData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
				WantedPoints[playerid] = 0;
				SetPlayerWantedLevel(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				GameTextForPlayer(playerid, stringer, 5000, 1);
				return 1;
			}
			else
			{
				if(PlayerInfo[playerid][pBank] < GetPVarInt(playerid, "FreePrice") )
				{
					SCM(GetPVarInt(playerid, "FreeOffer"), COLOR_GREY, "У этого человека нет столько денег в банке!");
					SCM(playerid, COLOR_GREY, "У Вас нет столько денег!");
					return 1;
				}
				PlayerInfo[GetPVarInt(playerid, "FreeOffer")][pCash] +=GetPVarInt(playerid, "FreePrice");
				PlayerInfo[playerid][pBank] -=GetPVarInt(playerid, "FreePrice");
				SCMF(playerid,0x6ab1ffaa,"Адвокат %s выпустил вас  за %d вирт!",PlayerInfo[GetPVarInt(playerid, "FreeOffer")][pNames], GetPVarInt(playerid, "FreePrice"));
				SCMF(GetPVarInt(playerid, "FreeOffer"),0x6ab1ffaa,"Вы выпустили %s за %d вирт!",PlayerInfo[playerid][pNames], GetPVarInt(playerid, "FreePrice"));
				SetPlayerInterior(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerPosEx(playerid,1553.4962,-1675.2714,16.1953);//Тюрьма
				SetPlayerFacingAngle(playerid, 95.0636);
				PlayerInfo[playerid][pJailTime] = 0;
				PlayerInfo[playerid][pJailed] = 0;
				format(stringer,SMALL_SIZE, "~g~Freedom");
				WantedLevel[playerid] = 0;
				PlayerInfo[playerid][pWanted] = 0;
				UpdatePlayerData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
				WantedPoints[playerid] = 0;
				SetPlayerWantedLevel(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				GameTextForPlayer(playerid, stringer, 5000, 1);
				return 1;
			}
		}
	case 7779:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:	SPD(playerid, 100, DIALOG_STYLE_INPUT, "{FF6F00}Отобрать водительские права","{FFFFFF}Введите [ID] человека", "Отобрать", "Отмена");
				case 1:	SPD(playerid, 103, DIALOG_STYLE_INPUT, "{FF6F00}Отобрать лицензию на полёты","{FFFFFF}Введите [ID] человека", "Отобрать", "Отмена");
				case 2:	SPD(playerid, 105, DIALOG_STYLE_INPUT, "{FF6F00}Отобрать лицензию на вождение водного транспорта","{FFFFFF}Введите [ID] человека", "Отобрать", "Отмена");
				case 3:	SPD(playerid, 106, DIALOG_STYLE_INPUT, "{FF6F00}Отобрать лицензию на оружие","{FFFFFF}Введите [ID] человека", "Отобрать", "Отмена");
				case 4:	SPD(playerid, 108, DIALOG_STYLE_INPUT, "{FF6F00}Отобрать наркотики","{FFFFFF}Введите [ID] человека", "Отобрать", "Отмена");
				case 5:	SPD(playerid, 109, DIALOG_STYLE_INPUT, "{FF6F00}Отобрать оружие","{FFFFFF}Введите [ID] человека", "Отобрать", "Отмена");
				case 6: SPD(playerid, 110, DIALOG_STYLE_INPUT, "{FF6F00}Отобрать материалы","{FFFFFF}Введите [ID] человека", "Отобрать", "Отмена");
				}
			}
			else return 1;
		}
	case 100:
		{
			if(response)
			{
				#define idd strval(inputtext)
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
				if(!ProxDetectorS(2.0, playerid, idd)) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не рядом с вами!");
				SCMF(idd,0x6ab1ffaa,"%s забрал у вас водительские права.", PlayerInfo[playerid][pNames]);
				PlayerInfo[idd][pLicenses][0] = 0;
				format(PlayerInfo[idd][pLicense],16,"%d,%d,%d,%d",PlayerInfo[idd][pLicenses][0],PlayerInfo[idd][pLicenses][1],PlayerInfo[idd][pLicenses][2],PlayerInfo[idd][pLicenses][3]);
				UpdatePlayerDataEx(idd, "pLics", PlayerInfo[idd][pLicense]);
				format(stringer,MAX_STR, "забрал(а) у %s водительские права", PlayerInfo[playerid][pNames], PlayerInfo[idd][pNames]);
				MeAction(playerid, stringer);
				SCMF(playerid,0x6ab1ffaa,"Вы забрали водительские права у %s.",PlayerInfo[idd][pNames],idd);
				SPD(playerid, 7779, DIALOG_STYLE_LIST, "{FF6F00}Отобрать лицензии:", "- Отобрать водительские права\n- Отобрать лицензию на полёты \n- Отобрать лицензию на вождение водного транспорта\n- Отобрать лицензия на оружие\n- Наркотики\n- Оружие\n- Материалы", "Скрыть", "Отмена");
				return 1;
				#undef idd
			}
			else return 1;
		}
	case 103:
		{
			if(response)
			{
				#define idd strval(inputtext)
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
				if(!ProxDetectorS(2.0, playerid, idd)) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не рядом с вами!");
				SCMF(idd,0x6ab1ffaa,"%s забрал у вас лицензию на полёты", PlayerInfo[playerid][pNames]);
				PlayerInfo[idd][pLicenses][1] = 0;
				format(PlayerInfo[idd][pLicense],16,"%d,%d,%d,%d",PlayerInfo[idd][pLicenses][0],PlayerInfo[idd][pLicenses][1],PlayerInfo[idd][pLicenses][2],PlayerInfo[idd][pLicenses][3]);
				UpdatePlayerDataEx(idd, "pLics", PlayerInfo[idd][pLicense]);
				format(stringer,MAX_STR, "забрал(а) у %s лицензию пилота", PlayerInfo[playerid][pNames], PlayerInfo[idd][pNames]);
				MeAction(playerid, stringer);
				SCMF(playerid,0x6ab1ffaa,"Вы забрали  лицензию на полёты у %s.",PlayerInfo[idd][pNames],idd);
				SPD(playerid, 7779, DIALOG_STYLE_LIST, "{FF6F00}Отобрать лицензии:", "- Отобрать водительские права\n- Отобрать лицензию на полёты \n- Отобрать лицензию на вождение водного транспорта\n- Отобрать лицензия на оружие\n- Наркотики\n- Оружие\n- Материалы", "Скрыть", "Отмена");
				return 1;
				#undef idd
			}
			else return 1;
		}
	case 105:
		{
			if(response)
			{
				#define idd strval(inputtext)
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
				if(!ProxDetectorS(2.0, playerid, idd)) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не рядом с вами!");
				SCMF(idd,0x6ab1ffaa,"%s забрал у вас лицензию на водный транспорт", PlayerInfo[playerid][pNames]);
				PlayerInfo[idd][pLicenses][2] = 0;
				format(PlayerInfo[idd][pLicense],16,"%d,%d,%d,%d",PlayerInfo[idd][pLicenses][0],PlayerInfo[idd][pLicenses][1],PlayerInfo[idd][pLicenses][2],PlayerInfo[idd][pLicenses][3]);
				UpdatePlayerDataEx(idd, "pLics", PlayerInfo[idd][pLicense]);
				format(stringer,MAX_STR, "забрал(а) у %s на водный транспорт", PlayerInfo[playerid][pNames], PlayerInfo[idd][pNames]);
				MeAction(playerid, stringer);
				SCMF(playerid,0x6ab1ffaa,"Вы забрали  лицензию водный транспорт у %s.",PlayerInfo[idd][pNames],idd);
				SPD(playerid, 7779, DIALOG_STYLE_LIST, "{FF6F00}Отобрать лицензии:", "- Отобрать водительские права\n- Отобрать лицензию на полёты \n- Отобрать лицензию на вождение водного транспорта\n- Отобрать лицензия на оружие\n- Наркотики\n- Оружие\n- Материалы", "Скрыть", "Отмена");
				return 1;
				#undef idd
			}
			else return 1;
		}
	case 106:
		{
			if(response)
			{
				#define idd strval(inputtext)
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
				if(!ProxDetectorS(2.0, playerid, idd)) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не рядом с вами!");
				SCMF(idd,0x6ab1ffaa,"%s забрал у вас лицензию на оружие", PlayerInfo[playerid][pNames]);
				PlayerInfo[idd][pLicenses][3] = 0;
				format(PlayerInfo[idd][pLicense],16,"%d,%d,%d,%d",PlayerInfo[idd][pLicenses][0],PlayerInfo[idd][pLicenses][1],PlayerInfo[idd][pLicenses][2],PlayerInfo[idd][pLicenses][3]);
				UpdatePlayerDataEx(idd, "pLics", PlayerInfo[idd][pLicense]);
				format(stringer,MAX_STR, "забрал(а) у %s лицензию на оружие", PlayerInfo[playerid][pNames], PlayerInfo[idd][pNames]);
				MeAction(playerid, stringer);
				SCMF(playerid,0x6ab1ffaa,"Вы забрали  лицензию на оружие у %s.",PlayerInfo[idd][pNames],idd);
				SPD(playerid, 7779, DIALOG_STYLE_LIST, "{FF6F00}Отобрать лицензии:", "- Отобрать водительские права\n- Отобрать лицензию на полёты \n- Отобрать лицензию на вождение водного транспорта\n- Отобрать лицензия на оружие\n- Наркотики\n- Оружие\n- Материалы", "Скрыть", "Отмена");
				#undef idd
			}
			else return 1;
		}
	case 108:
		{
			if(response)
			{
				#define idd strval(inputtext)
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
				if(!ProxDetectorS(2.0, playerid, idd)) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не рядом с вами!");
				SCMF(idd,0x6ab1ffaa,"%s забрал у вас все наркотики", PlayerInfo[playerid][pNames]);
				PlayerInfo[idd][pDrugs] = 0;
				format(stringer,MAX_STR, "забрал(а) у %s наркотики", PlayerInfo[playerid][pNames], PlayerInfo[idd][pNames]);
				MeAction(playerid, stringer);
				SCMF(playerid,0x6ab1ffaa,"Вы забрали  наркотики у %s.",PlayerInfo[idd][pNames],idd);
				SPD(playerid, 7779, DIALOG_STYLE_LIST, "{FF6F00}Отобрать лицензии:", "- Отобрать водительские права\n- Отобрать лицензию на полёты \n- Отобрать лицензию на вождение водного транспорта\n- Отобрать лицензия на оружие\n- Наркотики\n- Оружие\n- Материалы", "Скрыть", "Отмена");
				return 1;
				#undef idd
			}
			else return 1;
		}
	case 109:
		{
			if(response)
			{
				#define idd strval(inputtext)
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
				if(!ProxDetectorS(2.0, playerid, idd)) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не рядом с вами!");
				SCMF(idd,0x6ab1ffaa,"%s забрал у вас оружие", PlayerInfo[playerid][pNames]);
				ResetPlayerWeapons(idd);
				format(stringer,MAX_STR, "%s забрал(а) у %s оружие", PlayerInfo[playerid][pNames], PlayerInfo[idd][pNames]);
				ProxDetector(10.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
				SCMF(playerid,0x6ab1ffaa,"Вы забрали оружие у %s.",PlayerInfo[idd][pNames],idd);
				SPD(playerid, 7779, DIALOG_STYLE_LIST, "{FF6F00}Отобрать лицензии:", "- Отобрать водительские права\n- Отобрать лицензию на полёты \n- Отобрать лицензию на вождение водного транспорта\n- Отобрать лицензия на оружие\n- Наркотики\n- Оружие\n- Материалы", "Скрыть", "Отмена");
				return 1;
				#undef idd
			}
			else return 1;
		}
		//донат
	case 110:
		{
			if(response)
			{
				#define idd strval(inputtext)
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
				if(!ProxDetectorS(2.0, playerid, idd)) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не рядом с вами!");
				SCMF(idd,0x6ab1ffaa,"%s забрал у вас материалы", PlayerInfo[playerid][pNames]);
				PlayerInfo[idd][pMats] = 0;
				format(stringer,MAX_STR, "%s забрал(а) у %s материалы", PlayerInfo[playerid][pNames], PlayerInfo[idd][pNames]);
				ProxDetector(10.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
				SCMF(playerid,0x6ab1ffaa,"Вы забрали материалы у %s.",PlayerInfo[idd][pNames],idd);
				SPD(playerid, 7779, DIALOG_STYLE_LIST, "{FF6F00}Отобрать лицензии:", "- Отобрать водительские права\n- Отобрать лицензию на полёты \n- Отобрать лицензию на вождение водного транспорта\n- Отобрать лицензия на оружие\n- Наркотики\n- Оружие\n- Материалы", "Скрыть", "Отмена");
				return 1;
				#undef idd
			}
			else return 1;
		}
	case 8240:
		{
			if(response)
			{
				SetPlayerInterior(playerid,7);
				PlayerInfo[playerid][pInt] = 7;
				SetPlayerVirtualWorld(playerid, 11);
				SetPlayerPosEx(playerid,302.3128,-140.9305,1004.0625);
				SetPlayerFacingAngle(playerid, 318.5262);
				return 1;
			}
			else
			{
				SetPlayerInterior(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerPosEx(playerid,2278.3853,2460.9187,38.6837);
				SetPlayerFacingAngle(playerid, 357.9236);
				return 1;
			}
		}
	case 8241:
		{
			if(response)
			{
				SetPlayerInterior(playerid,7);
				PlayerInfo[playerid][pInt] = 7;
				SetPlayerVirtualWorld(playerid, 15);
				SetPlayerPosEx(playerid,302.3128,-140.9305,1004.0625);
				SetPlayerFacingAngle(playerid, 318.5262);
				return 1;
			}
			else
			{
				SetPlayerInterior(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerPosEx(playerid,2294.0447,2468.8052,10.8203);
				SetPlayerFacingAngle(playerid, 90.8629);
				return 1;
			}
		}
	case 8242:
		{
			if(response)
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid,15);
				PlayerInfo[playerid][pInt] = 15;
				SetPlayerPosEx(playerid,999.5983,1000.0139,1999.7999);
				SetPlayerFacingAngle(playerid, 268.4196);
				SetPlayerVirtualWorld(playerid, 1);
				return 1;
			}
			else
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerPosEx(playerid,1650.2810,-1640.6709,83.7788);
				SetPlayerFacingAngle(playerid, 313.9981);
				SetPlayerVirtualWorld(playerid, 0);
				return 1;
			}
		}
	case 8243:
		{
			if(response)
			{
				SetPlayerInterior(playerid,15);
				PlayerInfo[playerid][pInt] = 15;
				SetPlayerPosEx(playerid,999.5983,1000.0139,1999.7999);
				SetPlayerFacingAngle(playerid, 268.4196);
				SetPlayerVirtualWorld(playerid, 2);
				return 1;
			}
			else
			{
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerPosEx(playerid,-2047.0208,450.5458,139.7422);
				SetPlayerFacingAngle(playerid, 153.7635);
				return 1;
			}
		}
	case 1523:
		{
			if(response)
			{
				new b = PlayerInfo[playerid][pFuelBiz];
				switch(listitem)
				{
				case 0:
					{
						if(SBizzInfo[b][sLocked] == 0)
						{
							SBizzInfo[b][sLocked] = 1;
							SCM(playerid,COLOR_GREY,"Вы закрыли заправку.");
							format(stringer,300, "{FFFFFF}Заправочная станция: {FFC873}№%i{FFFFFF}\nНазвание заправки: {FFC873}%s{FFFFFF}\nВладелец: {00C90D}%s{FFFFFF}\nБензина в скважине: {FFC873}%i литров{FFFFFF}\nЦена за 1 литр: {FFC873}$%d{FFFFFF}\n\n{FF0000}Заправка не работает{FFFFFF}",SBizzInfo[b][sID],SBizzInfo[b][sMessage],SBizzInfo[b][sOwner],SBizzInfo[b][sBenz],SBizzInfo[b][sPriceBenz]);
							Update3DTextLabelText(SBizzInfo[b][sLabel], TEAM_GROVE_COLOR, stringer);
							cmd::filling(playerid);
						}
						else
						{
							SBizzInfo[b][sLocked] = 0;
							SCM(playerid,COLOR_GREY,"Вы открыли заправку.");
							format(stringer,300, "{FFFFFF}Заправочная станция: {FFC873}№%i{FFFFFF}\nНазвание заправки: {FFC873}%s{FFFFFF}\nВладелец: {00C90D}%s{FFFFFF}\nБензина в скважине: {FFC873}%i литров{FFFFFF}\nЦена за 1 литр: {FFC873}$%d{FFFFFF}\n\n{00C90D}Заправка работает{FFFFFF}",SBizzInfo[b][sID],SBizzInfo[b][sMessage],SBizzInfo[b][sOwner],SBizzInfo[b][sBenz],SBizzInfo[b][sPriceBenz]);
							Update3DTextLabelText(SBizzInfo[b][sLabel], TEAM_GROVE_COLOR, stringer);
							cmd::filling(playerid);
						}
						if(SBizzInfo[b][sLocked] == 0) format(stringer,256, "{FFFFFF}Заправочная станция: {FFC873}№%i{FFFFFF}\nНазвание заправки: {FFC873}%s{FFFFFF}\nВладелец: {00C90D}%s{FFFFFF}\nБензина в скважине: {FFC873}%i литров{FFFFFF}\nЦена за 1 литр: {FFC873}$%d{FFFFFF}\n\n{00C90D}Заправка работает{FFFFFF}",SBizzInfo[b][sID],SBizzInfo[b][sMessage],SBizzInfo[b][sOwner],SBizzInfo[b][sBenz],SBizzInfo[b][sPriceBenz]);
						else format(stringer,300, "{FFFFFF}Заправочная станция: {FFC873}№%i{FFFFFF}\nНазвание заправки: {FFC873}%s{FFFFFF}\nВладелец: {00C90D}%s{FFFFFF}\nБензина в скважине: {FFC873}%i литров{FFFFFF}\nЦена за 1 литр: {FFC873}$%d{FFFFFF}\n\n{FF0000}Заправка не работает{FFFFFF}",SBizzInfo[b][sID],SBizzInfo[b][sMessage],SBizzInfo[b][sOwner],SBizzInfo[b][sBenz],SBizzInfo[b][sPriceBenz]);
						Update3DTextLabelText(SBizzInfo[b][sLabel], TEAM_GROVE_COLOR, stringer);
					}
				case 1: SPD(playerid,1524,DIALOG_STYLE_INPUT,"{FF6F00}Название заправки","{FFFFFF}Введите новое название заправки","Скрыть","Назад");
				case 2://Управление счетом
					{
						format(stringer,MAX_STR, "{FFFFFF}На счету заправки %d вирт",SBizzInfo[b][sTill]);
						SPD(playerid,1525,DIALOG_STYLE_INPUT,"{FF6F00}Управление счетом",stringer,"Положить","Снять");
					}
				case 3://Информация
					{
						format(stringer,BIG_SIZE, "\t{FF6F00}%s\n\n{FFFF00}Владелец: {32CD32}%s\n{FFFFFF}Цена: {32CD32}%d вирт\n{FFFFFF}Бензин: {FF6F00}%d/10000\n{FFFFFF}Цена за бензин: {32CD32}%d вирт\n{FFFFFF}Цена за продукт: {32CD32}%d вирт\n\n\t{32CD32}На счету: %d вирт.",SBizzInfo[b][sMessage],SBizzInfo[b][sOwner],SBizzInfo[b][sBuyPrice],SBizzInfo[b][sBenz],SBizzInfo[b][sPriceBenz],SBizzInfo[b][sPrice],SBizzInfo[b][sTill]);
						SPD(playerid,1526,DIALOG_STYLE_MSGBOX,"{FF6F00}Информация заправки",stringer,"Назад","");
					}
				case 4:
					{
						format(stringer,MAX_STR, "{FFFFFF}Сейчас установлено %d вирт за единицу продукта.",SBizzInfo[b][sPrice]);
						SPD(playerid,1528,DIALOG_STYLE_INPUT,"{FF6F00}Управление счетом",stringer,"Изменить","Назад");
					}
				case 5:
					{
						format(stringer,MAX_STR, "{FFFFFF}Сейчас установлено %d вирт за единицу бензина.",SBizzInfo[b][sPriceBenz]);
						SPD(playerid,1529,DIALOG_STYLE_INPUT,"{FF6F00}Управление счетом",stringer,"Изменить","Назад");
					}
				case 6: SPD(playerid,1530,DIALOG_STYLE_MSGBOX,"{FF6F00}Продажа заправки","{FFFFFF}Вы уверены, что хотите продать заправку?","Да","Нет");
				}
			}
		}
	case 1524:
		{
			if(response)
			{
				new b = PlayerInfo[playerid][pFuelBiz];
				if(strlen(inputtext) > 20 || strlen(inputtext) < 3) return SPD(playerid,1524,DIALOG_STYLE_INPUT,"Название заправки","Введите новое название заправки\n{FF6F00}Название может быть от 3 до 20 символов.","Скрыть","Назад");
				strmid(SBizzInfo[b][sMessage], inputtext, 0, strlen(inputtext), 255);
				mysql_format(connects, stringer, MAX_STR, "UPDATE `sbizz` SET `sMessage` = '%s' WHERE sID = %i",inputtext,b);
				mysql_empty(connects, stringer);
				if(SBizzInfo[b][sLocked] == 0) format(stringer,300, "{FFFFFF}Заправочная станция: {FFC873}№%i{FFFFFF}\nНазвание заправки: {FFC873}%s{FFFFFF}\nВладелец: {00C90D}%s{FFFFFF}\nБензина в скважине: {FFC873}%i литров{FFFFFF}\nЦена за 1 литр: {FFC873}$%d{FFFFFF}\n\n{00C90D}Заправка работает{FFFFFF}",SBizzInfo[b][sID],SBizzInfo[b][sMessage],SBizzInfo[b][sOwner],SBizzInfo[b][sBenz],SBizzInfo[b][sPriceBenz]);
				else format(stringer,300, "{FFFFFF}Заправочная станция: {FFC873}№%i{FFFFFF}\nНазвание заправки: {FFC873}%s{FFFFFF}\nВладелец: {00C90D}%s{FFFFFF}\nБензина в скважине: {FFC873}%i литров{FFFFFF}\nЦена за 1 литр: {FFC873}$%d{FFFFFF}\n\n{FF0000}Заправка не работает{FFFFFF}",SBizzInfo[b][sID],SBizzInfo[b][sMessage],SBizzInfo[b][sOwner],SBizzInfo[b][sBenz],SBizzInfo[b][sPriceBenz]);
				Update3DTextLabelText(SBizzInfo[b][sLabel], TEAM_GROVE_COLOR, stringer);
				cmd::filling(playerid);
			}
			else cmd::filling(playerid);
		}
	case 1525:
		{
			new b = PlayerInfo[playerid][pFuelBiz];
			if(!strlen(inputtext))
			{
				format(stringer,SMALL_SIZE, "На счету заправки %d вирт",SBizzInfo[b][sTill]);
				SPD(playerid,1525,DIALOG_STYLE_INPUT,"{FF6F00}Управление счетом",stringer,"Положить","Снять");
				return 1;
			}
			if(response)
			{
				#define dengi strval(inputtext)
				if(dengi < 1 || dengi > 10000000)
				{
					format(stringer,MAX_STR, "На счету заправки %d вирт\n{FF6F00}Ошибка: Положить можно от 1 до 10кк вирт.",SBizzInfo[b][sTill]);
					SPD(playerid,1525,DIALOG_STYLE_INPUT,"{FF6F00}Управление счетом",stringer,"Положить","Снять");
					return 1;
				}
				if(PlayerInfo[playerid][pCash] < dengi) return SCM(playerid,COLOR_GRAD1,"У вас нет столько денег");
				PlayerInfo[playerid][pCash] -= dengi;
				SBizzInfo[b][sTill] += dengi;
				SCMF(playerid,COLOR_GREEN,"Вы успешно положили на счет заправки %d вирт.",dengi);
				SaveSBizz(b);
				cmd::filling(playerid);
				#undef dengi
			}
			else
			{
				#define dengi strval(inputtext)
				if(dengi < 1 || dengi > 10000000)
				{
					format(stringer,MAX_STR, "На счету заправки %d вирт\n{FF6F00}Ошибка: Взять можно от 1 до 10кк вирт.",SBizzInfo[b][sTill]);
					SPD(playerid,1525,DIALOG_STYLE_INPUT,"{FF6F00}Управление счетом",stringer,"Положить","Снять");
					return 1;
				}
				if(SBizzInfo[b][sTill] < dengi) return SCM(playerid,COLOR_GRAD1,"На счету заправки нету столько денег");
				PlayerInfo[playerid][pCash] += dengi;
				SBizzInfo[b][sTill] -= dengi;
				SCMF(playerid,COLOR_GREEN,"Вы успешно взяли со счета заправки %d вирт.",dengi);
				SaveSBizz(b);
				cmd::filling(playerid);
				#undef dengi
			}
		}
	case 1526: { if(response) cmd::filling(playerid); }
	case 1530:
		{
			if(response) cmd::sellfuel(playerid);
			else cmd::filling(playerid);
		}
	case 1528:
		{
			if(response)
			{
				new b = PlayerInfo[playerid][pFuelBiz];
				if(!strlen(inputtext))
				{
					format(stringer,MAX_STR, "Сейчас установлено %d вирт за единицу продукта.",SBizzInfo[b][sPrice]);
					SPD(playerid,1528,DIALOG_STYLE_INPUT,"Управление счетом",stringer,"Изменить","Назад");
					return 1;
				}
				#define dengi strval(inputtext)
				if(dengi < 1 || dengi > 5000)
				{
					format(stringer,MAX_STR, "Сейчас установлено %d вирт за единицу продукта.\n{FF6F00}Ошибка: Возможно от 1 до 5000 вирт.",SBizzInfo[b][sPrice]);
					SPD(playerid,1528,DIALOG_STYLE_INPUT,"Управление счетом",stringer,"Изменить","Назад");
					return 1;
				}
				SBizzInfo[b][sPrice] = dengi;
				SCMF(playerid,COLOR_GREY,"Вы успешно установили цена за единицу продукта. Теперь %d вирт",SBizzInfo[b][sPrice]);
				cmd::filling(playerid);
				#undef dengi
			}
			else cmd::filling(playerid);
		}
	case 1529:
		{
			if(response)
			{
				new b = PlayerInfo[playerid][pFuelBiz];
				if(!strlen(inputtext))
				{
					format(stringer,MAX_STR, "Сейчас установлено %d вирт за единицу бензина.",SBizzInfo[b][sPriceBenz]);
					SPD(playerid,1529,DIALOG_STYLE_INPUT,"Управление счетом",stringer,"Изменить","Назад");
					return 1;
				}
				#define dengi strval(inputtext)
				if(dengi < 1 || dengi > 5000)
				{
					format(stringer,MAX_STR, "Сейчас установлено %d вирт за единицу бензина.\n{FF6F00}Ошибка: Возможно от 1 до 5000 вирт.",SBizzInfo[b][sPriceBenz]);
					SPD(playerid,1529,DIALOG_STYLE_INPUT,"Управление счетом",stringer,"Изменить","Назад");
					return 1;
				}
				SBizzInfo[b][sPriceBenz] = dengi;
				SCMF(playerid,COLOR_GREY,"Вы успешно установили цена за единицу бензина. Теперь %d вирт",SBizzInfo[b][sPrice]);
				cmd::filling(playerid);
				#undef dengi
			}
			else cmd::filling(playerid);
		}
	case 9596:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						switch(PlayerInfo[playerid][pMRInections])
						{
						case 6: format(stringer,SMALL_SIZE,"В банке мафии Yakuza: %d вирт", MafiaBank[0][nYakuza]);
						case 14: format(stringer,SMALL_SIZE,"В банке Русской мафии: %d вирт", MafiaBank[0][nRm]);
						case 5: format(stringer,SMALL_SIZE,"В банке мафии LCN: %d вирт", MafiaBank[0][nLcn]);
						}
						SCM(playerid,0x6ab1ffaa,stringer);
						return 1;
					}
				case 1:
					{
						format(stringer,SMALL_SIZE,"Пополнение счета банка мафии");
						SPD(playerid,22255,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
					}
				case 2:
					{
						if(PlayerInfo[playerid][pRKInections] < 9) return SCM(playerid,COLOR_GREY,"Вам не доступна данная команда.");
						format(stringer,SMALL_SIZE,"Снятие денег с банка мафии");
						SPD(playerid,22256,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
					}
				case 3:
					{
						switch(PlayerInfo[playerid][pMRInections])
						{
						case 6: format(stringer,SMALL_SIZE,"На складе мафии %d матов", yakuzamats);
						case 5: format(stringer,SMALL_SIZE,"На складе мафии %d матов", lcnmats);
						case 14: format(stringer,SMALL_SIZE,"На складе мафии %d матов", rmmats);
						}
						SCM(playerid,0x6ab1ffaa,stringer);
						return 1;
					}
				}
			}
		}
	case 22255:
		{
			if(response)
			{
				switch(PlayerInfo[playerid][pMRInections])
				{
				case 6:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Пополнение счета банка мафии");
							SPD(playerid,22255,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя пополнить счет меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Пополнение счета банка мафии");
							SPD(playerid,22255,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
							return 1;
						}
						if(PlayerInfo[playerid][pCash] < dengi) return SCM(playerid,COLOR_GRAD1,"У вас нет столько денег");
						PlayerInfo[playerid][pCash] -= dengi;
						MafiaBank[0][nYakuza] += dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы положили в банк мафии Yakuza: %d вирт", dengi);
						format(stringer,SMALL_SIZE, "%s положил в банк мафии %d вирт", PlayerInfo[playerid][pNames],dengi);
						SendFamilyMessage(6, COLOR_YELLOW2, stringer);
						SaveBankMafia();
						return 1;
						#undef dengi
					}
				case 14:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Пополнение счета банка мафии");
							SPD(playerid,22255,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя пополнить счет меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Пополнение счета банка мафии");
							SPD(playerid,22255,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
							return 1;
						}
						if(PlayerInfo[playerid][pCash] < dengi) return SCM(playerid,COLOR_GRAD1,"У вас нет столько денег");
						PlayerInfo[playerid][pCash] -= dengi;
						MafiaBank[0][nRm] += dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы положили в банк Русской мафии: %d вирт", dengi);
						format(stringer,SMALL_SIZE, "%s положил в банк мафии %d вирт", PlayerInfo[playerid][pNames],dengi);
						SendFamilyMessage(14, COLOR_YELLOW2, stringer);
						SaveBankMafia();
						return 1;
						#undef dengi
					}
				case 5:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Пополнение счета банка мафии");
							SPD(playerid,22255,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя пополнить счет меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Пополнение счета банка мафии");
							SPD(playerid,22255,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
							return 1;
						}
						if(PlayerInfo[playerid][pCash] < dengi) return SCM(playerid,COLOR_GRAD1,"У вас нет столько денег");
						PlayerInfo[playerid][pCash] -= dengi;
						MafiaBank[0][nLcn] += dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы положили в банк мафии LCN: %d вирт", dengi);
						format(stringer,SMALL_SIZE, "%s положил в банк мафии %d вирт", PlayerInfo[playerid][pNames],dengi);
						SendFamilyMessage(5, COLOR_YELLOW2, stringer);
						SaveBankMafia();
						return 1;
						#undef dengi
					}
				}
			}
		}//case 22255
	case 22256:
		{
			if(response)
			{
				switch(PlayerInfo[playerid][pMRInections])
				{
				case 6:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Снятие денег с банка мафии");
							SPD(playerid,22256,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя снять меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Снятие денег с банка мафии");
							SPD(playerid,22256,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
							return 1;
						}
						if(MafiaBank[0][nYakuza] < dengi) return SCM(playerid,COLOR_GRAD1,"В Банке Yakuza нет столько денег");
						PlayerInfo[playerid][pCash] += dengi;
						MafiaBank[0][nYakuza] -= dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы сняли с банка мафии Yakuza: %d вирт", dengi);
						format(stringer,SMALL_SIZE, "%s снял с банка мафии %d вирт", PlayerInfo[playerid][pNames],dengi);
						SendFamilyMessage(6, COLOR_YELLOW2, stringer);
						SaveBankMafia();
						return 1;
						#undef dengi
					}
				case 14:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Снятие денег с банка мафии");
							SPD(playerid,22256,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя снять меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Снятие денег с банка мафии");
							SPD(playerid,22256,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
							return 1;
						}
						if(MafiaBank[0][nRm] < dengi) return SCM(playerid,COLOR_GRAD1,"В Банке Yakuza нет столько денег");
						PlayerInfo[playerid][pCash] += dengi;
						MafiaBank[0][nRm] -= dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы сняли с банка мафии Russan Mafia: %d вирт", dengi);
						format(stringer,SMALL_SIZE, "%s снял с банка мафии %d вирт", PlayerInfo[playerid][pNames],dengi);
						SendFamilyMessage(14, COLOR_YELLOW2, stringer);
						SaveBankMafia();
						return 1;
						#undef dengi
					}
				case 5:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Снятие денег с банка мафии");
							SPD(playerid,22256,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя снять меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Снятие денег с банка мафии");
							SPD(playerid,22256,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
							return 1;
						}
						if(MafiaBank[0][nLcn] < dengi) return SCM(playerid,COLOR_GRAD1,"В Банке Yakuza нет столько денег");
						PlayerInfo[playerid][pCash] += dengi;
						MafiaBank[0][nLcn] -= dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы сняли с банка мафии LCN: %d вирт", dengi);
						format(stringer,SMALL_SIZE, "%s снял с банка мафии %d вирт", PlayerInfo[playerid][pNames],dengi);
						SendFamilyMessage(5, COLOR_YELLOW2, stringer);
						SaveBankMafia();
						return 1;
						#undef dengi
					}
				}
			}
		}
	case 10098:
		{
			if(!response) return DeletePVar(playerid, "useguns");
			DeletePVar(playerid, "useguns");
			if(PlayerInfo[playerid][pMRInections] != 0) return      SCM(playerid, COLOR_GRAD1, "Вы состоите в организации");
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][pLevel] < 2) return SCM(playerid, COLOR_GRAD1, "Вам требуется 2 уровень!");
					PlayerInfo[playerid][pJob] = 2;
					SCM(playerid, COLOR_WHITE, "Вас успешно приняли на работу механика.");
					SCM(playerid, 0x6495EDFF, "Пропишите /mm чтобы посмотреть команды.");
					SCM(playerid, 0x6495EDFF, "Что бы прицепить машину введите /trailer рядом с ней");
					return 1;
				}
			case 1:
				{
					if(PlayerInfo[playerid][pLevel] < 4) return	SCM(playerid, COLOR_GRAD1, "Вам требуется 4 уровень!");
					PlayerInfo[playerid][pJob] = 5;
					SCM(playerid, COLOR_WHITE, "Вас успешно приняли на работу развозчика продуктов.");
					SCM(playerid, 0x6ab1ffaa, "Пропишите /mm чтобы посмотреть команды.");
					return 1;
				}
			case 2:
			    {
			    	if(PlayerInfo[playerid][pLevel] < 3) return SCM(playerid, COLOR_GRAD1, "Вам требуется 3 уровень!");
					PlayerInfo[playerid][pJob] = 6;
					SCM(playerid, COLOR_WHITE, "Вас успешно приняли на работу водителя автобуса.");
					SCM(playerid, 0x6495EDFF, "Чтобы начать работу, арендуйте автобус на стоянке автобусов!");
					return 1;
			    }
			case 3:
			    {
			    	if(PlayerInfo[playerid][pLevel] < 2) return SCM(playerid, COLOR_GRAD1, "Вам требуется 3 уровень!");
					PlayerInfo[playerid][pJob] = 4;
					SCM(playerid, COLOR_WHITE, "Вас успешно приняли на работу таксиста.");
					SCM(playerid, 0x6495EDFF, "Чтобы начать работу, арендуйте такси на стоянке таксистов!");
					return 1;
			    }
			}
		}
		case 5350:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: return SPD(playerid,5351,DIALOG_STYLE_INPUT,"{FF6F00}Своя мелодия","{FFFFFF}Введите прямую ссылку на воспроизведение своей мелодии","Скрыть","Назад");
			case 1:
				{
					cmd::diskjokey(playerid);
					foreach(new i: Player)
					{
						if(GetDistanceBetweenPlayers(playerid,i) < MGM[4])
						{
							SCM(i,COLOR_WHITE,"[PlayList] Музыка отключена DJ.");
							StopAudioStreamForPlayer(i);
							Music[playerid] = false;
						}
					}
				}
			case 2:
				{
					if(PlayerToPoint(2, playerid,487.35198974609,-2.1640000343323,1002.3829956055)) AlhambraDJ = false, AlhambraDJID = INVALID_PLAYER_ID;
					SCM(playerid,COLOR_WHITE,"Вы отошли от пульта DiskJokey'я.");
					cmd::diskjokey(playerid);
				}
			}
		}
	case 7777:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
                    if(!ProxDetectorS(10.0, playerid, GetPVarInt(playerid, "ChosenPlayer"))) return SCM(playerid, COLOR_WHITE, "Игрок, не рядом с вами !");
					if(PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][0] == 1) return SCM(playerid, COLOR_GRAD1, "У данного игрока уже есть вод. права!");
					SCMF(playerid,0x6ab1ffaa,"Вы выдали водительские права %s.",PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pNames]);
					PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][0] = 1;
					format(PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicense],16,"%d,%d,%d,%d",PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][0],PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][1],PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][2],PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][3]);
					UpdatePlayerDataEx(GetPVarInt(playerid, "ChosenPlayer"), "pLics", PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicense]);
					SCM(GetPVarInt(playerid, "ChosenPlayer"), 0x6ab1ffaa, "Инструктор выдал вам водительские права");
					return 1;
				}
			case 1:
				{
				    if(!ProxDetectorS(10.0, playerid, GetPVarInt(playerid, "ChosenPlayer"))) return SCM(playerid, COLOR_WHITE, "Игрок, не рядом с вами !");
					if(PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][1] == 1) return SCM(playerid, COLOR_GRAD1, "У данного игрока уже есть эта лицензия!");
					SCMF(playerid,0x6ab1ffaa,"Вы выдали права на воздух %s.",PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pNames]);
					PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][1] = 1;
					format(PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicense],16,"%d,%d,%d,%d",PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][0],PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][1],PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][2],PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][3]);
					UpdatePlayerDataEx(GetPVarInt(playerid, "ChosenPlayer"), "pLics", PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicense]);
					SCM(GetPVarInt(playerid, "ChosenPlayer"), 0x6ab1ffaa, "Инструктор выдал вам права на воздушный транспорт");
					return 1;
				}
			case 2:
				{
				    if(!ProxDetectorS(10.0, playerid, GetPVarInt(playerid, "ChosenPlayer"))) return SCM(playerid, COLOR_WHITE, "Игрок, не рядом с вами !");
					if(PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][2] == 1) return SCM(playerid, COLOR_GRAD1, "У данного игрока уже есть эта лицензия!");
					SCMF(playerid,0x6ab1ffaa,"Вы выдали лицензию на лодки %s.",PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pNames]);
					PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][2] = 1;
					format(PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicense],16,"%d,%d,%d,%d",PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][0],PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][1],PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][2],PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][3]);
					UpdatePlayerDataEx(GetPVarInt(playerid, "ChosenPlayer"), "pLics", PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicense]);
					SCM(GetPVarInt(playerid, "ChosenPlayer"), 0x6ab1ffaa, "Инструктор выдал вам лицензию на лодки");
					return 1;
				}
			case 3:
				{
				    if(!ProxDetectorS(10.0, playerid, GetPVarInt(playerid, "ChosenPlayer"))) return SCM(playerid, COLOR_WHITE, "Игрок, не рядом с вами !");
					if(PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][3] == 1) return	SCM(playerid, COLOR_GRAD1, "У данного игрока уже есть эта лицензия!");
					SCMF(playerid,0x6ab1ffaa,"Вы выдали лицензию на оружие %s.",PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pNames]);
					PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][3] = 1;
					format(PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicense],16,"%d,%d,%d,%d",PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][0],PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][1],PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][2],PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicenses][3]);
					UpdatePlayerDataEx(GetPVarInt(playerid, "ChosenPlayer"), "pLics", PlayerInfo[GetPVarInt(playerid, "ChosenPlayer")][pLicense]);
					SCM(GetPVarInt(playerid, "ChosenPlayer"), 0x6ab1ffaa, "Инструктор выдал вам лицензию на оружие");
					return 1;
				}
			}
		}
	case 9956:
		{
			if(!response) return SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			switch(listitem)
			{
			case 0:
				{
					if(Medics < 1)
					{
						SCM(playerid, COLOR_GREY, "В данный момент нет медиков на дежурстве!");
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
						return 1;
					}
					format(stringer,MAX_STR, "Диспетчер: Человек нуждается в медицинской помощи! {FFFFFF}(  Введите: /accept medic, чтобы принять вызов )");
					SendFamilyMessage(4, COLOR_RED, stringer);
					SCM(playerid, 0x6ab1ffaa, "Ваш запрос на медицинскую помощь послан. Ждите ответа.");
					MedicCall = playerid;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 1;
				}
			case 1:
				{
					if(Mechanics < 1)
					{
						SCM(playerid, COLOR_GREY, "В данный момент нет механиков на дежурстве!");
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
						return 1;
					}
					format(stringer,MAX_STR, "Диспетчер: Человек нуждается в помощи механика. {FFFFFF}(  Введите: /accept mechanic, чтобы принять вызов )");
					SendJobMessage(2, COLOR_RED, stringer);
					SCM(playerid, 0x6ab1ffaa, "Ваш запрос на вызов механика послан. Ждите ответа.");
					MechanicCall = playerid;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 1;
				}
			case 2:
				{
					if(Police < 1)
					{
						SCM(playerid, COLOR_GREY, "В данный момент нет патрульных на дежурстве!");
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
						return 1;
					}
					format(stringer,MAX_STR, "Диспетчер: Человек нуждается в помощи полицейских. {FFFFFF}(  Введите: /accept police, чтобы принять вызов )");
					SendFamilyMessage(1, COLOR_RED, stringer);
					SendFamilyMessage(10, COLOR_RED, stringer);
					SendFamilyMessage(21, COLOR_RED, stringer);
					SCM(playerid, 0x6ab1ffaa, "Ваш запрос на вызов полиции послан. Ждите ответа.");
					PoliceCall = playerid;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return 1;
				}
			}
		}
	case 5454:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					SCM(playerid, COLOR_YELLOW2, "Адвокаты Online:");
					foreach(new i: Player)
					{
						if((PlayerInfo[i][pMRInections] == 7 || PlayerInfo[i][pMRInections] == 28) && PlayerInfo[i][pRKInections] == 2) { SCMF(playerid,COLOR_WHITE,"Адвокат: %s Тел: %d", PlayerInfo[i][pNames], PlayerInfo[i][pPnumber]); }
					}
				}
			case 1:
				{
					SCM(playerid, COLOR_YELLOW2, "Крупье:");
					foreach(new i: Player)
					{
						if(PlayerInfo[i][pMRInections] == 8 && PlayerInfo[i][pRKInections] == 3) { SCMF(playerid,COLOR_WHITE,"Крупье: %s",PlayerInfo[i][pNames]); }
					}
				}
			case 2:
				{
					if(IsPlayerConnected(playerid))
					{
						SCM(playerid, COLOR_NEWS, "Лидеры онлайн:");
						foreach(new i: Player)
						{
							if(PlayerInfo[i][pLRInections]>0)
							{
								if(PlayerInfo[i][pLRInections] == 1) { stringer1 = "LSPD"; } //directory ранги
								else if(PlayerInfo[i][pLRInections] == 2) { stringer1 = "ФБР"; }
								else if(PlayerInfo[i][pLRInections] == 3) { stringer1 = "Армия: Авианосец"; }
								else if(PlayerInfo[i][pLRInections] == 4) { stringer1 = "МЧС Сан Фиерро"; }
								else if(PlayerInfo[i][pLRInections] == 5) { stringer1 = "LCN"; }
								else if(PlayerInfo[i][pLRInections] == 6) { stringer1 = "Yakuza"; }
								else if(PlayerInfo[i][pLRInections] == 7) { stringer1 = "Мэрия г.Los-Santos"; }
								else if(PlayerInfo[i][pLRInections] == 8) { stringer1 = "Casino Rich"; }
								else if(PlayerInfo[i][pLRInections] == 9) { stringer1 = "SF News"; }
								else if(PlayerInfo[i][pLRInections] == 10) { stringer1 = "SFPD"; }
								else if(PlayerInfo[i][pLRInections] == 11) { stringer1 = "Инструкторы"; }
								else if(PlayerInfo[i][pLRInections] == 12) { stringer1 = "The Ballas "; }
								else if(PlayerInfo[i][pLRInections] == 13) { stringer1 = "The Vagos"; }
								else if(PlayerInfo[i][pLRInections] == 14) { stringer1 = "Русская мафия"; }
								else if(PlayerInfo[i][pLRInections] == 15) { stringer1 = "The Grove"; }
								else if(PlayerInfo[i][pLRInections] == 16) { stringer1 = "San News"; }
								else if(PlayerInfo[i][pLRInections] == 17) { stringer1 = "The Aztecas"; }
								else if(PlayerInfo[i][pLRInections] == 18) { stringer1 = "The Rifa"; }
								else if(PlayerInfo[i][pLRInections] == 19) { stringer1 = "Армия: Зона 51"; }
								else if(PlayerInfo[i][pLRInections] == 21) { stringer1 = "LVPD"; }
								else if(PlayerInfo[i][pLRInections] == 24) { stringer1 = "Street Racers"; }
								else if(PlayerInfo[i][pLRInections] == 25) { stringer1 = "SWAT"; }
								else if(PlayerInfo[i][pLRInections] == 26) { stringer1 = "Правительство"; }
								else if(PlayerInfo[i][pLRInections] == 27) { stringer1 = "Военно Морской Флот"; }
								else if(PlayerInfo[i][pLRInections] == 28) { stringer1 = "Мэрия г.San-Fierro"; }
								SCMF(playerid,0xF5DEB3AA,"%s: %s | Тел: %d",stringer1,PlayerInfo[i][pNames],PlayerInfo[i][pPnumber]);
							}
						}
					}
				}
			case 3:
				{
					SCM(playerid, 0x6495EDFF, "Инструкторы Online:");
					foreach(new i: Player)
					{
						if(PlayerInfo[i][pMRInections] == 11) { SCMF(playerid,COLOR_WHITE,"Инструктор: %s Тел: %d", PlayerInfo[i][pNames], PlayerInfo[i][pPnumber]); }
					}
				}
			case 4:
				{
					SCM(playerid, COLOR_YELLOW2, "Механики:");
					foreach(new i: Player)
					{
						if(PlayerInfo[i][pJob] == 2) { SCMF(playerid,COLOR_WHITE," %s Тел: %d", PlayerInfo[i][pNames], PlayerInfo[i][pPnumber]); }
					}
				}
			case 5:
				{
					SCM(playerid, COLOR_YELLOW2, "Медики:");
					foreach(new i: Player)
					{
						if(PlayerInfo[i][pMRInections] == 4) { SCMF(playerid,COLOR_WHITE,"- %s Тел: %d", PlayerInfo[i][pNames], PlayerInfo[i][pPnumber]); }
					}
				}
			case 6:
				{
					SCM(playerid, COLOR_YELLOW2, "Развозчики продуктов:");
					foreach(new i: Player)
					{
						if(PlayerInfo[i][pJob] == 5) { SCMF(playerid,COLOR_WHITE,"- %s Тел: %d", PlayerInfo[i][pNames], PlayerInfo[i][pPnumber]); }
					}
				}
			case 7:
				{
					SCM(playerid, COLOR_YELLOW2, "Развозчики строй-материалов:");
					foreach(new i: Player)
					{
						if(PlayerInfo[i][pJob] == 7) { SCMF(playerid,COLOR_WHITE,"- %s Тел: %d", PlayerInfo[i][pNames], PlayerInfo[i][pPnumber]); }
					}
				}
			}
		}
	case 2013:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1,"На складе нет материалов!"); //дигл
					gun = 24; ammo = 50;
					yakuzamats -= 70;
				}
			case 1:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1,"На складе нет материалов!"); //шотган
					gun = 25; ammo = 15;
					yakuzamats -= 50;
				}
			case 2:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1,"На складе нет материалов!"); //riфл
					gun = 33; ammo = 10;
					yakuzamats -= 100;
				}
			case 3:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");//m4
					gun = 31; ammo = 100;
					yakuzamats -= 500;
				}
			case 4:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1,"На складе нет материалов!"); //ak47
					gun = 30; ammo = 100;
					yakuzamats -= 500;
				}
			case 5:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1,"На складе нет материалов!"); //mp5
					gun = 29; ammo = 200;
					yakuzamats -= 400;
				}
			case 6:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1,"На складе нет материалов!"); //sdpistol
					gun = 23; ammo = 100; yakuzamats -= 100;
				}
			}
			GetWeaponName(gun, gunname, sizeof(gunname));
			GivePlayerWeaponAC(playerid, gun, ammo);
			SCM(playerid,COLOR_WHITE,"Вы взяли оружие со склада");
			format(stringer,SMALL_SIZE, "%s взял(а) оружие со склада", PlayerInfo[playerid][pNames]);
			ProxDetector(20.0, playerid, stringer,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
			SaveMaterials();
			return 1;
		}
	case 2014:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(lcnmats <= 50) return  SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
					gun = 24; ammo = 50; lcnmats -= 70;
				}
			case 1:
				{
					if(lcnmats <= 50)  return  SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
					gun = 25; ammo = 15; lcnmats -= 50;
				}
			case 2:
				{
					if(lcnmats <= 50)  return  SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
					gun = 33; ammo = 10; lcnmats -= 100;
				}
			case 3:
				{
					if(lcnmats <= 50)  return  SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
					gun = 31; ammo = 100; lcnmats -= 500;
				}
			case 4:
				{
					if(lcnmats <= 50)  return  SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
					gun = 30; ammo = 100; lcnmats -= 500;
				}
			case 5:
				{
					if(lcnmats <= 50)  return  SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
					gun = 29; ammo = 200; lcnmats -= 400;
				}
			case 6:
				{
					if(lcnmats <= 50)  return  SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
					gun = 23; ammo = 100; lcnmats -= 100;
				}
			}
			GetWeaponName(gun, gunname, sizeof(gunname));
			GivePlayerWeaponAC(playerid, gun, ammo);
			SCM(playerid, 0x6ab1ffaa, "Вы взяли оружие со склада");
			format(stringer,SMALL_SIZE, "%s взял(а) оружие со склада", PlayerInfo[playerid][pNames]);
			ProxDetector(20.0, playerid, stringer,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
			SaveMaterials();
			return 1;
		}
	case 2224:
		{
			if(!response) return 1;
			new newcar = GetPlayerVehicleID(playerid);
			switch(listitem)
			{
			case 0:
				{
					if(newcar >= lsnewscar[0] && newcar <= lsnewscar[1]) { } else { SCM(playerid, COLOR_GREY, "Вы не в репортёрской машине / вертолёте!"); return 1;}
					if(GetPVarInt(playerid, "PEfir") != 999)
					{
					    SetPVarInt(playerid, "PEfir", 999);
						format(stringer,SMALL_SIZE, "[SN] %s вошел(а) в прямой эфир", PlayerInfo[playerid][pNames]);
						SendFamilyMessage(16,COLOR_BLUE, stringer);
					}
					else SCM(playerid, COLOR_WHITE, "Вы уже в эфире");
				}
			case 1:
				{
					if(GetPVarInt(playerid, "PEfir") != INVALID_PLAYER_ID)
					{
					    SetPVarInt(playerid, "PEfir", 999);
						format(stringer,SMALL_SIZE, "[SN] %s вышел(а) из прямого эфира", PlayerInfo[playerid][pNames]);
						SendFamilyMessage(16,COLOR_BLUE, stringer);
						return 1;
					}
					else SCM(playerid, COLOR_GRAD1, "Вы не в эфире");
				}
			case 2:
				{
					format(stringer,SMALL_SIZE, "[SN] %s начал(а) приём звонков от слушателей", PlayerInfo[playerid][pNames]);
					SendFamilyMessage(16,COLOR_BLUE, stringer);
					smsls = true;
					return 1;
				}
			case 3:
				{
					format(stringer,SMALL_SIZE, "[SN] %s завершил(а) приём звонков от слушателей", PlayerInfo[playerid][pNames]);
					SendFamilyMessage(16,COLOR_BLUE, stringer);
					smsls = false;
					return 1;
				}
			case 4: if(PlayerInfo[playerid][pLRInections] == 16) return SPD(playerid,3002,DIALOG_STYLE_INPUT,"{FF6F00}Установка цены","{FFFFFF}Введите сумму","Скрыть","Отмена");
			}
		}
	case 3725:
		{
			if(!response) return cmd_apanel(playerid);
			switch(listitem)
			{
			case 0:
				{
					new i;
					for(new h = 0; h < sizeof(HouseInfo); h++)
					{
						if(HouseInfo[h][hOwned] == 1)
						{
							strmid(HouseInfo[h][hOwner], "The State", 0, strlen("The State"), 255);
							HouseInfo[h][hHel] = 0;
							HouseInfo[h][hHel] = 0;
							HouseInfo[h][hLock] = 1;
							HouseInfo[h][hOwned] = 0;
							HouseInfo[h][hTakings] = 0;
							HouseInfo[h][hVehSost] = 0;
							HouseInfo[h][hStyle] = 0;
							HouseInfo[h][hKolesa] = 0;
							HouseInfo[h][hGarage] = 0;
							HouseInfo[h][CarDrived][0] = 0;
							HouseInfo[h][CarDrived][1] = 0;
							HouseInfo[h][hBenz] = 0;
							for(new d = 0; d != 4; d++) HouseInfo[h][hBal][d] = 0;
							for(new d = 0; d != 5; d++) HouseInfo[h][hGun][d] = 0, HouseInfo[h][hGunAmmo][d] = 0;
							HouseInfo[h][hBenz] = 0;
							HouseInfo[h][hSafe] = 0;
							SaveHouse(h);
							i++;
						}
						UpdateIconHouse(h);
					}
					SCMF(playerid, COLOR_GRAD1, "Все занятые дома были проданы. Всего их было %d штук",i); i=0;
					return 1;
				}
			case 1: return 1;
			case 2:
				{
					if(PlayerInfo[playerid][bAdmin] < 13) return 1;
					for(new h = 0; h < sizeof(HouseInfo); h++)
					{
						if(HouseInfo[h][hValue] <= 300000 && HouseInfo[h][hValue] > 0) { HouseInfo[h][hKlass] = 0; }
						else if(HouseInfo[h][hValue] <= 500000 && HouseInfo[h][hValue] > 300000) { HouseInfo[h][hKlass] = 1; }
						else if(HouseInfo[h][hValue] <= 2000000 && HouseInfo[h][hValue] > 500000) { HouseInfo[h][hKlass] = 2; }
						else if(HouseInfo[h][hValue] <= 3000000 && HouseInfo[h][hValue] > 2000000) { HouseInfo[h][hKlass] = 3; }
						else if(HouseInfo[h][hValue] < 5000000 && HouseInfo[h][hValue] > 3000000) { HouseInfo[h][hKlass] = 4; }
					}
					SCM(playerid, COLOR_GRAD1, "По классам дома распределены");
				}
			case 3:
				{
					if(PlayerInfo[playerid][bAdmin] < 13) return 1;
					for(new h = 0; h < sizeof(HouseInfo); h++)
					{
						new cens = HouseInfo[h][hKlass];
						if(cens == 0 )
						{
							HouseInfo[h][hInt] = 10;
							HouseInfo[h][hExit][0] = 2261.3103;
							HouseInfo[h][hExit][1] = -1136.4467;
							HouseInfo[h][hExit][2] = 1050.6328;
							mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[h][hInt], HouseInfo[h][hExit][0], HouseInfo[h][hExit][1], HouseInfo[h][hExit][2], h);
							mysql_empty(connects, stringer);
						}
						if(cens == 1 )
						{
							HouseInfo[h][hInt] = 2;
							HouseInfo[h][hExit][0] = 225.9761;
							HouseInfo[h][hExit][1] = 1239.9126;
							HouseInfo[h][hExit][2] = 1082.1406;
							mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[h][hInt], HouseInfo[h][hExit][0], HouseInfo[h][hExit][1], HouseInfo[h][hExit][2], h);
							mysql_empty(connects, stringer);
						}
						if(cens == 2 )
						{
							HouseInfo[h][hInt] = 10;
							HouseInfo[h][hExit][0] = 23.8334;
							HouseInfo[h][hExit][1] = 1340.4812;
							HouseInfo[h][hExit][2] = 1084.3750;
							mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[h][hInt], HouseInfo[h][hExit][0], HouseInfo[h][hExit][1], HouseInfo[h][hExit][2], h);
							mysql_empty(connects, stringer);
						}
						if(cens == 3 )
						{
							HouseInfo[h][hInt] = 4;
							HouseInfo[h][hExit][0] = -261.9759;
							HouseInfo[h][hExit][1] = 1456.8844;
							HouseInfo[h][hExit][2] = 1084.3672;
							mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[h][hInt], HouseInfo[h][hExit][0], HouseInfo[h][hExit][1], HouseInfo[h][hExit][2], h);
							mysql_empty(connects, stringer);
						}
						if(cens == 4 )
						{
							HouseInfo[h][hInt] = 2;
							HouseInfo[h][hExit][0] = 491.0190;
							HouseInfo[h][hExit][1] = 1399.0691;
							HouseInfo[h][hExit][2] = 1080.2578;
							mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[h][hInt], HouseInfo[h][hExit][0], HouseInfo[h][hExit][1], HouseInfo[h][hExit][2], h);
							mysql_empty(connects, stringer);
						}
					}
					SCM(playerid, COLOR_GRAD1, "Все дома успешно распределены по интерьерам.");
				}
			case 4:
				{
					if(PlayerInfo[playerid][bAdmin] != 13) return 1;
					/*for(new i = 1; i <= BIZES; i++)
					{
						if(BizInfo[i][bOwner] == 1)
						{
							BizInfo[i][bOwner] = 0;
							strmid(BizInfo[i][bOwner], "None", 0, strlen("None"), 255);
							BizInfo[i][bBank] = 0;
							BizInfo[i][bVhod] = 0;
							format(stringer, MAX_STR, "{FFFF00}%s\n{FFFFFF}Бизнес находится на продаже\nЦена: {FFFF00}%i$", BizInfo[i][bName],BizInfo[i][bPrice]);
							UpdateDynamic3DTextLabelText( BizInfo[ i ][bLabel ], 0xC4DAADFF, stringer);
						}
						SCM(playerid, COLOR_GRAD1, "Все бизнесы успешно проданы.");
					}*/
				}
			case 5:
				{
					if(PlayerInfo[playerid][bAdmin] < 13) return 1;
					for(new h = 0; h < sizeof(HouseInfo); h++)
					{
						if(HouseInfo[h][hValue] <=90000)
						{
							HouseInfo[h][hValue] = 300000;
							SCM(playerid, COLOR_GRAD1, "Выполнено!");
						}
					}
				}
			case 6:
				{
					if(PlayerInfo[playerid][bAdmin] < 13) return 1;
					for(new h = 0; h < sizeof(HouseInfo); h++)
					{
						if(HouseInfo[h][hKlass] == 0) HouseInfo[h][hValue] = 300000, HouseInfo[h][hInt] = 1, HouseInfo[h][hExit][0] = 223.1219, HouseInfo[h][hExit][1] = 1287.841, HouseInfo[h][hExit][2] = 1082.141, HouseInfo[h][hStyle] = 1;
						else if(HouseInfo[h][hKlass] == 1) HouseInfo[h][hValue] = 550000, HouseInfo[h][hInt] = 6, HouseInfo[h][hExit][0] = 2196.4541, HouseInfo[h][hExit][1] = -1204.37097, HouseInfo[h][hExit][2] = 1049.0229, HouseInfo[h][hStyle] = 2;
						else if(HouseInfo[h][hKlass] == 2) HouseInfo[h][hValue] = 900000, HouseInfo[h][hInt] = 10, HouseInfo[h][hExit][0] = 2270.0449, HouseInfo[h][hExit][1] = -1210.494, HouseInfo[h][hExit][2] = 1047.563, HouseInfo[h][hStyle] = 3;
						else if(HouseInfo[h][hKlass] == 3) HouseInfo[h][hValue] = 1200000, HouseInfo[h][hInt] = 9, HouseInfo[h][hExit][0] = 2317.8068, HouseInfo[h][hExit][1] = -1026.3859, HouseInfo[h][hExit][2] = 1050.2180, HouseInfo[h][hStyle] = 4;
						else if(HouseInfo[h][hKlass] == 4) HouseInfo[h][hValue] = 1600000, HouseInfo[h][hInt] = 5, HouseInfo[h][hExit][0] = 140.2610, HouseInfo[h][hExit][1] = 1366.435, HouseInfo[h][hExit][2] = 1083.859, HouseInfo[h][hStyle] = 5;
						else HouseInfo[h][hValue] = 2000000, HouseInfo[h][hInt] = 5, HouseInfo[h][hExit][0] = 140.2610, HouseInfo[h][hExit][1] = 1366.435, HouseInfo[h][hExit][2] = 1083.859, HouseInfo[h][hStyle] = 6;
					}
					SCM(playerid, COLOR_GRAD1, "По ценам распределены");
				}
			case 7:
				{
					if(PlayerInfo[playerid][bAdmin] != 13) return 1;
					new i;
					for(new b = 0; b < sizeof(SBizzInfo); b++)
					{
						if(SBizzInfo[b][sOwned] == 1)
						{
							SBizzInfo[b][sOwned] = 0;
							strmid(SBizzInfo[b][sOwner], "The State", 0, strlen("The State"), 255);
							SBizzInfo[b][sOwner] = 0;
							strmid(SBizzInfo[b][sMessage], "Заправка", 0, strlen("The State"), 255);
							SBizzInfo[b][sBuyPrice] = 1000000;
							SBizzInfo[b][sLocked] = 0;
							SBizzInfo[b][sPrice] = 500;
							SBizzInfo[b][sBenz] = 999999999;
							SBizzInfo[b][sPriceBenz] = 500;
							SBizzInfo[b][sTill] = 1000;
							i++;
							SaveSBizz(b);
						}
					}
					SCMF(playerid, COLOR_GRAD1, "Все занятые заправки были проданы. Всего их было %d штук",i);
					i=0;
					UpdateSBizz();
					return 1;
				}
			}
		}
	case 2015:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(rmmats <= 50)  return  SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
					gun = 24; ammo = 50; rmmats -= 70;
				}
			case 1:
				{
					if(rmmats <= 50)  return  SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
					gun = 25; ammo = 15; rmmats -= 50;
				}
			case 2:
				{
					if(rmmats <= 50)  return  SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
					gun = 33; ammo = 10; rmmats -= 100;
				}
			case 3:
				{
					if(rmmats <= 50)  return  SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
					gun = 31; ammo = 100; rmmats -= 500;
				}
			case 4:
				{
					if(rmmats <= 50)  return  SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
					gun = 30; ammo = 100; rmmats -= 500;
				}
			case 5:
				{
					if(rmmats <= 50)  return  SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
					gun = 29; ammo = 200; rmmats -= 400;
				}
			case 6:
				{
					if(rmmats <= 50)  return  SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
					gun = 23; ammo = 100; rmmats -= 100;
				}
			}
			GetWeaponName(gun, gunname, sizeof(gunname));
			GivePlayerWeaponAC(playerid, gun, ammo);
			SCM(playerid, 0x6ab1ffaa, "Вы взяли оружие со склада");
			format(stringer,SMALL_SIZE, "%s взял(а) оружие со склада", PlayerInfo[playerid][pNames]);
			ProxDetector(20.0, playerid, stringer,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
			SaveMaterials();
			return 1;
		}
	case 9391:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: cmd::members(playerid);
				}
			}
		}
	case 9077:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pLRInections] == 0) return  SCM(playerid, COLOR_GRAD1, "У вас недостаточно прав для использования данной команды.");
				if(!strlen(inputtext))return SPD(playerid, 9077, 1, "Уволить игрока [Offline]"," Введите имя игрока в поле ввода", "Уволить", "Отмена");
				mysql_format(connects, stringer, MAX_STR, "SELECT `pMRInections`, `Name` FROM `accounts` WHERE `Name` = '%s'", inputtext);
				mysql_tquery(connects, stringer, "OnUvalPlayer", "dsd", playerid, inputtext, 0);
				return 1;
			}
			else return 1;
		}
	case 9078:
		{
			if(response)
			{
				if(PlayerInfo[playerid][bAdmin] < 9) return  SCM(playerid, COLOR_GRAD1, "У вас недостаточно прав для использования данной команды.");
				if(!strlen(inputtext))return SPD(playerid, 9078, 1, "Уволить игрока [Offline]"," Введите имя игрока в поле ввода", "Уволить", "Отмена");
				mysql_format(connects, stringer, MAX_STR, "SELECT `pMRInections`, `Name` FROM `accounts` WHERE `Name` = '%s'", inputtext);
				mysql_tquery(connects, stringer, "OnUvalPlayer", "dsd", playerid, inputtext, 1);
				return 1;
			}
			else return 1;
		}
	case 9080:
		{
			if(response)
			{
				if(PlayerInfo[playerid][bAdmin] < 9) return  SCM(playerid, COLOR_GRAD1, "У вас недостаточно прав для использования данной команды.");
				if(!strlen(inputtext))return SPD(playerid, 9080, 1, "Снять админа [Offline]"," Введите имя игрока в поле ввода", "Уволить", "Отмена");
				mysql_format(connects, stringer, MAX_STR, "SELECT `Name` FROM `accounts` WHERE `Name` = '%s'", inputtext);
				mysql_tquery(connects, stringer, "OnUnAdmin", "ds", playerid, inputtext);
				return 1;
			}
			else return 1;
		}
	case 9079:
		{
			if(response)
			{
				if(PlayerInfo[playerid][bAdmin] < 9) return  SCM(playerid, COLOR_GRAD1, "У вас недостаточно прав для использования данной команды.");
				if(!strlen(inputtext))return SPD(playerid, 9079, 1, "Снять лидера [Offline]"," Введите имя игрока в поле ввода", "Уволить", "Отмена");

				mysql_format(connects, stringer, MAX_STR, "SELECT `Name` FROM `accounts` WHERE `Name` = '%s'", inputtext);
				mysql_tquery(connects, stringer, "OnUnLeader", "ds", playerid, inputtext);
				return 1;
			}
			else return 1;
		}
	case 6050:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(PlayerInfo[playerid][bAdmin] >= 6)
						{
							for(new i; i<50; i++) SendClientMessageToAll(0x00000000,"");
							SendClientMessageToAll(COLOR_LIGHTRED,"Чат был очищен администрацией сервера!");
						}
					}
				case 1: SPD(playerid, 10098, DIALOG_STYLE_LIST, "{FF6F00}Устройство на работу","{FFFFFF}Механик {"#cBLUE"}[2 уровень]{FFFFFF}\nРазвозчик продуктов {"#cBLUE"}[4 уровень]{FFFFFF}\nВодитель автобуса {"#cBLUE"}[3 уровень]{FFFFFF}\nТаксист {"#cBLUE"}[2 уровень]", "Устроиться", "Выход");
				case 2:
					{
						SCMF(playerid,COLOR_GRAD1,"На складе Зоны 51: %d/500000 матов", armmatbi);
						SCMF(playerid,COLOR_GRAD1,"На складе армии Авианосец: %d/100000 матов", armmatsf);
						SCMF(playerid,COLOR_GRAD1,"На складе армии ВМФ: %d/100000 матов", armyvmf);
						SCMF(playerid,COLOR_GRAD1,"На складе FBI %d/100000 матов", fbimats);
						SCMF(playerid,COLOR_GRAD1,"На складе LSPD %d/100000 матов", lspdmatbi);
						SCMF(playerid,COLOR_GRAD1,"На складе SFPD %d/100000 матов", sfpdmats);
						SCMF(playerid,COLOR_GRAD1,"На складе LVPD %d/100000 матов", lvpdmats);
						SCMF(playerid,COLOR_GRAD1,"На складе мафии Якудза %d/50000 матов", yakuzamats);
						SCMF(playerid,COLOR_GRAD1,"На складе мафии LCN %d/50000 матов", lcnmats);
						SCMF(playerid,COLOR_GRAD1,"На складе Русской Мафии %d/50000 матов", rmmats);
						SCMF(playerid,COLOR_GRAD1,"На складе Vagos Gang %d/50000 матов", vagosmatbi);
						SCMF(playerid,COLOR_GRAD1,"На складе Rifa Gang %d/50000 матов", rifamatbi);
						SCMF(playerid,COLOR_GRAD1,"На складе Aztek Gang %d/50000 матов", aztekmatbi);
						SCMF(playerid,COLOR_GRAD1,"На складе Grove Gang %d/50000 матов", groovmatbi);
						SCMF(playerid,COLOR_GRAD1,"На складе Ballas Gang %d/50000 матов", ballasmatbi);
					}
				case 3: SPD(playerid,4385,DIALOG_STYLE_LIST, "Список погоды", "[1] Солнечная погода\n[2] Очень солнечная погода\n[3] Гроза\n[4] Пасмурно и туман\n[5] Хмурая и дождливая\n[6] Песчаная буря\n[7] Туманный и зеленоватый\n[8] В красках бледного Апельсина\n[9] Свежая в синих красках\n[10] Туманно и серо\n[11] Темный неясный коричневый\n[12] Розовое небо", "Поставить", "Меню");
				case 4: SPD(playerid,4395,DIALOG_STYLE_LIST, "Изменить время суток", "Ночь - 0 часов\nНочь - 1 час\nНочь - 2 часа\nНочь - 3 часа\nНочь - 4 часа\nНочь - 5 часов\nУтро - 6 часов\nУтро - 7 часов\nУтро - 8 часов\nУтро - 9 часов\nУтро - 10 часов\nУтро - 11 часов\nУтро - 12 часов\nДень - 13 часов\nДень - 14 часов\nДень - 15 часов\nДень - 16 часов\nДень - 17 часов\nВечер - 18 часов\nВечер - 19 часов\nВечер - 20 часов\nВечер - 21 час\nНочь - 22 часа\nНочь - 23 часа", "Установить", "Меню");
				}
			}
			else return cmd::apanel(playerid);
		}
	case 0099:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: SCM(playerid,COLOR_GREEN,"Вы включили радио Radio-Record"), PlayAudioStreamForPlayer(playerid,"http://air.radiorecord.ru:8101/rr_320");
				case 1: SCM(playerid, COLOR_GREEN,"Вы включили радио Zaycev-FM"), PlayAudioStreamForPlayer(playerid,"http://radio.zaycev.fm:9002/ZaycevFM(128)");
				case 2: SCM(playerid, COLOR_GREEN,"Вы включили радио Radio-Trap"), PlayAudioStreamForPlayer(playerid,"http://air.radiorecord.ru:8102/trap_320");
				case 3: SCM(playerid, COLOR_GREEN,"Вы включили радио Radio-Dubstep"), PlayAudioStreamForPlayer(playerid,"http://air.radiorecord.ru:8102/dub_320");
				case 4: SCM(playerid, 0xFF6F00FF,"Вы включили радио INSPIRE-FM"), PlayAudioStreamForPlayer(playerid,"http://95.211.148.10:8060/live");
				case 5: SCM(playerid, COLOR_GREEN, "Вы включили радио Radio-Record ROCK"), PlayAudioStreamForPlayer(playerid, "http://air.radiorecord.ru:8102/rock_320");
				case 6: SCM(playerid, COLOR_GREY,"Вы выключили радио"), StopAudioStreamForPlayer(playerid);
				}
			}
		}
	case 6019:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
						{
							foreach(new i: Player) OnPlayerSaveAccount(i);
							SaveMaterials();
							for(new h = 0; h < sizeof(HouseInfo); h++) SaveHouse(h);
							for(new g= 0; g < sizeof(GZInfo); g++) SaveGZ(g);
							SaveBankMafia(); SaveBankFrac();
							for(new i = 0; i < sizeof(SBizzInfo); i ++) SaveSBizz(i);
							SCM(playerid,COLOR_GRAD1,"Сохранено");
							SCM(playerid,COLOR_GRAD1,"Сохранены дома и бизы");
						}
					}
				case 1:
					{
						if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
						{
							foreach(new i: Player) OnPlayerSaveAccount(i);
							SaveMaterials();
							for(new h = 0; h < sizeof(HouseInfo); h++) SaveHouse(h);
							for(new g= 0; g < sizeof(GZInfo); g++) SaveGZ(g);
							SaveBankMafia(); SaveBankFrac();
							for(new i = 0; i < sizeof(SBizzInfo); i ++) SaveSBizz(i);
							SCM(playerid,COLOR_GRAD1,"Сохранено");
						}
					}
				case 2: { if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true) || !strcmp(PlayerInfo[playerid][pNames], "No", true)) { for(new sb = 0 ; sb < sizeof(SBizzInfo); sb++) SaveSBizz(sb);for(new h = 0; h < sizeof(HouseInfo); h++) SaveHouse(h);SCM(playerid,COLOR_GRAD1,"Сохранены дома и бизы"); } }
				case 3: { if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true) || !strcmp(PlayerInfo[playerid][pNames], "No", true)) PayDay(); }
				}
			}
			else return cmd::apanel(playerid);
		}
	case 4385:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: SetWeather(10);
				case 1: SetWeather(1);
				case 2: SetWeather(8);
				case 3: SetWeather(9);
				case 4: SetWeather(14);
				case 5: SetWeather(19);
				case 6: SetWeather(20);
				case 7: SetWeather(23);
				case 8: SetWeather(27);
				case 9: SetWeather(30);
				case 10: SetWeather(33);
				case 11: SetWeather(-1337);
				}
			}
			else { cmd::apanel(playerid); return 1; }
		}
	case 4395:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: SetWorldTime(0);
				case 1: SetWorldTime(1);
				case 2: SetWorldTime(2);
				case 3: SetWorldTime(3);
				case 4: SetWorldTime(4);
				case 5: SetWorldTime(5);
				case 6: SetWorldTime(6);
				case 7: SetWorldTime(7);
				case 8: SetWorldTime(8);
				case 9: SetWorldTime(9);
				case 10: SetWorldTime(10);
				case 11: SetWorldTime(11);
				case 12: SetWorldTime(12);
				case 13: SetWorldTime(13);
				case 14: SetWorldTime(14);
				case 15: SetWorldTime(15);
				case 16: SetWorldTime(16);
				case 17: SetWorldTime(17);
				case 18: SetWorldTime(18);
				case 19: SetWorldTime(19);
				case 20: SetWorldTime(20);
				case 21: SetWorldTime(21);
				case 22: SetWorldTime(22);
				case 23: SetWorldTime(23);
				case 24: SetWorldTime(24);
				}
			}
			else { cmd::apanel(playerid); return 1; }
		}
	case 22249:
		{
			if(response)
			{
				switch(PlayerInfo[playerid][pMRInections])
				{
				case 15:
					{

						if(!IsARespa (playerid)) return	SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Положить материалы на склад");
							SPD(playerid,22249,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
						}
						#define mati strval(inputtext)
						if(mati < 1 || mati > 250)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя положить меньше 1 и больше 250");
							format(stringer,SMALL_SIZE,"Положить материалы на склад");
							SPD(playerid,22249,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
							return 1;
						}
						if(PlayerInfo[playerid][pMats] <= 0) return SCM(playerid,COLOR_GRAD1,"У Вас нет столько матов!");
						if(groovmatbi  >= 100000) return SCM(playerid,COLOR_GRAD1,"Склад полон!");
						groovmatbi  += mati;
						PlayerInfo[playerid][pMats] -= mati;

						SCMF(playerid,COLOR_GRAD1,"У вас %d материалов с собой", PlayerInfo[playerid][pMats]);
						format(stringer,SMALL_SIZE, "%s положил(а) материалы на склад", PlayerInfo[playerid][pNames]);
						ProxDetector(15.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
						return 1;
						#undef mati
					}
				case 12:
					{

						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Положить материалы на склад");
							SPD(playerid,22249,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
						}
						#define mati strval(inputtext)
						if(mati < 1 || mati > 250)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя положить меньше 1 и больше 250");
							format(stringer,SMALL_SIZE,"Положить материалы на склад");
							SPD(playerid,22249,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
							return 1;
						}
						if(PlayerInfo[playerid][pMats] <= 0) return SCM(playerid,COLOR_GRAD1,"У Вас не достаточно матов!");
						if(ballasmatbi  >= 100000) return SCM(playerid,COLOR_GRAD1,"Склад полон!");
						ballasmatbi  += mati;
						PlayerInfo[playerid][pMats] -= mati;

						SCMF(playerid,COLOR_WHITE,"У вас %d материалов с собой", PlayerInfo[playerid][pMats]);
						format(stringer,SMALL_SIZE, "%s положил(а) материалы на склад", PlayerInfo[playerid][pNames]);
						ProxDetector(15.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
						return 1;
						#undef mati
					}
				case 13:
					{

						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Положить материалы на склад");
							SPD(playerid,22249,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
						}
						#define mati strval(inputtext)
						if(mati < 1 || mati > 250)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя положить меньше 1 и больше 250");
							format(stringer,SMALL_SIZE,"Положить материалы на склад");
							SPD(playerid,22249,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
							return 1;
						}
						if(PlayerInfo[playerid][pMats] <= 0) return SCM(playerid,COLOR_GRAD1,"У Вас не достаточно матов!");
						if(vagosmatbi  >= 100000) return SCM(playerid,COLOR_GRAD1,"Склад полон!");
						vagosmatbi  += mati;
						PlayerInfo[playerid][pMats] -= mati;

						SCMF(playerid,COLOR_WHITE,"У вас %d материалов с собой", PlayerInfo[playerid][pMats]);
						format(stringer,SMALL_SIZE, "%s положил(а) материалы на склад", PlayerInfo[playerid][pNames]);
						ProxDetector(15.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
						return 1;
						#undef mati
					}
				case 17:
					{

						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Положить материалы на склад");
							SPD(playerid,22249,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
						}
						#define mati strval(inputtext)
						if(mati < 1 || mati > 250)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя положить меньше 1 и больше 250");
							format(stringer,SMALL_SIZE,"Положить материалы на склад");
							SPD(playerid,22249,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
							return 1;
						}
						if(PlayerInfo[playerid][pMats] <= 0) return SCM(playerid,COLOR_GRAD1,"У Вас не достаточно матов!");
						if(aztekmatbi  >= 100000) return SCM(playerid,COLOR_GRAD1,"Склад полон!");
						aztekmatbi  += mati;
						PlayerInfo[playerid][pMats] -= mati;

						SCMF(playerid,COLOR_WHITE,"У вас %d материалов с собой", PlayerInfo[playerid][pMats]);
						format(stringer,SMALL_SIZE, "%s положил(а) материалы на склад", PlayerInfo[playerid][pNames]);
						ProxDetector(15.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
						return 1;
						#undef mati
					}
				case 18:
					{

						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Положить материалы на склад");
							SPD(playerid,22249,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
						}
						#define mati strval(inputtext)
						if(mati < 1 || mati > 250)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя положить меньше 1 и больше 250");
							format(stringer,SMALL_SIZE,"Положить материалы на склад");
							SPD(playerid,22249,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
							return 1;
						}
						if(PlayerInfo[playerid][pMats] <= 0) return SCM(playerid,COLOR_GRAD1,"У Вас не достаточно матов!");
						if(rifamatbi  >= 100000) return SCM(playerid,COLOR_GRAD1,"Склад полон!");
						rifamatbi  += mati;
						PlayerInfo[playerid][pMats] -= mati;

						SCMF(playerid,COLOR_WHITE,"У вас %d материалов с собой", PlayerInfo[playerid][pMats]);
						format(stringer,SMALL_SIZE, "%s положил(а) материалы на склад", PlayerInfo[playerid][pNames]);
						ProxDetector(15.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
						return 1;
						#undef mati
					}
				}
			}
		}
	case 22248:
		{
			if(response)
			{
				new matsss = 0;
				switch(PlayerInfo[playerid][pDRInections])
				{
				case 0: matsss = 250;
				case 1: matsss = 500;
				case 2: matsss = 750;
				case 3: matsss = 1000;
				}
				if(!IsARespa (playerid)) return	SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
				if(PlayerInfo[playerid][pMRInections] == 12 && PlayerInfo[playerid][pRKInections] >= 3)//Баллас с 3 ранга
				{
					if(ballasmatbi <= 0) return SCM(playerid, COLOR_GREY, "На складе нет материалов");
					if(PlayerInfo[playerid][pMats] > matsss) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше");
					if(!strlen(inputtext))
					{
						format(stringer,SMALL_SIZE,"Взять материалы со склада");
						SPD(playerid,22248,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
					}
					#define mati strval(inputtext)
					if((PlayerInfo[playerid][pMats] + mati) > matsss) return SCMF(playerid,COLOR_WHITE,"У вас %d материалов с собой", PlayerInfo[playerid][pMats]);
					if(mati < 1 || mati > 250)
					{
						SCM(playerid, COLOR_GREY, "Нельзя взять меньше 1 и больше 250");
						format(stringer,SMALL_SIZE,"Взять материалы со склада");
						SPD(playerid,22248,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
						return 1;
					}
					ballasmatbi -= mati;
					PlayerInfo[playerid][pMats] += mati;
					SCMF(playerid,COLOR_WHITE,"У вас %d материалов с собой", PlayerInfo[playerid][pMats]);

					format(stringer,SMALL_SIZE, "%s взял(а) материалы со склада", PlayerInfo[playerid][pNames]);
					ProxDetector(15.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
					return 1;
					#undef mati
				}
				if(PlayerInfo[playerid][pMRInections] == 15 && PlayerInfo[playerid][pRKInections] >= 4)//Баллас с 3 ранга
				{
					if(groovmatbi <= 0)return SCM(playerid, COLOR_GREY, "На складе нет материалов");
					if(PlayerInfo[playerid][pMats] > matsss) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше");

					if(!strlen(inputtext))
					{
						format(stringer,SMALL_SIZE,"Взять материалы со склада");
						SPD(playerid,22248,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
					}
					#define mati strval(inputtext)
					if((PlayerInfo[playerid][pMats] + mati) > matsss) return SCMF(playerid,COLOR_WHITE,"У вас %d материалов с собой", PlayerInfo[playerid][pMats]);
					if(mati < 1 || mati > 250)
					{
						SCM(playerid, COLOR_GREY, "Нельзя взять меньше 1 и больше 250");
						format(stringer,SMALL_SIZE,"Взять материалы со склада");
						SPD(playerid,22248,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
						return 1;
					}
					groovmatbi -= mati;
					PlayerInfo[playerid][pMats] += mati;
					SCMF(playerid,COLOR_WHITE,"У вас %d материалов с собой", PlayerInfo[playerid][pMats]);

					format(stringer,SMALL_SIZE, "%s взял(а) материалы со склада", PlayerInfo[playerid][pNames]);
					ProxDetector(15.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
					return 1;
					#undef mati
				}
				if(PlayerInfo[playerid][pMRInections] == 13 && PlayerInfo[playerid][pRKInections] >= 4)//Баллас с 3 ранга
				{
					if(vagosmatbi <= 0)return SCM(playerid, COLOR_GREY, "На складе нет материалов");
					if(PlayerInfo[playerid][pMats] > matsss) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше");

					if(!strlen(inputtext))
					{
						format(stringer,SMALL_SIZE,"Взять материалы со склада");
						SPD(playerid,22248,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
					}
					#define mati strval(inputtext)
					if((PlayerInfo[playerid][pMats] + mati) > matsss) return SCMF(playerid,COLOR_WHITE,"У вас %d материалов с собой", PlayerInfo[playerid][pMats]);
					if(mati < 1 || mati > 250)
					{
						SCM(playerid, COLOR_GREY, "Нельзя взять меньше 1 и больше 250");
						format(stringer,SMALL_SIZE,"Взять материалы со склада");
						SPD(playerid,22248,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
						return 1;
					}
					vagosmatbi -= mati;
					PlayerInfo[playerid][pMats] += mati;
					SCMF(playerid,COLOR_WHITE,"У вас %d материалов с собой", PlayerInfo[playerid][pMats]);

					format(stringer,SMALL_SIZE, "%s взял(а) материалы со склада", PlayerInfo[playerid][pNames]);
					ProxDetector(15.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
					return 1;
					#undef mati
				}
				if(PlayerInfo[playerid][pMRInections] == 17 && PlayerInfo[playerid][pRKInections] >= 4)
				{
					if(aztekmatbi <= 0)return SCM(playerid, COLOR_GREY, "На складе нет материалов");
					if(PlayerInfo[playerid][pMats] > matsss) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше");

					if(!strlen(inputtext))
					{
						format(stringer,SMALL_SIZE,"Взять материалы со склада");
						SPD(playerid,22248,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
					}
					#define mati strval(inputtext)
					if((PlayerInfo[playerid][pMats] + mati) > matsss) return SCMF(playerid,COLOR_WHITE,"У вас %d материалов с собой", PlayerInfo[playerid][pMats]);
					if(mati < 1 || mati > 250)
					{
						SCM(playerid, COLOR_GREY, "Нельзя взять меньше 1 и больше 250");
						format(stringer,SMALL_SIZE,"Взять материалы со склада");
						SPD(playerid,22248,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
						return 1;
					}
					aztekmatbi -= mati;
					PlayerInfo[playerid][pMats] += mati;

					format(stringer,SMALL_SIZE, "%s взял(а) материалы со склада", PlayerInfo[playerid][pMats]);
					ProxDetector(15.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
					return 1;
					#undef mati
				}
				if(PlayerInfo[playerid][pMRInections] == 18 && PlayerInfo[playerid][pRKInections] >= 4)//Баллас с 3 ранга
				{
					if(rifamatbi <= 0)return SCM(playerid, COLOR_GREY, "На складе нет материалов");
					if(PlayerInfo[playerid][pMats] > matsss) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше");

					if(!strlen(inputtext))
					{
						format(stringer,SMALL_SIZE,"Взять материалы со склада");
						SPD(playerid,22248,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
					}
					#define mati strval(inputtext)
					if((PlayerInfo[playerid][pMats] + mati) > matsss) return SCMF(playerid,COLOR_WHITE,"У вас %d материалов с собой", PlayerInfo[playerid][pMats]);
					if(mati < 1 || mati > 250)
					{
						SCM(playerid, COLOR_GREY, "Нельзя взять меньше 1 и больше 250");
						format(stringer,SMALL_SIZE,"Взять материалы со склада");
						SPD(playerid,22248,DIALOG_STYLE_INPUT,"{FF6F00}Введите количество материалов",stringer,"Скрыть","Выход");
						return 1;
					}
					rifamatbi -= mati;
					PlayerInfo[playerid][pMats] += mati;
					SCMF(playerid,COLOR_WHITE,"У вас %d материалов с собой", PlayerInfo[playerid][pMats]);

					format(stringer,SMALL_SIZE, "%s взял(а) материалы со склада", PlayerInfo[playerid][pNames]);
					ProxDetector(15.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
					return 1;
					#undef mati
				}
			}
		}
	case 9599:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: return 1;
				case 1:
					{
						switch(PlayerInfo[playerid][pMRInections])
						{
						case 18:
							{
								if(rifamatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 23, 100);
								rifamatbi  -= 100;
							}
						case 12:
							{
								if(ballasmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 23, 100);
								ballasmatbi  -= 100;
							}
						case 15:
							{
								if(groovmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 23, 100);
								groovmatbi -= 100;
							}
						case 17:
							{
								if(aztekmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 23, 100);
								aztekmatbi -= 100;
							}
						case 13:
							{
								if(vagosmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 23, 100);
								vagosmatbi -= 100;
							}
						}
						ObshiakGang();
					}
				case 2:
					{
						switch(PlayerInfo[playerid][pMRInections])
						{
						case 18:
							{
								if(rifamatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 24, 100);
								rifamatbi  -= 300;
							}
						case 12:
							{
								if(ballasmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 24, 100);
								ballasmatbi  -= 300;
							}
						case 15:
							{
								if(groovmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 24, 100);
								groovmatbi -= 300;
							}
						case 17:
							{
								if(aztekmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 24, 100);
								aztekmatbi -= 300;
							}
						case 13:
							{
								if(vagosmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 24, 100);
								vagosmatbi -= 300;
							}
						}
						ObshiakGang();
					}
				case 3:
					{
						switch(PlayerInfo[playerid][pMRInections])
						{
						case 18:
							{
								if(rifamatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 25, 100);
								rifamatbi  -= 300;


							}
						case 12:
							{
								if(ballasmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 25, 100);
								ballasmatbi  -= 300;


							}
						case 15:
							{
								if(groovmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 25, 100);
								groovmatbi -= 300;


							}
						case 17:
							{
								if(aztekmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 25, 100);
								aztekmatbi -= 300;


							}
						case 13:
							{
								if(vagosmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 25, 100);
								vagosmatbi -= 300;


							}
						}
						ObshiakGang();
					}
				case 4:
					{
						switch(PlayerInfo[playerid][pMRInections])
						{
						case 18:
							{
								if(rifamatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 29, 100);
								rifamatbi  -= 200;


							}
						case 12:
							{
								if(ballasmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 29, 100);
								ballasmatbi  -= 200;


							}
						case 15:
							{
								if(groovmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 29, 100);
								groovmatbi -= 200;


							}
						case 17:
							{
								if(aztekmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 29, 100);
								aztekmatbi -= 200;


							}
						case 13:
							{
								if(vagosmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 29, 100);
								vagosmatbi -= 200;


							}
						}
						ObshiakGang();
					}
				case 5:
					{
						switch(PlayerInfo[playerid][pMRInections])
						{
						case 18:
							{
								if(rifamatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 30, 100);
								rifamatbi  -= 300;


							}
						case 12:
							{
								if(ballasmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 30, 100);
								ballasmatbi  -= 300;
							}
						case 15:
							{
								if(groovmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 30, 100);
								groovmatbi -= 300;
							}
						case 17:
							{
								if(aztekmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 30, 100);
								aztekmatbi -= 300;
							}
						case 13:
							{
								if(vagosmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 30, 100);
								vagosmatbi -= 300;
							}
						}
						ObshiakGang();
					}
				case 6:
					{
						switch(PlayerInfo[playerid][pMRInections])
						{
						case 18:
							{
								if(rifamatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 31, 100);
								rifamatbi  -= 300;
							}
						case 12:
							{
								if(ballasmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 31, 100);
								ballasmatbi  -= 300;
							}
						case 15:
							{
								if(groovmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 31, 100);
								groovmatbi -= 300;
							}
						case 17:
							{
								if(aztekmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 31, 100);
								aztekmatbi -= 300;
							}
						case 13:
							{
								if(vagosmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 31, 100);
								vagosmatbi -= 300;
							}
						}
						ObshiakGang();
					}
				case 7:
					{
						switch(PlayerInfo[playerid][pMRInections])
						{
						case 18:
							{
								if(rifamatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 33, 100);
								rifamatbi  -= 500;
							}
						case 12:
							{
								if(ballasmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 33, 100);
								ballasmatbi  -= 500;
							}
						case 15:
							{
								if(groovmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 33, 100);
								groovmatbi -= 500;
							}
						case 17:
							{
								if(aztekmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 33, 100);
								aztekmatbi -= 500;
							}
						case 13:
							{
								if(vagosmatbi  <= 0) { SCM(playerid, COLOR_WHITE, "На складе нет материалов"); return 1; }
								if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
								GivePlayerWeaponAC(playerid, 33, 100);
								vagosmatbi -= 500;
							}
						}
						ObshiakGang();
					}
				}
			}
			return 1;
		}
	case 22250:
		{
			if(response)
			{
				switch(PlayerInfo[playerid][pMRInections])
				{
				case 15:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Пополнение банковского счета банды");
							SPD(playerid,22250,DIALOG_STYLE_INPUT,"Введите сумму платежа",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя пополнить счет меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Пополнение банковского счета банды");
							SPD(playerid,22250,DIALOG_STYLE_INPUT,"Введите сумму платежа",stringer,"Скрыть","Выход");
							return 1;
						}
						if(PlayerInfo[playerid][pCash] < dengi) return SCM(playerid,COLOR_GRAD1,"У Вас нет столько денег!");
						FracBank[0][fGrove] += dengi;
						PlayerInfo[playerid][pCash] -= dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы положили в банк Grove: %d вирт", dengi);
						SaveBankFrac();
						#undef dengi
					}
				case 12:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Пополнение банковского счета банды");
							SPD(playerid,22250,DIALOG_STYLE_INPUT,"Введите сумму платежа",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя пополнить счет меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Пополнение банковского счета банды");
							SPD(playerid,22250,DIALOG_STYLE_INPUT,"Введите сумму платежа",stringer,"Скрыть","Выход");
							return 1;
						}
						if(PlayerInfo[playerid][pCash] < dengi) return SCM(playerid,COLOR_GRAD1,"У Вас нет столько денег!");
						FracBank[0][fBallas] += dengi;
						PlayerInfo[playerid][pCash] -= dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы положили в банк Ballas: %d вирт", dengi);
						SaveBankFrac();
						#undef dengi
					}
				case 18:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Пополнение банковского счета банды");
							SPD(playerid,22250,DIALOG_STYLE_INPUT,"Введите сумму платежа",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя пополнить счет меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Пополнение банковского счета банды");
							SPD(playerid,22250,DIALOG_STYLE_INPUT,"Введите сумму платежа",stringer,"Скрыть","Выход");
							return 1;
						}
						if(PlayerInfo[playerid][pCash] < dengi) return SCM(playerid,COLOR_GRAD1,"У Вас нет столько денег!");
						FracBank[0][fRifa] += dengi;
						PlayerInfo[playerid][pCash] -= dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы положили в банк Rifa: %d вирт", dengi);
						SaveBankFrac();
						#undef dengi
					}
				case 13:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Пополнение банковского счета банды");
							SPD(playerid,22250,DIALOG_STYLE_INPUT,"Введите сумму платежа",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя пополнить счет меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Пополнение банковского счета банды");
							SPD(playerid,22250,DIALOG_STYLE_INPUT,"Введите сумму платежа",stringer,"Скрыть","Выход");
							return 1;
						}
						if(PlayerInfo[playerid][pCash] < dengi) return SCM(playerid,COLOR_GRAD1,"У Вас нет столько денег!");
						FracBank[0][fVagos] += dengi;
						PlayerInfo[playerid][pCash] -= dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы положили в банк Vagos: %d вирт", dengi);
						SaveBankFrac();
						#undef dengi
					}
				case 17:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Пополнение банковского счета банды");
							SPD(playerid,22250,DIALOG_STYLE_INPUT,"Введите сумму платежа",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя пополнить счет меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Пополнение банковского счета банды");
							SPD(playerid,22250,DIALOG_STYLE_INPUT,"Введите сумму платежа",stringer,"Скрыть","Выход");
							return 1;
						}
						if(PlayerInfo[playerid][pCash] < dengi) return SCM(playerid,COLOR_GRAD1,"У Вас нет столько денег!");
						FracBank[0][fAztek] += dengi;
						PlayerInfo[playerid][pCash] -= dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы положили в банк Vagos: %d вирт", dengi);
						SaveBankFrac();
						#undef dengi
					}
				}
			}
		}
	case 22251:
		{
			if(response)
			{
				switch(PlayerInfo[playerid][pMRInections])
				{
				case 15:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Снятие денег со счета банды");
							SPD(playerid,22251,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя снять меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Снятие денег со счета банды");
							SPD(playerid,22251,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
							return 1;
						}
						if(FracBank[0][fGrove] < dengi) return SCM(playerid,COLOR_GRAD1,"В банке Grove Нет столько денег");
						PlayerInfo[playerid][pCash] += dengi;
						FracBank[0][fGrove] -= dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы сняли с банка Grove: %d вирт", dengi);
						SaveBankFrac();
						return 1;
						#undef dengi
					}
				case 12:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Снятие денег со счета банды");
							SPD(playerid,22251,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя снять меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Снятие денег со счета банды");
							SPD(playerid,22251,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
							return 1;
						}
						if(FracBank[0][fBallas] < dengi) return SCM(playerid,COLOR_GRAD1,"В банке Balls Нет денег");
						PlayerInfo[playerid][pCash] += dengi;
						FracBank[0][fBallas] -= dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы сняли с банка Ballas: %d вирт", dengi);
						SaveBankFrac();
						return 1;
						#undef dengi
					}
				case 13:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Снятие денег со счета банды");
							SPD(playerid,22251,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя снять меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Снятие денег со счета банды");
							SPD(playerid,22251,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
							return 1;
						}
						if(FracBank[0][fVagos] < dengi) return SCM(playerid,COLOR_GRAD1,"В банке Vagos Нет столько денег");
						FracBank[0][fVagos] -= dengi;
						PlayerInfo[playerid][pCash] += dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы сняли с банка Vagos: %d вирт", dengi);
						SaveBankFrac();
						return 1;
						#undef dengi
					}
				case 17:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Снятие денег со счета банды");
							SPD(playerid,22251,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя снять меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Снятие денег со счета банды");
							SPD(playerid,22251,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
							return 1;
						}
						if(FracBank[0][fAztek] < dengi) return SCM(playerid,COLOR_GRAD1,"В банке Vagos Нет столько денег");
						FracBank[0][fAztek] -= dengi;
						PlayerInfo[playerid][pCash] += dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы сняли с банка Aztec: %d вирт", dengi);
						SaveBankFrac();
						return 1;
						#undef dengi
					}
				case 18:
					{
						if(!strlen(inputtext))
						{
							format(stringer,SMALL_SIZE,"Снятие денег со счета банды");
							SPD(playerid,22251,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
						}
						#define dengi strval(inputtext)
						if(dengi < 1 || dengi > 1000000)
						{
							SCM(playerid,COLOR_GRAD1,"Нельзя снять меньше 1 и больше 1000000 вирт");
							format(stringer,SMALL_SIZE,"Снятие денег со счета банды");
							SPD(playerid,22251,DIALOG_STYLE_INPUT,"Введите сумму",stringer,"Скрыть","Выход");
							return 1;
						}
						if(FracBank[0][fRifa] < dengi) return SCM(playerid,COLOR_GRAD1,"В банке Rifa Нет столько денег");
						FracBank[0][fRifa] -= dengi;
						PlayerInfo[playerid][pCash] += dengi;
						SCMF(playerid,0x6ab1ffaa,"Вы сняли с банка Rifa: %d вирт", dengi);
						SaveBankFrac();
						return 1;
						#undef dengi
					}
				}
			}
			else return 1;
		}
	case 8810:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						format(stringer,MAX_STR, "Баланс вашего счёта: %d вирт\nВведите нужную вам сумму", PlayerInfo[playerid][pBank]);
						SPD(playerid,8814,DIALOG_STYLE_INPUT,"{FF6F00}Снятие со счёта",stringer,"Скрыть","Назад");
						return 1;
					}
				case 1:
					{
						format(stringer,MAX_STR, "Баланс вашего счёта: %d вирт\nВведите нужную вам сумму", PlayerInfo[playerid][pBank]);
						SPD(playerid,8816,DIALOG_STYLE_INPUT,"{FF6F00}Положить на счёт",stringer,"Скрыть","Назад");
						return 1;
					}
				case 2:
					{
						format(stringer,MAX_STR, "- Имя: %s\n- Счёт в банке: %d вирт", PlayerInfo[playerid][pNames], PlayerInfo[playerid][pBank]);
						SPD(playerid, 8817, DIALOG_STYLE_LIST, "{FF6F00}Информация", stringer, "Выбрать", "Назад");
						return 1;
					}
				case 3:
					{
						if(PlayerInfo[playerid][pBusiness] == -1) return SPD(playerid,2929,DIALOG_STYLE_INPUT,"Перевод на счёт бизнеса","Введите сумму, которую вы хотите перести","Ok","Отмена");
						else if(PlayerInfo[playerid][pFuelBiz] == -1) return SPD(playerid,2929,DIALOG_STYLE_INPUT,"Перевод на счёт бизнеса","Введите сумму, которую вы хотите перести","Ok","Отмена");
						else SCM(playerid, COLOR_GREY, "Вы не бизнесмен!");
					}
				case 4:
					{
						if(PlayerInfo[playerid][pHousecash] <=0) return	SCM(playerid, COLOR_GRAD1, "Нет денег за ваш дом");
						if(!PlayerToPoint(10.0,playerid,1296.6184,-1352.8342,19.0469)) return SCM(playerid, COLOR_WHITE, "::: Вы не в банке :::");
						PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pHousecash];
						SCMF(playerid,COLOR_WHITE,"::: Вам возвращены %d вирт за ваш дом :::", PlayerInfo[playerid][pHousecash]);
						PlayerInfo[playerid][pHousecash] = 0;
						UpdatePlayerData(playerid, "pHousecash", PlayerInfo[playerid][pHousecash]);
						return 1;
					}
				case 5:
					{
						new info_string[264];
						format(info_string,sizeof(info_string),"{7CE700}Доступные команды:\n\n{FFFFFF}- /withdraw - Снять деньги со счёта\n\n{7CE700}Информация:{FFFFFF} Положить деньги на дом, положить деньги на счет , Вы сможете в главном меню банка");
						SPD(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FF6F00}Банковские услуги",info_string,"Скрыть","");
					}
				}
			}
			else return GameTextForPlayer(playerid, "~g~Good Luck", 1000, 1);
		}
	case 8816:
		{
			if(response)
			{
				new summa = strval(inputtext);
				if(!strlen(inputtext))
				{
					format(stringer,MAX_STR, "Баланс вашего счёта: %d вирт.\nВведите нужную вам сумму", PlayerInfo[playerid][pBank]);
					SPD(playerid,8816,DIALOG_STYLE_INPUT,"{FF6F00}Положить на счёт",stringer,"Скрыть","Отмена");
				}
				if(PlayerInfo[playerid][pCash] < summa) return SCM(playerid, COLOR_GRAD1, "У вас нет столько денег!");
				if(summa < 1 || summa > 1000000) { SCM(playerid, COLOR_GREY, "Нельзя положить больше 1000000 вирт!"); return 1; }
				PlayerInfo[playerid][pCash] -=summa;
				SCM(playerid, COLOR_YELLOW2, "::: Возьмите пожалуйста Ваш чек :::");
				PlayerInfo[playerid][pBank] += summa;
				SCMF(playerid,COLOR_WHITE,"Положено на счёт: %d вирт",summa);
				SCM(playerid, COLOR_GRAD6, "");
				SCMF(playerid,COLOR_WHITE,"Новый баланс: %d вирт", PlayerInfo[playerid][pBank]);
				SCM(playerid, COLOR_YELLOW2, "::: Возьмите пожалуйста Ваш чек :::");
				return 1;
			}
			else return 1;
		}
	case 8817:
		{
			if(!response) return SPD(playerid, 8810, DIALOG_STYLE_LIST, "{FF6F00}Банковские услуги", "[1] Снять со счёта\n[2] Положить на счёт\n[3] Информация\n[4] Пополнить счёт бизнеса\n[5] Забрать деньги за дом", "Выбрать", "Закрыть");
			else return SPD(playerid, 8810, DIALOG_STYLE_LIST, "{FF6F00}Банковские услуги", "[1] Снять со счёта\n[2] Положить на счёт\n[3] Информация\n[4] Пополнить счёт бизнеса\n[5] Забрать деньги за дом", "Выбрать", "Закрыть");
		}
	case 8814:
		{
			if(!response) return 1;
			new summa = strval(inputtext);
			if(!strlen(inputtext))// если оставляет пустую строку, выводим ему опять окно
			{
				format(stringer,MAX_STR, "Баланс вашего счёта: %d вирт\nВведите нужную вам сумму", PlayerInfo[playerid][pBank]);
				SPD(playerid,8814,DIALOG_STYLE_INPUT,"Снятие со счёта",stringer,"Скрыть","Назад");
			}
			if(PlayerInfo[playerid][pBank] < summa) return SCM(playerid, COLOR_GRAD1, "У вас нет столько денег!");
			if(summa < 1 || summa > 1000000) { SCM(playerid, COLOR_GREY, "Нельзя снять более 1000000!"); return 1; }
			PlayerInfo[playerid][pCash] +=summa;
			SCM(playerid, COLOR_YELLOW2, "::: Возьмите пожалуйста Ваш чек :::");
			PlayerInfo[playerid][pBank] -= summa;
			SCMF(playerid,COLOR_GRAD4,"Снято со счёта: %d вирт",summa);
			SCM(playerid, COLOR_GRAD6, "");
			SCMF(playerid,0xFEBC41AA,"Новый баланс: %d вирт", PlayerInfo[playerid][pBank]);
			SCM(playerid, COLOR_YELLOW2, "::: Возьмите пожалуйста Ваш чек :::");
			return 1;
		}
	case 8900:
		{
			if(!response) return GameTextForPlayer(playerid, "~g~Good Luck", 1000, 1);
			switch(listitem)
			{
				case 0:
				{
					format(stringer,MAX_STR, "{FFFFFF}Баланс вашего счёта: {FF6F00}%d{FFFFFF} вирт", PlayerInfo[playerid][pBank]);
					SPD(playerid,8904,DIALOG_STYLE_LIST,stringer,"{FFFFFF}» 500$\n » 1000$\n » 5000$\n » 10000$\n » 20000$\n » 50000$\n » 100000$","Скрыть","Назад");
					return 1;
				}
				case 1:
				{
					format(stringer,MAX_STR, "\t{FFFFFF}=============\n\tБаланс: {FF6F00}$%d\n\t{FFFFFF}=============",PlayerInfo[playerid][pBank]);
					SPD(playerid,8905,DIALOG_STYLE_MSGBOX,"{FF6F00}Банкомат",stringer,"Назад","");
					return 1;
				}
				case 2:
				{
					if(PlayerInfo[playerid][pHouse] == -1) return SCM(playerid, COLOR_WHITE, "У вас нет дома");
					SPD(playerid, 9521, DIALOG_STYLE_LIST, "{FF6F00}Банкомат","{FFFFFF}» на 7 дней\n» на 14 дней\n» на 30 дней","Оплатить", "Выход");
					return 1;
				}
				case 3:
				{
					if(PlayerInfo[playerid][pHotel] == -1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет комнаты в отеле");
					SPD(playerid, 940, DIALOG_STYLE_LIST, "{FF6F00}Банкомат","{FFFFFF}» на 7 дней\n» на 14 дней\n» на 30 дней","Оплатить", "Выход");
					return 1;
				}
				case 4:
				{
				    if(PlayerInfo[playerid][pBusiness] == -1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет бизнеса");
				    SPD(playerid, 950, DIALOG_STYLE_LIST, "{FF6F00}Банкомат","{FFFFFF}» на 7 дней\n» на 14 дней\n» на 30 дней","Оплатить","Выход");
				    return 1;
				}
			}
		}
	case 950:
	{
	    if(!response) return 1;
		new plata,day,hDay,bouse = PlayerInfo[playerid][pBusiness];
		if(listitem == 0) day = 7, hDay = 700;
		else if(listitem == 1) day = 14, hDay = 1400;
		else if(listitem == 2) day = 30, hDay = 3000;
		new takking = day*8*plata;
		if (PlayerInfo[playerid][pBank] < takking)
		{
			SCMF(playerid, COLOR_GREY, "Для пополнения счёта необходимо $%d",takking);
			SPD(playerid, 10010, DIALOG_STYLE_MSGBOX, "{FF6F00}Банкомат", "{FFFFFF}На вашем счету недостаточно денег!", "Назад", "");
			return 1;
		}
		else
		{
			PlayerInfo[playerid][pBank] -= takking,BizInfo[bouse][bCheck] += hDay;
			if(BizInfo[bouse][bCheck] > 3000) BizInfo[bouse][bCheck] = 3000;
			SCMF(playerid,0x6495EDFF, "Вы пополнили счёт своего бизнеса, с Вас снято: $%d за %d дней", takking, day);
			SaveBusiness(bouse);
			return 1;
		}
	}
	case 8904:
		{
			if(!response) return SPD(playerid, 8900, DIALOG_STYLE_LIST, "{FF6F00}Терминал приёма платежей", "{FFFFFF}» Снять наличные\n» Баланс\n» Домашний счёт\n» Оплата комнаты в отеле\n» Оплата бизнеса", "Далее", "Выход");
			if(listitem == 0) { money = 500; }
			else if(listitem == 1) { money = 1000; }
			else if(listitem == 2) { money = 5000; }
			else if(listitem == 3) { money = 10000; }
			else if(listitem == 4) { money = 20000; }
			else if(listitem == 5) { money = 50000; }
			else if(listitem == 6) { money = 100000; }
			if (money > PlayerInfo[playerid][pBank]) return SPD(playerid, 10010, DIALOG_STYLE_MSGBOX, "{FF6F00}Банкомат", "{FFFFFF}На вашем счету недостаточно денег!", "Назад", "");
			PlayerInfo[playerid][pCash] +=money;
			PlayerInfo[playerid][pBank] = PlayerInfo[playerid][pBank]-money;
			SCMF(playerid,0x6495EDFF,"Вы сняли со счёта: %d вирт. Остаток: $%d", money,PlayerInfo[playerid][pBank]);
			format(stringer,SMALL_SIZE, "~b~+%d", money);
			GameTextForPlayer(playerid, stringer, 3000, 1);
			return 1;
		}
	case 8905:
		{
			if(response) return SPD(playerid, 8900, DIALOG_STYLE_LIST, "{FF6F00}Терминал приёма платежей", "{FFFFFF}» Снять наличные\n» Баланс\n» Домашний счёт\n» Оплата комнаты в отеле\n» Оплата бизнеса", "Далее", "Выход");
		}
	case 9521:
		{
			if(!response) return 1;
			new plata,day,hDay,bouse = PlayerInfo[playerid][pHouse];
			if(HouseInfo[bouse][hKlass] == 0) plata = 300;
			else if(HouseInfo[bouse][hKlass] == 1) plata = 600;
			else if(HouseInfo[bouse][hKlass] == 2) plata = 900;
			else if(HouseInfo[bouse][hKlass] == 3) plata = 1200;
			else if(HouseInfo[bouse][hKlass] == 4) plata = 1500;
			else if(HouseInfo[bouse][hKlass] == 5) plata = 1800;
			if(listitem == 0) day = 7, hDay = 700;
			else if(listitem == 1) day = 14, hDay = 1400;
			else if(listitem == 2) day = 30, hDay = 3000;
			new takking = day*8*plata;
			if (PlayerInfo[playerid][pBank] < takking)
			{
				SCMF(playerid, COLOR_GREY, "Для пополнения счёта необходимо $%d",takking);
				SPD(playerid, 10010, DIALOG_STYLE_MSGBOX, "{FF6F00}Банкомат", "{FFFFFF}На вашем счету недостаточно денег!", "Назад", "");
				return 1;
			}
			else
			{
				PlayerInfo[playerid][pBank] -= takking,HouseInfo[bouse][hTakings] += hDay;
				if(HouseInfo[bouse][hTakings] > 3000) HouseInfo[bouse][hTakings] = 3000;
				SCMF(playerid,0x6495EDFF, "Вы пополнили счёт своей квартиры, с Вас снято: $%d за %d дней", takking, day);
				SaveHouse(bouse);
				return 1;
			}
		}
	case 939:
		{
			if(!response) return 1;
			new oplata = 1000, hDay, days, h = PlayerInfo[playerid][pHotel];
		 	if(listitem == 0) days = 7, hDay = 700;
			else if(listitem == 1) days = 14, hDay = 1400;
			else if(listitem == 2) days = 30, hDay = 3000;
			new denjata = days*8*oplata;
			if(PlayerInfo[playerid][pCash] < denjata)
			{
				SCMF(playerid, COLOR_GREY, "Для пополнения баланса Вашего номера, Вам потребуется: $%d. Если же деньги на банковском счету, оплатите Ваш номер в банкомате.", denjata);
				return 1;
			}
			else
			{
				PlayerInfo[playerid][pCash] -= denjata, HotelInfo[h][mMoney] += hDay;
				if(HotelInfo[h][mMoney] > 3000) HotelInfo[h][mMoney] = 3000;
				SCMF(playerid, COLOR_GREEN, "Вы пополнили свой счёт комнаты, с Вас снято: $%d за %d дней.", denjata, days);
				SaveHotel(h);
				return 1;
			}
		}
	case 940:
		{
			if(!response) return 1;
			new oplata = 1000, days, h = PlayerInfo[playerid][pHotel];
			if(listitem == 0) days = 7;
			else if(listitem == 1) days = 14;
			else if(listitem == 2) days = 30;
			new denjata = days*16*oplata;
			if(PlayerInfo[playerid][pBank] < denjata)
			{
				SCMF(playerid, COLOR_GREY, "Для пополнения баланса Вашего номера, Вам потребуется: $%d. Если же деньги на руках, оплатите Ваш номер в самом отеле.", denjata);
				return 1;
			}
			else
			{
				PlayerInfo[playerid][pBank] -= denjata, HotelInfo[h][mMoney] += denjata;
				if(HotelInfo[h][mMoney] > denjata) HotelInfo[h][mMoney] = denjata;
				SCMF(playerid, COLOR_GREEN, "Вы пополнили счёт Вашего номера на $%d. Счёт комнаты: $%d", denjata, HotelInfo[h][mMoney]);
				SaveHotel(h);
				return 1;
			}
		}
	case 5351:
		{
			if(!response) return cmd::diskjokey(playerid);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			strmid(URLW, inputtext, 0, strlen(inputtext), 255);
			MGM[4] = 100; MGM[1] = X; MGM[2] = Y; MGM[3] = Z;
			cmd::diskjokey(playerid);
			foreach(new i: Player)
			{
				if(GetDistanceBetweenPlayers(playerid,i) < MGM[4])
				{
					SCM(i,COLOR_WHITE,"[PlayList] Установлен трек DJ.");
					StopAudioStreamForPlayer(i);
					PlayAudioStreamForPlayer(i, URLW, MGM[1], MGM[2], MGM[3], MGM[4], true);
					Music[i] = true;
				}
			}
		}
	case 5300:
		{
			new house = PlayerInfo[playerid][pHouse];
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(HouseInfo[house][hLock] == 1)
						{
							HouseInfo[house][hLock] = 0;
							GameTextForPlayer(playerid, "~g~Unlocked", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(HouseInfo[house][hLock] == 0)
						{
							HouseInfo[house][hLock] = 1;
							GameTextForPlayer(playerid, "~r~Locked", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
				case 1: SPD(playerid,5032,DIALOG_STYLE_MSGBOX,"{FF6F00}Продажа имущества","{FFFFFF}Внимание! Вы собираетесь продать Квартиру\n\nПродать Квартиру?","Да","Нет");
				case 2:
					{
						if(PlayerInfo[playerid][pHouse] == -1) return  SCM(playerid, COLOR_GREY, "Вы не владеете недвижимостью");
						if(!PlayerToPoint(5.0,playerid,HouseInfo[house][hExit][0],HouseInfo[house][hExit][1],HouseInfo[house][hExit][2])) return SCM(playerid,COLOR_GREY,"Вы не у домашней двери!");
						SPD(playerid, 2725, DIALOG_STYLE_LIST, "{FF6F00}Выберите:", "{FFFFFF}[1] Деревянный [PREMIUM]\n[2] Мрамор [PREMIUM]\n[3] Дворец [GOLD PREMIUM]\n[4] Обычный стиль [LUX]\n[5] Обычное дерево [LUX]\n[6] Обычный стиль - 2 [LUX]\n[7] Красное деверо [PREMIUM]\n[8] Обычный стиль [3] [LUX]\n[9] Дешёвый стиль [LUX]\n[10] Двухэтажный интерьер [PREMIUM]\n[11] Однокомнатная квартира [PREMIUM]\n[12] Многокомнатная квартира [PREMIUM]", "Далее", "Закрыть");
					}
				case 3:
					{
						SPD(playerid, 2525, DIALOG_STYLE_LIST, "{FF6F00}Установка деталей","» Установка колес SWITCH\n» Канистра ( -1 канистра, + 10 литров ).","Принять","Выход");
					}
				case 4:
					{
						new balon1 = HouseInfo[house][hBal][0];
						new balon2 = HouseInfo[house][hBal][1];
						new balon3 = HouseInfo[house][hBal][2];
						new balon4 = HouseInfo[house][hBal][3];
						format(stringer1,BIG_SIZE,"{FFFFFF}Название: {FF6F00}Колеса{FFFFFF} | Количество: {FF6F00}%d{FFFFFF} | Используется в гараже (/hm)\nНазвание: {FF6F00}Канистры{FFFFFF} | Количество: {FF6F00}%d{FFFFFF} | Используется в гараже (/hm)\n\
					{FFFFFF}Название: {FF6F00}Балончики с краской{FFFFFF} | Всеобщее количество: {FF6F00}%d{FFFFFF} | Используется в гараже (/hm)",HouseInfo[house][hKolesa],HouseInfo[house][hBenz],balon1+balon2+balon3+balon4);
						SPD(playerid, 1019, DIALOG_STYLE_MSGBOX, "{FF6F00}Вещи находящиеся в гараже",stringer1,"Выход","");
					}
				case 5:
					{
						if(GetPlayerVirtualWorld(playerid) != PlayerInfo[playerid][pHouse]+50) return SCM(playerid,COLOR_GREY,"Вы должны быть в своем гараже");
						if(!PlayerToPoint(10.0,playerid,2485.8572,-2560.5715,2501.0859)) return SCM(playerid,COLOR_GREY,"Вы должны быть в гараже");
						format(stringer, BIG_SIZE,"1. {000000}Черный{FFFFFF}\t\t| %d балончиков\n2. {FF0000}Красный{FFFFFF}\t\t| %d балончиков\n3. {0080FF}Синий{FFFFFF}\t\t| %d балончиков\n4. {00FF00}Зеленый{FFFFFF}\t\t| %d балончиков",HouseInfo[house][hBal][0],HouseInfo[house][hBal][1],HouseInfo[house][hBal][2],HouseInfo[house][hBal][3]);
						SPD(playerid,23,DIALOG_STYLE_LIST,"{FF6F00}- Выберете Цвет",stringer,"Выбрать","Закрыть");
					}
				case 6:
					{
						if(HouseInfo[house][hSafe] ==0) return SendClientMessage(playerid, COLOR_GRAD1, "В доме нет сейфа. Купить его можно в главном меню дома.");
						new texts[500],deagle[50],shot4[50],ak[20],m4[20],mp[20];
						if(HouseInfo[house][hGun][0] == 24 && HouseInfo[house][hGunAmmo][0] > 0) { deagle = "{2BE01B}Пистолет"; } else { deagle = "{F23030}Пистолет"; }
						if(HouseInfo[house][hGun][1] == 25 && HouseInfo[house][hGunAmmo][1] > 0) { shot4 = "{2BE01B}Shotgun"; } else { shot4 = "{F23030}Shotgun"; }
						if(HouseInfo[house][hGun][2] == 30 && HouseInfo[house][hGunAmmo][2] > 0) { ak = "{2BE01B}AK - 47"; } else { ak = "{F23030}AK - 47"; }
						if(HouseInfo[house][hGun][3] == 31 && HouseInfo[house][hGunAmmo][3] > 0) { m4 = "{2BE01B}M4"; } else { m4 = "{F23030}M4"; }
						if(HouseInfo[house][hGun][4] == 29 && HouseInfo[house][hGunAmmo][4] > 0) { mp = "{2BE01B}MP5"; } else { mp = "{F23030}MP5"; }
						format(texts,500,"{EDDD2D}- Наркотики \t\t[ %i гр. ]\n- %s \t\t[ %d п. ]\n- %s \t\t[ %d п. ]\n- %s \t\t[ %d п. ]\n- %s \t\t\t[ %d п. ]\n- %s \t\t\t[ %d п. ]\n{918F76}Положить всё оружие в сейф",HouseInfo[house][hNarko],deagle,HouseInfo[house][hGunAmmo][0],shot4,HouseInfo[house][hGunAmmo][1],ak,HouseInfo[house][hGunAmmo][2],m4,HouseInfo[house][hGunAmmo][3],mp,HouseInfo[house][hGunAmmo][4]);
						SPD(playerid, 5320, DIALOG_STYLE_LIST,"{FF6F00}Сейф:", texts, "Далее", "Назад");
						return 1;
					}
				case 7: return SPD(playerid, 2938, DIALOG_STYLE_LIST, "{FF6F00}Домашние улучшения", "{FFFFFF}1. Сейф\n2. Гараж\n3. Шкаф\n4. Холодильник\n5. Домашние субсидии", "Выбрать", "Отмена");
				default: return 1;
				}
			}
		}
	case 2938:
	{
	    if(!response) return 1;
        switch(listitem)
        {
            case 0:
            {
				if(HouseInfo[PlayerInfo[playerid][pHouse]][hSafe] == 1) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас имеется сейф");
				SPD(playerid, 2939, DIALOG_STYLE_MSGBOX, "{FF6F00}Покупка сейфа", "{FFFFFF}Данное улучшение стоит:\n\n- 100.000$.\n- Вы желаете приобрести сейф ?", "Купить","Выход");
            }
            case 1:
            {
                if(HouseInfo[PlayerInfo[playerid][pHouse]][hGarage] == 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас имеется гараж");
                SPD(playerid, 2940, DIALOG_STYLE_MSGBOX, "{FF6F00}Покупка гаража", "{FFFFFF}Данное улучшения стоит:\n\n- 300.000$.\n- Вы желаете приобрести домашний гараж ?", "Купить", "Выход");
            }
            case 2: return 1;
            case 3: return 1;
        }
	}
	case 2940:
	{
	    if(!response) return 1;
	    if(PlayerInfo[playerid][pCash] < 300000) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств");
	    PlayerInfo[playerid][pCash] -= 300000;
	    HouseInfo[PlayerInfo[playerid][pHouse]][hGarage] = 1;
		SCM(playerid, COLOR_ORANGE, "В Вашем доме успешно построен гараж");
		SaveHouse(PlayerInfo[playerid][pHouse]);
		return 1;
	}
	case 2939:
	{
		if(!response) return 1;
		if(PlayerInfo[playerid][pCash] < 100000) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств");
		PlayerInfo[playerid][pCash] -= 100000;
		HouseInfo[PlayerInfo[playerid][pHouse]][hSafe] = 1;
		SCM ( playerid, COLOR_ORANGE, "Вы успешно приобрели сейф");
		SaveHouse(PlayerInfo[playerid][pHouse]);
		return 1;
	}
	case 2525:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					#define house PlayerInfo[playerid][pHouse]
					new CarID1 = GetVehicleModel(caridhouse[playerid]), CarID2 = GetVehicleModel(GetPVarInt(playerid, #vehicle_id_two));
					if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Вы должны сидеть в своем автомобиле");
					if(HouseInfo[house][hKolesa] <= 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет колес в гараже. (Купить их можно в магазине с деталями для автомобиля");
					if(!PlayerToPoint(30.0,playerid, 2485.8167,-2560.7986,2501.0859)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не в гараже");
					new idcar;
					if(caridhouse[playerid] == GetPlayerVehicleID(playerid)) idcar = 1;
					if(GetPVarInt(playerid, #vehicle_id_two) == GetPlayerVehicleID(playerid)) idcar = 2;
					if(vehicle_components_add[playerid][idcar-1][2] == 1080) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас уже установлены данный тип колес");
					if(CarID1 == 462 && CarID2 == 462) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}На мопед запрещено ставить данную деталь");
					vehicle_components_add[playerid][idcar-1][2] = 1080;
					AddVehicleComponent(GetPlayerVehicleID(playerid),1080);
					HouseInfo[house][hKolesa] --;
					SCM(playerid, COLOR_GREY, "Успех: Вы установили колеса на свой автомобиль");
					vehicle_components_add[playerid][idcar-1][0] = 0; vehicle_components_add[playerid][idcar-1][1] = 0;
					vehicle_components_add[playerid][idcar-1][2]=0;vehicle_components_add[playerid][idcar-1][3]=3;vehicle_components_add[playerid][idcar-1][4]=0;vehicle_components_add[playerid][idcar-1][5]=0;vehicle_components_add[playerid][idcar-1][6]=0;vehicle_components_add[playerid][idcar-1][13]=0;
					vehicle_components_add[playerid][idcar-1][7]=0;vehicle_components_add[playerid][idcar-1][8]=0;vehicle_components_add[playerid][idcar-1][9]=0;vehicle_components_add[playerid][idcar-1][10]=0;vehicle_components_add[playerid][idcar-1][11]=0;vehicle_components_add[playerid][idcar-1][12]=0;
					PlayerInfo[playerid][pCar][0] = 462;
					format(c_vehicle_components_add[playerid][idcar-1],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][idcar-1][0],vehicle_components_add[playerid][idcar-1][1],vehicle_components_add[playerid][idcar-1][2],vehicle_components_add[playerid][idcar-1][3],vehicle_components_add[playerid][idcar-1][4],
					vehicle_components_add[playerid][idcar-1][5],vehicle_components_add[playerid][idcar-1][6],vehicle_components_add[playerid][idcar-1][7],
					vehicle_components_add[playerid][idcar-1][8],vehicle_components_add[playerid][idcar-1][9],vehicle_components_add[playerid][idcar-1][10],vehicle_components_add[playerid][idcar-1][11],vehicle_components_add[playerid][idcar-1][12],vehicle_components_add[playerid][idcar-1][13]);
					#undef house
				}
			case 1:
				{
					new veh = GetPlayerVehicleID(playerid);
					#define house PlayerInfo[playerid][pHouse]
					if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Вы должны сидеть в своем автомобиле");
					if(HouseInfo[house][hBenz] <= 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет канистр в гараже. (Купить их можно в магазине с деталями для автомобиля");
					if(!PlayerToPoint(30.0,playerid, 2485.8167,-2560.7986,2501.0859)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не в гараже");
					if(VehInfo[veh][vFuel] >= 300) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Ваш бак полон");
					VehInfo[veh][vFuel] += 10;
					PlayerInfo[playerid][pFuelcar] += 10;
					HouseInfo[house][hBenz] --;
					SCM(playerid, COLOR_GREY, "Успех: Вы заполнили бак своего автомобиля на 10 литров. (-1 канистра)");
					#undef house
				}
			default: return 1;
			}
		}
	case 5033:
		{
			new house = PlayerInfo[playerid][pHouse];
			if(!response) return 1;
			if(PlayerInfo[playerid][pHouse] == -1) return SCM(playerid,COLOR_GREY,"У вас нету дома.");
			HouseInfo[house][hHel] = 0;
			HouseInfo[house][hLock] = 1;
			HouseInfo[house][hOwned] = 0;
			HouseInfo[house][hBenz] = 0;
			HouseInfo[house][hSafe] = 0;
			HouseInfo[house][hGarage] = 0;
			HouseInfo[house][CarDrived][0] = 0;
			HouseInfo[house][CarDrived][1] = 0;
			for(new i = 0; i != 4; i++) HouseInfo[house][hBal][i] = 0;
			for(new i = 0; i != 5; i++) HouseInfo[house][hGun][i] = 0, HouseInfo[house][hGunAmmo][i] = 0;
			HouseInfo[house][hKolesa] = 0;
			DestroyVehicleEx(caridhouse[playerid]), DestroyVehicleEx(GetPVarInt(playerid, #vehicle_id_two)), DeletePVar(playerid, #vehicle_id_two);
			strmid(HouseInfo[house][hOwner], "Нет", 0, strlen("Нет"), 255);
			PlayerInfo[playerid][pCash] += HouseInfo[house][hValue];
			format(stringer,SMALL_SIZE, "Дом продан за %d вирт", HouseInfo[house][hValue]);
			SCM(playerid, COLOR_WHITE, stringer);
			PlayerInfo[playerid][pHouse] = -1;
			UpdatePlayerData (playerid, "pPhousekey", PlayerInfo[playerid][pHouse]);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPosEx(playerid, HouseInfo[house][hEnter][0], HouseInfo[house][hEnter][1], HouseInfo[house][hEnter][2]);
			PlayerInfo[playerid][pInt] = 0;
			UpdateIconHouse(house);
			SaveHouse(house);
			return 1;
		}
	case 5032:
		{

			new house = PlayerInfo[playerid][pHouse];
			if(response && PlayerInfo[playerid][pHouse] != -1)
			{
				HouseInfo[house][hHel] = 0; HouseInfo[house][hLock] = 1;
				HouseInfo[house][hOwned] = 0;
				DestroyVehicleEx(caridhouse[playerid]),DestroyVehicleEx(GetPVarInt(playerid, #vehicle_id_two)), DeletePVar(playerid, #vehicle_id_two);
				caridhouse[playerid] = 0;
				strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
				PlayerInfo[playerid][pCash] +=HouseInfo[house][hValue];
				SCM(playerid, COLOR_LIGHTGREEN, ":::: Ваш чек :::: ");
				SCMF(playerid,COLOR_WHITE,"Дом продан за %d вирт", HouseInfo[house][hValue]);
				SCMF(playerid,COLOR_WHITE,"Выручка: %d", PlayerInfo[playerid][pCash]);
				SCM(playerid, COLOR_LIGHTGREEN, ":::: Ваш чек:::: ");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPosEx(playerid,HouseInfo[house][hEnter][0],HouseInfo[house][hEnter][1],HouseInfo[house][hEnter][2]);
				PlayerInfo[playerid][pInt] = 0;
				UpdateIconHouse(house);
				PlayerInfo[playerid][pHouse] = -1;
				UpdatePlayerData (playerid, "pPhousekey", PlayerInfo[playerid][pHouse]);
				SaveHouse(house);
				return 1;
			}
			else return 1;
		}
	case 9678:
		{
			if(response)
			{
				GivePlayerWeaponAC(playerid, 3, 1);
				GivePlayerWeaponAC(playerid, 24, 49);
				GivePlayerWeaponAC(playerid, 29, 210);
				GivePlayerWeaponAC(playerid, 17, 1);
				SetPlayerHealthAC(playerid, 100);
				SetPlayerArmourAC(playerid, 120);
				SetPVarInt(playerid, "gun_time", gettime()+30);
				SCM(playerid, COLOR_GREEN,"Выдано:   Дубинка, Усовершенствованная Броня, Desert Eagle(6 Обойм), MP5 (6 обойм), 1 дымовая шашка");//Любимый цвет
				Police +=1;
				SaveMaterials();
			}
			else
			{
				GivePlayerWeaponAC(playerid, 3, 1);
				GivePlayerWeaponAC(playerid, 23, 102);
				GivePlayerWeaponAC(playerid, 25, 50);
				GivePlayerWeaponAC(playerid, 17, 1);
				SetPlayerHealthAC(playerid, 100);
				SetPlayerArmourAC(playerid, 120);
				SetPVarInt(playerid, "gun_time", gettime()+30);
				SCM(playerid, COLOR_GREEN,"Выдано:   Дубинка, Усовершенствованная Броня, SDPistol(6 Обойм), Shotgun (50 Патронов), 1 дымовая шашка");//Любимый цвет
				Police +=1;
				SaveMaterials();
			}
		}
	case 2725:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:	SPD(playerid, 2726, DIALOG_STYLE_INPUT, "{FF6F00}Деревянный стиль","{FFFFFF}Введите номер Вашего дома", "Далее", "Отмена");
				case 1:	SPD(playerid, 2727, DIALOG_STYLE_INPUT, "{FF6F00}Мрамор","{FFFFFF}Введите номер Вашего дома", "Далее", "Отмена");
				case 2: SPD(playerid, 2728, DIALOG_STYLE_INPUT, "{FF6F00}Дворец","{FFFFFF}Введите номер Вашего дома", "Далее", "Отмена");
				case 3:	SPD(playerid, 2729, DIALOG_STYLE_INPUT, "{FF6F00}Обычный стиль","{FFFFFF}Введите номер Вашего дома", "Далее", "Отмена");
				case 4:	SPD(playerid, 2730, DIALOG_STYLE_INPUT, "{FF6F00}Обычное дерево","{FFFFFF}Введите номер Вашего дома", "Далее", "Отмена");
				case 5: SPD(playerid, 2731, DIALOG_STYLE_INPUT, "{FF6F00}Обычный стиль - 2","{FFFFFF}Введите номер Вашего дома", "Далее", "Отмена");
				case 6:	SPD(playerid, 2732, DIALOG_STYLE_INPUT, "{FF6F00}Красное дерево","{FFFFFF}Введите номер Вашего дома", "Далее", "Отмена");
				case 7: SPD(playerid, 2733, DIALOG_STYLE_INPUT, "{FF6F00}Обычный стиль - 3","{FFFFFF}Введите номер Вашего дома", "Далее", "Отмена");
				case 8: SPD(playerid, 2734, DIALOG_STYLE_INPUT, "{FF6F00}Дешевый стиль стиль","{FFFFFF}Введите номер Вашего дома", "Далее", "Отмена");
				case 9: SPD(playerid, 2735, DIALOG_STYLE_INPUT, "{FF6F00}Двухэтажный интерьер","{FFFFFF}Введите номер Вашего дома", "Далее", "Отмена");
				case 10: SPD(playerid, 2736, DIALOG_STYLE_INPUT, "{FF6F00}Однокомнатная квартира","{FFFFFF}Введите номер Вашего дома", "Далее", "Отмена");
				case 11: SPD(playerid, 2737, DIALOG_STYLE_INPUT, "{FF6F00}Многокомнатная квартира","{FFFFFF}Введите номер Вашего дома", "Далее", "Отмена");
				}
			}
			else return 1;
		}
	case 2737:
		{
			if(!response) return 1;
			new house = strval(inputtext);
			if(PlayerInfo[playerid][pHouse] != house) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID дома не совпадает с Вашим.");
			HouseInfo[house][hInt] = 4;
			HouseInfo[house][hExit][0] = 260.9977;
			HouseInfo[house][hExit][1]= 1284.2943;
			HouseInfo[house][hExit][2] = 1080.2578;
			mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[house][hInt], HouseInfo[house][hExit][0], HouseInfo[house][hExit][1], HouseInfo[house][hExit][2], house);
			mysql_empty(connects, stringer);
			SCM(playerid, COLOR_GREEN, "Интеръер дома изменен");
			SpawnPlayer(playerid);
			return 1;
		}
	case 2736:
		{
			if(!response) return 1;
			new house = strval(inputtext);
			if(PlayerInfo[playerid][pHouse] != house) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID дома не совпадает с Вашим.");
			HouseInfo[house][hInt] = 5;
			HouseInfo[house][hExit][0] = 2233.6436;
			HouseInfo[house][hExit][1]= -1115.2623;
			HouseInfo[house][hExit][2] = 1050.8828;
			SCM(playerid, COLOR_GREEN, "Интеръер дома изменен");
			mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[house][hInt], HouseInfo[house][hExit][0], HouseInfo[house][hExit][1], HouseInfo[house][hExit][2], house);
			mysql_empty(connects, stringer);
			SpawnPlayer(playerid);
			return 1;
		}
	case 2735:
		{
			if(!response) return 1;
			new house = strval(inputtext);
			if(PlayerInfo[playerid][pHouse] != house) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID дома не совпадает с Вашим.");
			HouseInfo[house][hInt] = 12;
			HouseInfo[house][hExit][0] = 2324.4084;
			HouseInfo[house][hExit][1]= -1149.5458;
			HouseInfo[house][hExit][2] = 1050.7101;
			SCM(playerid, COLOR_GREEN, "Интеръер дома изменен");
			mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[house][hInt], HouseInfo[house][hExit][0], HouseInfo[house][hExit][1], HouseInfo[house][hExit][2], house);
			mysql_empty(connects, stringer);
			SpawnPlayer(playerid);
			return 1;
		}
	case 2726:
		{
			if(response)
			{
				new house = strval(inputtext);
				if(PlayerInfo[playerid][pHouse] != house) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID дома не совпадает с Вашим.");
				HouseInfo[house][hInt] = 4;
				HouseInfo[house][hExit][0] = -261.9759;
				HouseInfo[house][hExit][1]= 1456.8844;
				HouseInfo[house][hExit][2] = 1084.3672;
				SCM(playerid, COLOR_GREEN, "Интеръер дома изменен");
				mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[house][hInt], HouseInfo[house][hExit][0], HouseInfo[house][hExit][1], HouseInfo[house][hExit][2], house);
				mysql_empty(connects, stringer);
				SpawnPlayer(playerid);
				return 1;
			}
			else return 1;
		}
	case 2727:
		{
			if(response)
			{
				new house = strval(inputtext);
				if(PlayerInfo[playerid][pHouse] != house) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID дома не совпадает с Вашим.");
				HouseInfo[house][hInt] = 6;
				HouseInfo[house][hExit][0] = 234.1571;
				HouseInfo[house][hExit][1]= 1064.9569;
				HouseInfo[house][hExit][2] = 1084.2104;
				SCM(playerid, COLOR_GREEN, "Интеръер дома изменен");
				mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[house][hInt], HouseInfo[house][hExit][0], HouseInfo[house][hExit][1], HouseInfo[house][hExit][2], house);
				mysql_empty(connects, stringer);
				SpawnPlayer(playerid);
				return 1;
			}
			else return 1;
		}
	case 2728:
		{
			if(response)
			{
				new house = strval(inputtext);
				if(PlayerInfo[playerid][pHouse] != house) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID дома не совпадает с Вашим.");
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExit][0] = 140.9131;
				HouseInfo[house][hExit][1]= 1367.9713;
				HouseInfo[house][hExit][2] = 1083.8621;
				SCM(playerid, COLOR_GREEN, "Интеръер дома изменен");
				mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[house][hInt], HouseInfo[house][hExit][0], HouseInfo[house][hExit][1], HouseInfo[house][hExit][2], house);
				mysql_empty(connects, stringer);
				SpawnPlayer(playerid);
			}
			else return 1;
		}
	case 2729:
		{
			if(response)
			{
				new house = strval(inputtext);
				if(PlayerInfo[playerid][pHouse] != house) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID дома не совпадает с Вашим.");
				HouseInfo[house][hInt] = 5;
				HouseInfo[house][hExit][0] = 22.7783;
				HouseInfo[house][hExit][1]= 1404.9600;
				HouseInfo[house][hExit][2] = 1084.4297;
				SCM(playerid, COLOR_GREEN, "Интеръер дома изменен");
				mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[house][hInt], HouseInfo[house][hExit][0], HouseInfo[house][hExit][1], HouseInfo[house][hExit][2], house);
				mysql_empty(connects, stringer);
				SpawnPlayer(playerid);
			}
			else return 1;
		}
	case 2730:
		{
			if(response)
			{
				new house = strval(inputtext);
				if(PlayerInfo[playerid][pHouse] != house) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID дома не совпадает с Вашим.");
				HouseInfo[house][hInt] = 10;
				HouseInfo[house][hExit][0] = 23.8334;
				HouseInfo[house][hExit][1]= 1340.4812;
				HouseInfo[house][hExit][2] =1084.3750;
				SCM(playerid, COLOR_GREEN, "Интеръер дома изменен");
				mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[house][hInt], HouseInfo[house][hExit][0], HouseInfo[house][hExit][1], HouseInfo[house][hExit][2], house);
				mysql_empty(connects, stringer);
				SpawnPlayer(playerid);
			}
			else return 1;
		}
	case 2731:
		{
			if(response)
			{
				new house = strval(inputtext);
				if(PlayerInfo[playerid][pHouse] != house) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID дома не совпадает с Вашим.");
				HouseInfo[house][hInt] = 4;
				HouseInfo[house][hExit][0] = 261.0654;
				HouseInfo[house][hExit][1]= 1284.2991;
				HouseInfo[house][hExit][2] =1080.2578;
				SCM(playerid, COLOR_GREEN, "Интеръер дома изменен");
				mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[house][hInt], HouseInfo[house][hExit][0], HouseInfo[house][hExit][1], HouseInfo[house][hExit][2], house);
				mysql_empty(connects, stringer);
				SpawnPlayer(playerid);
			}
			else return 1;
		}
	case 2732:
		{
			if(response)
			{
				new house = strval(inputtext);
				if(PlayerInfo[playerid][pHouse] != house) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID дома не совпадает с Вашим.");
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExit][0] = 491.0190;
				HouseInfo[house][hExit][1]= 1399.0691;
				HouseInfo[house][hExit][2] =1080.2578;
				SCM(playerid, COLOR_GREEN, "Интеръер дома изменен");
				mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[house][hInt], HouseInfo[house][hExit][0], HouseInfo[house][hExit][1], HouseInfo[house][hExit][2], house);
				mysql_empty(connects, stringer);
				SpawnPlayer(playerid);
			}
			return 1;
		}
	case 2733:
		{
			if(response)
			{
				new house = strval(inputtext);
				if(PlayerInfo[playerid][pHouse] != house) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID дома не совпадает с Вашим.");
				HouseInfo[house][hInt] = 2;
				HouseInfo[house][hExit][0] = 225.9761;
				HouseInfo[house][hExit][1]= 1239.9126;
				HouseInfo[house][hExit][2] =1082.1406;
				SCM(playerid, COLOR_GREEN, "Интеръер дома изменен");
				mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[house][hInt], HouseInfo[house][hExit][0], HouseInfo[house][hExit][1], HouseInfo[house][hExit][2], house);
				mysql_empty(connects, stringer);
				SpawnPlayer(playerid);
			}
			else return 1;
		}
	case 2734:
		{
			if(response)
			{
				new house = strval(inputtext);
				if(PlayerInfo[playerid][pHouse] != house) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID дома не совпадает с Вашим.");
				HouseInfo[house][hInt] = 10;
				HouseInfo[house][hExit][0] = 2261.3103;
				HouseInfo[house][hExit][1]= -1136.4467;
				HouseInfo[house][hExit][2] =1050.6328;
				SCM(playerid, COLOR_GREEN, "Интеръер дома изменен");
				mysql_format(connects, stringer, MAX_SQL, "UPDATE `house` SET `hInt` = '%d', `hExitx` = '%f', `hExity` = '%f', `hExitz` = '%f' WHERE `hID` = '%d'", HouseInfo[house][hInt], HouseInfo[house][hExit][0], HouseInfo[house][hExit][1], HouseInfo[house][hExit][2], house);
				mysql_empty(connects, stringer);
				SpawnPlayer(playerid);
			}
			return 1;
		}
		case 10075:
		{
			if(response)
			{

				for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hEnter][0], HouseInfo[i][hEnter][1], HouseInfo[i][hEnter][2]))
					{
						if(strcmp(PlayerInfo[playerid][pNames], HouseInfo[i][hOwner], true) == 0 && PlayerInfo[playerid][pHouse] == -1) PlayerInfo[playerid][pHouse] = i;
						if(PlayerInfo[playerid][pHouse] == i || HouseInfo[i][hLock] == 0 || PlayerInfo[playerid][pHouse] == i)
						{
							SetPlayerInterior(playerid,HouseInfo[i][hInt]);
							SetPlayerVirtualWorld(playerid,i+50);
							SetPlayerPosEx(playerid,HouseInfo[i][hExit][0],HouseInfo[i][hExit][1],HouseInfo[i][hExit][2]);
							PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
							PlayerInfo[playerid][pLocal] = i;
							return 1;
						}
						else GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
					}
				}
			}
			else return 1;
		}
	case 10001:
		{
			if(!response) return 1;
			for(new i = 1; i< MAX_HOTEL; i++)
			{
				if(PlayerToPoint(3, playerid, HotelInfo[i][mEnter][0], HotelInfo[i][mEnter][1], HotelInfo[i][mEnter][2]))
				{
					if(!strcmp(PlayerInfo[playerid][pNames], HotelInfo[i][mOwned], true) && PlayerInfo[playerid][pHotel] == -1) PlayerInfo[playerid][pHotel] = i;
					if(PlayerInfo[playerid][pHotel] != i && HotelInfo[i][mLock] != 0 && PlayerInfo[playerid][pHotel] != i) return SCM(playerid, COLOR_REDD, "Комната заперта!");
					PlayerInfo[playerid][pLocal] = i;
					TogglePlayerControllable(playerid, false);
					SetTimerEx("UnFreez", 3000, 0, "d", playerid);
					SetPlayerInterior(playerid, 2);
					SetPlayerVirtualWorld(playerid, HotelInfo[i][mVW]);
					SetPlayerPosEx(playerid, HotelInfo[i][mExit][0], HotelInfo[i][mExit][1], HotelInfo[i][mExit][2]);
					return 1;
				}
			}
		}
	case 10002:
		{
			if(!response) return 1;
			for(new i = 1; i< MAX_HOTEL; i++)
			{
				if(PlayerToPoint(2.0, playerid, HotelInfo[i][mEnter][0], HotelInfo[i][mEnter][1], HotelInfo[i][mEnter][2]) && HotelInfo[i][mOwner] == 0)
				{
					if(PlayerInfo[playerid][pCash] < 100000) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств.");
					if(PlayerInfo[playerid][pHouse] != -1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя арендовать комнату в отеле, имея обычный дом.");
					if(PlayerInfo[playerid][pCar][0] == 508) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя арендовать комнату в отеле, имея дом на колесах.");
					if(PlayerInfo[playerid][pHotel] != -1 && strcmp(PlayerInfo[playerid][pNames], HotelInfo[PlayerInfo[playerid][pHotel]][mOwned], true) == 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас уже есть комната.");
					PlayerInfo[playerid][pHotel] = i;
					UpdatePlayerData(playerid, "pHotel",PlayerInfo[playerid][pHotel]);
					HotelInfo[PlayerInfo[playerid][pHotel]][mLock] = 1;
					HotelInfo[PlayerInfo[playerid][pHotel]][mOwner] = 1;
					PlayerInfo[playerid][pLocal] = PlayerInfo[playerid][pHotel];
					PlayerInfo[playerid][pSpawn] = 1;
					UpdatePlayerData(playerid, "pSpawn", PlayerInfo[playerid][pSpawn]);
					strmid(HotelInfo[PlayerInfo[playerid][pHotel]][mOwned], PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), 255);
					PlayerInfo[playerid][pCash] -= 100000;
					TogglePlayerControllable(playerid, false);
					SetTimerEx("UnFreez", 3000, 0, "d", playerid);
					SetPlayerPosEx(playerid, 1325.7842,-1071.0078,3458.9060);
					SetPlayerFacingAngle(playerid, 90.2511);
					SetPlayerVirtualWorld(playerid, HotelInfo[PlayerInfo[playerid][pHotel]][mVW]);
					SetPlayerInterior(playerid, 4);
					SCMF(playerid, COLOR_WHITE, "Вы успешно приобрели номер в отеле, номер Вашего номера: {FF6F00}%d", i);
					SCM(playerid, COLOR_GREEN, "Оплатить Ваш номер, Вы можете в холле отеля.");
					SCM(playerid, COLOR_GREEN, "Панель управления комнатой - /hotel");
					SCM(playerid, COLOR_GREEN, "Для того, что бы покинуть комнату, подойдите к двери, и нажмите - L-ALT");
					format(stringer, 200, "{FFFFFF}Комната в отеле - {FF7800}№%d{FFFFFF}\nКомната занята!\nВладелец: {FF7800}%s{FFFFFF}\nИнформация: {FF7800}L-ALT", i, HotelInfo[PlayerInfo[playerid][pHotel]][mOwned]);
					UpdateDynamic3DTextLabelText(HotelInfo[PlayerInfo[playerid][pHotel]][hLabelHot], 0xC4DAADFF, stringer);
					SaveHotel(i);
					break;
				}
			}
		}
	case 10003:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					switch(HotelInfo[PlayerInfo[playerid][pHotel]][mLock])
					{
						case 0: HotelInfo[PlayerInfo[playerid][pHotel]][mLock] = 1, SCM(playerid, COLOR_REDD, "Вы успешно закрыли комнату");
						case 1: HotelInfo[PlayerInfo[playerid][pHotel]][mLock] = 0, SCM(playerid, COLOR_GREEN, "Вы успешно открыли комнату");
					}
				}
			case 1: cmd::sellhotel(playerid);
			case 2:
				{
					format(stringer, MAX_STR, "{FFFFFF}Ваши транспортные средства:\n\n- %s", VehicleNames[HotelInfo[PlayerInfo[playerid][pHotel]][mCar]-400]);
					SPD(playerid, 1019, DIALOG_STYLE_MSGBOX, "{FF6F00}Мой транспорт", stringer, "Принять","");
				}
			case 3:
				{
					new house = PlayerInfo[playerid][pHotel];
					if(caridhouse[playerid] != 0) DestroyVehicleEx(caridhouse[playerid]), caridhouse[playerid] = 0;
					caridhouse[playerid] = CreateVehicleEx(HotelInfo[house][mCar], 1165.4279,-1078.2888,1002.5661,0.3323, vehicle_components_add[playerid][0][0],vehicle_components_add[playerid][0][1], 7200);
					LinkVehicleToInterior(caridhouse[playerid], 1);
					SetVehicleVirtualWorld(caridhouse[playerid], house+50);
					LockCar(caridhouse[playerid]);
					VehInfo[caridhouse[playerid]][vFuel] = 50;
					GameTextForPlayer(playerid, "~r~$-500", 5000, 1);
					PlayerInfo[playerid][pCash] -= 500;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SetVehicleNumberPlate(caridhouse[playerid], PlayerInfo[playerid][pNumbercar]);
				    ChangeVehicleColor(caridhouse[playerid],vehicle_components_add[playerid][0][0],vehicle_components_add[playerid][0][1]);
					AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][2]);
					AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][12]);
					AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][13]);
					if(PJ(caridhouse[playerid]))
					{
						ChangeVehiclePaintjob(caridhouse[playerid], vehicle_components_add[playerid][0][3]);
						AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][4]);
						AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][5]);
						AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][6]);
						AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][7]);
						AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][8]);
						AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][9]);
						AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][10]);
						AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][11]);
					}
				}
			}
		}
	case 10026:
		{
			if(response)
			{
				if(IsPlayerConnected(playerid))
				{
					new Float:oldposx, Float:oldposy, Float:oldposz;
					GetPlayerPos(playerid, oldposx, oldposy, oldposz);
					for(new h = 0; h < sizeof(HouseInfo); h++)
					{
						if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2]) && HouseInfo[h][hOwned] == 0)
						{
							if(PlayerInfo[playerid][pHouse] != -1 && strcmp(PlayerInfo[playerid][pNames], HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
							{
								SCM(playerid, COLOR_YELLOW, "У вас уже есть квартира...");
								SCM(playerid, COLOR_WHITE, "(( /hmenu - [3] Продать квартиру ))");
								return 1;
							}
							if(PlayerInfo[playerid][pHotel] != -1) return SCM(playerid, -1, "Вы проживаете в комнате в отеле!");
							if(PlayerInfo[playerid][pCar][0] == 508) return SendClientMessage(playerid,COLOR_WHITE,"У Вас в наличии дом на колёсах, нельзя покупать дом имея данный автомобиль");
							if(PlayerInfo[playerid][pCar][1] == 508) return SendClientMessage(playerid,COLOR_WHITE,"У Вас в наличии дом на колёсах, нельзя покупать дом имея данный автомобиль");
							if(PlayerInfo[playerid][pCash] < HouseInfo[h][hValue]) return	SCM(playerid, COLOR_WHITE, "У вас нет столько денег на руках!");
							PlayerInfo[playerid][pHouse] = h;
							UpdatePlayerData (playerid, "pPhousekey", PlayerInfo[playerid][pHouse]);
							HouseInfo[h][hOwned] = 1;
							HouseInfo[h][hHel] = 0;
							HouseInfo[h][hTakings] = 100;
							HouseInfo[h][hSafe] = 0;
							strmid(HouseInfo[h][hOwner], PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), 255);
							PlayerInfo[playerid][pCash] -= HouseInfo[h][hValue];
							SetPlayerInterior(playerid,HouseInfo[h][hInt]);
							SetPlayerPosEx(playerid,HouseInfo[h][hExit][0],HouseInfo[h][hExit][1],HouseInfo[h][hExit][2]);
							PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
							PlayerInfo[playerid][pLocal] = h;
							SetPlayerVirtualWorld(playerid,h+50);
							SCM(playerid, COLOR_WHITE, "Поздравляем с покупкой!");
							SCM(playerid,COLOR_YELLOW, "Внимание! Теперь каждый день, с Вас будут снимать средства.");
							SCM(playerid,COLOR_YELLOW,"Если на счету недостаточно денег, вас выселят");
							SCM(playerid,COLOR_YELLOW,"Пополнить домашний счёт или узнать баланс можно через банк/банкомат (помощь: /mm => команды)");
							GameTextForPlayer(playerid, "~w~WELCOME HOME~n~~w~PRINT: ~g~/hmenu", 5000, 4);
							PlayerInfo[playerid][pSpawn] = 1;
							UpdatePlayerData(playerid,"pSpawn",PlayerInfo[playerid][pSpawn]);
							if(PlayerInfo[playerid][pCar][0] == 0) PlayerInfo[playerid][pCar][0] = 462;
							if(PlayerInfo[playerid][pCar][1] == 0) PlayerInfo[playerid][pCar][1] = 462;
							SaveHouse(h);
							UpdateIconHouse(h);
							return 1;
						}
					}
				}
			}
			else return 1;
		}
	case 10025:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: SPD(playerid,1012,DIALOG_STYLE_INPUT,"Поиск команд","Введите интересующую Вас команду, и получите её описание","Скрыть","Отмена");
				case 1:
					{
						SCM(playerid,0x20A8A8AA,"<> /time /id /gps /viphelp /showskill");
						SCM(playerid,0x20A8A8AA,"<> /divorce /propose /witness /buy /drink /eat");
						SCM(playerid,0x20A8A8AA,"<> /kiss /eat /dice /showpass /mystyle");
						SCM(playerid,0x20A8A8AA,"<> /licenses /showlicenses /box /kongfu /kickbox");
						SCM(playerid,0x20A8A8AA,"<> /eject  /buy /pay /directory /mydebts /repaydebt");
						return 1;
					}
				case 2:
					{
						SCM(playerid,0x20A8A8AA,"<> (/o)oc - Глобальный чат");
						SCM(playerid,0x20A8A8AA,"<> (/ad)vertise - Объявление");
						SCM(playerid,0x20A8A8AA,"<> (/gov)erment - Государственные новости");
						SCM(playerid,0x20A8A8AA,"<> (/f)amily - Чат организации");
						SCM(playerid,0x20A8A8AA,"<> (/s)out - Крик");
						SCM(playerid,0x20A8A8AA,"<> (/m)egaphone - Мегафон на служебном транспорте");
						SCM(playerid,0x20A8A8AA,"<> (/r)adio - Чат государственных организаций (Полиция/ФБР и т.д)");
						SCM(playerid,0x20A8A8AA,"<> (/d)epartaments - Общий чат государственных организаций");
						SCM(playerid,0x20A8A8AA,"<> (/me) - Действие (Пример: Имя_Фамилия пожал руку)");
						return 1;
					}
				case 3:
					{
						SCM(playerid,0x20A8A8AA,"<> (/c)all - Позвонить (Номер телефона можно узнать через /number)");
						SCM(playerid,0x20A8A8AA,"<> /sms - Отправить СМС сообщение");
						SCM(playerid,0x20A8A8AA,"<> (/p)ickup - Ответить на звонок");
						SCM(playerid,0x20A8A8AA,"<> (/h)angup - Завершить телефонный разговор");
						SCM(playerid,0x20A8A8AA,"<> /mbalance - Проверить баланс");
						SCM(playerid,0x20A8A8AA,"<> /number - Узнать номер");
						return 1;
					}
				case 4:
					{
						switch(PlayerInfo[playerid][pJob])
						{
						case 2:
							{
								SCM(playerid,0x83BFBFAA,"<> [Механик] /repair - Починить. /refill - Заправить.");
								SCM(playerid,0x83BFBFAA,"<> [Механик] /trailer - прицепить транспорт");
							}
						case 5: { SCM(playerid,0x83BFBFAA,"<> [Развозчик продуктов] /load - загрузка, /sellprodz - Продать продукты, /loadbenz - залить бензин, /sellbenz - продать бензин"); }
						}
						if (IsACop(playerid))
						{
							SCM(playerid, 0x20A8A8AA, "<> (/r)adio (/d)epartments (/m)egaphone (/su)spect /arrest /wanted /patrul /wantedlist /cuff /shield /tazer /members");
							SCM(playerid, 0x20A8A8AA, "<> /frisk /take (/gov)ernment /ram /warehouse /ticket /givecopkeys /cput /ceject /uncuff");
							SCM(playerid, 0x20A8A8AA, "<> /break - установить / убрать дорожное заграждение");
						}
						else if (IsAArm(playerid))
						{
							SCM(playerid, 0x20A8A8AA, "<> (/r)adio (/d)epartments (/m)egaphone /tazer /shield");
							SCM(playerid, 0x20A8A8AA, "<> (/gov)ernment  /warehouse /showudost /members /makegun (Собрать оружие) /getgun (Взять оружие из автомобиля)");
							SCM(playerid, 0x20A8A8AA, "<> Маты: /carmat /carm ");
							return 1;
						}
						else if (PlayerInfo[playerid][pLRInections] == 16 || PlayerInfo[playerid][pMRInections] == 16)
						{
							SCM(playerid, 0x20A8A8AA, "<> /f, /n, /live, /newsbank, /newswithdraw, /edit");
						}
						else if (PlayerInfo[playerid][pMRInections] == 25)
						{
							SCM(playerid, 0x20A8A8AA, "<> (/r)adio (/d)epartments (/m)egaphone (/su)spect /arrest /wanted /patrul /wantedlist /cuff /shield /tazer /members");
							SCM(playerid, 0x20A8A8AA, "<> /frisk /take (/gov)ernment /ram /warehouse /ticket /givecopkeys /cput /ceject /uncuff");
							SCM(playerid, 0x20A8A8AA, "<> /openswat - открыть ворота");
						}
						else if (PlayerInfo[playerid][pMRInections] == 24) { SCM(playerid, 0x20A8A8AA, "<> (/f)amily - Чат фракции"); }
						else if (PlayerInfo[playerid][pMRInections] == 2) { SCM(playerid, 0x20A8A8AA, "<> /demote  /ftazer /bizlock"); }
						else if (PlayerInfo[playerid][pMRInections] == 4 || PlayerInfo[playerid][pLRInections] == 4)
						{
							SCM(playerid, 0x20A8A8AA, "МЧС: /sethpprice (Изменить цену за лечение) /heal (Вылечить)");
                            SCM(playerid, 0x20A8A8AA, "МЧС: /members (/gov)ernment (Государственные новости) (/r)adio (/d)epartments /givemedcard (Выдать медицинскую карту)");
						}
						else if (ISAMAFIA(playerid)) { SCM(playerid, 0x20A8A8AA, "(/f)amily  /tie /takephone /getweapon /bizlist /bizwar /mafiabalance /mafiawithdraw /mafiabankput /warehouse /setdebt /debtors");  }
						else if (PlayerInfo[playerid][pMRInections] == 7 || PlayerInfo[playerid][pMRInections] == 28) { SCM(playerid, 0x20A8A8AA, "Мэрия: (/r)adio  /free (/d)epartments (/gov)ernment"); }
						else if (PlayerInfo[playerid][pMRInections] == 11 || PlayerInfo[playerid][pLRInections] == 11) { SCM(playerid, 0x20A8A8AA, "Инструкторы: (/r)adio (/d)epartments (/gov)ernment /tazer"); SCM(playerid, 0x20A8A8AA, "Инструкторы: /take ([?]Двойной клик по нику через TAB)"); }
						else if (PlayerInfo[playerid][pMRInections] == 26 || PlayerInfo[playerid][pLRInections] == 26)
						{
							SCM(playerid,0x83BFBFAA, "<> (/pa)arlament (/gov)ernment (/d)epartments");
							SCM(playerid,0x83BFBFAA, "<> /am арест(в любом месте) /cuff /uncuff");
							SCM(playerid,0x83BFBFAA, "<> /bizlock - Открыть/закрыть бизнес");
						}
						else if (IsAGang(playerid))
						{
							SCM(playerid, 0x20A8A8AA, "<> (/f)amily  /loadmaterials /selldrugs /sellzone /maskb /gunlist / capture");
							SCM(playerid, 0x20A8A8AA, "<> /unloading /get guns /keys /gmenu /members /switchskin");
							SCM(playerid, 0x20A8A8AA, "<> Замы: /invite /uninvite");
							SCM(playerid, 0x20A8A8AA, "<> Банк банды: /gbank /gbankput /gbankwithdraw");
							SCM(playerid, 0x20A8A8AA, "<> Гетто: /sellgun /robhouse");
						}
					}
				case 5:
					{
						if(PlayerInfo[playerid][pLRInections] == 1 || PlayerInfo[playerid][pLRInections] == 2 || PlayerInfo[playerid][pLRInections] == 21) SCM(playerid, 0x20A8A8AA, "<> /iinvite - Перевести из армии/пд");
						if(PlayerInfo[playerid][pLRInections] >= 1) SCM(playerid, 0x20A8A8AA, "<> /lmenu - Меню лидера /invite - Принять игрока /giverank - Повысить/Понизить игрока /uninvite - Уволить игрока");
					}
				case 6:
					{
						SCM(playerid,0x20A8A8AA,"<> /hmenu - Главное меню(Настройки дома)");
						SCM(playerid,0x20A8A8AA,"<> /home - Поставить метку у дома (GPS)");
						SCM(playerid,0x20A8A8AA,"<> /healm - Использовать аптечку");
						SCM(playerid,0x20A8A8AA,"<> /exit - выйти из дома");
					}
				case 7:
					{
						if(PlayerInfo[playerid][pFuelBiz] != -1) return SCM(playerid,0x20A8A8AA,"{009BFF}/filling {FEFEFE}- Основное меню управления заправкой.");
						else if(PlayerInfo[playerid][pBusiness] != -1) return SCM(playerid,0x20A8A8AA,"{009BFF}/business {FEFEFE}- Основное меню управления бизнесом.");
					}
				case 8:
					{
						SCM(playerid,0x20A8A8AA,"{009BFF}/carpass {FEFEFE}- посмотреть документы на машину");
						SCM(playerid,0x20A8A8AA,"{009BFF}/showcarpass {FEFEFE}- показать документы на машину");
						SCM(playerid,0x20A8A8AA,"{009BFF}/sellcar {FEFEFE}- продать машину");
						SCM(playerid,0x20A8A8AA,"{009BFF}/fixcar {FEFEFE}- машину к дому");
						SCM(playerid,0x20A8A8AA,"{009BFF}/fill {FEFEFE}- заправить машину");
						SCM(playerid,0x20A8A8AA,"{009BFF}/changecar {FEFEFE}- продать машину игроку");
						SCM(playerid,0x20A8A8AA,"{009BFF}/fillcar {FEFEFE}- заправить машину с канистры");
						SCM(playerid,0x20A8A8AA,"{009BFF}/get 'fuel' {FEFEFE}- купить канистру");
					}
				case 9:
					{
						if(PlayerInfo[playerid][pCar][0] != 508) return 1;
						SCM(playerid, 0x20A8A8AA,"<> /dhouse - Узнать местоположение Вашего дома на колесах.");
						SCM(playerid, 0x20A8A8AA,"<> /lock - Открыть / Закрыть свой дом.");
						SCM(playerid, 0x20A8A8AA,"<> /spawnchange - Сменить место появления.");
					}
				case 10:
					{
						if(!player_family[playerid]) return 1;
						SCM(playerid,0x20A8A8AA,"<> /familypanel - Главное меню управления семьей.");
						SCM(playerid,0x20A8A8AA,"<> /k - Общий чат семьи.");
						SCM(playerid,0x20A8A8AA,"<> /finvite - Принять игрока в семью.");
						SCM(playerid,0x20A8A8AA,"<> /funinvite - Уволить игрока из семьи.");
					}
				case 11:
					{
						if(PlayerInfo[playerid][pHotel] == -1) return 1;
						SCM(playerid, 0x20A8A8AA, "<> /Комната в отеле - Главное меню управления комнатой в отеле.");
						SCM(playerid, 0x20A8A8AA, "<> /sellКомната в отеле - Здать ключи от комнаты на вахту.");
					}

				}
			}
			else return cmd::mm(playerid);
		}
		//
	case 5346:
		{
			if(response)
			{
				if(!strlen(inputtext)) return SPD(playerid, 5346, DIALOG_STYLE_INPUT,"{FF6F00}Выдача оружия", "{FFFFFF}Введите ID оружия и патроны | Через запятую:", "Выдать", "Закрыть");
				else if(strfind(inputtext,",", true) != -1)
				{
					new razdel[2];
					sscanf(inputtext,"p<,>ii",razdel[0],razdel[1]);
					if(razdel[0] == 9 || razdel[0] == 26 || razdel[0] == 16 || razdel[0] == 27 || razdel[0] == 37 || razdel[0] == 38 || razdel[0] == 35 ||
							razdel[0] == 36 || razdel[0] == 39 || razdel[0] == 44 || razdel[0] == 45) return SCM(playerid, COLOR_GRAD1, "Нельзя выдавать запрещенное оружие");
					foreach(new i: Player)
					{
						GivePlayerWeaponAC(playerid, razdel[0], razdel[1]);
						if(GetDistanceBetweenPlayers(playerid,i) < 50 && playerid != i)
						{
							GivePlayerWeaponAC(i, razdel[0], razdel[1]);
							SCM(i, COLOR_YELLOW, "Администратор: выдал вам оружие");
						}
					}
				}
			}
		}
	case 5343:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(PlayerInfo[playerid][bAdmin] < 13) return 1;
					SPD(playerid, 5344, DIALOG_STYLE_INPUT,"{FF6F00}Создание МП", "{FFFFFF}Введите название мероприятия:", "Готово", "Закрыть");
				}
			case 1:
				{
					if(PlayerInfo[playerid][bAdmin] < 4) return 1;
					SPD(playerid, 5346, DIALOG_STYLE_INPUT,"{FF6F00}Выдача оружия", "{FFFFFF}Введите ID оружия и патроны | Через запятую:", "Выдать", "Закрыть");
				}
			case 2:
				{
					foreach(new i: Player)
					{
						if(GetDistanceBetweenPlayers(playerid,i) < 50 && playerid != i) { SetPlayerHealthAC(i, 100); SetPlayerArmourAC(i, 0); SCM(i, COLOR_YELLOW, "Администратор выдал вам жизни");}
					}
				}
			case 3:
				{
					foreach(new i: Player)
					{
						if(GetDistanceBetweenPlayers(playerid,i) < 50 && playerid != i)
						{
							ResetPlayerWeapons(i); SCM(i, COLOR_YELLOW, "Администратор забрал у вас оружие");
						}
					}
				}
			case 4:
				{
					foreach(new i: Player)
					{
						if(GetDistanceBetweenPlayers(playerid,i) < 10 && playerid != i) { SetPlayerColor(i,COLOR_RED); }
					}
				}
			case 5:
				{
					foreach(new i: Player)
					{
						if(GetDistanceBetweenPlayers(playerid,i) < 10 && playerid != i) { SetPlayerColor(i,COLOR_GREEN); }
					}
				}
			}
		}
	case 5344:
		{
			if(response)
			{
				if(!strlen(inputtext)) return SPD(playerid, 5344, DIALOG_STYLE_INPUT,"Создание МП", "Введите название мероприятия:", "Готово", "Закрыть");
				foreach(new i: Player)
				{
					format(stringer1,MAX_STR, "{FFFFFF}Основатель {FF6F00}%s{FFFFFF} создал мероприятие {FF6F00}%s\n\n{FFFFFF}Для участия нажмите Принять или Отклонить",PlayerInfo[playerid][pNames], (inputtext));
					SPD(i,5345, DIALOG_STYLE_MSGBOX,"{FF6F00}Мероприятие", stringer1, "Принять", "Отклонить");
					PlayerAdminMP = playerid;
				}
			}
		}
	case 5345:
		{
			if(!response) return 1;
			if(!IsPlayerConnected(PlayerAdminMP)) return 1;
			new Float:plocx,Float:plocy,Float:plocz;
			GetPlayerPos(PlayerAdminMP, plocx, plocy, plocz);
			SetPlayerPosEx(playerid,plocx,plocy+2, plocz);
			SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(PlayerAdminMP));
			SetPlayerInterior(playerid, GetPlayerInterior(PlayerAdminMP));
			PlayerInfo[playerid][pInt] = GetPlayerInterior(PlayerAdminMP);
			SCM(playerid,COLOR_ORANGE,"Вы были успешно телепортированы!");
			SCM(playerid,COLOR_ORANGE,"Соблюдайте спокойствие на мероприятии во избежание кика.");
		}
	case 1012:
		{
			if(!response) return 1;
			if(!strcmp(inputtext,"/time",true)) { SCM(playerid, COLOR_YELLOW2,"<> /time  - узнать время"); }
			else if(!strcmp(inputtext,"/gps",true)) { SCM(playerid, COLOR_YELLOW2,"<> /gps  - навигатор"); }
			else if(!strcmp(inputtext,"/viphelp",true)) { SCM(playerid, COLOR_YELLOW2,"<> /viphelp  - помощь по Vip функциям"); }
			else if(!strcmp(inputtext,"/drink",true)) { SCM(playerid, COLOR_YELLOW2,"<> /drink  - выпить"); }
			else if(!strcmp(inputtext,"/directory",true)) { SCM(playerid, COLOR_YELLOW2,"<> /directory  - справочник"); }
			else if(!strcmp(inputtext,"/eject",true)) { SCM(playerid, COLOR_YELLOW2,"<> /eject  - выбросить из машины"); }
			else if(!strcmp(inputtext,"/dice",true)) { SCM(playerid, COLOR_YELLOW2,"<> /dice  - бросить кости"); }
			else if(!strcmp(inputtext,"/clist",true)) { SCM(playerid, COLOR_YELLOW2,"<> /clist - цвета"); }
			else if(!strcmp(inputtext,"/usedrugs",true)) { SCM(playerid, COLOR_YELLOW2,"<> /usedrugs - употребить нарко"); }
			else if(!strcmp(inputtext,"/showpass",true)) { SCM(playerid, COLOR_YELLOW2,"<> /showpass - показать паспорт"); }
			else if(!strcmp(inputtext,"/id",true)) { SCM(playerid, COLOR_YELLOW2,"<> /id - узнать id игрока"); }
			else if(!strcmp(inputtext,"/o",true)) { SCM(playerid, COLOR_YELLOW2,"<> (/o)oc - Глобальный чат"); }
			else if(!strcmp(inputtext,"/ad",true)) { SCM(playerid,COLOR_YELLOW2,"<> (/ad)vertise - Объявление"); }
			else if(!strcmp(inputtext,"/gov",true)) { SCM(playerid,COLOR_YELLOW2,"<> (/gov)erment - Государственные новости"); }
			else if(!strcmp(inputtext,"/f",true)) { SCM(playerid,COLOR_YELLOW2,"<> (/f)amily - Чат организации"); }
			else if(!strcmp(inputtext,"/s",true)) { SCM(playerid,COLOR_YELLOW2,"<> (/s)hout - Крик"); }
			else if(!strcmp(inputtext,"/m",true)) { SCM(playerid,COLOR_YELLOW2,"<> (/m)egaphone - Мегафон на служебном транспорте"); }
			else if(!strcmp(inputtext,"/r",true)) { SCM(playerid,COLOR_YELLOW2,"<> (/r)adio - Чат государственных организаций (Полиция/ФБР и т.д)"); }
			else if(!strcmp(inputtext,"/d",true)) { SCM(playerid,COLOR_YELLOW2,"<> (/d)epartaments - Общий чат государственных организаций"); }
			else if(!strcmp(inputtext,"/me",true)) { SCM(playerid,COLOR_YELLOW2,"<> (/me) - Действие (Пример: Имя_Фамилия пожал руку)"); }
			else if(!strcmp(inputtext,"/call",true)) { SCM(playerid,COLOR_YELLOW2,"<> /call - Позвонить (Номер телефона можно узнать через /number)"); }
			else if(!strcmp(inputtext,"/sms",true)) { SCM(playerid,COLOR_YELLOW2,"<> /sms - Отправить СМС сообщение"); }
			else if(!strcmp(inputtext,"/number",true)) { SCM(playerid,COLOR_YELLOW2,"<> /number - узнать номер игрока"); }
			else if(!strcmp(inputtext,"/h",true)) { SCM(playerid,COLOR_YELLOW2,"<> (/h)angup - Завершить телефонный разговор"); }
			else if(!strcmp(inputtext,"/p",true)) { SCM(playerid,COLOR_YELLOW2,"<> (/p)ickup - Ответить на звонок"); }
			else if(!strcmp(inputtext,"/togphone",true)) { SCM(playerid,COLOR_YELLOW2,"<> togphone - выкл. телефон"); }
			else if(!strcmp(inputtext,"/hmenu",true)) { SCM(playerid,COLOR_YELLOW2,"<> /hmenu - Главное меню(Настройки дома)"); }
			else if(!strcmp(inputtext,"/home",true)) { SCM(playerid,COLOR_YELLOW2,"<> /home - Поставить метку у дома (GPS)"); }
			else if(!strcmp(inputtext,"/spawnchange",true)) { SCM(playerid,COLOR_YELLOW2,"<> /spawnchange - Сменить респавн(Возрождение) ДОМ <==> База организации"); }
			else if(!strcmp(inputtext,"/healm",true)) { SCM(playerid,COLOR_YELLOW2,"<> /healm - Использовать аптечку"); }
			else if(!strcmp(inputtext,"/buybiz",true)) { SCM(playerid,COLOR_YELLOW2,"<> /buybiz - Купить бизнес"); }
			else if(!strcmp(inputtext,"/changehouse",true)) { SCM(playerid,COLOR_YELLOW2,"<> /changehouse - Продать дом другому человеку или же совершить обмен."); }
			else if(!strcmp(inputtext,"/invite",true)) { SCM(playerid,COLOR_YELLOW2,"<> /invite - Пригласить человека во фракцию"); }
			else if(!strcmp(inputtext,"/uninvite",true)) { SCM(playerid,COLOR_YELLOW2,"<> /uninvite - Выгнать человека из фракции"); }
			else if(!strcmp(inputtext,"/giverank",true)) { SCM(playerid,COLOR_YELLOW2,"<> /giverank - Повысить/Понизить игрока в ранге"); }
			else if(!strcmp(inputtext,"/tie",true)) { SCM(playerid,COLOR_YELLOW2,"<> /tie - Связать заложника. Доступно только мафиям"); }
			else if(!strcmp(inputtext,"/untie",true)) { SCM(playerid,COLOR_YELLOW2,"<> /untie - Развязать заложника. Доступно только мафиям"); }
			else if(!strcmp(inputtext,"/heal",true)) { SCM(playerid,COLOR_YELLOW2,"<> /heal - Вылечить человека в карете скорой помощи. Доступно только медикам"); }
			else if(!strcmp(inputtext,"/getweapon",true)) { SCM(playerid,COLOR_YELLOW2,"<> /getweapon - Взять оружие со склада мафии"); }
			else if(!strcmp(inputtext,"/mafiabalance",true)) { SCM(playerid,COLOR_YELLOW2,"<> /mafiabalance - Проверить счёт мафии в банке"); }
			else if(!strcmp(inputtext,"/mafiawithdraw",true)) { SCM(playerid,COLOR_YELLOW2,"<> /mafiawithdraw - Снять деньги со счёта мафии"); }
			else if(!strcmp(inputtext,"/mafiabankput",true)) { SCM(playerid,COLOR_YELLOW2,"<> /mafiabankput - Положить деньги на счёт мафии"); }
			else if(!strcmp(inputtext,"/ram",true)) { SCM(playerid,COLOR_YELLOW2,"<> /ram - Выбить дверь. Только законники"); }
			else if(!strcmp(inputtext,"/cuff",true)) { SCM(playerid,COLOR_YELLOW2,"<> /cuff - Надеть наручники. Только законники"); }
			else if(!strcmp(inputtext,"/uncuff",true)) { SCM(playerid,COLOR_YELLOW2,"<> /uncuff - Снять наручники. Только законники"); }
			else if(!strcmp(inputtext,"/givecopkeys",true)) { SCM(playerid,COLOR_YELLOW2,"<> /givecopkeys - Выдать ключи от полицейского участка"); }
			else if(!strcmp(inputtext,"/arrest",true)) { SCM(playerid,COLOR_YELLOW2,"<> /arrest - Посадить преступника в камеру. Необходимо находиться в здании тюрьмы"); }
			else if(!strcmp(inputtext,"/warehouse",true)) { SCM(playerid,COLOR_YELLOW2,"<> /warehouse - Проверить склад организации"); }
			else if(!strcmp(inputtext,"/take",true)) { SCM(playerid,COLOR_YELLOW2,"<> /take - Отобрать у человека запрещённые предметы. Только законники"); }
			else if(!strcmp(inputtext,"/frisk",true)) { SCM(playerid,COLOR_YELLOW2,"<> /frisk - Обыскать человека на запрещённые предметы. Только законники"); }
			else if(!strcmp(inputtext,"/su",true)) { SCM(playerid,COLOR_YELLOW2,"<> /(su)spect - Добавить человека в список разыскиваемых. Только законники"); }
			else if(!strcmp(inputtext,"/suspect",true)) { SCM(playerid,COLOR_YELLOW2,"<> /(su)spect - Добавить человека в список разыскиваемых. Только законники"); }
			else if(!strcmp(inputtext,"/tazer",true)) { SCM(playerid,COLOR_YELLOW2,"<> /tazer - Оглушить человека. Только законники"); }
			else if(!strcmp(inputtext,"/wanted",true)) { SCM(playerid,COLOR_YELLOW2,"<> /wanted - Посмотреть список разыскиваемых. Только законники"); }
			else if(!strcmp(inputtext,"/patrul",true)) { SCM(playerid,COLOR_YELLOW2,"<> /patrul - Начать преследование преступников."); }
			else if(!strcmp(inputtext,"/demote",true)) { SCM(playerid,COLOR_YELLOW2,"<> /demote - Понизить/Уволить законника. Только для ФБР"); }
			else if(!strcmp(inputtext,"/gbank",true)) { SCM(playerid,COLOR_YELLOW2,"<> /gbank - Проверить счёт мафии в банке"); }
			else if(!strcmp(inputtext,"/gbankput",true)) { SCM(playerid,COLOR_YELLOW2,"<> /gbankput - Положить деньги на счёт банды"); }
			else if(!strcmp(inputtext,"/gbankwhisdraw",true)) { SCM(playerid,COLOR_YELLOW2,"<> /gbankwhisdraw - Снять деньги со счёта банды"); }
			else if(!strcmp(inputtext,"/maskb",true)) { SCM(playerid,COLOR_YELLOW2,"<> /maskb - Одеть маску. Только для бандитов"); }
			else if(!strcmp(inputtext,"/bizwar",true)) { SCM(playerid,COLOR_YELLOW2,"<> /bizwar - Назначить стрелу"); }
			else if(!strcmp(inputtext,"/mcontract",true)) { SCM(playerid,COLOR_YELLOW2,"<> /mcontract - Заключить контракт с заправкой. Механики"); }
			else if(!strcmp(inputtext,"/clear",true)) { SCM(playerid,COLOR_YELLOW2,"<> /clear - Снять розыск. Только для законников"); }
			else if(!strcmp(inputtext,"/refill",true)) { SCM(playerid,COLOR_YELLOW2,"<> /refill - Заправить автомобиль топливом. Для механников"); }
			else if(!strcmp(inputtext,"/load",true)) { SCM(playerid,COLOR_YELLOW2,"<> /load - Загрузить продукты. Для развозчиков"); }
			else if(!strcmp(inputtext,"/repair",true)) { SCM(playerid,COLOR_YELLOW2,"<> /repair - Подчинить повреждённый автомобиль. Для механников"); }
			else if(!strcmp(inputtext,"/fixcar",true)) { SCM(playerid,COLOR_YELLOW2,"<> /fixcar - Отбуксировать домашний автомобиль к дому"); }
			else if(!strcmp(inputtext,"/sellprodz",true)) { SCM(playerid,COLOR_YELLOW2,"<> /sellprodz -  Выгрузить продукты. Для развозчиков"); }
			else if(!strcmp(inputtext,"/newsbank",true)) { SCM(playerid,COLOR_YELLOW2,"<> /newsbank -  Баланс денежных средств в News"); }
			return 1;
		}
	case 9653:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][pMRInections] != 19 && proverkaforma{playerid} != true) return 1;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SCM(playerid,COLOR_GREY, "Вы не в матовозе!");
			switch(listitem)
			{
				case 0:
				{
					SCM(playerid,COLOR_GREEN, "Встаньте на красный маркер, чтобы заполнить грузовик материалами!");
					SetPlayerCheckpoint(playerid,335.9255,1994.7932,17.6406,8.0);
					MatsArmyCar[playerid] = 20;
					return 1;
				}
				case 1:
				{
					if(!PlayerToPoint(10.0,playerid,334.9307,1962.9658,17.6406)) return	SCM(playerid,COLOR_GREY, "Вы не у разгрузочной зоны!");
					new tmpcar = GetPlayerVehicleID(playerid);
					if(MatHaul[tmpcar-matscar[0]][mLoad] <= 0) return SCM(playerid, COLOR_GREY, "В матовозе нет оружия!");
					armmatbi += MatHaul[tmpcar-matscar[0]][mLoad];
					MatHaul[tmpcar-matscar[0]][mLoad] = 0;
					format(stringer,SMALL_SIZE, "Материалы выгруженны! В грузовике: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
					SCM(playerid, TEAM_GROVE_COLOR, stringer);
					SaveMaterials();
					Update3DTextsArmy();
					return 1;
				}
				case 2:
				{
					SetPlayerCheckpoint(playerid,-1601.8774,309.4032,7.1875,6.0);
					SCM(playerid, COLOR_WHITE, "Метка на карте указана в виде красного маркера");
					MatsArmyCar[playerid]=21;
					return 1;
				}
				case 3:
				{
					SetPlayerCheckpoint(playerid,1529.6000,-1691.2000,13.3828,6.0);
					MatsArmyCar[playerid]=31;//ЛСПД
					return 1;
				}
				case 4:
				{
					SetPlayerCheckpoint(playerid,-2497.7634,-679.8572,139.3203,6.0);
					MatsArmyCar[playerid]=24;
					return 1;
				}//fbi
				case 5:
				{
					SetPlayerCheckpoint(playerid,-1607.2913,683.5955,-5.2422,6.0);
					MatsArmyCar[playerid]=35;
					return 1;
				}//sfpd
				case 6: return SPD(playerid, 3232, DIALOG_STYLE_LIST, "{FF6F00}Развозка материалов бандам", "{FFFFFF}- Разгрузка The Ballas\n- Разгрузка The Vagos\n- Разгрузка The Grove\n- Разгрузка The Aztek\n- Разгрузка The Rifa", "Выбрать", "Отмена");
				case 7:
				{
					SetPlayerCheckpoint(playerid,2292.0837,2458.9941,10.8203,6.0);
					MatsArmyCar[playerid]=150;//lvpd
					return 1;
				}
				case 8:
				{
				    SetPlayerCheckpoint(playerid, -2256.0908,2359.8477,5.4153, 6.0);
				    MatsArmyCar[playerid] = 228;
				}
			}
		}
	case 3232:
		{
			if(!response) return 1;
			if (PlayerInfo[playerid][pMRInections] != 19 && proverkaforma{playerid} != true) return 1;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return     SCM(playerid,COLOR_GREY,"Вы не в матовозе!");
			switch(listitem)
			{
				case 0:
				{
					SetPlayerCheckpoint(playerid,2645.9717,-2005.8618,13.3828,6.0);
					MatsArmyCar[playerid]= 100;
					return 1;
				}
				case 1:
				{
					SetPlayerCheckpoint(playerid,2641.8540,-1084.0514,69.4531,6.0);
					MatsArmyCar[playerid]= 101;
					return 1;
				}
				case 2:
				{
					SetPlayerCheckpoint(playerid,2489.2656,-1670.0692,13.3359,6.0);
					MatsArmyCar[playerid]= 102;
					return 1;
				}
				case 3:
				{
					SetPlayerCheckpoint(playerid,1715.4744,-2112.1699,13.3828,6.0);
					MatsArmyCar[playerid]= 103;
					return 1;
				}
				case 4:
				{
					SetPlayerCheckpoint(playerid,2176.5503,-1803.5483,13.3692,6.0);
					MatsArmyCar[playerid]= 104;
					return 1;
				}
			}
		}
	case 2233:
		{
			if(!response)
			{
				new rubdonate[64];
				format(rubdonate, sizeof rubdonate, "{FF6F00}На Вашем счету: %i рублей",PlayerInfo[playerid][pRubInfo][0]);
				return SPD(playerid, 9771, DIALOG_STYLE_LIST, rubdonate, "{FF6F00}» {FFFFFF}Информация о моем счёте\n{FF6F00}» {FFFFFF}Приобретение VIP статуса\n{FF6F00}» {FFFFFF}Снятие предупреждения (1 WARN - 50 | 2 WARN - 100)\n{FF6F00}» {ffffff}Смена игрового Ник-Нейма (20 RUB)\n{FF6F00}» {FFFFFF}Админ-привелегии\n{FF6F00}» {FFFFFF}Прокачка персонажа\n{FF6F00}» {FFFFFF}Покупка прав хелпера\n{FF6F00}» {FFFFFF}Проверить поступления платежей (Баланс)", "Выбрать","Выход");
			}
			new donatemoney[64];
			format(donatemoney,sizeof donatemoney,"{FF6F00}На Вашем счету: %i DonateMoney",PlayerInfo[playerid][pDMInections]);
			return SPD(playerid, 26363, DIALOG_STYLE_LIST, donatemoney, "{FF6F00}» {FFFFFF}Игровая валюта\n{FF6F00}» {FFFFFF}Улучшения для персонажа\n{FF6F00}» {FFFFFF}Покупка всех скиллов оружия", "Выбрать", "Назад");
		}
	case 9771:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
				   	stringer = "";
				   	format(stringer, 200, "{FFFFFF}Ваше игровое имя: {FF6F00}%s{FFFFFF}\nВаш баланс: {FF6F00}%i{FFFFFF} (RUR - Рублей)\n\nПополнить баланс Вашего счета можно на нашем сайте: {FF6F00}forum.inspire-rp.ru{FFFFFF}\n",PlayerInfo[playerid][pNames], PlayerInfo[playerid][pRubInfo][0]);
					strcat(stringer,"Зачисление денежных средств - моментальное.\n\nПополнение счета дает Вам возможность воспользоватся дополнительными услугами:\n");
					strcat(stringer,"- Приобретение VIP статуса\n- Возможность писать VIP объявления, пользоваться дополнительными командами и функциями.\n");
					strcat(stringer,"- Повышение игрового уровня\n");
					strcat(stringer,"- Покупка Админ прав, или же прав Помощника игрового сервера\n");
					strcat(stringer,"- Инвестирование рублей: \n");
					strcat(stringer,"  - Данная функция предоставляется Вам на 5 дней, после чего, она будет изъята.\n");
					strcat(stringer,"  - За эти пять дней, в каждый PayDay Вы получаете рандом рубли на Ваш баланс.\n");
					strcat(stringer,"- Снятия предупреждения (WARN)\n");
					strcat(stringer,"- Покупка прав помощника. (Helpers)\n");
					strcat(stringer,"- Смена игрового имени. (Nick_Name)\n\n");
					strcat(stringer,"{FF6F00}\t\t\tINSPIRE ROLE PLAY");
					SPD(playerid, 1019, DIALOG_STYLE_MSGBOX, "{FF6F00}Информация о Вашем счёте:", stringer, "Скрыть","");
				}
				case 1: SPD(playerid, 26366, DIALOG_STYLE_LIST, "{FF6F00}Приобретение VIP статуса", "{FF6F00}» {FFFFFF}Bronze VIP\t\t\t\t[10 RUB]\n{FF6F00}» {FFFFFF}Silver VIP\t\t\t\t\t[20 RUB]\n{FF6F00}» {FFFFFF}Gold VIP\t\t\t\t\t[50 RUB]\n{FF6F00}» {FFFFFF}Gold VIP | Навсегда [55 RUB]", "Выбрать", "Закрыть");
				case 2:
				{
					if(PlayerInfo[playerid][pWarns] <= 0) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет варнов");
					if(PlayerInfo[playerid][pWarns] == 1) SetPVarInt(playerid, "cWarn", 50);
					else if(PlayerInfo[playerid][pWarns] == 2) SetPVarInt(playerid, "cWarn", 100);
					format(stringer, 200, "{FFFFFF}Игровой ник: %s\nКоличество варнов: %d\n\nДля снятия предупреждения Вам потребуется: %i рублей\n\nНажмите клавишу продолжить, если хотите снять предупреждение.",PlayerInfo[playerid][pNames],PlayerInfo[playerid][pWarns],GetPVarInt(playerid, "cWarn"));
					SPD(playerid, 3938, DIALOG_STYLE_MSGBOX, "{FF6F00}Снятие варна", stringer, "Продолжить","Выход");
				}
				case 3:
				{
					if(PlayerInfo[playerid][bAdmin] > 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Администрации запрещено менять NickName");
					SPD(playerid, 9943, DIALOG_STYLE_INPUT, "{FF6F00}Смена игрового ник нейма", "{FFFFFF}Для смены Ник Нейма Вы должны ввести в поле новый Nick Name.\n\nУбедитесь, что введенный Вами Ник Нейм правильный, дабы избежать неприятных ситуаций.", "Отправить", "Назад");
				}
				case 4: SPD(playerid, 9397, DIALOG_STYLE_LIST, "{FF6F00}Админ-права", "{FFFFFF}Покупка админ-прав\nПовысить свой уровень админ-прав(До 9 - 150 руб | После 9 - 300 руб)","Выбрать","Выход");
				case 5: SPD(playerid, 9909, DIALOG_STYLE_LIST, "{FF6F00}Прокачка персонажа","{FFFFFF}Покупка игрового уровня\nИнвестирование рублей","Выбрать","Выход");
				case 6: SPD(playerid, 9998, DIALOG_STYLE_LIST, "{FF6F00}Покупка прав хелпера", "{FFFFFF}1 уровень [30 RUB]\n2 уровень [50 RUB]\n3 уровень [75 RUB]\n4 уровень [110 RUB]\n5 уровень [150 RUB]\n6 уровень [200 RUB]\n7 уровень [300 RUB]\n8 уровень [350 RUB]\nПовысить уровень (имеющейся хелперки) [до 4 - 100 RUB | от 4 - 200 RUB]", "Купить", "Выход");
				case 7: SCMF(playerid, COLOR_BLUE, "Ваш баланс составляет: %i рублей.", PlayerInfo[playerid][pRubInfo][0]);
			}
		}
	case 9909:
	{
	    if(!response) return 1;
	    switch(listitem)
	    {
	        case 0: SPD(playerid, 1747, DIALOG_STYLE_LIST, "{FF6F00}Покупка игрового уровня", "{FFFFFF}+1 уровень - 10 рублей\n+5 уровней - 45 рублей\n+10 уровней - 80 рублей", "Купить", "Выход");
	        case 1: SPD(playerid, 1748, DIALOG_STYLE_LIST, "{FF6F00}Инвестирование рублей", "{FFFFFF}#1В - от 2 до 4 рублей за час [100 RUB | 5 ДНЕЙ]\n#2В - от 4 до 6 рублей за час [200 RUB | 5 ДНЕЙ]\n#3В - от 6 до 8 рублей за час [300 RUB | 5 ДНЕЙ]\n#4В - от 9 до 11 рублей за час [500 RUB | 5 ДНЕЙ]", "Купить", "Выход");
	    }
	}
	case 1748:
	{
	    if(!response) return 1;
	    switch(listitem)
	    {
	    	case 0: AddRubPlus(playerid, 1, 100);
			case 1: AddRubPlus(playerid, 2, 200);
			case 2: AddRubPlus(playerid, 3, 300);
			case 3: AddRubPlus(playerid, 4, 500);
		}
	}
	case 1747:
	{
	    if(!response) return 1;
	    switch(listitem)
	    {
	        case 0:
	        {
	            if(PlayerInfo[playerid][pRubInfo][0] < 10) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас недостаточно средств.");
	            PlayerInfo[playerid][pRubInfo][0] -= 10;
	            PlayerInfo[playerid][pLevel] += 1;
	            SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	            DonateLog(playerid, 10, "+1 level");
	            SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Вы успешно приобрели один уровень.");
	        }
	        case 1:
	        {
	            if(PlayerInfo[playerid][pRubInfo][0] < 45) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас недостаточно средств.");
	            PlayerInfo[playerid][pRubInfo][0] -= 45;
	            PlayerInfo[playerid][pLevel] += 5;
	            SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	            DonateLog(playerid, 45, "+5 level");
	            SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Вы успешно приобрели пять уровней.");
	        }
	        case 2:
	        {
	            if(PlayerInfo[playerid][pRubInfo][0] < 80) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас недостаточно средств.");
	            PlayerInfo[playerid][pRubInfo][0] -= 80;
	            PlayerInfo[playerid][pLevel] += 10;
	            SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	            DonateLog(playerid, 80, "+10 level");
	            SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Вы успешно приобрели десять уровеней.");
	        }
	    }
	}
	case 9397:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: SPD(playerid, 9395, DIALOG_STYLE_LIST, "{FF6F00}Покупка Админ-Прав","{FFFFFF}1 уровень - 100 RUB\n2 уровень - 200 RUB\n3 уровень - 300 RUB\n4 уровень - 400 RUB\n5 уровень - 500 RUB\n6 уровень - 600 RUB\n7 уровень - 700 RUB\n8 уровень - 800 RUB\n9 уровень - 900 RUB\n10 уровень - 1300 RUB\n11 уровень - 1500 RUB\n12 уровень - 1800 RUB\n13 уровень - 3200 RUB", "Купить","Выход");
				case 1: AdminLevel(playerid);
			}
		}
	case 9998:
	{
	    if(!response) return 1;
	    switch(listitem)
	    {
	        case 0: AddHelper(playerid,30,1);
	        case 1: AddHelper(playerid,50,2);
	        case 2: AddHelper(playerid,75,3);
	        case 3: AddHelper(playerid,110,4);
	        case 4: AddHelper(playerid,150,5);
	        case 5: AddHelper(playerid,200,6);
	        case 6: AddHelper(playerid,300,7);
	        case 7: AddHelper(playerid,350,8);
	        case 8: HelperLevel(playerid);
	    }
	}
	case 9395:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: AddAdmin(playerid,100,1);
				case 1: AddAdmin(playerid,200,2);
				case 2: AddAdmin(playerid,300,3);
				case 3: AddAdmin(playerid,400,4);
				case 4: AddAdmin(playerid,500,5);
				case 5: AddAdmin(playerid,600,6);
				case 6: AddAdmin(playerid,700,7);
				case 7: AddAdmin(playerid,800,8);
				case 8: AddAdmin(playerid,900,9);
				case 9: AddAdmin(playerid,1200,10);
				case 10: AddAdmin(playerid,1500,11);
				case 11: AddAdmin(playerid,1800,12);
				case 12: AddAdmin(playerid,3200,13);
			}
		}
	case 3938:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][pRubInfo][0] < PlayerInfo[playerid][pWarns]*50) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно рублей");
			PlayerInfo[playerid][pRubInfo][0] -= PlayerInfo[playerid][pWarns]*50;
			DonateLog(playerid, PlayerInfo[playerid][pWarns]*50, "Снятие варна");
			SCMF(playerid, COLOR_BLUE, "Вы успешно сняли %i предупреждений(-ия) за %i рублей",PlayerInfo[playerid][pWarns], PlayerInfo[playerid][pWarns]*50);
			PlayerInfo[playerid][pWarns] -= PlayerInfo[playerid][pWarns];
			return 1;
		}
	case 26363:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					format(stringer,BIG_SIZE,"{FFFFFF}[1] Получить 0500000 вирт\t\t\t[0250 DM]\n[2] Получить 1000000 вирт\t\t\t[0400 DM]\n[3] Получить 2000000 вирт\t\t\t[0700 DM]\n[4] Получить 5000000 вирт\t\t\t[1300 DM]\n[5] Получить 10000000 вирт\t\t\t[2500 DM]\n[6] Получить 25000000 вирт\t\t\t[4000 DM]");
					SPD(playerid, 26365, DIALOG_STYLE_LIST, "{FF6F00}DonateMoney Shop", stringer, "Выбрать", "Закрыть");
				}
				case 1:
				{
					format(stringer,BIG_SIZE,"{FFFFFF}\
						[1] Заправить авто на 300 литров\t\t\t\t[0500 DM]\n\
						[2] Получить 100 законопослушности\t\t\t\t[0100 DM]\n\
					");
					SPD(playerid, 26367, DIALOG_STYLE_LIST, "{FF6F00}DonateMoney Shop", stringer, "Выбрать", "Закрыть");
				}
				case 2:
				{
					if(PlayerInfo[playerid][pDMInections] < 1200) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно DonateMoney.");
					for(new i = 0; i != 6; i ++) PlayerInfo[playerid][pSkills][i] = 100;
					SetPlayerSkills(playerid);
					PlayerInfo[playerid][pDMInections] -= 1200;
					SCM(playerid, COLOR_GREEN, "Вы успешно прокачали все скиллы за 1200 DonateMoney.");
				}
			}
		}
	case 9943:
		{
			if(!response) return cmd_donate(playerid);
			if(PlayerInfo[playerid][pRubInfo][0] < 20) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Недостаточное количество рублей.");
			if(!strlen(inputtext)) return SPD(playerid, 9943, DIALOG_STYLE_INPUT, "{FF6F00}Смена игрового ник нейма", "{FFFFFF}Для смены Ник Нейма Вы должны ввести в поле новый Nick Name.\n\nУбедитесь, что введенный Вами Ник Нейм правильный, дабы избежать неприятных ситуаций.", "Отправить", "Назад");
			if(IsTextInvalid(inputtext)) return SPD(playerid, 9943, DIALOG_STYLE_INPUT, "{FF6F00}Смена игрового ник нейма", "{FFFFFF}Для смены Ник Нейма Вы должны ввести в поле новый Nick Name.\n\nУбедитесь, что введенный Вами Ник Нейм правильный, дабы избежать неприятных ситуаций.", "Отправить", "Назад");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 24) return SPD(playerid, 9943, DIALOG_STYLE_INPUT, "{FF6F00}Смена игрового ник нейма", "{FFFFFF}Для смены Ник Нейма Вы должны ввести в поле новый Nick Name.\n\nУбедитесь, что введенный Вами Ник Нейм правильный, дабы избежать неприятных ситуаций.", "Отправить", "Назад");
			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i]){case 'А'..'Я', 'а'..'я', '=', ' ': return SPD(playerid, 9943, DIALOG_STYLE_INPUT, "{FF6F00}Смена игрового ник нейма", "{FFFFFF}Внимание! Запрещено использовать русские буквы!", "Отправить", "Назад"); }
			format(WantNickChange[playerid],24, "%s",inputtext);
			mysql_format(connects, stringer,MAX_STR, "SELECT `Name` FROM `accounts` WHERE `Name` = '%e'", WantNickChange[playerid]);
			mysql_tquery(connects, stringer, "CookTawersName", "d", playerid);
			return 1;
		}
	case 26365:
		{
			if(!response) return cmd::donate(playerid);
			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][pDMInections] < 250) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не достаточно DonateMoney!");
					GameTextForPlayer(playerid, "~r~-0250 Donate ~g~Thanks!", 5000, 1);
					PlayerInfo[playerid][pDMInections] -= 250;
					PlayerInfo[playerid][pCash] += 500000;
				}
				case 1:
				{
					if(PlayerInfo[playerid][pDMInections] < 400) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не достаточно DonateMoney!");
					GameTextForPlayer(playerid, "~r~-0400 Donate ~g~Thanks!", 5000, 1);
					PlayerInfo[playerid][pDMInections] -= 400;
					PlayerInfo[playerid][pCash] += 1000000;
				}
				case 2:
				{
					if(PlayerInfo[playerid][pDMInections] < 700) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не достаточно DonateMoney!");
					GameTextForPlayer(playerid, "~r~-0700 Donate ~g~Thanks!", 5000, 1);
					PlayerInfo[playerid][pDMInections] -= 700;
					PlayerInfo[playerid][pCash] += 2000000;
				}
				case 3:
				{
					if(PlayerInfo[playerid][pDMInections] < 1300) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не достаточно DonateMoney!");
					GameTextForPlayer(playerid, "~r~-1300 Donate ~g~Thanks!", 5000, 1);
					PlayerInfo[playerid][pDMInections] -= 1300;
					PlayerInfo[playerid][pCash] += 5000000;
				}
				case 4:
				{
					if(PlayerInfo[playerid][pDMInections] < 2500) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не достаточно DonateMoney!");
					GameTextForPlayer(playerid, "~r~-2500 Donate ~g~Thanks!", 5000, 1);
					PlayerInfo[playerid][pDMInections] -= 2500;
					PlayerInfo[playerid][pCash] += 10000000;
				}
				case 5:
				{
					if(PlayerInfo[playerid][pDMInections] < 4000) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не достаточно DonateMoney!");
					GameTextForPlayer(playerid, "~r~-4000 Donate ~g~Thanks!", 5000, 1);
					PlayerInfo[playerid][pDMInections] -= 4000;
					PlayerInfo[playerid][pCash] += 25000000;
				}
			}
		}
	case 26366:
		{
			if(!response) return cmd::donate(playerid);
			new year, month,day;
			getdate(year, month, day);
			new curdate = getdate(year,month,day);
			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][pRubInfo][0] < 10) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не достаточно рублей!");
					PlayerInfo[playerid][pVipTime] = curdate+7;
					PlayerInfo[playerid][pVipData] = curdate;
					PlayerInfo[playerid][pDRInections] = 1;
					PlayerInfo[playerid][pRubInfo][0] -= 10;
					DonateLog(playerid, 10, "Покупка VIP 1го уровня");
					GameTextForPlayer(playerid, "~r~-10 RUB ~g~Thanks!", 5000, 1);
				}
				case 1:
				{
					if(PlayerInfo[playerid][pRubInfo][0] < 20) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не достаточно рублей!");
					PlayerInfo[playerid][pVipTime] = curdate+7;
					PlayerInfo[playerid][pVipData] = curdate;
					PlayerInfo[playerid][pDRInections] = 2;
					PlayerInfo[playerid][pRubInfo][0] -= 20;
					DonateLog(playerid, 20, "Покупка VIP 2го уровня");
					GameTextForPlayer(playerid, "~r~-20 RUB ~g~Thanks!", 5000, 1);
				}
				case 2:
				{
					if(PlayerInfo[playerid][pRubInfo][0] < 50) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не достаточно рублей!");
					PlayerInfo[playerid][pVipTime] = curdate+7;
					PlayerInfo[playerid][pVipData] = curdate;
					PlayerInfo[playerid][pDRInections] = 3;
					PlayerInfo[playerid][pRubInfo][0] -= 50;
					DonateLog(playerid, 50, "Покупка VIP 3го уровня");
					GameTextForPlayer(playerid, "~r~-50 RUB ~g~Thanks!", 5000, 1);
				}
				case 3:
				{
					if(PlayerInfo[playerid][pRubInfo][0] < 55) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не достаточно рублей!");
					PlayerInfo[playerid][pDRInections] = 3;
					PlayerInfo[playerid][pRubInfo][0] -= 55;
					DonateLog(playerid, 55, "Покупка VIP 3го уровня навсегда");
					GameTextForPlayer(playerid, "~r~-55 RUB ~g~Thanks!", 5000, 1);
				}
			}
		}
	case 26367:
		{
			if(!response) return cmd::donate(playerid);
			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][pDMInections] < 500) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не достаточно DonateMoney!");
					VehInfo[GetPlayerVehicleID(playerid)][vFuel] = 50;
					PlayerInfo[playerid][pFuelcar] = 300;
					PlayerInfo[playerid][pDMInections] -= 500;
					GameTextForPlayer(playerid, "~r~-0500 Donate ~g~Thanks!", 5000, 1);
				}
				case 1:
				{
					if(PlayerInfo[playerid][pDMInections] < 100) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не достаточно DonateMoney!");
					PlayerInfo[playerid][pDMInections] -= 100;
					PlayerInfo[playerid][pZakonp] = 100;
					GameTextForPlayer(playerid, "~r~-0100 Donate ~g~Thanks!", 5000, 1);
				}
			}
		}
	case 9624:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: SPD(playerid, 9625, DIALOG_STYLE_LIST, "{FF6F00}Общественные места", "{FF6F00}» {FFFFFF}Мэрия Los Santos\n{FF6F00}» {FFFFFF}Автовокзал\n{FF6F00}» {FFFFFF}Оружейный магазин\n{FF6F00}» {FFFFFF}Автошкола\n{FF6F00}» {FFFFFF}Магазин одежды LS\n{FF6F00}» {FFFFFF}Магазин одежды SF\n{FF6F00}» {FFFFFF}Банк Лос Сантос\n{FF6F00}» {FFFFFF}Церковь г.Los-Santos\n{FF6F00}» {FFFFFF}Стоянка автобусов [#1]", "Выбрать", "Назад");
				case 1: SPD(playerid, 9626, DIALOG_STYLE_LIST, "{FF6F00}Клубы", "{FF6F00}» {FFFFFF}Jizzy Club\n{FF6F00}» {FFFFFF}Alhambra Club\n{FF6F00}» {FFFFFF}Mitsy Club\n{FF6F00}» {FFFFFF}Pig Pen Club", "Выбрать", "Назад");
				case 2: SPD(playerid, 9627, DIALOG_STYLE_LIST, "{FF6F00}Автосалоны/Бизнесы", "{FF6F00}» {FFFFFF}Автосалон (Nope класс)\n{FF6F00}» {FFFFFF}Автосалон (A класс)\n{FF6F00}» {FFFFFF}Автосалон (B класс)\n{FF6F00}» {FFFFFF}Магазин: Автозапчасти\n{FF6F00}» {FFFFFF}Магазин: Пиротехника", "Выбрать", "Назад");
				case 3: SPD(playerid, 9629, DIALOG_STYLE_LIST, "{FF6F00}Развлечения", "{FF6F00}» {FFFFFF}Counter Strike\n{FF6F00}» {FFFFFF}Казино LS\n{FF6F00}» {FFFFFF}Гонки\n{FF6F00}» {FFFFFF}Бейсджампинг", "Выбрать", "Назад");
				case 4: SPD(playerid, 9630, DIALOG_STYLE_LIST, "{FF6F00}Нелегальные организации", "{FF6F00}» {FFFFFF}The Ballas Gang\n{FF6F00}» {FFFFFF}The Grove Street\n{FF6F00}» {FFFFFF}The Rifa Gang\n{FF6F00}» {FFFFFF}The Aztecas Gang\n{FF6F00}» {FFFFFF}The Vagos Gang\n{FF6F00}» {FFFFFF}La Cosa Nostra\n{FF6F00}» {FFFFFF}Russian Mafia\n{FF6F00}» {FFFFFF}Yakuza", "Выбрать","Назад");
				case 5:
				{
					SetPlayerCheckpoint(playerid, 1953.2566,-2123.9580,13.5469, 3.0);
					SetPVarInt(playerid, "playerisGPS", 1);
					SCM(playerid, COLOR_WHITE, "{FFFFFF}GPS-Навигатор{FF6F00} Дом на колесах{FFFFFF} Метка успешно установлена на карте.");
				}
				case 6: SPD(playerid, 9633, DIALOG_STYLE_LIST, "{FF6F00}Автомастерские", "{FF6F00}» {FFFFFF}Автомастерская [Los Santos - Мэрия Los Santos]\n{FF6F00}» {FFFFFF}Автомастерская [Los-Santos - VineWood]\n{FF6F00}» {FFFFFF}Автомастерская [Los-Santos - Ghetto | NEW]", "Выбрать", "Назад");
				case 7:
				{
					SetPlayerCheckpoint(playerid, 617.7474,-1458.5245,14.4316, 3.0);
					SetPVarInt(playerid, "playerisGPS", 1);
					SCM(playerid, COLOR_WHITE, "GPS-Навигатор{FF6F00} Центральный отель{FFFFFF} Метка успешно установлена на карте.");
				}
				case 8: SPD(playerid, 9634, DIALOG_STYLE_LIST, "{FF6F00}Магазины аксессуаров", "{FF6F00}» {FFFFFF}Accessories Shop LS\n{FF6F00}» {FFFFFF}Accessories Shop SF\n{FF6F00}» {FFFFFF}Accessories Shop LV", "Выбрать", "Назад");
				case 9: SPD(playerid, 9635, DIALOG_STYLE_LIST, "{FF6F00}Военкоматы", "{FF6F00}» {FFFFFF}Военкомат г.Los-Santos\n{FF6F00}» {FFFFFF}Военкомат г.Las-Venturas", "Выбрать", "Назад");
				case 10: SPD(playerid, 9636, DIALOG_STYLE_LIST, "{FF6F00}Работы", "{FF6F00}» {FFFFFF}Лесопилка\n{FF6F00}» {FFFFFF}Мойщик окон\n{FF6F00}» {FFFFFF}Шахтер", "Выбрать", "Назад");
			}
		}
	case 9636:
	{
	    if(!response) return cmd::gps(playerid);
	    switch(listitem)
	    {
	        case 0: SetPlayerCheckpoint(playerid, -761.8918,-134.2520,65.6949 , 3.0);
	        case 1: SetPlayerCheckpoint(playerid, 1319.1919,-1557.0133,13.5469 , 3.0);
	        case 2: SetPlayerCheckpoint(playerid, 2091.4338,-623.3968,63.4408 , 3.0);
	    }
   		SetPVarInt(playerid, "playerisGPS", 1);
		SCM(playerid, COLOR_WHITE, "{FFFFFF}GPS-Навигатор{FF6F00} Работы{FFFFFF} Метка успешно установлена на карте.");
	}
	case 9635:
	{
	    if(!response) return cmd::gps(playerid);
	    switch(listitem)
	    {
	        case 0: SetPlayerCheckpoint(playerid, 221.6311,-1441.6997,13.2510, 3.0);
	        case 1: SetPlayerCheckpoint(playerid, 1168.0460,1367.3354,10.8125, 3.0);
	    }
   		SetPVarInt(playerid, "playerisGPS", 1);
		SCM(playerid, COLOR_WHITE, "{FFFFFF}GPS-Навигатор{FF6F00} Военкоматы{FFFFFF} Метка успешно установлена на карте.");
	}
	case 9634:
	{
	    if(!response) return cmd::gps(playerid);
	    switch(listitem)
	    {
	        case 0: SetPlayerCheckpoint(playerid, 1031.8125,-1731.3622,13.5469, 4.0);
	        case 1: SetPlayerCheckpoint(playerid, -2050.0652,-64.2936,35.3138, 4.0);
	        case 2: SetPlayerCheckpoint(playerid, 2017.9816,1155.2284,10.8203, 4.0);
	    }
		SetPVarInt(playerid, "playerisGPS", 1);
		SCM(playerid, COLOR_WHITE, "{FFFFFF}GPS-Навигатор{FF6F00} Accessories Shop{FFFFFF} Метка успешно установлена на карте.");
	}
	case 9633:
	{
		if(!response) return cmd::gps(playerid);
		switch(listitem)
		{
			case 0: SetPlayerCheckpoint(playerid, 1369.8676,-1878.9230,13.5469, 4.0);
			case 1: SetPlayerCheckpoint(playerid, 1019.5482,-930.8779,42.1797, 4.0);
			case 2: SetPlayerCheckpoint(playerid, 2142.2100,-2160.6104,13.5469, 5.0);
		}
		SetPVarInt(playerid, "playerisGPS", 1);
		SCM(playerid, COLOR_WHITE, "{FFFFFF}GPS-Навигатор{FF6F00} Автомастерские{FFFFFF} Метка успешно установлена на карте.");
	}
	case 9630:
	{
		if(!response) return cmd::gps(playerid);
		switch(listitem)
		{
			case 0: SetPlayerCheckpoint(playerid, 2013.0505,-1273.6877,23.8203, 4.0);
			case 1: SetPlayerCheckpoint(playerid, 2490.0139,-1669.9242,13.3359, 4.0);
			case 2: SetPlayerCheckpoint(playerid, 2768.9893,-1947.7357,13.3682, 4.0);
			case 3: SetPlayerCheckpoint(playerid, 2178.8835,-1796.6198,13.3682, 4.0);
			case 4: SetPlayerCheckpoint(playerid, 2641.8540,-1084.0514,69.4531, 4.0);
			case 5: SetPlayerCheckpoint(playerid, 1446.1321,748.9786,10.8203, 4.0);
			case 6: SetPlayerCheckpoint(playerid, 953.8283,1734.3771,8.6484, 4.0);
			case 7: SetPlayerCheckpoint(playerid, 1467.4531,2773.3977,10.6719, 4.0);
		}
		SetPVarInt(playerid, "playerisGPS", 1);
		SCM(playerid, COLOR_WHITE, "{FFFFFF}GPS-Навигатор{FF6F00} Нелегальные организации{FFFFFF} Метка успешно установлена на карте.");
	}
	case 9629:
	{
		if(!response) return cmd::gps(playerid);
		switch(listitem)
		{
			case 0: SetPlayerCheckpoint(playerid, -2098.4678,86.2418,35.3203, 4.0);
			case 1: SetPlayerCheckpoint(playerid, 1022.4281,-1132.7654,23.8281, 4.0);
			case 2: SetPlayerCheckpoint(playerid, 1762.1906,-1671.9886,13.5605, 4.0);
			case 3: SetPlayerCheckpoint(playerid, 2177.1746,1117.2573,12.6484, 4.0);
		}
		SetPVarInt(playerid, "playerisGPS", 1);
		SCM(playerid, COLOR_WHITE, "{FFFFFF}GPS-Навигатор{FF6F00} Развлечения{FFFFFF} Метка успешно установлена на карте.");
	}
	case 9625:
	{
		if(!response) return cmd::gps(playerid);
		switch(listitem)
		{
			case 0: SetPlayerCheckpoint(playerid, 1478.8784,-1739.4149,13.5469, 4.0);
			case 1: SetPlayerCheckpoint(playerid, 1171.9008,-1741.6208,13.3984, 6.0);
			case 2: SetPlayerCheckpoint(playerid, 1364.9165,-1279.5867,13.5469, 4.0);
			case 3: SetPlayerCheckpoint(playerid, 738.7014,-1413.2767,13.5276, 4.0);
			case 4: SetPlayerCheckpoint(playerid, 457.0125,-1501.3678,31.0405, 4.0);
			case 5: SetPlayerCheckpoint(playerid, -1886.8207,862.4653,35.1641, 4.0);
			case 6: SetPlayerCheckpoint(playerid, 1464.2767,-1023.5324,23.3923, 3.0);
			case 7: SetPlayerCheckpoint(playerid, 1751.6198,-1742.8162,13.5518, 3.0);
			case 8: SetPlayerCheckpoint(playerid, 1263.3184,-1817.9396,13.3948, 3.0);
		}
		SetPVarInt(playerid, "playerisGPS", 1);
		SCM(playerid, COLOR_WHITE, "{FFFFFF}GPS-Навигатор{FF6F00} Общественные места{FFFFFF} Метка успешно установлена на карте.");
	}
	case 9626:
	{
		if(!response) return cmd::gps(playerid);
		switch(listitem)
		{
			case 0: SetPlayerCheckpoint(playerid, -2621.6013,1405.7349,7.1016, 4.0);
			case 1: SetPlayerCheckpoint(playerid, 1828.7570,-1683.5811,13.5469, 4.0);
			case 2: SetPlayerCheckpoint(playerid, -2246.1272,-88.1271,35.3203, 4.0);
			case 3: SetPlayerCheckpoint(playerid, 2421.0645,-1226.5785,25.0291, 4.0);
		}
		SetPVarInt(playerid, "playerisGPS", 1);
		SCM(playerid, COLOR_WHITE, "{FFFFFF}GPS-Навигатор{FF6F00} Клубы{FFFFFF} Метка успешно установлена на карте.");
	}
	case 9627:
	{
		if(!response) return cmd::gps(playerid);
		switch(listitem)
		{
			case 0: SetPlayerCheckpoint(playerid, 562.3050,-1289.6100,17.2482, 6.0);
			case 1: SetPlayerCheckpoint(playerid, -1638.5052,1202.0320,7.2189, 6.0);
			case 2: SetPlayerCheckpoint(playerid, -1972.5674,293.5472,35.1719, 6.0);
			case 3: SetPlayerCheckpoint(playerid, 1386.1025,-1875.8783,13.3828, 6.0);
			case 4: SetPlayerCheckpoint(playerid, 1289.0172,-1275.8000,13.5421, 6.0);
		}
		SetPVarInt(playerid, "playerisGPS", 1);
		SCM(playerid, COLOR_WHITE, "{FFFFFF}GPS-Навигатор{FF6F00} Бизнес{FFFFFF} Метка успешно установлена на карте.");
	}
	case 9623:
	{
		if(!response) return 1;
		switch(listitem)
		{
			case 0: ShowStats(playerid,playerid);
			case 1: ShowSettings(playerid);
			case 2: SPD(playerid,118,DIALOG_STYLE_LIST,"{FF6F00}Безопасность","{FF6F00}»{FFFFFF} Изменить пароль\n{FF6F00}»{FFFFFF} Установка ключа безопасности [ разработка ]","Выбрать","Отмена");
			case 3: SPD(playerid, 10025, DIALOG_STYLE_LIST, "{FF6F00}Команды сервера", "{FF6F00}»{FFFFFF} Поиск команд\n{FF6F00}»{FFFFFF} Обычные\n{FF6F00}»{FFFFFF} Чат\n{FF6F00}»{FFFFFF} Телефон\n{FF6F00}»{FFFFFF} Мои команды\n{FF6F00}»{FFFFFF} Руководителям\n{FF6F00}»{FFFFFF} Дом\n{FF6F00}»{FFFFFF} Бизнес\n{FF6F00}»{FFFFFF} Автомобиль\n{FF6F00}»{FFFFFF} Дом на колесах\n{FF6F00}»{FFFFFF} Семья\n{930016}»{FFFFFF} Комната в отеле", "Выбрать", "Назад");
			case 4: SPD(playerid,10,DIALOG_STYLE_INPUT,"{FF6F00}Связь с администрацией","{FFFFFF}Вы собираетесь задать вопрос / подать жалобу администрации / хелперам сервера.\n\nПожалуйста, не грубите, и соблюдайте адекватность.\nОписывайте жалобу / вопрос, четко и ясно.","Скрыть","Назад");
			case 5: cmd::donate(playerid);
			case 6: ShowPlayerInventory(playerid);
			case 7:
			{
			    if(PlayerInfo[playerid][pSex] == 1) PlayerInfo[playerid][pSex] = 2, SCM(playerid, COLOR_GREY, "Вы сменили свой пол на женский.");
			    else PlayerInfo[playerid][pSex] = 1, SCM(playerid, COLOR_GREY, "Вы сменили свой пол на мужской.");
			}
		}
	}
	case 118:
	{
	    if(!response) return 1;
	    switch(listitem)
	    {
	        case 0: SPD(playerid,155,DIALOG_STYLE_PASSWORD,"{FF6F00}Смена пароля","{FFFFFF}Внимание! Для продолжения данного действия, введите Ваш прошлый пароль.", "Готово", "Отмена");
			case 1: return 1;
	    }
	}
	case 154:
	{
		if(!response) return 1;
		SetPVarInt(playerid, #OldLessSkin,GetPlayerSkin(playerid));
		SetPlayerSkin(playerid, 260), SetPVarInt(playerid, #LessPil, 1);
		TextDrawShowForPlayer(playerid, ProcentDraw[playerid]), TextDrawShowForPlayer(playerid, AmountLDraw[playerid]);
		SetPVarInt(playerid, #Derevo, TOTALDEREVO), TOTALDEREVO++;
		SetPlayerCheckpoint(playerid, Derevo[GetPVarInt(playerid, #Derevo)][0],Derevo[GetPVarInt(playerid, #Derevo)][1],Derevo[GetPVarInt(playerid, #Derevo)][2], 3.0);
		GivePlayerWeaponAC(playerid, 9, 1), SendClientMessage(playerid, COLOR_PAYCHEC, "Вы начали работу на лесопилке, спилите дерево.");
		return 1;
	}
	case 157:
	{
		if(!response) return 1;
		SetPlayerSkin(playerid, GetPVarInt(playerid, "OldLessSkin"));
		SCMF(playerid,COLOR_PAYCHEC, "Вы закончили рабочий день, Ваш заработок: %i$",GetPVarInt(playerid, #jobCash)*3);
		PlayerInfo[playerid][pCash] += GetPVarInt(playerid, #jobCash)*3;
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
		DeletePVar(playerid, #jobCash);
		DeletePVar(playerid, #OldLessSkin);
		DeletePVar(playerid, #LessPil);
		DeletePVar(playerid, #Derevo);
		TextDrawHideForPlayer(playerid, ProcentDraw[playerid]), TextDrawHideForPlayer(playerid, AmountLDraw[playerid]);
		DisablePlayerCheckpoint(playerid), RemovePlayerWeapon(playerid, 9);
		return 1;
	}
	case 155:
		{
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext) < 5) return SPD(playerid,155,DIALOG_STYLE_PASSWORD,"{FF6F00}Смена пароля","{FFFFFF}Внимание! Для продолжения данного действия, введите Ваш прошлый пароль.", "Готово", "Отмена");
			if(strfind(inputtext, "=", true) == -1 && strfind(inputtext, ",", true) == -1 && strfind(inputtext, "'", true) == -1)
			{
				mysql_format(connects, stringer, 190, "SELECT `Name`, `pKey` FROM `accounts` WHERE `Name` = '%s' AND `pKey` = '%e'",PlayerInfo[playerid][pNames],inputtext);
				mysql_tquery(connects, stringer, "OnPlayerSelectPassword", "is",playerid, inputtext);
				return 1;
			}
			else SPD(playerid,155,DIALOG_STYLE_PASSWORD,"{FF6F00}Смена пароля","{FFFFFF}Внимание! Для продолжения данного действия, введите Ваш прошлый пароль.", "Готово", "Отмена");
		}
	case 156:
		{
			if(!response) return 1;
			if(strlen(inputtext) > 5 && strfind(inputtext, "=", true) == -1 && strfind(inputtext, ",", true) == -1 && strfind(inputtext, "'", true) == -1)
			{
				mysql_format(connects, stringer, 128, "UPDATE `accounts` SET `pKey` = '%e' WHERE `Name` = '%s'",inputtext,PlayerInfo[playerid][pNames]);
				mysql_empty(connects, stringer);
				SCMF(playerid, COLOR_WHITE, "Ваш новый пароль: {FF6F00}%s", inputtext);
				SCM(playerid, COLOR_WHITE, "Для того, что бы не забыть его, сделайте скриншот (F8) либо запишите его куда-либо.");
				return 1;
			}
			else SPD(playerid,155,1, "{FF6F00}Смена пароля", "{FFFFFF}Чтобы не подвергнуть аккаунт взлому, рекомедуем Вам придумать трудный пароль.\nСодержащий набор букв и цифр.", "Сменить", "Назад");
		}
	}
	while(strfind(inputtext,"%s",true)!=-1) strdel(inputtext,strfind(inputtext,"%s",true),strfind(inputtext,"%s",true)+2);
	return 1;
}
public OnVehicleDeath(vehicleid, killerid)
{
    if(killerid != INVALID_PLAYER_ID && !IsPlayerConnected(killerid)) return 0;
	if(GetPVarInt(killerid, "race_check") != 0) race_vehicledeath(killerid);
	return 1;
}
public OnPlayerDisconnect(playerid, reason)
{
    if(myti[playerid] == true) KillTimer(mytimer[playerid]), myti[playerid] = false;
    race_disconnect(playerid);
    if(PlayerInfo[playerid][pJob] == 6 && GetPVarInt(playerid, #busID) == GetPlayerVehicleID(playerid)) SetVehicleToRespawn(GetPVarInt(playerid, #busID));
   	if(TaxiDuty{playerid} && IsATaxiCar(GetPlayerVehicleID(playerid)))
	{
		Delete3DTextLabel(taxi3d[GetPlayerVehicleID(playerid)]);
    	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	}
    if(BaseStarting[1] == 3 && GetPVarInt(playerid, "PlayerInBase"))
    {
        Iter_Remove(BaseList, playerid);
  		PlayersInBase{0} --;
	    DeletePVar(playerid, "PlayerInBase");
    }
    if(BaseStarting[1] == 1 && GetPVarInt(playerid, "PlayerInBase"))
    {
        Iter_Remove(BaseList, playerid);
        PlayersInBase{0} -- ;
    	DeletePVar(playerid, "BasePopitka");
	    DeletePVar(playerid, "PlayerInBase");
		if (PlayersInBase{0} == 0)
		{
	        PlayersInBase{0} = 0;
	        SendClientMessageToAll(COLOR_LIGHTBLUE, "Информация: Бейсджампинг окончен.");
        	foreach(new s: BaseList) { Iter_Remove(BaseList, s); }
		    BaseStarting[1] = 0;
		}
    }
    for(new i; i < 13; i++) TextDrawHideForPlayer(playerid, CounterSText[i]);
    if(GetPVarInt(playerid, "TuninG")) tuninguse = false, DeletePVar(playerid, "TuninG");
    if(RaceStarting[2] == 3 && GetPVarInt(playerid, "PlayerInRace"))
    {
        DeletePVar(playerid, "PlayerInRace");
        Iter_Remove(RacersList, playerid);
        PlayerScore{playerid} = 0;
        PlayersInRace{0} --;
        PlayerPosition{playerid} = 0;
    }
    #pragma unused reason
    lNomer[playerid] = 0;
 	OknaGame[playerid] = -1;
    OknaGameEnd{playerid} = 0;
    if(GetPVarInt(playerid, "breaked"))
    {
		DestroyDynamicObject(GetPVarInt(playerid, "break_object"));
		DeletePVar(playerid, "breaked");
		DeletePVar(playerid, "break_object");
	    DestroyDynamic3DTextLabel(Text3D:breakText[playerid]);
	}
    if(GetPVarInt(playerid, "PlayerCuffed") && PlayerInfo[playerid][pWanted] > 0)
    {
  		PlayerInfo[playerid][pJailTime] = PlayerInfo[playerid][pWanted]*600;
		PlayerInfo[playerid][pJailed] = 1;
		PlayerInfo[playerid][pCash] -= 1000000;
		PlayerInfo[playerid][pMestoJail] = 1;
		UpdatePlayerData(playerid, "pMestoJail", PlayerInfo[playerid][pMestoJail]);
		format(stringer, 100, "Игрок %s покинул игру во время арреста, при входе в игру +%d секунд КПЗ", PlayerInfo[playerid][pNames], PlayerInfo[playerid][pWanted]*600);
		SendClientMessageToAll(COLOR_LIGHTRED, stringer);
    }
	if(GetPVarType(playerid, "PlacedBB"))
    {
        DestroyDynamicObject(GetPVarInt(playerid, "PlacedBB"));
        DestroyDynamic3DTextLabel(Text3D:GetPVarInt(playerid, "BBLabel"));
        if(GetPVarType(playerid, "BBArea"))
        {
            foreach(new i: Player)
            {
                if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
                {
                    StopAudioStreamForPlayer(i);
                    SendClientMessage(i, COLOR_LIGHTBLUE, "Игрок вышел из игры, магнитофон выключен");
                }
            }
        }
    }
   	if(pTemp[playerid][pExamCandidate] != INVALID_PLAYER_ID)
	{
		new actplayerid = pTemp[playerid][pExamCandidate];
		if(IsPlayerConnected(actplayerid) && pTemp[actplayerid][pOnExam])
		{
			SendClientMessage(actplayerid,CGRAY,"Ваш инструктор вышел из игры, экзамен прерван");
			RemovePlayerFromVehicle(actplayerid);
			pTemp[actplayerid][pOnExam] = false;
		}
	}
	if(GetPVarInt(playerid, "arenda_took") != 0)
	{
		DestroyVehicle(GetPVarInt(playerid, "arenda_took"));
		DeletePVar(playerid, "arenda_took");
		DeletePVar(playerid, "check_arenda_moped");
	}
	if(player_family [ playerid ])family_info [ player_family [ playerid ]] [ f_online ]--;
	g_MysqlRaceCheck[playerid]++;
	KillTimer(STimer[playerid]);
	Deleted(playerid);
	CountVezit2--;
	CancelSelectTextDraw(playerid);
	if(AlhambraDJ == true && AlhambraDJID == playerid) AlhambraDJ = false, AlhambraDJID = INVALID_PLAYER_ID;
	AntiFakeKill[playerid] = false;
	if(PlayerInfo[playerid][pJob] == 2)
	{
		if(gcontract{playerid} == true)
		{
			Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]);
			gcontract{playerid} = false;
		}
	}
	if(PlayerInfo[playerid][pHouse] != -1)
	{
		if(caridhouse[playerid] != 0) DestroyVehicleEx(caridhouse[playerid]), caridhouse[playerid] = 0;
		if(GetPVarInt(playerid, #vehicle_id_two) != 0) DestroyVehicleEx(GetPVarInt(playerid, #vehicle_id_two)), DeletePVar(playerid, #vehicle_id_two);
	}
	if(PlayerInfo[playerid][pCar][0] == 508 && caridhouse[playerid] != 0)
	{
		new Float:XX, Float:YY, Float:ZZ,Float:CC,str[200];
		GetVehiclePos(caridhouse[playerid], XX, YY, ZZ);
		GetVehicleZAngle(caridhouse[playerid], CC);
		mysql_format(connects,str,sizeof(str),"UPDATE `accounts` SET CarX='%f',CarY='%f',CarZ='%f',CarC='%f' WHERE `Name` = '%s'",
		XX,YY,ZZ,CC,PlayerInfo[playerid][pNames]);
		mysql_empty(connects, str);
		foreach(new i: Player)
		{
			if(GetPVarInt(i, "Intropic" ) == caridhouse[playerid])
			{
				new Float:X, Float:Y, Float:Z;
				GetVehiclePos(GetPVarInt( i, "Intropic" ), X, Y, Z);
				SetPlayerPosEx(i, X, Y, Z);
				SetPlayerVirtualWorld(i,0);
				SetPlayerInterior(i, 0);
				DeletePVar(i, "Intropic");
			}
		}
		DestroyVehicleEx(caridhouse[playerid]);
		caridhouse[playerid] = 0;
	}
	new gunids[56],ammos[56],cnt,pgun[164];
	for (new i;i<13;i++)
	{
		new weapid,ammo;
		GetPlayerWeaponData(playerid,i,weapid,ammo);
		if(weapid && ammo && PlayerInfo[playerid][pGun][i] == weapid && PlayerInfo[playerid][pAmmo][i] <= ammo)
		{
			if(!cnt)
			{
				format(gunids,sizeof(gunids),"%d",PlayerInfo[playerid][pGun][i]);
				format(ammos,sizeof(ammos),"%d",PlayerInfo[playerid][pAmmo][i]);
			}
			else
			{
				format(gunids,sizeof(gunids),"%s|%d",gunids,PlayerInfo[playerid][pGun][i]);
				format(ammos,sizeof(ammos),"%s|%d",ammos,PlayerInfo[playerid][pAmmo][i]);
			}
			cnt++;
			if(cnt >= 6) break;
		}
	}
	if(strlen(gunids) && strlen(ammos)) format(pgun,sizeof(pgun),"%s:%s",gunids,ammos);
	UpdatePlayerDataEx(playerid, "gun", pgun);
	if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
	if(PlayerInfo[playerid][pJob] == 7) PlayerInfo[playerid][pJob] = 0;
	VehicleEnters[playerid]=INVALID_VEHICLE_ID;
	PlayerInfo[playerid][pDrugtime] = 0;
	forma{playerid} = false;
	keysvorota{playerid} = false;
	proverkaforma{playerid} = false;
	keys[playerid] = 0;
	SetPlayerSkills(playerid);
	if(PlayerInfo[playerid][pMRInections] == 4) Medics --;
	if(PlayerInfo[playerid][pMRInections] == 1 || PlayerInfo[playerid][pMRInections] == 10 || PlayerInfo[playerid][pMRInections] == 21 ) Police -=1;
	else if(PlayerInfo[playerid][pJob] == 2) Mechanics --;
	if(PlayerInfo[playerid][bAdmin] > 0)
	{
		kicks[playerid]=0,bans[playerid]=0,warns[playerid]=0,pms[playerid]=0,jails[playerid]=0;
		format(stringer,SMALL_SIZE, "<ALogin Off> вышел %s [lvl: %d]",PlayerInfo[playerid][pNames],PlayerInfo[playerid][bAdmin]), ABroadCast(0xF4B800AA,stringer,1);
	}
	if(PlayerInfo[playerid][pHouse] != -1 && PlayerInfo[playerid][pCar] != 462)
	{
		new save_probeg [ 100 ] ;
		mysql_format(connects, save_probeg, 100, "UPDATE `house` SET `CarDrivedCar1` = '%.2f', `CarDrivedCar2` = '%.2f' WHERE `hID` = '%d'", HouseInfo[PlayerInfo[playerid][pHouse]][CarDrived][0],HouseInfo[PlayerInfo[playerid][pHouse]][CarDrived][1], PlayerInfo[playerid][pHouse]);
		mysql_empty(connects, save_probeg);
	}
	if(PlayerInfo[playerid][pHotel] != -1)
	{
		new save_probeg_hotel [ 100 ] ;
		mysql_format(connects, save_probeg_hotel, 100, "UPDATE `hotel` SET `mCarDrived` = '%.2f' WHERE `mID` = '%d'", HotelInfo[PlayerInfo[playerid][pHotel]][mCarDrived], PlayerInfo[playerid][pHotel]);
		mysql_empty(connects, save_probeg_hotel);
	}
	OnPlayerSaveAccount(playerid);
	if(cheaters{playerid} == true) cheaters{playerid} = false;
	return 1;
}
race_disconnect(playerid)
{
	if (GetPVarInt(playerid, "PlayerInRace") == 1 && RaceStarting[2] == 1)
	{
	    Iter_Remove(RacersList, playerid);
		PlayersInRace{0}--;
		PlayerScore{playerid} = 0;
 		for(new v = 0;v!= 10; v++) PlayerTextDrawHide(playerid, Race[v][playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid, "PlayerInRace");
		DestroyVehicle(GetPVarInt(playerid, "race_check"));
		format(format_string,128,"[RACE]: %s(%d) покинул игру. Участников: %i", PlayerInfo[playerid][pNames], playerid, PlayersInRace{0});
		RaceChat(COLOR_LIGHTBLUE, format_string);
		if (PlayersInRace{0} == 0)
		{
	        raceTime = 1;
	        PlayersInRace{0} = 0;
	        SendClientMessageToAll(COLOR_YELLOW, "Информация: Гонка окончена, все участники покинули игру.");
        	foreach(new s: RacersList)
		    {
				for(new v = 0;v!= 10; v++) PlayerTextDrawHide(s, Race[v][s]);
		        PlayerScore{s} = 0;
		        PlayerPosition{s} = 0;
		        Iter_Remove(RacersList, s);
		    }
		    RaceStarting[2] = 0;
		    typeRace = 3;
	        //state RaceStarted:No;
		}
	}
}

stock SetPlayerSpawn(playerid)
{
	if(GetPVarInt(playerid, "gps_pic") == 228) DeletePVar(playerid, "gps_pic"), DisablePlayerCheckpoint(playerid);
	KillTimer(STimer[playerid]);
	if(!PlayerInfo[playerid][pLogin]) return SCM(playerid, COLOR_WHITE, "Необходимо авторизоваться!"), KickEx(playerid, 1);
	PlayerInfo[playerid][pHealthPlayer] = 0;
	if(IsPlayerConnected(playerid))
	{
		new gun[128];
		GetPVarString(playerid,"mysqlgun",gun,128);
		DeletePVar(playerid,"mysqlgun");
		if(strlen(gun))
		{
			new guns[6],ammos[6],datas[2][56];
			explode(datas,gun,":");
			printf("%s:%s",datas[0],datas[1]);
			sscanf(datas[0],"p<|>a<i>[6]",guns);
			sscanf(datas[1],"p<|>a<i>[6]",ammos);
			for(new i;i<6;i++) GivePlayerWeaponAC(playerid,guns[i],ammos[i]);
		}
		if(PlayerInfo[playerid][pAccessories][0] != 0x0) SetPlayerAttachedObject(playerid,0,PlayerInfo[playerid][pAccessories][0],2,PlayerInfo[playerid][PositionAcc][0],PlayerInfo[playerid][PositionAcc][1], PlayerInfo[playerid][PositionAcc][2],PlayerInfo[playerid][PositionAcc][3],PlayerInfo[playerid][PositionAcc][4],PlayerInfo[playerid][PositionAcc][5], PlayerInfo[playerid][PositionAcc][6], PlayerInfo[playerid][PositionAcc][7],PlayerInfo[playerid][PositionAcc][8]);
		if(PlayerInfo[playerid][pAccessories][1] != 0x0) SetPlayerAttachedObject(playerid,1,PlayerInfo[playerid][pAccessories][1],2,0.1, 0.03, 0.0, 0.0, 90.0, 90.0);
		if(PlayerInfo[playerid][pWanted] > 6) PlayerInfo[playerid][pWanted] = 6, UpdatePlayerData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
		if(PlayerInfo[playerid][pChar] == 0) PlayerInfo[playerid][pChar] = 230;
		if(PlayerInfo[playerid][pModel] == 0) PlayerInfo[playerid][pModel] = 230;
		if(PlayerInfo[playerid][pLRInections] == 1 && PlayerInfo[playerid][pRKInections] != 15) PlayerInfo[playerid][pRKInections] = 15;
		if(PlayerInfo[playerid][pLRInections] == 2 && PlayerInfo[playerid][pRKInections] != 10) PlayerInfo[playerid][pRKInections] = 10;
		if(PlayerInfo[playerid][pLRInections] == 3 && PlayerInfo[playerid][pRKInections] != 15) PlayerInfo[playerid][pRKInections] = 15;
		if(PlayerInfo[playerid][pLRInections] == 4 && PlayerInfo[playerid][pRKInections] != 10) PlayerInfo[playerid][pRKInections] = 10;
		if(PlayerInfo[playerid][pLRInections] == 5 && PlayerInfo[playerid][pRKInections] != 10) PlayerInfo[playerid][pRKInections] = 10;
		if(PlayerInfo[playerid][pLRInections] == 6 && PlayerInfo[playerid][pRKInections] != 10) PlayerInfo[playerid][pRKInections] = 10;
		if(PlayerInfo[playerid][pLRInections] == 7 && PlayerInfo[playerid][pRKInections] != 6) PlayerInfo[playerid][pRKInections] = 6;
		if(PlayerInfo[playerid][pLRInections] == 8 && PlayerInfo[playerid][pRKInections] != 5) PlayerInfo[playerid][pRKInections] = 5;
		if(PlayerInfo[playerid][pLRInections] == 9 && PlayerInfo[playerid][pRKInections] != 13) PlayerInfo[playerid][pRKInections] = 13;
		if(PlayerInfo[playerid][pLRInections] == 10 && PlayerInfo[playerid][pRKInections] != 15) PlayerInfo[playerid][pRKInections] = 15;
		if(PlayerInfo[playerid][pLRInections] == 11 && PlayerInfo[playerid][pRKInections] != 10) PlayerInfo[playerid][pRKInections] = 10;
		if(PlayerInfo[playerid][pLRInections] == 12 && PlayerInfo[playerid][pRKInections] != 10) PlayerInfo[playerid][pRKInections] = 10;
		if(PlayerInfo[playerid][pLRInections] == 13 && PlayerInfo[playerid][pRKInections] != 10) PlayerInfo[playerid][pRKInections] = 10;
		if(PlayerInfo[playerid][pLRInections] == 14 && PlayerInfo[playerid][pRKInections] != 10) PlayerInfo[playerid][pRKInections] = 10;
		if(PlayerInfo[playerid][pLRInections] == 15 && PlayerInfo[playerid][pRKInections] != 10) PlayerInfo[playerid][pRKInections] = 10;
		if(PlayerInfo[playerid][pLRInections] == 16 && PlayerInfo[playerid][pRKInections] != 13) PlayerInfo[playerid][pRKInections] = 13;
		if(PlayerInfo[playerid][pLRInections] == 17 && PlayerInfo[playerid][pRKInections] != 10) PlayerInfo[playerid][pRKInections] = 10;
		if(PlayerInfo[playerid][pLRInections] == 18 && PlayerInfo[playerid][pRKInections] != 10) PlayerInfo[playerid][pRKInections] = 10;
		if(PlayerInfo[playerid][pLRInections] == 19 && PlayerInfo[playerid][pRKInections] != 15) PlayerInfo[playerid][pRKInections] = 15;
		if(PlayerInfo[playerid][pLRInections] == 21 && PlayerInfo[playerid][pRKInections] != 15) PlayerInfo[playerid][pRKInections] = 15;
		if(PlayerInfo[playerid][pLRInections] == 24 && PlayerInfo[playerid][pRKInections] != 10) PlayerInfo[playerid][pRKInections] = 10;
		if(PlayerInfo[playerid][pLRInections] == 25 && PlayerInfo[playerid][pRKInections] != 10) PlayerInfo[playerid][pRKInections] = 10;
		if(PlayerInfo[playerid][pLRInections] == 26 && PlayerInfo[playerid][pRKInections] != 10) PlayerInfo[playerid][pRKInections] = 10;
		if(PlayerInfo[playerid][pLRInections] == 27 && PlayerInfo[playerid][pRKInections] != 11) PlayerInfo[playerid][pRKInections] = 11;
		if(PlayerInfo[playerid][pLRInections] == 28 && PlayerInfo[playerid][pRKInections] != 6) PlayerInfo[playerid][pRKInections] = 6;
		if(PlayerInfo[playerid][pMuteTime] == 0 && PlayerInfo[playerid][pMuted] == 1) PlayerInfo[playerid][pMuted] = 0;
		SetPlayerHealthAC(playerid, 100.0);
		if (PlayerInfo[playerid][pWanted] >= 1)
		{
			SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted] );
			WantedPoints[playerid]++;
		}
		SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL,990);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_SAWNOFF_SHOTGUN,990);
		SetPlayerSkillLevel(playerid,WEAPONSKILL_MICRO_UZI,990);
		if(GetPVarInt(playerid,"Show_TextLogin")) Hide_TextLogin(playerid);
		if(GetPVarInt(playerid,"Show_TextRegister")) Hide_TextRegister(playerid);
		if(PlayerInfo_MP_START[playerid]) return GiveStatus_MP(playerid, GetPVarInt(playerid,"PlayerInfo_MP_Staus"));
		SetCameraBehindPlayer(playerid);
		SetPlayerToTeamColor(playerid);
		if(PlayerInfo[playerid][pTut] == 0)
		{
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			InterpolateCameraPos(playerid, 88.963806, -1564.630615, 118.438804, 586.440490, -1496.917480, 76.717933, 17000);
			InterpolateCameraLookAt(playerid, 93.910079, -1564.273193, 117.801132, 590.450683, -1499.176635, 74.764762, 17000);
			SPD(playerid,4,DIALOG_STYLE_MSGBOX,"{FF6F00}Выбор пола","{FFFFFF}Какого пола будет ваш персонаж:\n","Мужчина","Женщина");
			SelectTextDraw(playerid, 0xFF9933FF);
			TogglePlayerControllable(playerid, false);
		}
		if(PlayerInfo[playerid][pMRInections] > 0) SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		if(PlayerInfo[playerid][pMRInections] <= 0) SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
        if(PlayerInfo[playerid][bAdmin])
		{
	        SetPlayerPos(playerid,1475.9231,-1363.3746,121.7659);
			SetPlayerFacingAngle(playerid,358.6103);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			return true;
		}
		if(PlayerInfo[playerid][pPrison][0] == 1 && PlayerInfo[playerid][pPrison][1] > 0)
		{
			SetPlayerVirtualWorld(playerid,1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPosEx(playerid,5512.0884,1243.8398,23.1886);
			SetPlayerFacingAngle(playerid, 179.7971);
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 1)
		{
			if(PlayerInfo[playerid][pMestoJail] == 1)
			{
				SetPlayerInterior(playerid, 6);
				PlayerInfo[playerid][pInt] = 6;
				SetPlayerPosEx(playerid,264.1425,77.4712,1001.0391);
				SetPlayerFacingAngle(playerid, 263.0160);
				return 1;
			}
			if(PlayerInfo[playerid][pMestoJail] == 2)
			{
				SetPlayerInterior(playerid, 10);
				PlayerInfo[playerid][pInt] = 10;
				SetPlayerPosEx(playerid,219.5400,109.9767,999.0156);
				SetPlayerFacingAngle(playerid, 1.0000);
				return 1;
			}
			if(PlayerInfo[playerid][pMestoJail] == 3)
			{
				SetPlayerInterior(playerid, 3);
				PlayerInfo[playerid][pInt] = 3;
				SetPlayerPosEx(playerid,198.3642,161.8103,1003.0300);
				SetPlayerFacingAngle(playerid, 1.0000);
				return 1;
			}
		}
		else if(PlayerInfo[playerid][pJailed] == 4)
		{
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPosEx(playerid,5508.3706,1244.7594,23.1886);
			SetPlayerSkin(playerid, 62);
			return 1;
		}
		if(PlayerInfo[playerid][pHospital] == 1 && !GetPVarInt(playerid, "BasePopitka") && !GetPVarInt(playerid, "baseBB"))
		{
			TogglePlayerControllable(playerid, false);
			SetTimerEx("UnFreez", 3000, 0, "d", playerid);
			new randomspawn = 1 + random(2);
			switch(randomspawn)
			{
			    case 1:
			    {
    				SetPlayerPosEx(playerid, -2667.3616,667.7733,3014.4680);
					SetPlayerFacingAngle(playerid, 268.8055);
			    }
			    case 2:
			    {
   					SetPlayerPosEx(playerid, -2672.6980,667.7546,3014.4680);
					SetPlayerFacingAngle(playerid, 90.8305);
			    }
			    default:
			    {
   					SetPlayerPosEx(playerid, -2667.3616,667.7733,3014.4680);
					SetPlayerFacingAngle(playerid, 268.8055);
			    }
			}
			pTemp[playerid][pInHospital] = true;
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerHealthAC(playerid,10), PlayerInfo[playerid][pHealthPlayer] = 10;
			return 1;
		}
		SetPlayerVirtualWorld(playerid,0);
		if(PlayerInfo[playerid][pHouse] != -1 && PlayerInfo[playerid][pSpawn] == 1 && !GetPVarInt(playerid, "BasePopitka") && !GetPVarInt(playerid, "baseBB"))
		{
			new house = PlayerInfo[playerid][pHouse];
			SetPlayerInterior(playerid,HouseInfo[house][hInt]);
			SetPlayerPosEx(playerid, HouseInfo[house][hExit][0], HouseInfo[house][hExit][1],HouseInfo[house][hExit][2]); // Warp the player
			PlayerInfo[playerid][pLocal] = house;
			PlayerInfo[playerid][pInt] = HouseInfo[house][hInt];
			SetPlayerVirtualWorld(playerid, house+50);
			return 1;
		}
		if(PlayerInfo[playerid][pHotel] != -1 && PlayerInfo[playerid][pSpawn] == 1 && !GetPVarInt(playerid, "BasePopitka") && !GetPVarInt(playerid, "baseBB"))
		{
			new hotel = PlayerInfo[playerid][pHotel];
			TogglePlayerControllable(playerid, false);
			SetTimerEx("UnFreez", 3000, false, "i", playerid);
			SetPlayerVirtualWorld(playerid, HotelInfo[hotel][mVW]);
			SetPlayerPosEx(playerid, 1325.7842,-1071.0078,3458.9060);
			SetPlayerFacingAngle(playerid, 90.2511);
			SetPlayerInterior(playerid, 2);
			PlayerInfo[playerid][pLocal] = hotel;
			return 1;
		}
		if(PlayerInfo[playerid][pCar][0] == 508 && !GetPVarInt(playerid, "BasePopitka") && !GetPVarInt(playerid, "baseBB"))
		{
			if(PlayerInfo[playerid][pSpawn] == 1)
			{
				SetPlayerPosEx(playerid, 2531.7166,-1031.2251,54.0299);
				TogglePlayerControllable(playerid, 0);
				SetTimerEx("UnFreez", 1500, false, "i", playerid);
				SetPlayerFacingAngle(playerid, 0);
				SetPlayerVirtualWorld(playerid,caridhouse[playerid]);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 1);
				SetPVarInt(playerid, "Intropic", caridhouse[playerid]);
				return 1;
			}
		}
		if(GetPVarInt(playerid, "AntiDeathRace"))
		{
			SetPlayerPosEx(playerid, 827.0083,5.8989,1004.1870);
			SetPlayerFacingAngle(playerid, 269.6992);
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 300);
			DeletePVar(playerid, "AntiDeathRace");
			return 1;
		}
		if(GetPVarInt(playerid, "BasePopitka") > 0)
		{
			TogglePlayerControllable(playerid, false);
			SetTimerEx("UnFreez", 3000, false, "d", playerid);
   			SetPlayerPosEx(playerid, 377.6851,-161.1450,3366.3403);
			SetPlayerFacingAngle(playerid, 179.1788);
			SetPlayerInterior(playerid, 0);
		    GivePlayerWeaponAC(playerid, 46, 228);
		    return 1;
		}
		if(GetPVarInt(playerid, "baseBB"))
		{
		    SetPlayerPosEx(playerid, 2177.4709,1118.3693,12.6484);
		    SetPlayerFacingAngle(playerid, 62.3957);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid, 0);
		    DeletePVar(playerid, "baseBB");
			return 1;
		}
		switch(PlayerInfo[playerid][pMRInections])
		{
		case 2:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid, 1);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerPosEx(playerid, -173.5514,-78.2564,915.9959);
				SetPlayerFacingAngle(playerid, 269.5489);
				return 1;
			}
		case 3:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				if(forma{playerid} == true)
				{
					SetPlayerSkin(playerid, 252);
					SetPlayerInterior(playerid, 1);
					SetPlayerPosEx(playerid, 1538.1339,-1763.4106,1506.5640);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 1);
					SetPlayerCheckpoint(playerid, 1542.5778,-1773.6821,1506.5640-1, 1.0);
					SetPVarInt(playerid, "gps_pic", 228);
					return 1;
				}
				SetPlayerCheckpoint(playerid, 1542.5778,-1773.6821,1506.5640-1, 1.0);
				SetPVarInt(playerid, "gps_pic", 228);
				SetPlayerInterior(playerid, 1);
				SetPlayerPosEx(playerid, 1538.1339,-1763.4106,1506.5640);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 1);
				return 1;
			}
		case 10:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid, 10);
				SetPlayerPosEx(playerid, 225.1647,121.0442,999.0786);
				SetPlayerFacingAngle(playerid, 89.0733);
				PlayerInfo[playerid][pInt] = 10;
				return 1;
			}
		case 19:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				if(forma{playerid} == true)
				{
					SetPlayerSkin(playerid, 252);
					SetPlayerPosEx(playerid, 1538.1339,-1763.4106,1506.5640);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 2);
					SetPlayerInterior(playerid, 1);
					return 1;
				}
				SetPlayerPosEx(playerid, 1538.1339,-1763.4106,1506.5640);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 2);
				SetPlayerInterior(playerid, 1);
				return 1;
			}
		case 21:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid, 3);
				SetPlayerPosEx(playerid, 211.3636,184.3113,1003.0313);
				SetPlayerFacingAngle(playerid, 174.3579);
				PlayerInfo[playerid][pInt] = 3;
				SetPlayerVirtualWorld(playerid, 322);
				return 1;
			}
		case 26://Спавн правительства
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid, 1);
				SetPlayerPosEx(playerid, -15.6991,-55.7246,1019.8868);
				SetPlayerFacingAngle(playerid, 91.1188);
				return 1;
			}
		case 16:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid, 15);
				SetPlayerPosEx(playerid, 1002.1502,1005.3368,1999.7999);
				SetPlayerFacingAngle(playerid, 87.5641);
				SetPlayerVirtualWorld(playerid, 1);
				PlayerInfo[playerid][pInt] = 15;
				lNews[playerid] = false;
				return 1;
			}
		case 6:
			{
				SetPlayerInterior(playerid, 5);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
				SetPlayerPosEx(playerid, 1265.7104,-793.7453,1084.0078);
				SetPlayerVirtualWorld(playerid, 3);
				return 1;
			}
		case 14:
			{
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
				SetPlayerInterior(playerid, 5);
				SetPlayerPosEx(playerid, 1265.7104,-793.7453,1084.0078);
				SetPlayerVirtualWorld(playerid, 5);
				return 1;
			}
		case 11:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerPosEx(playerid, -2087.1372,-80.4851,2855.1479);
				SetPlayerFacingAngle(playerid, 178.7732);
				SetPlayerCheckpoint(playerid,-2080.9053,-105.1343,2855.1479,1.5);
				SetPlayerInterior(playerid,3);
				PlayerInfo[playerid][pInt] = 3;
				SetPlayerVirtualWorld(playerid, 1);
				return 1;
			}
		case 5:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid, 5);
				SetPlayerPosEx(playerid, 1265.7104,-793.7453,1084.0078);
				PlayerInfo[playerid][pInt] = 5;
				SetPlayerVirtualWorld(playerid, 2);
				return 1;
			}
		case 24:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerPosEx(playerid, 1280.3894,1271.6595,10.8281);
				SetPlayerFacingAngle(playerid, 316.8163);
				return 1;
			}
		case 25:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid, 3);
				PlayerInfo[playerid][pInt] = 3;
				SetPlayerPosEx(playerid, 211.7866,142.4048,1003.0234);
				SetPlayerFacingAngle(playerid, 269.2128);
				SetPlayerVirtualWorld(playerid, 21);
				return 1;
			}
		case 4:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerPosEx(playerid, -2646.4717,659.9686,3014.4626);
				SetPlayerFacingAngle(playerid, 178.9675);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 0);
				Medics ++;
				pTemp[playerid][pInHospital] = true;
				return 1;
			}
		case 12:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerPosEx(playerid, -61.2984,1364.5847,1080.2109);
				SetPlayerFacingAngle(playerid, 100);
				SetPlayerInterior(playerid,6);
				SetPlayerVirtualWorld(playerid, 34);
				PlayerInfo[playerid][pInt] = 6;
				return 1;
			}
		case 18:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid, 18);
				SetPlayerVirtualWorld(playerid, 63);
				SetPlayerPosEx(playerid, -223.84,1410.51,27.77);
				RemovePlayerAttachedObject(playerid, 1);
				PlayerInfo[playerid][pInt] = 18;
				return 1;
			}
		case 17:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerFacingAngle(playerid, 90.4248);
				SetPlayerPosEx(playerid, -49.7558,1400.3553,1084.4297);
				SetPlayerInterior(playerid,8);
				SetPlayerVirtualWorld(playerid, 36);
				PlayerInfo[playerid][pInt] = 8;
				return 1;
			}
		case 13:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid, 4);
				SetPlayerVirtualWorld(playerid, 75);
				SetPlayerFacingAngle(playerid, 263.0497);
				SetPlayerPosEx(playerid, 303.63,309.25,999.15);
				PlayerInfo[playerid][pInt] = 4;
				return 1;
			}
		case 15:
			{
				SetPlayerCheckpoint(playerid,2492.0986,-1710.9407,1014.7422,1.0);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPosEx(playerid,  2496.012939,-1708.923217,1014.742187);
				SetPlayerFacingAngle(playerid, 0.191693);
				SetPlayerVirtualWorld(playerid, 1);
				return 1;
			}
		case 8:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerPosEx(playerid, 1658.60,2253.22,11.06);
				SetPlayerFacingAngle(playerid, 0);
				return 1;
			}
		case 1:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid, 6);
				SetPlayerPosEx(playerid, 235.8750,73.5106,1005.0391);
				PlayerInfo[playerid][pInt] = 6;
				SetPlayerVirtualWorld(playerid, 0);
				return 1;
			}
		case 7:
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPosEx(playerid, 284.5656,1877.0203,907.8959);
				SetPlayerFacingAngle(playerid, 288);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				return 1;
			}
		case 27:
			{
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				if(forma{playerid} == true)
				{
					SetPlayerSkin(playerid, 252);
					SetPlayerPosEx(playerid, 1538.1339,-1763.4106,1506.5640);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 3);
					SetPlayerInterior(playerid, 3);
					SetPlayerCheckpoint(playerid, 1542.5778,-1773.6821,1506.5640-1, 1.0);
					SetPVarInt(playerid, "gps_pic", 228);
					return 1;
				}
				SetPlayerPosEx(playerid, 1538.1339,-1763.4106,1506.5640);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 3);
				SetPlayerInterior(playerid, 3);
				SetPlayerCheckpoint(playerid, 1542.5778,-1773.6821,1506.5640-1, 1.0);
				SetPVarInt(playerid, "gps_pic", 228);
				return 1;
			}
		default:
			{
				new randomspawn = 1 + random(6);
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnFreez", 3000, 0, "d", playerid);
				switch(randomspawn)
				{
				    case 1:
				    {
	    				SetPlayerPosEx(playerid, 294.6484,1806.0520,723.6169);
						SetPlayerFacingAngle(playerid, 88.5907);
				    }
				    case 2:
				    {
	   					SetPlayerPosEx(playerid, 271.1770,1798.0435,718.3987);
						SetPlayerFacingAngle(playerid, 0.2298);
				    }
				    case 3:
				    {
				        SetPlayerPosEx(playerid, 286.9427,1817.5292,718.3987);
				        SetPlayerFacingAngle(playerid, 269.0958);
				    }
		    		case 4:
				    {
				        SetPlayerPosEx(playerid, 277.5520,1815.9442,718.3987);
				        SetPlayerFacingAngle(playerid, 180.4216);
				    }
		    		case 5:
				    {
				        SetPlayerPosEx(playerid, 270.9734,1816.1154,718.3987);
				        SetPlayerFacingAngle(playerid, 181.0483);
				    }
				    default:
				    {
	    				SetPlayerPosEx(playerid, 294.6484,1806.0520,723.6169);
						SetPlayerFacingAngle(playerid, 88.5907);
				    }
				}
				SetPlayerInterior(playerid,1);
				PlayerInfo[playerid][pInt] = 1;
				SetPlayerVirtualWorld(playerid, 1);
				return 1;
			}
		}
	}
	return 1;
}
race_vehicledeath(playerid)
{
	if (GetPVarInt(playerid, "PlayerInRace") == 1 && RaceStarting[2] == 1)
	{
	    Iter_Remove(RacersList, playerid);
		PlayersInRace{0} --;
		PlayerScore{playerid} = 0;
	    for(new v = 0;v!= 10; v++) PlayerTextDrawHide(playerid, Race[v][playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid, "PlayerInRace");
		DestroyVehicle(GetPVarInt(playerid, "race_check"));
		format(format_string,128,"[RACE]: %s(%d) разбил свое транспортное средство. Участников: %i", PlayerInfo[playerid][pNames], playerid, PlayersInRace{0});
		RaceChat(COLOR_LIGHTBLUE, format_string);
		if (PlayersInRace{0} == 0)
		{
	        raceTime = 1;
			PlayersInRace{0} = 0;
	        SendClientMessageToAll(COLOR_YELLOW, "Информация: Все участники гонки разбили свои автомобили, гоночные мероприятия окончены.");
        	foreach(new s: RacersList)
		    {
				for(new v = 0;v!= 10; v++) PlayerTextDrawHide(s, Race[v][s]);
          		PlayerScore{s} = 0;
		        PlayerPosition{s} = 0;
		        Iter_Remove(RacersList, s);
		    }
		    RaceStarting[2] = 0;
		    typeRace = 3;
	        //state RaceStarted:No;
		}
		SetPlayerPosEx(playerid, 827.0083,5.8989,1004.1870);
		SetPlayerFacingAngle(playerid, 269.6992);
		SetPlayerInterior(playerid, 3);
		SetPlayerVirtualWorld(playerid, 300);
	}
}

public OnPlayerDeath(playerid, killerid, reason)
{
    SetPVarInt(playerid, #death, 1);
   	GameTextForPlayer(playerid, "~r~Wasted", 5000, 0);
	if(GetPVarInt(playerid, "BasePopitka") > 0 && GetPVarInt(playerid, "PlayerInBase")) SetPVarInt(playerid, "BasePopitka", GetPVarInt(playerid, "BasePopitka") - 1);
	if(!GetPVarInt(playerid, "BasePopitka") && GetPVarInt(playerid, "PlayerInBase"))
	{
	    Iter_Remove(BaseList, playerid);
	    PlayersInBase{0} --;
	    SetPVarInt(playerid, "baseBB", 1);
	    DeletePVar(playerid, "BasePopitka");
	    DeletePVar(playerid, "PlayerInBase");
		if (!PlayersInBase{0})
		{
	        PlayersInBase{0} = 0;
	        SendClientMessageToAll(COLOR_LIGHTBLUE, "Информация: Бейсджампинг окончен.");
        	foreach(new s: BaseList) { Iter_Remove(BaseList, s); }
		    BaseStarting[1] = 0;
		}
	}
	if(GetPVarInt(playerid, "TuninG")) tuninguse = false, DeletePVar(playerid, "TuninG");
    if(RaceStarting[2] == 3 && GetPVarInt(playerid, "PlayerInRace"))
    {
		DeletePVar(playerid, "PlayerInRace");
		Iter_Remove(RacersList, playerid);
  		PlayerScore{playerid} = 0;
        PlayersInRace{0} --;
        PlayerPosition{playerid} = 0;
    }
    if(GetPVarInt(playerid, #job_window))
	{
	    DeletePVar(playerid, #job_window);
	    if(lNomer[playerid] == 3) MoveDynamicObject(lift[2], 1353.06506, -1569.89990, 84.81356, 1.00);
	    if(lNomer[playerid] == 2) MoveDynamicObject(lift[1], 1340.48779, -1566.53296, 84.77550, 1.00);
	    if(lNomer[playerid] == 1) MoveDynamicObject(lift[0], 1328.02014, -1563.87646, 84.65142, 1.00);
		nLift[lNomer[playerid]-1] = 0;
		lNomer[playerid] = 0;
	}
	ResetPlayerWeapons(playerid);
	for(new i;i!=21;i++)PlayerTextDrawHide(playerid, DartProjectTD[i][playerid]);
	if(!AntiFakeKill[playerid]) return KickEx(playerid,3);
	AntiFakeKill[playerid] = false;
	SetPVarInt(playerid,"K_Times",GetPVarInt(playerid,"K_Times") + 1);
	if(GetPVarInt(playerid,"K_Times") > 1) return KickEx(playerid,4);
	pTemp[playerid][pSpawn] = false;
	if(PlayerInfo[playerid][pJob] == 2)
	{
		if(gcontract{playerid} == true)
		{
			Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]);
			gcontract{playerid} = false;
		}
	}
    if(IsAGang(killerid) && IsAGang(playerid) && killerid != INVALID_PLAYER_ID)
	{
	    for(new i= 0; i < sizeof(GZInfo); i++)
		{
			if(GZInfo[i][ZoneOnBattle] == 1)
			{
				if(PlayerInfo[killerid][pMRInections] != PlayerInfo[playerid][pMRInections])
				{
					if(PlayerInfo[killerid][pMRInections] == GZInfo[i][gNapad] || PlayerInfo[killerid][pMRInections] == GZInfo[i][gFrakVlad])
					{
						if(PlayerInfo[playerid][pMRInections] == GZInfo[i][gNapad] || PlayerInfo[playerid][pMRInections] == GZInfo[i][gFrakVlad])
						{
							SendDead(PlayerInfo[killerid][pMRInections],PlayerInfo[playerid][pMRInections],killerid,playerid,reason);
							CountOnZone[PlayerInfo[killerid][pMRInections]]++;
							break;
						}
					}
				}
			}
		}
	}
	if(BizWarTime > 0)
	{
		if(ISAMAFIA(killerid) && ISAMAFIA(playerid) &&  killerid != INVALID_PLAYER_ID)
		{
			if(PlayerInfo[killerid][pMRInections] != PlayerInfo[playerid][pMRInections])
			{
				if(PlayerInfo[killerid][pMRInections] == MZInfo[bNapad] || PlayerInfo[killerid][pMRInections] == MZInfo[bFrakVlad])
				{
					if(PlayerInfo[playerid][pMRInections] == MZInfo[bNapad] || PlayerInfo[playerid][pMRInections] == MZInfo[bFrakVlad])
					{
						switch(MZInfo[bMesto])
						{
						case 1:
							if(PlayerToKvadrat(killerid,300.755706, 2402.644531, 468.755706, 2580.644531) && PlayerToKvadrat(playerid,300.755706, 2402.644531, 468.755706, 2580.644531))
							{
								SendDead(PlayerInfo[killerid][pMRInections],PlayerInfo[playerid][pMRInections],killerid,playerid,reason);
								MZInfo[bCountDead][PlayerInfo[killerid][pMRInections]]++;
							}
						case 2:
							if(PlayerToKvadrat(killerid,-855.6808,1891.0676,-519.0121,2128.4995) && PlayerToKvadrat(playerid,-855.6808,1891.0676,-519.0121,2128.4995))
							{
								SendDead(PlayerInfo[killerid][pMRInections],PlayerInfo[playerid][pMRInections],killerid,playerid,reason);
								MZInfo[bCountDead][PlayerInfo[killerid][pMRInections]]++;
							}
						case 3:
							if(PlayerToKvadrat(killerid,275.881378, 797.211608, 443.881378, 973.211608) && PlayerToKvadrat(playerid,275.881378, 797.211608, 443.881378, 973.211608))
							{
								SendDead(PlayerInfo[killerid][pMRInections],PlayerInfo[playerid][pMRInections],killerid,playerid,reason);
								MZInfo[bCountDead][PlayerInfo[killerid][pMRInections]]++;
							}
						}
					}
				}
			}
		}
	}
	if(AlhambraDJ == true && AlhambraDJID == playerid) AlhambraDJ = false, AlhambraDJID = INVALID_PLAYER_ID;
	if(reason == 38 && GetPlayerState(killerid) == PLAYER_STATE_PASSENGER)
	{
		new warnn[128];
		format(warnn, sizeof(warnn), "<Warning> %s[%d]: убил с минигана %s[%d] wep %d guns %d",PlayerInfo[killerid][pNames],killerid,PlayerInfo[playerid][pNames],playerid,GetPlayerWeapon(killerid),GetPlayerAmmo(killerid));
		ABroadCast(0xff0000ff,warnn,2);
		RemovePlayerFromVehicle(killerid);
	}
	if(reason == 38)
	{
		format(stringer,MAX_STR, "<Warning> %s[%d]: убил с минигана %s[%d]   wep %d  guns %d",PlayerInfo[killerid][pNames],killerid,PlayerInfo[playerid][pNames],playerid,GetPlayerWeapon(killerid),GetPlayerAmmo(killerid));
		ABroadCast(0xFF0000AA,stringer,1);
		RemoveFromVehicle(killerid);
	}
	PlayerInfo[playerid][pHealthPlayer] = 100;
	SetPlayerHealthAC(playerid, PlayerInfo[playerid][pHealthPlayer]);
	DeletePVar(playerid, "udar");
	if(GetPVarInt(playerid, #LessPil))
	{
		DeletePVar(playerid, #OldLessSkin);
		DeletePVar(playerid, #LessPil);
		DeletePVar(playerid, #LessProc);
		DeletePVar(playerid, #Derevo);
		DeletePVar(playerid, #LessStatus);
	}
	TextDrawHideForPlayer(playerid,ProcentDraw[playerid]);
	TextDrawHideForPlayer(playerid,AmountLDraw[playerid]);
	RemovePlayerAttachedObject(playerid,1);
	RemovePlayerAttachedObject(playerid,2);
	RemovePlayerAttachedObject(playerid,3);
	RemovePlayerAttachedObject(playerid,4);
	RemovePlayerAttachedObject(playerid,0);
	DeletePVar(playerid, "usemats");
	if(GetPVarInt(playerid, "SelectChar") == 255)
	{
		SetPlayerSkin(playerid, GetPVarInt(playerid, "OldSkin"));
		PlayerInfo[playerid][pChar] = GetPVarInt(playerid, "OldSkin");
		DeletePVar(playerid, "SelectChar");
	}
	if(PlayerInfo[playerid][pJob] == 7) PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pDrugtime] = 0;
	forma{playerid} = false;
	keysvorota{playerid} = false;
	proverkaforma{playerid} = false;
	PlayerInfo[playerid][pLocal] = 255;
	DisablePlayerCheckpoint(playerid);
	keys[playerid] = 0;
	if(PlayerInfo[playerid][pMRInections] == 4) Medics -= 1;
	if(PlayerInfo[playerid][pWanted] > 0)
	{
		if(IsACop(killerid))
		{
			PlayerInfo[playerid][pMestoJail] = 1;
			UpdatePlayerData(playerid, "pMestoJail", PlayerInfo[playerid][pMestoJail]);
			if(PlayerInfo[playerid][pWanted] == 1)
			{
				PlayerInfo[playerid][pCash]-=50000;
				PlayerInfo[killerid][pCash]+=50000;
				GameTextForPlayer(playerid, "~r~-$50000", 5000, 1);
				SCM(playerid,COLOR_YELLOW,"Вас посадили в тюрьму на 600 секунд. Штраф 50.000 вирт");
				SCM(killerid,COLOR_YELLOW,"Вы посадили преступника на 600 секунд. Премия 50.000 вирт");
				PlayerInfo[playerid][pWanted] =0;
				UpdatePlayerData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
				PlayerInfo[playerid][pJailed] = 1;
				PlayerInfo[playerid][pJailTime] = 600;
				ResetPlayerWeapons(playerid);
			}
			else if(PlayerInfo[playerid][pWanted] == 2)
			{
				GiveMoney(killerid,0);
				ResetPlayerWeapons(playerid);
				PlayerInfo[playerid][pCash]-=60000;
				PlayerInfo[killerid][pCash]+=60000;
				GameTextForPlayer(playerid, "~r~-$60000", 5000, 1);
				SCM(playerid,COLOR_YELLOW,"Вас посадили в тюрьму на 1200 секунд. Штраф 60.000 вирт");
				SCM(killerid,COLOR_YELLOW,"Вы посадили преступника на 1200 секунд. Премия 60.000 вирт");
				PlayerInfo[playerid][pJailed] = 1;
				PlayerInfo[playerid][pJailTime] = 1200;
				PlayerInfo[playerid][pWanted] =0;
				UpdatePlayerData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
			}
			else if(PlayerInfo[playerid][pWanted] == 3)
			{
				GiveMoney(killerid,0);
				ResetPlayerWeapons(playerid);
				PlayerInfo[playerid][pCash]-=3;
				PlayerInfo[killerid][pCash]+=1;
				GameTextForPlayer(playerid, "~r~-$3", 5000, 1);
				SCM(playerid,COLOR_YELLOW,"Вас посадили в тюрьму на 1800 секунд. Штраф 3 вирт");
				SCM(killerid,COLOR_YELLOW,"Вы посадили преступника на 1800 секунд. Премия 1 вирт");
				PlayerInfo[playerid][pJailed] = 1;
				PlayerInfo[playerid][pJailTime] = 1800;
				PlayerInfo[playerid][pWanted] =0;
				UpdatePlayerData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
			}
			else if(PlayerInfo[playerid][pWanted] == 4)
			{
				GiveMoney(killerid,0);
				ResetPlayerWeapons(playerid);
				PlayerInfo[playerid][pCash]-=4;
				PlayerInfo[killerid][pCash]+=1;
				GameTextForPlayer(playerid, "~r~-$4", 5000, 1);
				SCM(playerid,COLOR_YELLOW,"Вас посадили в тюрьму на 2400 секунд. Штраф 4 вирт");
				SCM(killerid,COLOR_YELLOW,"Вы посадили преступника на 2400 секунд. Премия 1 вирт");
				PlayerInfo[playerid][pJailed] = 1;
				PlayerInfo[playerid][pJailTime] = 2400;
				PlayerInfo[playerid][pWanted] =0;
				UpdatePlayerData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
			}
			else if(PlayerInfo[playerid][pWanted] == 5)
			{
				GiveMoney(killerid,0);
				ResetPlayerWeapons(playerid);
				PlayerInfo[playerid][pCash]-=5;
				PlayerInfo[killerid][pCash]+=1;
				GameTextForPlayer(playerid, "~r~-$5", 5000, 1);
				SCM(playerid,COLOR_YELLOW,"Вас посадили в тюрьму на 3000 секунд. Штраф 5 вирт");
				SCM(killerid,COLOR_YELLOW,"Вы посадили преступника на 3000 секунд. Премия 1 вирт.");
				PlayerInfo[playerid][pJailed] = 1;
				PlayerInfo[playerid][pJailTime] = 3000;
				PlayerInfo[playerid][pWanted] =0;
				UpdatePlayerData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
			}
			else if(PlayerInfo[playerid][pWanted] >= 6)
			{
				GiveMoney(killerid,0);
				ResetPlayerWeapons(playerid);
				PlayerInfo[playerid][pCash]-=6;
				PlayerInfo[killerid][pCash]+=1;
				GameTextForPlayer(playerid, "~r~-$6", 5000, 1);
				SCM(playerid,COLOR_YELLOW,"Вас посадили в тюрьму на 3600 секунд. Штраф 6 вирт");
				SCM(killerid,COLOR_YELLOW,"Вы посадили преступника на 3600 секунд. Премия 1 вирт.");
				PlayerInfo[playerid][pJailed] = 1;
				PlayerInfo[playerid][pJailTime] = 3600;
				PlayerInfo[playerid][pWanted] =0;
				UpdatePlayerData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
			}
		}
		PlayerInfo[playerid][pWanted] = 0;
		UpdatePlayerData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
	}
	new caller = GetPVarInt(playerid, "Mobile");
	if(caller != 999)
	{
		SCM(caller,  COLOR_GRAD2, "Связь оборвалась...");
		CellTime[caller] = false;
		CellTime[playerid] = false;
		SetPVarInt(caller, "Mobile", 999);
		SetPVarInt(playerid, "Mobile", 999);
	}
	if(PlayerInfo_MP_START{playerid} && PlayerInfo_MP_START{killerid} && GetPVarInt(playerid,"PlayerInfo_MP_Staus") != GetPVarInt(killerid,"PlayerInfo_MP_Staus"))
	{
	    new mes[100];
	    DeathMatch_Score[GetPVarInt(playerid,"PlayerInfo_MP_Staus")-1]++;
		format(mes,sizeof(mes), "C.TERRORIST: ~w~%i",DeathMatch_Score[1]);
		TextDrawSetString(CounterSText[8], mes);
		format(mes,sizeof(mes), "TERRORIST: ~w~%i",DeathMatch_Score[0]);
		TextDrawSetString(CounterSText[9], mes);
		format(mes,sizeof(mes), "~w~%s ~r~killed ~w~%s",PlayerInfo[killerid][pNames],PlayerInfo[playerid][pNames]);
		TextDrawSetString(CounterSText[10], mes);
		SetPlayerHealthAC(killerid, 100.0);
		return 1;
	}
	if(IsAGang(killerid))
	{
		if(PlayerInfo[playerid][pMRInections] == 19 || PlayerInfo[playerid][pMRInections] == 3 || PlayerInfo[playerid][pMRInections] == 27)
		{
			for(new i =0;i<sizeof(GZInfo);i++)
			{
				if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
				{
					forma{killerid} = true;
					PlayerInfo[playerid][pModel] =252;
					SCM(playerid,  COLOR_YELLOW, "Вы потеряли армейскую форму");
					SCM(killerid,  COLOR_YELLOW2, "Вы cняли с армейца форму, введите /switchskin, чтобы переодеться");
					format(stringer,SMALL_SIZE, "%s потерял армейскую форму", PlayerInfo[playerid][pNames]);
					SendFamilyMessage(19,COLOR_YELLOW2, stringer);SendFamilyMessage(3,COLOR_YELLOW2, stringer);SendFamilyMessage(27,COLOR_YELLOW2, stringer);
					SetPVarInt(playerid,"StartRabWork",0);
					SpawnPlayer(playerid);
				}
			}
		}
	}
	if(IsAGang(killerid))
	{
		if(PlayerInfo[playerid][pMRInections] == 19)
		{
			keysvorota{killerid} = true;
			SCM(playerid, COLOR_YELLOW, "Бандит украл у Вас ключи! Теперь он сможет открыть ворота Вашей армии.");
			SCM(killerid, COLOR_YELLOW2, "Вы украли ключи у армейца! Теперь Вы сможете открыть ворота его армии.");
			format(stringer, SMALL_SIZE, "%s потерял ключи от ворот армии.", PlayerInfo[playerid][pNames]);
			SendFamilyMessage(19,COLOR_YELLOW2, stringer);
			SpawnPlayer(playerid);
		}
	}
	if(IsAGang(killerid))
	{
		if(PlayerInfo[playerid][pMRInections] == 1 || PlayerInfo[playerid][pMRInections] == 10 || PlayerInfo[playerid][pMRInections] == 21)
		{
			for(new i =0;i<sizeof(GZInfo);i++)
			{
				if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
				{
					keys[killerid] += 1;
					SCM(playerid,  COLOR_YELLOW, "Вы потеряли ключи от камеры!");
					SCM(killerid,  COLOR_YELLOW, "Вы забрали у полицейского ключи от камеры!");
					format(stringer,SMALL_SIZE, "Полицейский %s потерял ключи от камеры", PlayerInfo[playerid][pNames]);
					SendFamilyMessage(1,COLOR_YELLOW2, stringer);
					SendFamilyMessage(2,COLOR_YELLOW2, stringer);
					SendFamilyMessage(10,COLOR_YELLOW2, stringer);
					SendFamilyMessage(21,COLOR_YELLOW2, stringer);
				}
			}
		}
	}
	race_death(playerid);
	DisablePlayerCheckpoint(playerid);
	if(PlayerInfo[playerid][pHospital] != 1)
	{
		if(IsAGang(playerid) || IsACop(playerid) || IsAArm(playerid) || IsAMedic(playerid) || ISAMAFIA(playerid) || GetPVarInt(playerid, "AntiDeathRace") || GetPVarInt(playerid, "BasePopitka") > 0 || GetPVarInt(playerid, "baseBB") || PlayerInfo[playerid][pPrison] || PlayerInfo_MP_START{playerid}) return 1;
	    PlayerInfo[playerid][pHospital] = 1;
	    pTemp[playerid][pInHospital] = true;
	}
	return 1;
}
race_death(playerid)
{
	if (GetPVarInt(playerid, "PlayerInRace") == 1 && RaceStarting[2] == 1)
	{
	    SetPVarInt(playerid, "AntiDeathRace", 1);
	    Iter_Remove(RacersList, playerid);
		PlayersInRace{0} --;
  		PlayerScore{playerid} = 0;
	    for(new v = 0;v!= 10; v++) PlayerTextDrawHide(playerid, Race[v][playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid, "PlayerInRace");
		DestroyVehicle(GetPVarInt(playerid, "race_check"));
		format(format_string,128,"[RACE]: %s(%d) разбился. Участников: %i", PlayerInfo[playerid][pNames], playerid, PlayersInRace{0});
		RaceChat(COLOR_LIGHTBLUE, format_string);
		if (PlayersInRace{0} == 0)
		{
	        raceTime = 1;
			PlayersInRace{0} = 0;
	        SendClientMessageToAll(COLOR_YELLOW, "Информация: Все участники гонки погибли, гоночные мероприятия окончены.");
        	foreach(new s: RacersList)
		    {
				for(new v = 0;v!= 10; v++) PlayerTextDrawHide(s, Race[v][s]);
          		PlayerScore{s} = 0;
		        PlayerPosition{s} = 0;
		        Iter_Remove(RacersList, s);
		    }
		    RaceStarting[2] = 0;
		    typeRace = 3;
	        //state RaceStarted:No;
		}
	}
}
public OnPlayerSpawn(playerid)
{
    SetPVarInt(playerid,"Anti_AirFly",gettime()+3);
	PlayerInfo[playerid][pHealthPlayer] = 100.0;
	AntiFakeGun[playerid] = 0;
	SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	for(new i; i != 4; i++) TextDrawShowForPlayer(playerid, Logo[i]);
	DeletePVar(playerid, "K_Times");
	AntiFakeKill[playerid] = true;
	if(!PlayerInfo[playerid][pLogin] && cheaters{playerid} == false) KickEx(playerid, 75);
	if(PlayerInfo[playerid][pMRInections] > 0)
 	{
	    if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
		else SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
	}
	if(PlayerInfo[playerid][pMRInections] <= 0) SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	if(RINFO[playerid][sID] != INVALID_PLAYER_ID)
	{
		if(!PlayerInfo[RINFO[playerid][sID]][pLogin] && RINFO[playerid][sDialog] == false)
		{
			TogglePlayerSpectating(playerid, true);
			GameTextForPlayer(playerid,"~r~PLAYER DISCONNECT",3000,3);
			RINFO[playerid][sDialog] = true;
			return SPD(playerid,238,0,"{FF6F00}Внимание!","{FFFFFF}Игрок, за которым Вы следили вышел\nХотите отключить Recon?","Выйти","Отмена");
		}
		RINFO[playerid][sDialog] = false;
		for(new x; x < 2; x++) PlayerTextDrawHide(playerid, ReconPlayerText[playerid][x]);
		for(new x; x < 32; x++) TextDrawHideForPlayer(playerid, ReconText[x]);
		CancelSelectTextDraw(playerid);
		SetPlayerPosEx(playerid,RINFO[playerid][sPos][0],RINFO[playerid][sPos][1],RINFO[playerid][sPos][2]);
		SetPlayerInterior(playerid,RINFO[playerid][sInt]);
		SetPlayerVirtualWorld(playerid,RINFO[playerid][sVirt]);
		SetPlayerFacingAngle(playerid,RINFO[playerid][sPos][3]);
		SetCameraBehindPlayer(playerid);
		RINFO[playerid][sID] = INVALID_PLAYER_ID;
		return 1;
	}
	SetPlayerSpawn(playerid);
	return 1;
}
public OnPlayerEnterCheckpoint(playerid)
{
    if(GetPVarInt(playerid,"WAXTABLYA")) DeletePVar(playerid,"WAXTABLYA"),DisablePlayerCheckpoint(playerid);
	new tmpcar = GetPlayerVehicleID(playerid);
	if(VertMats[playerid]==1)
	{
		if(vertmatbi >= 10000)
		{
			SCM(playerid,COLOR_GREY, "Вертолёт загружен");
			SCM(playerid, COLOR_WHITE,"Отвезите материалы на зону 51");
			VertMats[playerid]=2;
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid,334.5107,1994.6956,17.6406,10);
			return 1;
		}
		vertmatbi += 10000;
		SCMF(playerid,TEAM_GROVE_COLOR, "Маты успешно загружены! Компоненты материалов в вертолёте: %d/10000", vertmatbi);
		SCM(playerid, COLOR_WHITE,"Отвезите материалы на зону 51");
		VertMats[playerid]=2;
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,334.5107,1994.6956,17.6406,10);
	}
	else if(VertMats[playerid]==2)
	{
		if(armmatbi == 100000)
		{
			SCM(playerid, COLOR_GREY, "Склад заполнен!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		vertmatbi = 0;
		armmatbi += 10000;
		SCMF(playerid,TEAM_GROVE_COLOR,"Материалы успешно доставлены на склад! Компоненты материалов в вертолёте: %d/10000", vertmatbi);
		SCMF(playerid,COLOR_WHITE,"На складе Зоны 51 %d/100000 матов", armmatbi);
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		VertMats[playerid]=0;
		if(armmatbi >= 100000) { armmatbi = 100000; }
		SaveMaterials();
		Update3DTextsArmy();
	}
	else if(MatsArmyCar[playerid]==20)
	{
		if(MatHaul[tmpcar-matscar[0]][mLoad] >= 5000 || armmatbi <= 1000)
		{
			SCM(playerid, COLOR_GREY, "Склад пуст или грузовик полон!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		MatHaul[tmpcar-matscar[0]][mLoad] += 5000;
		SCMF(playerid,TEAM_GROVE_COLOR,"Материалы успешно загружены! Компоненты материалов: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
		armmatbi -= 5000;
		DisablePlayerCheckpoint(playerid);
		SCMF(playerid,COLOR_WHITE,"На складе Зоны 51: %d/100000", armmatbi);
		SCM(playerid,COLOR_WHITE,"• {FFC800}[Подсказка] {ffffff}Используйте /carm, чтобы начать развозку материалов");
		SaveMaterials();
		Update3DTextsArmy();
	}
	if(GetPVarInt(playerid, "playerisGPS")) DisablePlayerCheckpoint(playerid), SCM(playerid, COLOR_WHITE, "Вы успешно добрались до нужного Вам места. GPS навигатор отключен"), DeletePVar(playerid, "playerisGPS");
	else if(GetPVarInt(playerid, "gps_pic") == 5) DisablePlayerCheckpoint(playerid), SCM(playerid, COLOR_WHITE, "Вы прибыли на местоназначение."), DeletePVar(playerid, "gps_pic");
	else if(GetPVarInt(playerid, "gps_pic") == 832) DisablePlayerCheckpoint(playerid), SCM(playerid, COLOR_WHITE, "Вы прибыли на местоназначение."), DeletePVar(playerid, "gps_pic");
	else if(MatsArmyCar[playerid]==1000)
	{
		if(PlayerHaul[tmpcar-comptruck[0]][pLoad] >= 5000)
		{
			SCM(playerid,COLOR_GREY, "Машина заполнена!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		PlayerHaul[tmpcar-comptruck[0]][pLoad] += 5000;// Згрузили грузовик..
		SCMF(playerid,TEAM_GROVE_COLOR,"Продукты загружены! Продуктов в машине: %d/5000",PlayerHaul[tmpcar-comptruck[0]][pLoad]);
		DisablePlayerCheckpoint(playerid);
		SCM(playerid,COLOR_WHITE,"• {FFC800}[Подсказка] {ffffff}Введите: /sellprodz, чтобы начать развозку. Причение: Нужно быть у бизнеса ");
	}
	else if(MatsArmyCar[playerid]==2525)
	{
		if(PlayersHaul[tmpcar-benzovoz[0]][sLoad] >= 5000)
		{
			SCM(playerid, COLOR_GREY, "Машина заполнена!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		PlayersHaul[tmpcar-benzovoz[0]][sLoad] += 5000;
		SCMF(playerid,TEAM_GROVE_COLOR,"Продукты загружены! Продуктов в машине: %d/5000",PlayersHaul[tmpcar-benzovoz[0]][sLoad]);
		DisablePlayerCheckpoint(playerid);
		SCM(playerid,COLOR_WHITE,"• {FFC800}[Подсказка] {ffffff}Введите: /sellbenz, чтобы начать развозку. Причение: Нужно быть у бизнеса");
	}
	else if(MatsArmyCar[playerid]==35)
	{
		if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || sfpdmats >= 49999)
		{
			SCM(playerid, COLOR_WHITE, "Склад SFPD заполнен, либо грузовик пуст!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;
		sfpdmats += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		SCMF(playerid,TEAM_GROVE_COLOR,"Материалы успешно доставлены на склад! Компоненты материалов: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
		SCMF(playerid,COLOR_WHITE,"Склад SFPD: %d/50000", sfpdmats);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid]==150)
	{
		if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || lvpdmats >= 49999)
		{
			SCM(playerid, COLOR_WHITE, "Склад LVPD заполнен, либо грузовик пуст!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;
		lvpdmats += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		SCMF(playerid,TEAM_GROVE_COLOR,"Материалы успешно доставлены на склад! Компоненты материалов: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
		SCMF(playerid,COLOR_WHITE,"Склад LVPD: %d/50000", lvpdmats);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid] == 228)
	{
		if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || armyvmf >= 49999)
		{
			SCM(playerid, COLOR_WHITE, "Склад ВМФ заполнен, либо грузовик пуст!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;
		armyvmf += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		SCMF(playerid,TEAM_GROVE_COLOR,"Материалы успешно доставлены на склад! Компоненты материалов: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
		SCMF(playerid,COLOR_WHITE,"Склад ВМФ: %d/50000", armyvmf);
		SaveMaterials();
		Update3DTextsArmy();
	}
	else if(MatsArmyCar[playerid]==100)
	{
		if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || ballasmatbi >= 49999)
		{
			SCM(playerid, COLOR_WHITE, "Склад The Ballas заполнен, либо грузовик пуст!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;
		ballasmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		SCMF(playerid,TEAM_GROVE_COLOR,"Материалы успешно доставлены на склад! Компоненты материалов: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
		SCMF(playerid,COLOR_WHITE,"Склад The Ballas: %d/50000", ballasmatbi);
		SaveMaterials();
		ObshiakGang();
	}
	else if(MatsArmyCar[playerid]==101)
	{
		if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || vagosmatbi >= 49999)
		{
			SCM(playerid, COLOR_WHITE, "Склад The Vagos заполнен, либо грузовик пуст!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;
		vagosmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		SCMF(playerid,TEAM_GROVE_COLOR,"Материалы успешно доставлены на склад! Компоненты материалов: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
		SCMF(playerid,COLOR_WHITE,"Склад The Vagos: %d/50000", vagosmatbi);
		SaveMaterials();
		ObshiakGang();
	}
	else if(MatsArmyCar[playerid]==102)
	{
		if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || groovmatbi >= 49999)
		{
			SCM(playerid, COLOR_WHITE, "Склад The Grove заполнен, либо грузовик пуст!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;
		groovmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		SCMF(playerid,TEAM_GROVE_COLOR,"Материалы успешно доставлены на склад! Компоненты материалов: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
		SCMF(playerid,COLOR_WHITE,"Склад The Grove: %d/50000", groovmatbi);
		SaveMaterials();
		ObshiakGang();
	}
	else if(MatsArmyCar[playerid]==103)
	{
		if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || aztekmatbi >= 49999)
		{
			SCM(playerid, COLOR_WHITE, "Склад The Aztec заполнен, либо грузовик пуст!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;
		aztekmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		SCMF(playerid,TEAM_GROVE_COLOR,"Материалы успешно доставлены на склад! Компоненты материалов: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
		SCMF(playerid,COLOR_WHITE,"Склад The Aztek: %d/50000", aztekmatbi);
		SaveMaterials();
		ObshiakGang();
	}
	else if(MatsArmyCar[playerid]==104)
	{
		if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || rifamatbi >= 49999)
		{
			SCM(playerid, COLOR_WHITE, "Склад The Rifa заполнен, либо грузовик пуст!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;
		rifamatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		SCMF(playerid,TEAM_GROVE_COLOR,"Материалы успешно доставлены на склад! Компоненты материалов: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
		SCMF(playerid,COLOR_WHITE,"Склад The Rifa: %d/50000", rifamatbi);
		SaveMaterials();
		ObshiakGang();
	}
	else if(MatsArmyCar[playerid]==31)
	{
		if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || lspdmatbi >= 49999)
		{
			SCM(playerid, COLOR_WHITE, "Склад LSPD заполнен, либо грузовик пуст!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;
		lspdmatbi += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		SCMF(playerid,TEAM_GROVE_COLOR,"Материалы успешно доставлены на склад! Компоненты материалов: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
		SCMF(playerid,COLOR_WHITE,"Склад LSPD: %d/50000", lspdmatbi);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid]==24)
	{
		if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || fbimats >= 49999)
		{
			SCM(playerid, COLOR_WHITE, "Склад FBI заполнен либо грузовик пуст!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;
		fbimats += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		SCMF(playerid,TEAM_GROVE_COLOR,"Материалы успешно доставлены на склад! Компоненты материалов: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
		SCMF(playerid,COLOR_WHITE,"Склад FBI: %d/50000", fbimats);
		SaveMaterials();
	}
	else if(MatsArmyCar[playerid]==21)
	{
		if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || armmatbi >= 49999)
		{
			SCM(playerid, COLOR_GRAD1, "Cклад Армии SF заполнен, или грузовик пуст!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;
		armmatsf += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		SCMF(playerid,TEAM_GROVE_COLOR,"Оружие успешно доставлено! Оружие: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
		SCMF(playerid,COLOR_WHITE,"Склад Армии SF: %d/50000", armmatsf);
		SaveMaterials();
		Update3DTextsArmy();
	}

	else if(MatsArmyCar[playerid]==35)
	{
		if(MatHaul[tmpcar-matscar[0]][mLoad] == 0 || sfpdmats >= 49999)
		{
			SCM(playerid, COLOR_WHITE, "Склад SFPD заполнен, либо грузовик пуст!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;
		sfpdmats += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		SCMF(playerid,TEAM_GROVE_COLOR,"Материалы успешно доставлены на склад! Компоненты материалов: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
		SCMF(playerid,COLOR_WHITE,"Склад SFPD: %d/50000", sfpdmats);
		SaveMaterials();
	}

	else if(MatsArmyCar[playerid]==25)
	{
		if(MatHaul[tmpcar-matscar[0]][mLoad] == 0)
		{
			SCM(playerid, COLOR_WHITE, "Склад SFPD заполнен, либо грузовик пуст!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		MatHaul[tmpcar-matscar[0]][mLoad] -= 5000;
		armmatsf += 5000;
		DisablePlayerCheckpoint(playerid);
		MatsArmyCar[playerid]=0;
		SCMF(playerid,TEAM_GROVE_COLOR,"Оружие успешно доставлено! Оружие: %d/5000", MatHaul[tmpcar-matscar[0]][mLoad]);
		SCMF(playerid,COLOR_WHITE,"Склад Армии Sf: %d/50000", armmatsf);
		SaveMaterials();
		Update3DTextsArmy();
	}
	else if(GetPVarInt(playerid, #LessPil) && IsPlayerInRangeOfPoint(playerid, 3.0, -749.0853,-121.2919,66.0043))
	{
		DisablePlayerCheckpoint(playerid);
		RemovePlayerAttachedObject(playerid,3);
		new rand = 30 + random(50);
		GivePVarInt(playerid, #jobCash, rand);
		stringer = ""; format(stringer,30,"+%d",rand);
		SetPlayerChatBubble(playerid, stringer, 0x96E300AA, 20.0, 5000);
		ClearAnimations(playerid);
		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
		DeletePVar(playerid, #Derevo);
		SetPVarInt(playerid, #LessProc, 0);
		SetPVarInt(playerid, #LessStatus, 0);
		TextDrawShowForPlayer(playerid, ProcentDraw[playerid]);
		SetPVarInt(playerid, #Derevo, TOTALDEREVO);
		TOTALDEREVO++;
		SetPlayerCheckpoint(playerid,Derevo[GetPVarInt(playerid, #Derevo)][0],Derevo[GetPVarInt(playerid, #Derevo)][1],Derevo[GetPVarInt(playerid, #Derevo)][2], 3.0);
		return 1;
	}
	else if(PlayerToPoint(1.5,playerid,-2080.9053,-105.1343,2855.1479)) return ShowPlayerDialog(playerid,dExamType,2,"{FF6F00}Получение лицензий","{FFFFFF}Выберите вид транспорта, на который хотите получить лицензию:\nНаземный транспорт\nВоздушный транспорт","Принять","Отмена");
	else if(PlayerToPoint(1.5,playerid,359.8466,184.7337,1008.3828))
	{
		if(PlayerInfo[playerid][pMRInections] != 0) return SCM(playerid, COLOR_GRAD1, "Вы состоите в организации");
		if(!GetPVarInt(playerid, "useguns") && GetPVarInt(playerid, "gps_pic") == 2) return SPD(playerid, 10092, DIALOG_STYLE_MSGBOX, "{FF6F00}Устройство на работу","{FFFFFF}Посмотреть список доступных работ?", "Просмотр", "Отмена");
	}
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid) return 1;
public OnPlayerEnterRaceCheckpoint(playerid)
{
	DisablePlayerRaceCheckpoint(playerid);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(PlayerInfo[playerid][pJob] == 6 && GetPVarInt(playerid, #busID) == GetPlayerVehicleID(playerid))
	    {
	        new
				pos = GetPVarInt(playerid, #busPos),
	        	route = GetPVarInt(playerid, #busRoute),
	        	money_ = GetPVarInt(playerid, #busMoney);
	        	
 	        if((route == 0 && (pos == 1-1 || pos == 14-1 || pos == 21-1 || pos == 28-1 || pos == 32-1 || pos == 34-1)))
			{
			    new r_name [ 50 ];
			    switch(route)
			    {
					case 0: r_name = "ЖДЛС - Автошкола";
			    }
    			format(stringer,24+100,"Водитель: %s, Маршрут: %s, автобус отправляется через 10 секунд!",PlayerInfo[playerid][pNames], r_name);
				ProxDetector(30.0,playerid,stringer,0x44b2ffff,0x44b2ffff,0x44b2ffff,0x44b2ffff,0x44b2ffff);
		 		SetTimerEx("bus_stop",10000,false,"i",playerid);
		 		return 1;
			}
			
	        if(pos == 39)
	        {
	            PlayerInfo[playerid][pCash] += money_;
	            SCMF(playerid, COLOR_GREEN, "Вы проехали один рейс, Вы заработали: $%i", money_);
	            SetPVarInt(playerid, #busPos, 0), SetPVarInt(playerid, #busMoney, 0);
	        }
	        else GivePVarInt(playerid, #busPos, 1), GivePVarInt(playerid, #busMoney, 120);
	        
	        new t_pos = GetPVarInt(playerid, #busPos), type_bus_race = 0;
			if((route == 0 && (t_pos == 1-1 || t_pos == 14-1 || t_pos == 21-1 || t_pos == 28-1 || t_pos == 32-1 || t_pos == 34-1))) type_bus_race = 1;
	        SetPlayerRaceCheckpoint(playerid,type_bus_race,aBusPos[route][t_pos][0],aBusPos[route][t_pos][1],aBusPos[route][t_pos][2],aBusPos[route][t_pos+1][0],aBusPos[route][t_pos+1][1],aBusPos[route][t_pos+1][2],4.0);
	    }
	    if(GetPVarInt(playerid,"race_check")==GetPlayerVehicleID(playerid))
	    {
			if (GetPVarInt(playerid, "PlayerInRace"))
			{
				if (++PlayerScore{playerid} == 52)
				{
				    switch (++PlayerWinners{0})
				    {
				        case 1:
				        {
							format_string="";
			            	format(format_string,128,"[RACE]: %s(%d) занял 1 место в гонке! Он получает: 3000 donate money.",PlayerInfo[playerid][pNames],playerid);
			            	RaceChat(COLOR_LIGHTBLUE,format_string);
			            	PlayerInfo[playerid][pDMInections] += 3000;
				        }
				        case 2:
				        {
				            format_string="";
			            	format(format_string,128,"[RACE]: %s(%d) занял 2 место в гонке! Он получает: 2000 donate money.",PlayerInfo[playerid][pNames],playerid);
			            	RaceChat(COLOR_LIGHTBLUE,format_string);
			            	PlayerInfo[playerid][pDMInections] += 2000;
				        }
				        case 3:
				        {
				            format_string="";
			            	format(format_string,128,"[RACE]: %s(%d) занял 3 место в гонке! Он получает: 1000 donate money.",PlayerInfo[playerid][pNames],playerid);
			            	RaceChat(COLOR_LIGHTBLUE,format_string);
			            	PlayerInfo[playerid][pDMInections] += 1000;
				        }
						default:
						{
						    format_string="";
     						format(format_string,128,"[RACE]: %s(%d) занял %d место в гонке! Он получает: 500 donate money.",PlayerInfo[playerid][pNames],playerid, PlayerWinners{0});
			            	RaceChat(COLOR_LIGHTBLUE,format_string);
			            	PlayerInfo[playerid][pDMInections] += 500;
						}
				    }
				    Iter_Remove(RacersList, playerid);
				    PlayersInRace{0} --;
				    PlayerScore{playerid} = 0;
     				for(new s = 0;s!= 10; s++) PlayerTextDrawHide(playerid, Race[s][playerid]);
				    DestroyVehicle(GetPVarInt(playerid, "race_check"));
				    SetPlayerPosEx(playerid, 827.0083,5.8989,1004.1870);
				    SetPlayerFacingAngle(playerid, 269.6992);
				    SetPlayerInterior(playerid, 3);
				    SetPlayerVirtualWorld(playerid, 300);
					format(race_str,800, "%s{FFFFFF}%i место: %s.\n ",race_str,PlayerWinners{0},PlayerInfo[playerid][pNames]);
					DeletePVar(playerid, "PlayerInRace");
					if (PlayersInRace{0} == 0)
					{
					    raceTime = 1;
					    PlayerWinners{0} = 0;
					    PlayersInRace{0} = 0;
					    foreach(new i: RacersList)
					    {
             				PlayerScore{i} = 0;
					        PlayerPosition{i} = 0;
					        Iter_Remove(RacersList, i);
					    }
					    SendClientMessageToAll(COLOR_YELLOW,"Информация: Гоночные мероприятия успешно закончены. '/racelist' - список победителей.");
					    RaceStarting[2] = 0;
					    typeRace = 3;
					    //state RaceStarted:No;
					}
				}
				else
				{
					foreach(new i: RacersList)
					{
					    if (i != -1 && PlayerScore {playerid} > PlayerScore {i} && i != playerid)
					    {
					        PlayerPosition{playerid}++;
					        PlayerPosition{i}--;
					    }
					    break;
					}
					if(PlayerScore{playerid} < 51) SetPlayerRaceCheckpoint(playerid, 0, los_santos_race[typeRace][PlayerScore{playerid}][0], los_santos_race[typeRace][PlayerScore{playerid}][1], los_santos_race[typeRace][PlayerScore{playerid}][2], los_santos_race[typeRace][PlayerScore{playerid}+1][0], los_santos_race[typeRace][PlayerScore{playerid}+1][1], los_santos_race[typeRace][PlayerScore{playerid}+1][2], 10.0);
					else SetPlayerRaceCheckpoint(playerid, 1, los_santos_race[typeRace][PlayerScore{playerid}][0], los_santos_race[typeRace][PlayerScore{playerid}][1], los_santos_race[typeRace][PlayerScore{playerid}][2], 0.0, 0.0, 0.0, 10.0);
					format_string="";
					format(format_string, 10, "~y~%i/52", PlayerScore{playerid});
				    GameTextForPlayer(playerid, format_string, 3000, 4);
			    	format(format_string, 30, "Point: ~w~%d/52", PlayerScore{playerid});
					PlayerTextDrawSetString(playerid,Race[6][playerid], format_string);
				}
			}
		}
	}
	return 1;
}
public OnPlayerLeaveRaceCheckpoint(playerid) return 1;
public OnRconCommand(cmd[]) return 1;
public OnObjectMoved(objectid) return 1;
public OnPlayerObjectMoved(playerid, objectid) return 1;
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	if(GetPVarInt(playerid, "anti_flood_pickup") < gettime())
	{
	    SetPVarInt(playerid, "anti_flood_pickup", gettime()+3);
		for( new i = 1; i <= BIZES; i++ )
		{
			if(IsPlayerInRangeOfPoint( playerid, 2.0, BizInfo[ i ][ EnterX ], BizInfo[ i ][ EnterY ], BizInfo[ i ][ EnterZ ] ) )
			{
				new strin[200];
				if(!strcmp( BizInfo[ i ][ bOwner ], "None", true ) ) format(strin,128,"{FFFFFF}Бизнес продается.\nНазвание бизнеса : %s\nВы можете его купить.\nЦена: %i $",BizInfo[i][bName], BizInfo [ i ] [ bPrice ] ), SPD( playerid, 65, DIALOG_STYLE_MSGBOX, "{FF6F00}Business", strin, "Купить", "Отмена" );
				else format(strin,128,"{FFFFFF}Владелец бизнеса: %s", BizInfo [ i ] [ bOwner ]), SPD( playerid, 65, DIALOG_STYLE_MSGBOX, "{FF6F00}Business", strin, "Вход", "Отмена" );
				return 1;
			}
		}
	}
	if(pickupid == DerevoP[GetPVarInt(playerid, #Derevo)])
	{
		ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
		SetPlayerAttachedObject(playerid,3,1463,5,0.045000,0.152000,0.217000,100.199966,-176.199951,102.500015,0.567000,0.327000,0.516000);
		SetPlayerCheckpoint(playerid,-749.0853,-121.2919,66.0043,3.0);
		SetPVarInt(playerid, #LessStatus, 1);
		SetPlayerArmedWeapon(playerid,0);
		DestroyDynamicPickup(pickupid);
		return 1;
	}
	return 1;
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(!PlayerInfo[playerid][pLogin]) return KickEx(playerid, 228);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, PickupInfo[pickupid][PickX], PickupInfo[pickupid][PickY], PickupInfo[pickupid][PickZ]) || PickupUp[playerid] == pickupid) return 1; PickupUp[playerid] = pickupid;
	if(pickupid == LessPick[0])
	{
		if(!GetPVarInt(playerid, #LessPil)) SPD(playerid, 154, 0, "{FF6F00}Лесопилка", "{FFFFFF}Вы хотите начать работу на лесопилке?", "Начать", "Отмена");
		else SPD(playerid, 157, 0, "{FF6F00}Лесопилка", "{FFFFFF}Вы хотите завершить работу на лесопилке?", "Завершить", "Отмена");
		return 1;
	}
	else if(pickupid == LessPick[1])
	{
		stringer = "";
		format(stringer,1000,"%s%s%s%s%s%s%s",HelpLes[0],HelpLes[1],HelpLes[2],HelpLes[3],HelpLes[4],HelpLes[5],HelpLes[6]);
		SPD(playerid, 0000, 0, "{FF6F00}Помощь новичку [ Лесопилка ]", stringer, "Закрыть", "");
		return 1;
	}
	else if(pickupid == buycard) return SPD(playerid, 9158, DIALOG_STYLE_LIST, "{FF6F00}Управление банковскими картами", "{FFFFFF}1. Открыть банковскую карту\n2. Управление банковской картой", "Выбрать", "Отмена");
	else if(pickupid == pickupjob) // Шахта
	{
		if(!Player_Job_Waxta{playerid} || !GetPVarInt(playerid, #drova)) return true;
		DisablePlayerCheckpoint(playerid);
		PlayerInfo[playerid][pCash] += 5000;
		DisablePlayerCheckpoint(playerid);
		RemovePlayerAttachedObject(playerid,2);
		RemovePlayerAttachedObject(playerid,0);
		ClearAnimations(playerid);
		DeletePVar(playerid, #drova);
		SendClientMessage(playerid, COLOR_WHITE, "Вы принесли {FF6F00}10{FFFFFF} кг руды и получили {FF6F00}5000$");
		return 1;
	}
	else if(pickupid == PickJob[0])
	{
	    if(!GetPVarInt(playerid, #job_window)) ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX,"{FF6F00}Устройство на работу","{FFFFFF}Здравствуйте!\n\nВы действительно хотите начать работу?","Да","Нет");
		else ShowPlayerDialog(playerid,2020,DIALOG_STYLE_MSGBOX,"{FF6F00}Увольнение с работы","{FFFFFF}Как успехи?\n\nВы действительно хотите закончить работу?","Да","Нет");
		return 1;
	}
	else if(pickupid == PickJob[1])
	{
	    if(!GetPVarInt(playerid, #job_window)) return 1;
	  	if(nLift[0] != 0) return SendClientMessage(playerid,CORANGE,"Этот подъемник занят!");
		if(!lNomer[playerid]) ShowPlayerDialog(playerid,3030,DIALOG_STYLE_MSGBOX,"{FF6F00}Подтверждение выбора","{FFFFFF}Вы хотите начать работать на подъемнике №1?","Да","Нет");
        else SendClientMessage(playerid,CORANGE,"Вы уже используете подъемник!");
        return 1;
	}
	else if(pickupid == PickJob[2])
	{
	    if(!GetPVarInt(playerid, #job_window)) return 1;
		if(nLift[1] != 0) return SendClientMessage(playerid,CORANGE,"Этот подъемник занят!");
		if(!lNomer[playerid]) ShowPlayerDialog(playerid,4040,DIALOG_STYLE_MSGBOX,"{FF6F00}Подтверждение выбора","{FFFFFF}Вы хотите начать работать на подъемнике №2?","Да","Нет");
        else SendClientMessage(playerid,CORANGE,"Вы уже используете подъемник!");
        return 1;
	}
	else if(pickupid == PickJob[3]) { SetPlayerPos(playerid,1338.3867,-1548.1984,13.5718); return 1; }
	else if(pickupid == PickJob[4]) { SetPlayerPos(playerid,1325.3414,-1558.5240,13.5397); return 1; }
	else if(pickupid == PickJob[6]) { SetPlayerPos(playerid,1353.0726,-1542.3827,85.5469); return 1; }
	else if(pickupid == PickJob[7]) { SetPlayerPos(playerid,1343.2299,-1550.8453,13.5718); return 1; }
	else if(pickupid == PickJob[5])
	{
	    if(!GetPVarInt(playerid, #job_window)) return 1;
		if(nLift[2] != 0) return SendClientMessage(playerid,CORANGE,"Этот подъемник занят!");
		if(!lNomer[playerid]) ShowPlayerDialog(playerid,7778,DIALOG_STYLE_MSGBOX,"{FF6F00}Подтверждение выбора","{FFFFFF}Вы хотите начать работать на подъемнике №3?","Да","Нет");
		else SendClientMessage(playerid,CORANGE,"Вы уже используете подъемник!");
		return 1;
	}
	
	else if(pickupid == pickCounter[0]) { SetPlayerPosEx(playerid, 2741.5806,-1782.0605,1647.7140); SetPlayerFacingAngle(playerid, 89.5852); SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 1); return 1; }
	else if(pickupid == pickCounter[1]) { SetPlayerPosEx(playerid, -2092.8357,84.7058,35.3134); SetPlayerFacingAngle(playerid, 88.9585); SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid, 0); return 1; }
	else if(pickupid == pickCounter[2]) return CheckMP(playerid);
	else if(pickupid == ammunation)
	{
	    if(!PlayerInfo[playerid][pLicenses][3]) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет лицензии на оружие");
		ShowPlayerDialog(playerid, 766, DIALOG_STYLE_TABLIST_HEADERS, "{FF6F00}Магазин оружия",
			"{FFFFFF}Оружие\t{FFFFFF}Цена\t{FFFFFF}Патроны\n\
			Deagle\t15.000$\t100\n\
			SD pistol\t5.000$\t100\n\
			M4\t10.000$\t100\n\
			AK-47\t10.000\t100\n\
			Бита\t3.000$\t1\n\
			Кастет\t3.000$\t1\n\
			Sniper Rifle\t45.000$\t15\n",
		"Купить", "Отмена");
		return 1;
	}
	else if(pickupid == yashik)
	{
		if(!IsAGang(playerid)) return 1;
		if(PlayerInfo[playerid][pMats] >= 250) return SendClientMessage(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Вы не можете взять больше");
		if(PlayerToPoint(10.0,playerid,308.0871,-168.2088,999.5938))
		{
			if(!armmatbi) return SendClientMessage(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Склад армии LV пуст");
			armmatbi -= 250;
		}
		SendClientMessage(playerid, 0x6495EDFF, "Вы взяли 250 материалов со склада армии");
		SendClientMessage(playerid, COLOR_GREEN, "Несите ящик в грузовик");
		PlayerInfo[playerid][pMats] += 250;
		ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
		SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
		ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
		SetPVarInt(playerid, "usemats", 1);
		SaveMaterials();
		return 1;
	}
	else if(pickupid == pickupAccessories)
	{
		if(GetPVarInt(playerid, "ACshop")) return 1;
		for(new i = 0x0; i != 9; i++) TextDrawShowForPlayer(playerid, ACshop[i]);
		PlayerTextDrawShow(playerid, ShopACcost[playerid]);
		SelectTextDraw(playerid, 0xFFFFFFAA);
		SetPVarInt(playerid, "ACshop", 1);
		SetPlayerPosEx(playerid, 847.6677,129.0413,3265.6860);
		SetPlayerFacingAngle(playerid, 220.1919);
		SetPlayerVirtualWorld(playerid, random(322));
		SetPlayerInterior(playerid, 1);
		SetPlayerCameraPos(playerid,848.764465, 126.835388, 3266.914794);
		SetPlayerCameraLookAt(playerid,846.628967, 131.268539, 3266.027587);
		TogglePlayerControllable(playerid, false);
		return 1;
	}
 	else if(pickupid >= Pickup[0] && pickupid <= Pickup[12])
	{
	    if(PlayerInfo[playerid][pMRInections] == 0) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы нигде не состоите");
	    else if(pickupid == Pickup[0] && PlayerInfo[playerid][pMRInections] != 1) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы не состоите в LSPD");
	   	else if(pickupid == Pickup[1] && PlayerInfo[playerid][pMRInections] != 2) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы не состоите в FBI");
	    else if(pickupid == Pickup[2])
		{
			if(PlayerInfo[playerid][pMRInections] != 27) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы не работаете в Военно-Морском Флоте");
			if(PlayerInfo[playerid][pModel] == 252) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}У Вас нет формы!");
		}
		else if(pickupid == Pickup[3] && PlayerInfo[playerid][pMRInections] != 4) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы не работаете в МЧС");
	    else if(pickupid == Pickup[4] && PlayerInfo[playerid][pMRInections] != 7) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы не работаете в Мэрии");
	    else if(pickupid == Pickup[5] && PlayerInfo[playerid][pMRInections] != 10) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы не работаете в SFPD");
	    else if(pickupid == Pickup[6] && PlayerInfo[playerid][pMRInections] != 11) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы не работаете в Автошколе");
	    else if(pickupid == Pickup[7] && PlayerInfo[playerid][pMRInections] != 16) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы не работаете в LS News");
        else if(pickupid == Pickup[8])
		{
			if(PlayerInfo[playerid][pMRInections] != 19) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы не работаете в Зоне 51");
			if(PlayerInfo[playerid][pModel] == 252) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}У Вас нет формы!");
		}
		else if(pickupid == Pickup[9] && PlayerInfo[playerid][pMRInections] != 21) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы не работаете в LVPD");
        else if(pickupid == Pickup[10] && PlayerInfo[playerid][pMRInections] != 25) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы не работаете в SWAT");
		else if(pickupid == Pickup[11] && PlayerInfo[playerid][pMRInections] != 26) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы не работаете в Правительстве");
		else if(pickupid == Pickup[12] && PlayerInfo[playerid][pMRInections] != 3) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы не работаете в Авианосце");
		if(!GetPVarInt(playerid,"StartRabWork")) ShowPlayerDialog(playerid,1642,DIALOG_STYLE_MSGBOX, "{FF6F00}Раздевалка","{FFFFFF}Вы хотите {FF6F00}начать {FFFFFF}рабочий день?","Начать","Выход");
		else ShowPlayerDialog(playerid,1642,DIALOG_STYLE_MSGBOX, "{FF6F00}Раздевалка","{FFFFFF}Вы хотите {FF0303}завершить {FFFFFF}рабочий день?","Завершить","Выход");
		return 1;
	}
	else if(pickupid >= autoshoppick[0] && pickupid <= autoshoppick[3])return GameTextForPlayer(playerid, "~g~print: ~w~\"/buycar\"", 3000, 3);
	else if(pickupid == pokupkas) return SPD(playerid, 2283, DIALOG_STYLE_LIST, "{FF6F00}Покупка деталей на автомобиль","{FFFFFF}» Купить номера на автомобиль [РАЗРАБОТКА]\n» Покупка колес (SWITCH)\n» Канистры с бензином (6 штук)\n» Балончики с краской","Купить","Выход");
	else if(pickupid == ProposeInt[0])
	{
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 3000, false, "d", playerid);
	    SetPlayerPosEx(playerid, 2219.4556,-35.9807,606.8281);
	    SetPlayerFacingAngle(playerid, 270.3960);
	    SetPlayerInterior(playerid, 1);
		return 1;
	}
	else if(pickupid == ProposeInt[1])
	{
	    SetPlayerPosEx(playerid, 1752.5032,-1747.1627,13.5444);
	    SetPlayerFacingAngle(playerid, 0.5899);
	    SetPlayerInterior(playerid, 0);
		return 1;
	}
	else if(pickupid == BasePic[0]) { SetPlayerPosEx(playerid,831.5885,7.0524,1004.1797),SetPlayerFacingAngle(playerid,120.23),SetPlayerInterior(playerid,3),SetPlayerVirtualWorld(playerid,301); return 1; }
	else if(pickupid == BasePic[1]) { SetPlayerPosEx(playerid,2177.1746,1117.2573,12.6484),SetPlayerFacingAngle(playerid,62.6900),SetPlayerInterior(playerid,0),SetPlayerVirtualWorld(playerid,0); return 1; }
	else if(pickupid == BasePic[2])
	{
	    if(GetPVarInt(playerid, "DialogShow")) return 1;
	    if(BaseStarting[1] != 3) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Регистрация на бейсджампинг закрыта.");
	    if(PlayersInBase{0} >= 30) return SendClientMessage(playerid,-1,"• {AC0000}[Ошибка] {ffffff}К сожалению все места заняты.");
	    if(GetPVarInt(playerid, "PlayerInBase")) return SCM(playerid,-1, "• {AC0000}[Ошибка] {ffffff}Вы уже записаны на бейсджампинг.");
	    SetPVarInt(playerid, "DialogShow", 1);
	    ShowPlayerDialog(playerid, D_BASE, DIALOG_STYLE_MSGBOX, "{FF6F00}Запись на Бейсджампинг","{FFFFFF}Бейсджампинг!.\n\nСтоимость билета: {FF6F00}15.000${FFFFFF}\nКоличество попыток: {FF6F00}Три{FFFFFF}\n\nПосле прохождения всей карты Вы получите: {FF6F00}7000 Donate Money", "Записаться","Выход");
	    return 1;
	}
	else if(pickupid == racePickup[0]) { SetPlayerPosEx(playerid,1774.4395,-1663.5664,14.4277),SetPlayerFacingAngle(playerid,119.0623),SetPlayerInterior(playerid,0),SetPlayerVirtualWorld(playerid,0); return 1; }
	else if(pickupid == racePickup[1]) { SetPlayerPosEx(playerid,831.5885,7.0524,1004.1797),SetPlayerFacingAngle(playerid,120.23),SetPlayerInterior(playerid,3),SetPlayerVirtualWorld(playerid,300); return 1; }
	else if(pickupid == racePickup[2])
	{
	    if(GetPVarInt(playerid, "DialogShow")) return 1;
	    if(RaceStarting[2] != 3) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Регистрация на гоночные мероприятия закрыта.");
		if (PlayersInRace{0} >= 40) return SendClientMessage(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Нет мест.");
		if (GetPVarInt(playerid, "PlayerInRace")) return SendClientMessage(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Вы уже зарегистрированы на гонку.");
		SetPVarInt(playerid, "DialogShow", 1);
		ShowPlayerDialog(playerid,D_RACE,DIALOG_STYLE_LIST,"{FF6F00}Регистрация на гонку #1{FFFFFF} (Выбор автомобиля)","{FFFFFF}1. Hotring Racer\n2. Super GT\n3. Bullet\n4. Phoenix\n5. Infernus\n6. Turismo","Выбрать","Отмена");
		return 1;
	}
	else if(pickupid == semia)
	{
		if(player_family [ playerid ]) return SendClientMessage(playerid, -1,"Вы уже состоите в семье!");
		SPD(playerid,993,DIALOG_STYLE_INPUT,"{FF6F00}Создание семьи","\n\n{6495ED}Внимание! Вы хотите создать семью.\nСоздание семьи стоит: 35 рублей\n\nЕсли Вы согласны, введите название семьи:","Создать","Отмена");
		return 1;
	}
	else if(pickupid >= pickuptook[0] && pickupid <= pickuptook[2])
	{
		if(GetPVarInt(playerid, "arenda_took") && GetPVarInt(playerid, "check_arenda_moped"))
		{
			DestroyVehicleEx(GetPVarInt(playerid, "arenda_took"));
			DeletePVar(playerid, "arenda_took");
			SendClientMessage(playerid,COLOR_GREY,"Ваш арендованый мопед был удален!");
			DeletePVar(playerid, "check_arenda_moped");
		}
		if(!GetPVarInt(playerid, "check_arenda_moped")) return SPD(playerid,136,DIALOG_STYLE_MSGBOX,"{FF6F00}Аренда мопедов","{FFFFFF}Аренда мопедов.\n\nИнформация:\n- Если арендованый транспорт не будет использоватся 5-ть минут.\n- Он будет удален автоматически!","Арендовать","Отмена");
	}
	else if(pickupid == spawnpickup[0])
	{
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 3000, 0, "d", playerid);
	    SetPlayerPosEx(playerid, 294.5003,1825.4662,718.4039);
	    SetPlayerFacingAngle(playerid, 180.4449);
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);
	    return 1;
	}
	else if(pickupid == spawnpickup[1])
	{
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 3000, 0, "d", playerid);
	    SetPlayerPosEx(playerid, 294.5552,1788.5420,718.4039);
	    SetPlayerFacingAngle(playerid, 359.3365);
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);
		return 1;
	}
	else if(pickupid == spawnpickup[2])
	{
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 3000, 0, "d", playerid);
	    SetPlayerPosEx(playerid, 1751.5288,-1892.9543,13.3949);
	    SetPlayerFacingAngle(playerid, 358.7333);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	    return 1;
	}
	else if(pickupid == spawnpickup[3])
	{
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 3000, 0, "d", playerid);
	    SetPlayerPosEx(playerid, 1751.6982,-1936.7004,13.3859);
	    SetPlayerFacingAngle(playerid, 178.8549);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
	    return 1;
	}
	if(pickupid == hippy[0])
	{
		SetPlayerPosEx(playerid,1286.9412,-1582.9043,13.5469);
		SetPlayerFacingAngle(playerid,265.81);
		SetPlayerInterior(playerid, 0); // интерьер поставить
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	if(pickupid == hippy[1])
	{
		SetPlayerPosEx(playerid,268.1564,305.0720,999.1484);
		SetPlayerFacingAngle(playerid,265.8199);
		SetPlayerInterior(playerid, 2); // интерьер поставить
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	else if(pickupid == hotelpickup[0])
	{
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 3000, 0, "d", playerid);
		SetPlayerPosEx(playerid, 1330.5968,-1061.5795,3359.7158);
		SetPlayerFacingAngle(playerid, 359.3602);
		SetPlayerInterior(playerid, 2);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pickupid == hotelpickup[1])
	{
		SetPlayerPosEx(playerid, 610.9652,-1458.2672,14.3711);
		SetPlayerFacingAngle(playerid, 269.4700);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == hotelpickup[2])
	{
		if(PlayerInfo[playerid][pHotel] == -1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не арендуете комнату в отеле");
		SPD(playerid, 939, DIALOG_STYLE_LIST, "{FF6F00}Оплата номера", "{FFFFFF}» 7 дней\n» 14 дней\n» 30 дней", "Оплатить","Выход");
	}
	else if(pickupid == hotelpickup[3])
	{
	    stringer="";
		new str [ 100 ]; stringer [1180] = 1180;
		GoToHotel[ItemsHotel] = 0;
		ItemsHotel = 0;
		for(new i = 1; i< MAX_HOTEL; i++)
		{
		    format(str,100, "{FFFFFF}Hotel: {FF6F00}%d{FFFFFF} [Владелец: {FF6F00}%s{FFFFFF}]\n", HotelInfo[i][mID], HotelInfo[i][mOwned]), strcat(stringer,str);
		    GoToHotel[ItemsHotel] = i,ItemsHotel++;
		}
		SPD(playerid, 4455, DIALOG_STYLE_LIST, "{FF6F00}Номера в отеле", stringer, "Выбрать", "Выход");
	}
	else if pickupid == piro *then
	{
		new msg[164];
		format(msg, sizeof msg, "{FFFFFF}50 зарядов [%d$]\n150 зарядов[%d$]\n250 зарядов[%d$]",BizInfo[BizEnter{playerid}][bCena][0],BizInfo[BizEnter{playerid}][bCena][1],BizInfo[BizEnter{playerid}][bCena][2]);
		SPD(playerid, 1239, DIALOG_STYLE_LIST, "{FF6F00}Магазин пиротехники", msg, "Купить","Выход");
		return 1;
	}
	else if(pickupid == JobsDJ[0] || pickupid == JobsDJ[1]) return SPD(playerid,10099,DIALOG_STYLE_MSGBOX,"{FF6F00}Работа DJ","{FFFFFF}Вы уверены, что хотите устроиться на работу Диджея?","Устроится","Выход");
	else if(pickupid == paintPic[3])// выход
	{
		SetPlayerInterior(playerid,7);
		PlayerInfo[playerid][pInt] = 7;
		SetPlayerPosEx(playerid,303.1312,-140.8648,1004.0625);
		SetPlayerFacingAngle(playerid, 500);
		return 1;
	}
	else if(pickupid == paintPic[2])// Вход
	{
		if(PlayerInfo[playerid][pMRInections] != 21) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Доступно только сотрудникам LVPD");
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPosEx(playerid,2293.0608,2469.8398,10.8203);
		SetPlayerFacingAngle(playerid, 89.7645);
		return 1;
	}
	else if(pickupid == paintPic[0])// выход
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,2503.0715,2776.3035,10.8203);
		SetPlayerFacingAngle(playerid, 500);
		return 1;
	}
	else if(pickupid == paintPic[1])// Вход
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,2490.6626,2779.3379,10.8203);
		SetPlayerFacingAngle(playerid, 500);
		return 1;
	}
	else if(pickupid == ammomer)
	{
		if (PlayerInfo[playerid][pMRInections] == 7) { GivePlayerWeaponAC(playerid, 24, 35); SCM(playerid, 0x6495EDFF, "Вам выдано оружие"); }
		else return SCM(playerid, COLOR_RED, "Вы не состоите в Мэрии!");
		return 1;
	}
	else if(pickupid == lspic[0]) return SPD(playerid,8242,DIALOG_STYLE_MSGBOX,"{FF6F00}Вход","{FFFFFF}Куда Вы хотите войти?","Офис","На крышу");
	else if(pickupid == lspic[1]) //
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,1658.2383,-1693.4553,15.6094);
		SetPlayerFacingAngle(playerid, 175.8234);
		SetPlayerVirtualWorld(playerid, 0);
		if(GetPVarInt(playerid, "PEfir") != INVALID_PLAYER_ID)
		{
			SCM(playerid,COLOR_WHITE, "Вы вышли из прямого эфира");
			SetPVarInt(playerid, "PEfir", 999);
		}
		if(GetPVarInt(playerid, "Pefir") == 1 || GetPVarInt(playerid, "Pefir") == 2)
		{
		    DeletePVar(playerid, "Pefir");
		    SetPVarInt(playerid, "PEfir", 999);
			SCM(playerid,COLOR_WHITE, "Вы вышли из прямого эфира");
		}
		return 1;
	}
	else if(pickupid == lspic[2]) //
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,1658.2383,-1693.4553,15.6094);
		SetPlayerFacingAngle(playerid, 175.8234);
		return 1;
	}
	else if(pickupid == medpic[0]) // медики вход ls
	{
	    pTemp[playerid][pInHospital] = true;
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 3000, 0, "d", playerid);
		SetPlayerPosEx(playerid,-2653.4336,644.2589,3014.4548);
		SetPlayerFacingAngle(playerid, 359.0230);
		//SetPlayerVirtualWorld(playerid, 1);
		//SetPlayerInterior(playerid, 0x1);
		return 1;
	}
	else if(pickupid == restoran[0]) // медики вход ls
	{
		SetPlayerInterior(playerid,1);
		PlayerInfo[playerid][pInt] = 1;
		SetPlayerPosEx(playerid,451.4298,-18.3080,1001.1328);
		SetPlayerFacingAngle(playerid, 88.3418);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == restoran[1]) // медики выход ls
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,1292.1082,-1870.5500,13.5469);
		SetPlayerFacingAngle(playerid, 48.6363);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == kazarma[0])
	{
		if(PlayerInfo[playerid][pMRInections] != 3) return SCM(playerid, COLOR_GREEN,"Доступно только Армейцам SFa.");
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 2000, 0, "d", playerid);
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,1544.7737,-1757.2196,1506.5640);
		SetPlayerFacingAngle(playerid, 88.3244);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerInterior(playerid, 1);
		SetPlayerCheckpoint(playerid, 1542.5778,-1773.6821,1506.5640-1, 1.0);
		SetPVarInt(playerid, "gps_pic", 228);
		return 1;
	}
	else if(pickupid == kazarma[1])
	{
		if(PlayerInfo[playerid][pMRInections] != 19) return SCM(playerid, COLOR_GREEN,"Доступно только Армейцам LVa.");
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 2000, 0, "d", playerid);
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,1544.7737,-1757.2196,1506.5640);
		SetPlayerFacingAngle(playerid, 88.3244);
		SetPlayerVirtualWorld(playerid, 2);
		SetPlayerInterior(playerid, 1);
		return 1;
	}
	else if(pickupid == kazarma[2])
	{
	    DisablePlayerCheckpoint(playerid);
	    DeletePVar(playerid, "gps_pic");
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,-1364.4095,499.0120,11.1953);
		SetPlayerFacingAngle(playerid, 269.4558);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == kazarma[3])
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,145.8524,1875.4724,17.8359);
		SetPlayerFacingAngle(playerid, 267.8890);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == kazarma[4])
	{
		if(PlayerInfo[playerid][pMRInections] != 27) return SCM(playerid, COLOR_GREEN,"Доступно только военным Военно Морского Флота.");
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 2000, 0, "d", playerid);
		SetTimerEx("clearattach", 3000, 0, "d", playerid);
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,1544.7737,-1757.2196,1506.5640);
		SetPlayerFacingAngle(playerid, 88.3244);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerInterior(playerid, 3);
		SetPlayerCheckpoint(playerid, 1542.5778,-1773.6821,1506.5640-1, 1.0);
		SetPVarInt(playerid, "gps_pic", 228);
		return 1;
	}
	else if(pickupid == kazarma[5])
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,-2246.5747,2296.2039,4.9717);
		SetPlayerFacingAngle(playerid, 88.0754);
		SetPlayerVirtualWorld(playerid, 0);
  		DisablePlayerCheckpoint(playerid);
	    DeletePVar(playerid, "gps_pic");
		return 1;
	}
	else if(pickupid == narkoenter) //
	{
		SetPlayerInterior(playerid,5);
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerPosEx(playerid,318.2598,1118.8209,1083.8828);
		SetPlayerFacingAngle(playerid, 2.7967);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == lcnpic[0]) //
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,1451.7043,749.8376,11.0234);
		SetPlayerFacingAngle(playerid, 89.1102);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == lcnpic[1]) //
	{
		SetPlayerInterior(playerid, 5);
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerPosEx(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorld(playerid, 2);
		return 1;
	}
	else if(pickupid == casino[0])
	{
		SetPlayerPosEx(playerid,1132.9283,-12.1039,1000.6797);
		SetPlayerFacingAngle(playerid, 92.6417);
		SetPlayerInterior(playerid,12);
		SetPlayerVirtualWorld(playerid, 35);
		SetPlayerFacingAngle(playerid, 92.6417);
		SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Для начала игры в кости введите команду '/dice'");
	}
	else if(pickupid == casino[1])
	{
		SetPlayerPosEx(playerid,1021.9433,-1125.3147,23.8692);
		SetPlayerFacingAngle(playerid, 92.6417);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == zip[0]) //виктим
	{
		SetPVarInt(playerid, "zips",1);
		SetPlayerInterior(playerid,18);
		PlayerInfo[playerid][pInt] = 18;
		SetPlayerPosEx(playerid,161.6730,-95.5809,1001.8047);
		SetPlayerFacingAngle(playerid, 1.0183);
		return 1;
	}
	else if(pickupid == zip[1]) //
	{
		DeletePVar(playerid, "zips");
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,-1885.0364,862.9141,35.1719);
		SetPlayerFacingAngle(playerid, 151.0559);
		return 1;
	}
	else if(pickupid == victim2[0]) //виктим
	{
		SetPlayerInterior(playerid,5);
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerPosEx(playerid,225.2378,-8.0487,1002.2109);
		SetPlayerFacingAngle(playerid, 89.5070);
		return 1;
	}
	else if(pickupid == victim2[1]) //
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,458.0936,-1501.5496,31.0372);
		SetPlayerFacingAngle(playerid, 101.4322);
		return 1;
	}
	else if(pickupid == narkoexit) //
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,2168.0977,-1673.5548,15.0826);
		SetPlayerFacingAngle(playerid,217.7220);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	else if(pickupid == buydom)
	{
		if(PlayerInfo[playerid][pLicenses][0] != 1) return SendClientMessage(playerid,COLOR_WHITE,"У вас нету Лицензии на управление авто");
		if(PlayerInfo[playerid][pHouse] != -1) return SendClientMessage(playerid,COLOR_WHITE,"У вас есть простой дом, вы не можете купить Дом на колесах.");
		if(PlayerInfo[playerid][pCar][0] != 462) return SendClientMessage(playerid,COLOR_GREY,"Вы уже имеете автомобиль");
		if(PlayerInfo[playerid][pCar][1] != 462) return SendClientMessage(playerid, COLOR_GREY, "Вы уже имеете автомобиль (#2)");
		if(PlayerInfo[playerid][pCash] < 150000) return SendClientMessage(playerid,COLOR_GREY,"У Вас не достаточно средств для покупки Дома.");
		SetPVarInt(playerid, "buy_dom", _:Forveh_AddStaticVehicle(508,1931.7130,-2133.2009,14.1569,317.8716,0,0));
		new virtmir = playerid+1;
		if(GetPVarInt(playerid, "house_color")) DeletePVar(playerid, "house_color");
		TogglePlayerControllable(playerid, false);
		SetVehicleVirtualWorld(GetPVarInt(playerid, "buy_dom"), virtmir);
		SetPlayerVirtualWorld(playerid,virtmir);
		PutPlayerInVeh(playerid, GetPVarInt(playerid, "buy_dom"), 0);
		InterpolateCameraPos(playerid, 1931.140747, -2125.066650, 14.231060, 1931.140747, -2125.066650, 14.231060, 1000);
		InterpolateCameraLookAt(playerid, 1931.182739, -2130.056396, 14.547256, 1931.182739, -2130.056396, 14.547256, 1000);
		SPD(playerid,2572,DIALOG_STYLE_MSGBOX,"{FF6F00}Покупка дома на колёсах","{FFFFFF}Внимание! Данный автомобиль стоит 150.000$\n\nВозможности:\n- Перевозка до 20-ти человек.\n- Спавн в доме.\n- Сохранение позиции дома при выходе из игры.\n\nВы желаете приобрести этот дом ?","Да","Нет");
		return 1;
	}
	else if(pickupid == rmpic[1]) //
	{
		SetPlayerInterior(playerid, 5);
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerPosEx(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorld(playerid, 5);
		return 1;
	}
	else if(pickupid == rmpic[0]) //
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,940.2619,1733.4958,8.8516);
		SetPlayerFacingAngle(playerid, 276.0833);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	else if(pickupid == yakexit[1]) //
	{
		SetPlayerInterior(playerid, 5);
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerPosEx(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorld(playerid, 3);
		return 1;
	}
	else if(pickupid == yakexit[0]) //
	{
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,1457.5305,2773.4219,10.8203);
		SetPlayerFacingAngle(playerid, 276.0466);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == fbidoor[0]) return SPD(playerid, 959, DIALOG_STYLE_LIST, "{FF6F00}Выход:", "{FFFFFF}Улица\nСтоянка", "Принять","Отмена");
	else if(pickupid == fbidoor[1]) //fbi вход
	{
		SetPlayerInterior(playerid, 1);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,-164.1076,-75.7150,916.3059);
		SetPlayerFacingAngle(playerid, 359.7419);
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 3000, 0, "d", playerid);
		return 1;
	}
	else if(pickupid == fbidoor[2])
	{
		SetPlayerInterior(playerid, 1);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,-164.1076,-75.7150,916.3059);
		SetPlayerFacingAngle(playerid, 359.7419);
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 3000, 0, "d", playerid);
	    return 1;
	}
	else if(pickupid == lspd[0]) //LSPD вход в городе
	{
		if (IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] == 1)
		{
			SetPlayerInterior(playerid,6);
			PlayerInfo[playerid][pInt] = 6;
			SetPlayerPosEx(playerid,246.6428,65.8026,1003.6406);
			SetPlayerFacingAngle(playerid, 2.2168);
		}
		else SCM(playerid, COLOR_RED,"Дверь заперта! У вас нет пропуска");
		return 1;
	}
	else if(pickupid == lspd[1])///LSPD выход в городе
	{
		if (IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] == 1)
		{
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPosEx(playerid,1547.14,-1675.85,13.95);
			SetPlayerFacingAngle(playerid, 91.8310);
			SetPlayerVirtualWorld(playerid, 0);
			keys[playerid] = 0;
		}
		else SCM(playerid, COLOR_RED,"Дверь заперта! У вас нет пропуска");
		return 1;
	}
	else if(pickupid == lspd[4])//LSPD вых из гаража
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,1528.010864,-1678.141723,5.890625);
		SetPlayerFacingAngle(playerid, 259.617370);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == lspd[2])//LSPD вход на склад
	{
		if (IsAArm(playerid)|| IsACop(playerid))
		{
			SetPlayerInterior(playerid,6);
			PlayerInfo[playerid][pInt] = 6;
			SetPlayerPosEx(playerid,316.3837,-167.8547,999.5938);
			SetPlayerFacingAngle(playerid, 34.3574);
			SetPlayerVirtualWorld(playerid, 228);
		}
		else SCM(playerid, COLOR_RED,"Дверь заперта! У вас нет пропуска");
		return 1;
	}
	else if(pickupid == sf[4])//Вход в гараж гаража в sfpd
	{
		if (IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] == 1)
		{
			SetPlayerInterior(playerid,6);
			PlayerInfo[playerid][pInt] = 6;
			SetPlayerPosEx(playerid,316.3837,-167.8547,999.5938);
			SetPlayerFacingAngle(playerid, 34.3574);
			SetPlayerVirtualWorld(playerid, 1);
		}
		else SCM(playerid, COLOR_RED,"Дверь заперта! У вас нет пропуска");
		return 1;
	}
	else if(pickupid == sf[0])//
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,-1606.4532,674.2636,-5.2422);
		SetPlayerFacingAngle(playerid, 357.2527);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == sf[2])//
	{
		SetPlayerInterior(playerid,10);
		PlayerInfo[playerid][pInt] = 10;
		SetPlayerPosEx(playerid,217.3147,121.3382,999.0156);
		SetPlayerFacingAngle(playerid, 272.8898);
		return 1;
	}
	else if(pickupid == sf[3])//
	{
		if (IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] == 1)
		{
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPosEx(playerid,-1590.8289,716.0479,-5.2422);
			SetPlayerFacingAngle(playerid, 269.9364);
		}
		else SCM(playerid, COLOR_RED,"Дверь заперта! У вас нет пропуска");
		return 1;
	}
	else if(pickupid == lspd[5])
	{
		SetPlayerInterior(playerid,6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerPosEx(playerid,246.5438,85.7663,1003.6406);
		SetPlayerFacingAngle(playerid, 278.0311);
		return 1;
	}
	else if(pickupid == sf[1])//Вход из гаража в LSPD
	{
		if (IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] == 1)
		{
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPosEx(playerid,-1590.8289,716.0479,-5.2422);
			SetPlayerFacingAngle(playerid, 269.9364);
			SetPlayerVirtualWorld(playerid, 0);
		}
		else SCM(playerid, COLOR_RED,"Дверь заперта! У вас нет пропуска");
		return 1;
	}
	else if(pickupid == lspd[3])//LSPD выход в гараже
	{
		if (IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] == 1)
		{
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPosEx(playerid,1568.6962,-1692.2069,5.8906);
			SetPlayerFacingAngle(playerid, 259.617370);
			SetPlayerVirtualWorld(playerid, 0);
			keys[playerid] = 0;
		}
		else SCM(playerid, COLOR_RED,"Дверь заперта! У вас нет пропуска");
		return 1;
	}
	else if(pickupid == avtosh[3])
	{
		SetPlayerInterior(playerid,3);
		PlayerInfo[playerid][pInt] = 3;
		SetPlayerVirtualWorld(playerid, 1);
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 3000, 0, "d", playerid);
		SetPlayerPosEx(playerid,-2099.9438,-106.4379,2855.1479);
		SetPlayerFacingAngle(playerid, 271.2610);
		SetPlayerCheckpoint(playerid,-2080.9053,-105.1343,2855.1479,1.5);
		return 1;
	}
	else if(pickupid == avtosh[0])//чёрный вход
	{
		SetPlayerInterior(playerid,3);
		PlayerInfo[playerid][pInt] = 3;
		SetPlayerVirtualWorld(playerid, 1);
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 3000, 0, "d", playerid);
		SetPlayerPosEx(playerid,-2080.0752,-98.9648,2855.1479);
		SetPlayerFacingAngle(playerid, 88.8221);
		SetPlayerCheckpoint(playerid,-2080.9053,-105.1343,2855.1479,1.5);
		return 1;
	}
	else if(pickupid == avtosh[1])//чёрный выход
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPosEx(playerid,739.3594,-1431.9132,13.7056);
		SetPlayerFacingAngle(playerid, 171.4750);
		if(pTemp[playerid][pWaitingExam])
		{
			SendClientMessage(playerid,CGRAY,"Вы были сняты с экзамена");
			pTemp[playerid][pWaitingExam] = false;
			pTemp[playerid][pExamCandidate] = INVALID_PLAYER_ID;
			pTemp[playerid][pOnExam] = false;
		}
		DisablePlayerCheckpoint(playerid);
		return 1;
	}
	else if(pickupid == avtosh[2])//автошкола выход1
	{
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPosEx(playerid,739.0049,-1415.4097,13.5166);
		SetPlayerFacingAngle(playerid, 358.5367);
		if(pTemp[playerid][pWaitingExam])
		{
			SendClientMessage(playerid,CGRAY,"Вы были сняты с экзамена");
			pTemp[playerid][pWaitingExam] = false;
			pTemp[playerid][pExamCandidate] = INVALID_PLAYER_ID;
			pTemp[playerid][pOnExam] = false;
		}
		DisablePlayerCheckpoint(playerid);
		return 1;
	}
	else if(pickupid == lvpdpic[0]) //lvpd 1 вход в здание с гаража
	{
		SetPlayerInterior(playerid,3);
		PlayerInfo[playerid][pInt] = 3;
		SetPlayerVirtualWorld(playerid, 322);
		SetPlayerPosEx(playerid,238.5033,141.1578,1003.0234);
		SetPlayerFacingAngle(playerid, 359.1617);
		return 1;
	}
	else if(pickupid == lvpdpic[1])//lvpd 2 вход в гараж..
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPosEx(playerid,2295.1934,2451.8459,10.8203);
		SetPlayerFacingAngle(playerid, 94.8742);
		return 1;
	}
	else if(pickupid == lvpdpic[2]) //lvpd 3 в здание
	{
		SetPlayerInterior(playerid,3);
		PlayerInfo[playerid][pInt] = 3;
		SetPlayerVirtualWorld(playerid, 322);
		SetPlayerPosEx(playerid,288.7445,169.2445,1007.1719);
		SetPlayerFacingAngle(playerid, 9.7598);
		return 1;
	}
	else if(pickupid == lvpdpic[3])//lvpd  4 на улицу
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPosEx(playerid,2340.1965,2455.9792,14.9688);
		SetPlayerFacingAngle(playerid, 178.3347);
		return 1;
	}
	else if(pickupid == lvpdpic[4]) return SPD(playerid,8240,DIALOG_STYLE_MSGBOX,"{FF6F00}Вход","{FFFFFF}Куда Вы хотите войти?","Склад","Крыша");
	else if(pickupid == lvpdpic[5])//lvpd 6 оружие выход
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPosEx(playerid,2293.3225,2468.6162,10.8203);
		SetPlayerFacingAngle(playerid, 93.6957);
		return 1;
	}
	else if(pickupid == lvpdpic[6]) return SPD(playerid,8241,DIALOG_STYLE_MSGBOX,"{FF6F00}Вход","{FFFFFF}Куда Вы хотите войти?","Склад","Вниз");
	else if(pickupid >= chekmatlva[0] && pickupid <= chekmatlva[9])//  Пикапы матов
	{
		if (!IsAGang(playerid)) return    SCM(playerid,COLOR_GREY,"Вы не бандит!");
		if(armmatbi <= 0) return	SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
		if(PlayerInfo[playerid][pMats] >= 200) return SCM(playerid,COLOR_GREY,"Нельзя унести больше");
		SCM(playerid,COLOR_BLUE,"Вам удалось украсть 200 материалов");
		armmatbi -= 200;
		PlayerInfo[playerid][pMats] += 200;
		Update3DTextsArmy();
		return 1;
	}
	else if(pickupid >= chekmats[0]&& pickupid <= chekmats[2])
	{
		if (!IsAGang(playerid)) return    SCM(playerid,COLOR_GREY,"Вы не бандит!");
		if(armmatsf <= 0) return SCM(playerid,COLOR_GRAD1,"На складе нет материалов!");
		if(PlayerInfo[playerid][pMats] >= 200) return SCM(playerid,COLOR_GREY,"Нельзя унести больше");
		SCM(playerid,COLOR_BLUE,"Вам удалось украсть 200 материалов");
		armmatsf -= 200;
		PlayerInfo[playerid][pMats] += 200;
		Update3DTextsArmy();
		return 1;
	}
	else if(pickupid == buygunzakon[0])
	{
		if(PlayerInfo[playerid][pLRInections] == 2 || PlayerInfo[playerid][pMRInections] == 2)
		{
		    if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
			if(GetPVarInt(playerid, "gun_time") > gettime()) return SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Брать оружие можно раз в минуту!");
			if(fbimats <= 0) return SCM(playerid,COLOR_GRAD1,"{FF6F00}x {AFAFAF}На складе нет материалов!");
			{
				GivePlayerWeaponAC(playerid, 24, 21);
				GivePlayerWeaponAC(playerid, 41, 1000);
				GivePlayerWeaponAC(playerid, 29, 90);
				SetPlayerArmourAC(playerid, 100);
				SetPlayerHealthAC(playerid,100);
				fbimats -= 100;
				SetPVarInt(playerid, "gun_time", gettime()+60);
				SCM(playerid, COLOR_GREEN,"Выдано:    Броня, Desert Eagle (3 Обоймы),Spray,MP5 (3 Обоймы)");
				SaveMaterials();
			}
		}
		else SCM(playerid, COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не агент FBI!");
		return 1;
	}
	else if(pickupid == buygunzakon[1])
	{
		if(PlayerInfo[playerid][pLRInections] == 1 || PlayerInfo[playerid][pMRInections] == 1)
		{
		    if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
			if(GetPVarInt(playerid, "gun_time") > gettime()) return	SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Брать оружие можно раз в 5 минут");
			if(lspdmatbi <= 0) return SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}На складе нет материалов!");
			{
				GivePlayerWeaponAC(playerid, 3, 1);
				GivePlayerWeaponAC(playerid, 24, 21);
				GivePlayerWeaponAC(playerid, 25, 30);
				SetPlayerHealthAC(playerid, 100);
				SetPlayerArmourAC(playerid, 100);
				lspdmatbi -= 100;
				SetPVarInt(playerid, "gun_time", gettime()+300);
				SCM(playerid, COLOR_GREEN,"Выдано:    Броня, Дубинка, Desert Eagle (3 Обоймы), Shotgun (30 патронов)");//Любимый цвет
				Police +=1;
				SaveMaterials();
			}
		}
		else SCM(playerid, COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не состоите в LSPD!");
		return 1;
	}
	else if(pickupid == buygunzakon[3])
	{
		if(PlayerInfo[playerid][pLRInections] == 21 || PlayerInfo[playerid][pMRInections] == 21)
		{
		    if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
			if(GetPVarInt(playerid, "gun_time") > gettime()) return	SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Брать оружие можно раз в 5 минут");
			if(lvpdmats <= 0) return SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}На складе нет материалов!");
			{
				GivePlayerWeaponAC(playerid, 3, 1);
				GivePlayerWeaponAC(playerid, 24, 100);
				GivePlayerWeaponAC(playerid, 25, 30);
				SetPlayerHealthAC(playerid, 100);
				SetPlayerArmourAC(playerid, 100);
				lvpdmats -= 100;
				SetPVarInt(playerid, "gun_time", gettime()+300);
				SCM(playerid, COLOR_GREEN,"Выдано:   Броня, Дубинка, Desert Eagle (3 Обоймы), Shotgun (30 патронов)");//Любимый цвет
				Police +=1;
				SaveMaterials();
			}
		}
		else SCM(playerid, COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не состоите в LVPD!");
		return 1;
	}
	else if(pickupid == buygunzakon[2])
	{
		if(PlayerInfo[playerid][pLRInections] == 10 || PlayerInfo[playerid][pMRInections] == 10)
		{
		    if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
			if(GetPVarInt(playerid, "gun_time") > gettime()) return	SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Брать оружие можно раз в 5 минут");
			if(sfpdmats <= 0) return	SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}На складе нет материалов!");
			{
				GivePlayerWeaponAC(playerid, 3, 1);
				GivePlayerWeaponAC(playerid, 24, 21);
				GivePlayerWeaponAC(playerid, 25, 30);
				SetPlayerHealthAC(playerid, 100);
				SetPlayerArmourAC(playerid, 100);
				sfpdmats -= 100;
				SetPVarInt(playerid, "gun_time", gettime()+300);
				SCM(playerid, COLOR_GREEN,"Выдано:   Броня,Дубинка, Desert Eagle(3 Обоймы), Shotgun (30 патронов)");//Любимый цвет
				Police +=1;
			}
		}
		else SCM(playerid, COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не cостоите в SFPD!");
		return 1;
	}
	else if(pickupid >= serdce[0] && pickupid <= serdce[2])
	{
		if(PlayerInfo[playerid][pLevel] >= 1) { SetPlayerHealthAC(playerid, 100); }
		else SCM(playerid, COLOR_RED,"Только для новичков! (1 лвл)");
		return 1;
	}
	else if(pickupid == serdce[3])
	{
		if(PlayerInfo[playerid][pLevel] >= 9)
		{
			SetPlayerHealthAC(playerid, 100);
			ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
		}
		return 1;
	}
	else if(pickupid == minstr)
	{
		if(PlayerInfo[playerid][pLRInections] == 25 || PlayerInfo[playerid][pMRInections] == 26)
		{
		    if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
			if(GetPVarInt(playerid, "gun_time") > gettime()) return SCM(playerid,COLOR_GRAD1,"• {AC0000}[Ошибка] {ffffff}Брать оружие можно раз в 5 минут");
			{
				SetPlayerArmourAC(playerid, 100);
				SetPlayerHealthAC(playerid,100);
				GivePlayerWeaponAC(playerid, 41, 999999);//Спрей
				GivePlayerWeaponAC(playerid, 24, 21);//3 обоймы дигла
				GivePlayerWeaponAC(playerid, 29, 21);//3 обоймы МП5
				SCM(playerid, -1,"Вы взяли набор оружия:");
				SCM(playerid, -1,"> Spraycan");
				SCM(playerid, -1,"> Desert Eagle [3 обоймы])");
				SCM(playerid, -1,"> MP5 [3 обоймы])");
				SetPVarInt(playerid, "gun_time", gettime()+300);
			}
		}
		return 1;
	}
	else if(pickupid == buygunzakon[4])
	{
		if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
		if(GetPVarInt(playerid, "gun_time") > gettime()) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Оружие можно брать раз в 30 секунд.");
		if(PlayerInfo[playerid][pLRInections] == 25 || PlayerInfo[playerid][pMRInections] == 25) SPD(playerid,9678,DIALOG_STYLE_MSGBOX, "Комплекты « SWAT »","{FFFFFF}Вам доступен один из двух комплектов:\n\nКомплект № 1\t\tКомплект № 2\nБроня\t\t\tБроня\nДубинка\t\tДубинка\nDesert Eagle\t\tSDPistol\nMP5\t\t\tShotgun\nДымовая шашка\tДымовая шашка", "№ 1","№ 2");
		else SCM(playerid, -1,"• {AC0000}[Ошибка] {ffffff}Вы не cостоите в SWAT!");
		return 1;
	}
	else if(pickupid == skinshop[0] || pickupid == skinshop[1])
	{
		if(PlayerInfo[playerid][pMRInections] > 0 && GetPVarInt(playerid, "StartRabWork")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Сменить Вам одежду может только лидер организации");
		SetPlayerFacingAngle(playerid, 266.7302);
		SetPlayerCameraPos(playerid,222.3489 + 3, -8.5845, 1002.2109);
		SetPlayerCameraLookAt(playerid,222.3489, -8.5845, 1002.2109);
		SetPlayerInterior(playerid,5);
		PlayerInfo[playerid][pInt] = 5;
		SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Для просмотра доступных скинов используйте клавишу 'Вверх, вниз' (W,S по умолчанию)");
		SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Для выбора скина используйте клавишу 'Быстрый бег' (пробел по умолчанию).");
		SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Если вы случайно нажали 'Enter' и меню пропало, нажмите 'Enter' еще раз.");
		SetPlayerPosEx(playerid, 222.3489,-8.5845,1002.2109);
		TogglePlayerControllable(playerid, 0);
		ChangeSkinv[playerid]=0;
		ShowMenuForPlayer(BuyClothes, playerid);
		return 1;
	}
	else if(pickupid == prabota) return SPD(playerid, 10092, DIALOG_STYLE_MSGBOX, "{FF6F00}Устройство на работу","{FFFFFF}Посмотреть список доступных работ?", "Просмотр", "Отмена");
	else if(pickupid == marenter[0])
	{
		SetPlayerInterior(playerid,1);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,303.6690,1891.1173,904.3759);
		SetPlayerFacingAngle(playerid, 179.8031);
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 3000, 0, "d", playerid);
		SetPVarInt(playerid, "gps_pic", 2);
		return 1;
	}
	else if(pickupid == marenter[1])
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,1518.8867, -1769.8033, 18.0859);
		SetPlayerFacingAngle(playerid, 290.4261);
		return 1;
	}
	else if(pickupid == rifa[0])//Rifa вход в интерьер
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPosEx(playerid,2757.9255,-1941.3000,13.5498);
		SetPlayerFacingAngle(playerid, 1000);
		return 1;
	}
	else if(pickupid == rifa[1])//Rifa выход
	{
		SetPlayerInterior(playerid,8);
		PlayerInfo[playerid][pInt] = 8;
		SetPlayerVirtualWorld(playerid, 36);
		SetPlayerPosEx(playerid,-42.8578,1409.2488,1084.4297);
		SetPlayerFacingAngle(playerid, 178.1356);
		return 1;
	}
	else if(pickupid == mo[0]) //Вход внутрь министерства
	{
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 3000, 0, "d", playerid);
		SetPlayerInterior(playerid,1);
		PlayerInfo[playerid][pInt] = 1;
		SetPlayerPosEx(playerid,-25.1356,-55.3725,1019.4539);
		SetPlayerFacingAngle(playerid, 183.5062);
		return 1;
	}
	else if(pickupid == mo[1]) //выход из министерства
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,1127.4280,-2037.2456,69.8883);
		SetPlayerFacingAngle(playerid, 270.3625);
		return 1;
	}
	else if(pickupid == vagospic[0])//Vagos вход в интерьер
	{
		SetPlayerInterior(playerid,4);
		PlayerInfo[playerid][pInt] = 4;
		SetPlayerVirtualWorld(playerid, 75);
		SetPlayerPosEx(playerid,303.2970,307.1475,1003.5391);
		SetPlayerFacingAngle(playerid, 500);
		return 1;
	}
	else if(pickupid == vagospic[1])//Vagos выход
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPosEx(playerid,2633.8535,-1083.8906,69.6190);
		SetPlayerFacingAngle(playerid, 272);
		return 1;
	}
	else if(pickupid == swatenter) //swat
	{
		SetPlayerInterior(playerid,3);
		PlayerInfo[playerid][pInt] = 3;
		SetPlayerPosEx(playerid,238.7926,141.2375,1003.0234);
		SetPlayerFacingAngle(playerid,2.1113);
		SetPlayerVirtualWorld(playerid, 21);
		return 1;
	}
	else if(pickupid == swatenter2) //swat
	{
		SetPlayerInterior(playerid,3);
		PlayerInfo[playerid][pInt] = 3;
		SetPlayerPosEx(playerid,288.8489,168.3671,1007.1719);
		SetPlayerFacingAngle(playerid,1.7594);
		SetPlayerVirtualWorld(playerid, 21);
		return 1;
	}
	else if(pickupid == swatexit) //swat
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,2870.3145,2212.0735,10.9449);//Выход
		SetPlayerFacingAngle(playerid,180.0000);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == swatexit2) //swat
	{
		SetPlayerInterior(playerid,6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerPosEx(playerid,296.9200,-108.0720,1001.5156);
		SetPlayerFacingAngle(playerid,0.8520);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == grooveenter)
	{
		SetPlayerCheckpoint(playerid,2492.0986,-1710.9407,1014.7422,1.0);
		SetPlayerInterior(playerid,3);
		SetPlayerPosEx(playerid,2496.1580,-1694.5743,1014.7422);
		SetPlayerFacingAngle(playerid,177.8856);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == grooveexit)
	{
		DisablePlayerCheckpoint(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPosEx(playerid,2495.1199,-1688.3727,13.7653);
		SetPlayerFacingAngle(playerid, 4.2929);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == aztecpic[0])//Aztec вход на улицу
	{
		SetPlayerInterior(playerid,18);
		PlayerInfo[playerid][pInt] = 18;
		SetPlayerVirtualWorld(playerid, 63);
		SetPlayerPosEx(playerid,-225.9102,1406.4557,27.7734);
		SetPlayerFacingAngle(playerid, 400);
		return 1;
	}
	else if(pickupid == aztecpic[1])//Aztec вход в интерьер
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPosEx(playerid,2186.3186,-1810.8627,13.5469);
		SetPlayerFacingAngle(playerid, 500);
		return 1;
	}
	else if(pickupid == bankpic[0]) //Банк вход
	{
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 3000, 0, "d", playerid);
		SetPlayerInterior(playerid, 1);
		PlayerInfo[playerid][pInt] = 1;
		SetPlayerVirtualWorld(playerid,1);
		SetPlayerPosEx(playerid,1409.3688,1315.8888,1501.0840);
		SetPlayerFacingAngle(playerid, 89.4079);
		return 1;
	}
	else if(pickupid == bankpic[1]) //Банк выход
	{
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerPosEx(playerid,1464.5406,-1014.7126,26.4719);
		SetPlayerFacingAngle(playerid, 179.4157);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	else if(pickupid == ballasvhod[0])//Балас вход на улицу
	{
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPosEx(playerid,2007.2606,-1284.6832,28.4881);
		SetPlayerFacingAngle(playerid, 100);
		return 1;
	}
	else if(pickupid == ballasvhod[1])//Балас вход в дом
	{
		SetPlayerInterior(playerid,6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerVirtualWorld(playerid, 34);
		SetPlayerPosEx(playerid,-68.6311,1353.8743,1080.2109);
		SetPlayerFacingAngle(playerid, 100);
		return 1;
	}
	else if(pickupid == sklad[1]) //
	{
	    DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, false);
		SetTimerEx("UnFreez", 3000, 0, "d", playerid);
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPosEx(playerid,338.3804,1949.1343,22.0174);
		SetPlayerFacingAngle(playerid, 92.2485);
		return 1;
	}
	else if(pickupid == sklad[0]) //
	{
		SetPlayerInterior(playerid,6);
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerPosEx(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetPlayerVirtualWorld(playerid, 229);
		SetPlayerCheckpoint(playerid, 312.6434,-165.7492,999.6010, 1.0);
		SetPVarInt(playerid, "gps_pic", 228);
		return 1;
	}
	else if(pickupid == zonaa) //
	{
		if(PlayerInfo[playerid][pMRInections] == 19 || keys[playerid] == 1)
		{
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPosEx(playerid,279.4233,1835.0087,17.6481);
			SetPlayerFacingAngle(playerid, 17.2727);
		}
		else SCM(playerid, COLOR_WHITE,"У вас нет ключа!");
		return 1;
	}
	else if(pickupid == zona) //
	{
		if( PlayerInfo[playerid][pMRInections] == 19 || keys[playerid] == 1)
		{
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPosEx(playerid,291.8297,1836.4666,17.6406);
			SetPlayerFacingAngle(playerid, 346.3333);
		}
		else SCM(playerid, COLOR_WHITE,"У вас нет ключа!");
		return 1;
	}
	else if(pickupid == plen[0]) //
	{
		SetPlayerInterior(playerid,6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerPosEx(playerid,308.0302,-159.7244,999.5938);
		SetPlayerFacingAngle(playerid, 258.2231);
		return 1;
	}
	else if(pickupid == plen[1]) //
	{
		SetPlayerInterior(playerid,6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerPosEx(playerid,303.6572,-159.7246,999.5938);
		SetPlayerFacingAngle(playerid, 88.7500);
		return 1;
	}
	if(!IsAGang(playerid) || !IsPlayerAttachedObjectSlotUsed(playerid,1)) return 1;
	new Float:X,Float:Y,Float:Z;
	forveh(i)
	{
		GetVehiclePos(i,X,Y,Z);
		if(pickupid != autopick_mats[i] || !PlayerToPoint(6.0, playerid, X, Y, Z) || !GetVehicleModel(i)) continue;
		switch(PlayerInfo[playerid][pMRInections])
		{
		case 12:
			{
				if(Furi[i-matsfuraballas[0]][gBallas] >= 15000) return FullFura(playerid,i);
				if(PlayerInfo[playerid][pMats] < 250) return SCMF(playerid, TEAM_GROVE_COLOR, "Материалы %d/15000", Furi[i-matsfuraballas[0]][gBallas]);
				Furi[i-matsfuraballas[0]][gBallas] += 250;//
				SCMF(playerid, TEAM_GROVE_COLOR, "Материалы %d/15000", Furi[i-matsfuraballas[0]][gBallas]);
			}
		case 13:
			{
				if(Furi[i-matsfuravagos[0]][gVagos] >= 15000) return FullFura(playerid,i);
				if(PlayerInfo[playerid][pMats] < 250) return SCMF(playerid, TEAM_GROVE_COLOR, "Материалы %d/15000", Furi[i-matsfuravagos[0]][gVagos]);
				Furi[i-matsfuravagos[0]][gVagos] += 250;//
				SCMF(playerid, TEAM_GROVE_COLOR, "Материалы %d/15000", Furi[i-matsfuravagos[0]][gVagos]);
			}
		case 15:
			{
				if(Furi[i-matsfuragrove[0]][gGrove]  >= 15000) return FullFura(playerid,i);
				if(PlayerInfo[playerid][pMats] < 250) return SCMF(playerid, TEAM_GROVE_COLOR, "Материалы %d/15000", Furi[i-matsfuragrove[0]][gGrove]);
				Furi[i-matsfuragrove[0]][gGrove] += 250;//
				SCMF(playerid, TEAM_GROVE_COLOR, "Материалы %d/15000", Furi[i-matsfuragrove[0]][gGrove]);
			}
		case 17:
			{
				if(Furi[i-matsfuraactek[0]][gAztek]  >= 15000) return FullFura(playerid,i);
				if(PlayerInfo[playerid][pMats] < 250) return SCMF(playerid, TEAM_GROVE_COLOR, "Материалы %d/15000", Furi[i-matsfuraactek[0]][gAztek]);
				Furi[i-matsfuraactek[0]][gAztek] += 250;//
				SCMF(playerid, TEAM_GROVE_COLOR, "Материалы %d/15000", Furi[i-matsfuraactek[0]][gAztek]);
			}
		case 18:
			{
				if(Furi[i-matsfurarifa[0]][gRifa]   >= 15000) return FullFura(playerid,i);
				if(PlayerInfo[playerid][pMats] < 250) return SCMF(playerid, TEAM_GROVE_COLOR, "Материалы %d/15000", Furi[i-matsfurarifa[0]][gRifa]);
				Furi[i-matsfurarifa[0]][gRifa] += 250;//
				SCMF(playerid, TEAM_GROVE_COLOR, "Материалы %d/15000", Furi[i-matsfurarifa[0]][gRifa]);
			}
		}
		new string[10];
		switch(PlayerInfo[playerid][pMRInections])
		{
		case 12:
			{
				format(string, sizeof(string), "%d/15000",Furi[i-matsfuraballas[0]][gBallas]);
				UpdateDynamic3DTextLabelText(mats3Dtxt[i], COLOR_YELLOW, string);
			}
		case 13:
			{
				format(string, sizeof(string), "%d/15000",Furi[i-matsfuravagos[0]][gVagos]);
				UpdateDynamic3DTextLabelText(mats3Dtxt[i], COLOR_YELLOW, string);
			}
		case 15:
			{
				format(string, sizeof(string), "%d/15000",Furi[i-matsfuragrove[0]][gGrove]);
				UpdateDynamic3DTextLabelText(mats3Dtxt[i], COLOR_YELLOW, string);
			}
		case 17:
			{
				format(string, sizeof(string), "%d/15000",Furi[i-matsfuraactek[0]][gAztek]);
				UpdateDynamic3DTextLabelText(mats3Dtxt[i], COLOR_YELLOW, string);
			}
		case 18:
			{
				format(string, sizeof(string), "%d/15000",Furi[i-matsfurarifa[0]][gRifa]);
				UpdateDynamic3DTextLabelText(mats3Dtxt[i], COLOR_YELLOW, string);
			}
		}
		SendClientMessage(playerid, COLOR_WHITE, "Вы положили в фургон 250 матов");
		PlayerInfo[playerid][pMats] -= 250;
		DeletePVar(playerid, "usemats");
		RemovePlayerAttachedObject(playerid, 1);
		ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,1,0);
	}
	return 1;
}
public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	if(!playerobject)
	{
		if(!IsValidObject(objectid)) return 1;
		MoveObject(objectid, fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
	}
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	if (GetPlayerMenu(playerid)==Menu:255) return OnPlayerCheat(playerid, 1);
	return 1;
}
public OnPlayerSelectedMenuRow(playerid, row)
{
	new Menu:Current = GetPlayerMenu(playerid);
	if(Current == BuyClothes)
	{
		switch(row)
		{
			case 0://Листаем вперед
			{
				if(PlayerInfo[playerid][pSex] == 1)
				{
					ChangeSkinv[playerid]++;
					if(ChangeSkinv[playerid] >= 62) ChangeSkinv[playerid] = 0;
					SetPlayerSkin(playerid,SkinMen[ChangeSkinv[playerid]][0]);
					SCMF(playerid,-1,"Продавец: Данная одежда обойдется вам всего в {00FF00}%d${FFFFFF}",SkinMen[ChangeSkinv[playerid]][1]);
				}
				else
				{
					ChangeSkinv[playerid]++;
					if(ChangeSkinv[playerid] >= 14) ChangeSkinv[playerid] = 0;
					SetPlayerSkin(playerid,SkinMale[ChangeSkinv[playerid]][0]);
					SCMF(playerid,-1,"Продавец: Данная одежда обойдется вам всего в {00FF00}%d${FFFFFF}",SkinMen[ChangeSkinv[playerid]][1]);
					GameTextForPlayer(playerid,stringer,9999,1);
				}
				ShowMenuForPlayer(BuyClothes, playerid);
			}
			case 1://Листаем назад
			{
				if(PlayerInfo[playerid][pSex] == 1)
				{
					if(ChangeSkinv[playerid] <= 0) ChangeSkinv[playerid] = 62;//7 - последний скин [М]
					ChangeSkinv[playerid]--;
					SetPlayerSkin(playerid,SkinMen[ChangeSkinv[playerid]][0]);
					SCMF(playerid,-1,"Продавец: Данная одежда обойдется вам всего в {00FF00}%d${FFFFFF}.",SkinMen[ChangeSkinv[playerid]][1]);
				}
				else
				{
					if(ChangeSkinv[playerid] <= 0) ChangeSkinv[playerid] = 14;//5 - последний скин [Ж]
					ChangeSkinv[playerid]--;
					SetPlayerSkin(playerid,SkinMale[ChangeSkinv[playerid]][0]);
					SCMF(playerid,-1,"Продавец: Данная одежда обойдется вам всего в {00FF00}%d${FFFFFF}",SkinMen[ChangeSkinv[playerid]][1]);
				}
				ShowMenuForPlayer(BuyClothes, playerid);
			}
			case 2://Покупаем
			{
				new cost;
				cost = SkinMen[ChangeSkinv[playerid]][1];
				new cena;
				cena = SkinMen[ChangeSkinv[playerid]][1];
				if(PlayerInfo[playerid][pSex] == 1)
				{
					if(GetPlayerMoney(playerid) >= cost)
					{
						PlayerInfo[playerid][pChar] = GetPlayerSkin(playerid);
						SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
						TogglePlayerControllable(playerid, 1);
						SetCameraBehindPlayer(playerid);
						SetPlayerPosEx(playerid,221.7944,-8.4229,1002.2109);
						SetPlayerFacingAngle(playerid,273.5792);
						SetPlayerInterior(playerid,5);
						PlayerInfo[playerid][pCash] -= cost;
						SCM(playerid,-1,"Продавец: Спасибо за покупку. Вы сделали хороший выбор!");
					}
					else
					{
						SCM(playerid,-1,"Продавец: Данная одежда вам не по карману!");
						ShowMenuForPlayer(BuyClothes, playerid);
					}
				}
				else
				{
					if(GetPlayerMoney(playerid) >= cena)
					{
						PlayerInfo[playerid][pChar] = GetPlayerSkin(playerid);
						SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
						TogglePlayerControllable(playerid, 1);
						SetCameraBehindPlayer(playerid);
						SetPlayerPosEx(playerid,221.7944,-8.4229,1002.2109);
						SetPlayerFacingAngle(playerid,273.5792);
						SetPlayerInterior(playerid,5);
						PlayerInfo[playerid][pCash] -= cost;
						SCM(playerid,-1,"Продавец: Спасибо за покупку. Вы сделали хороший выбор!");
					}
					else
					{
						SCM(playerid,-1,"Продавец: Данная одежда вам не по карману!");
						ShowMenuForPlayer(BuyClothes, playerid);
					}
				}
			}
			case 3://Выходим
			{
				SetPlayerSkin(playerid,PlayerInfo[playerid][pChar]);
				TogglePlayerControllable(playerid, 1);
				SetPlayerPosEx(playerid,221.7944,-8.4229,1002.2109);
				SetPlayerFacingAngle(playerid,273.5792);
				SetPlayerInterior(playerid,5);
				SetCameraBehindPlayer(playerid);
				SCM(playerid,-1,"Продавец: Всего хорошего, приходите еще!");
			}
		}
	}
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_ONFOOT)
	{
		KillTimer(STimer[playerid]);
		for(new i;i!=21;i++) PlayerTextDrawHide(playerid, DartProjectTD[i][playerid]);
		if(PlayerInfo[playerid][pJob] == 6 && GetPVarInt(playerid, #busID) != 0)
		{
		    DisablePlayerRaceCheckpoint(playerid), pTemp[playerid][bus_timer] = SetTimerEx("spawned_bus",15000,false,"i",playerid);
		    SCM(playerid, COLOR_REDD, "Если Вы не вернетесь в автобус в течении 15-ти секунд, он будет отбуксирован!");
		}
	}
	if(newstate == PLAYER_STATE_DRIVER) SetPVarInt(playerid,"VehID",GetPlayerVehicleID(playerid));
	if((newstate == 2 && oldstate == 3) || (newstate == 3 && oldstate == 2)) KickEx(playerid,6);
	if(newstate == oldstate && PlayerInfo[playerid][bAdmin] < 7) KickEx(playerid,7);
	if(newstate == PLAYER_STATE_SPECTATING)
	{
	    if(PlayerInfo[playerid][bAdmin] < 1 && PlayerInfo[playerid][pLogin]) return OnPlayerCheat(playerid, 2);
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		if(GetPlayerVehicleID(playerid) >= aBusCar[0] && GetPlayerVehicleID(playerid) <= aBusCar[1])
		{
			if(GetPVarInt(playerid, #busTicket)) return MeAction(playerid,"приложил проездной талон к турникету");
			SCM(playerid, COLOR_REDD, "Вы прошли через турникет без талона, Вас могут арестовать!");
			SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Приобрести талон можно у специального аппарата, цена: 5000$");
		}
		else if(IsATaxiCar(GetPlayerVehicleID(playerid)) && Taxi_Duty[GetPlayerVehicleID(playerid)]) return SCM(playerid, COLOR_WHITE, "Установите на карте метку, куда таксисту отвезти вас.");
		if(GetPlayerWeapon(playerid) == 24 || GetPlayerWeapon(playerid) == 31 || GetPlayerWeapon(playerid) == 26 || GetPlayerWeapon(playerid) == 28 || GetPlayerWeapon(playerid) == 29 || GetPlayerWeapon(playerid) == 30 || GetPlayerWeapon(playerid) == 33) SetPlayerArmedWeapon(playerid,0);
		new model = GetVehicleModel(GetPlayerVehicleID(playerid));
		if(400 <= model <= 611 && model != 483)
		{
			model -= 400;
			new seat = GetPlayerVehicleSeat(playerid);
			if(seat != 128)
			{
				model = (MaxPassengers[model >>> 3] >>> ((model & 7) << 2)) & 0xF;
				if(!model || model == 15) return KickEx(playerid,8);
				else if(!(0 < seat <= model)) return KickEx(playerid,9);
			}
			else return KickEx(playerid,10);
		}
		if(GetPlayerVehicleID(playerid) != 431 || GetPlayerVehicleID(playerid) != 437)
		{
			if(GetPlayerVehicleSeat(playerid) > 3) OnPlayerCheat(playerid, 3);
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 508)
		{
			SetPlayerPosEx(playerid, 2531.7166,-1031.2251,54.0299);
			TogglePlayerControllable(playerid, 0);
			SetTimerEx("UnFreez", 1500, false, "i", playerid);
			SetPlayerFacingAngle(playerid, 0);
			SetPlayerVirtualWorld(playerid,GetPlayerVehicleID(playerid));
			SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid, 1);
			SetPVarInt(playerid, "Intropic", GetPlayerVehicleID(playerid));
			SetPVarInt(playerid, "domkolesa",gettime()+5);
		}
	}
	new caridi = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(PlayerInfo[playerid][pJob]  ==2)
		{
			if(gcontract{playerid} == true) Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]),gcontract{playerid} = false;
		}
		if(GetPVarInt(playerid, "TalkingLive") == 2)
		{
			SCM(playerid, 0x6ab1ffaa, "Прямой эфир завершён");
			SCM(GetPVarInt(playerid, "TalkingLive"), 0x6ab1ffaa, "Прямой эфир завершён");
			TogglePlayerControllable(playerid, true);
			TogglePlayerControllable(GetPVarInt(playerid, "TalkingLive"), 1);
			SetPVarInt(GetPVarInt(playerid, "TalkingLive"), "TalkingLive", 999);
			SetPVarInt(playerid, "TalkingLive", 999);
			return 1;
		}
		else if(GetPVarInt(playerid, "TalkingLivels") == 2)
		{
			SCM(playerid, 0x6ab1ffaa, "Прямой эфир завершён");
			SCM(GetPVarInt(playerid, "TalkingLivels"), 0x6ab1ffaa, "Прямой эфир завершён");
			TogglePlayerControllable(playerid, true);
			TogglePlayerControllable(GetPVarInt(playerid, "TalkingLivels"), 1);
			SetPVarInt(GetPVarInt(playerid, "TalkingLivels"), "TalkingLivels", 999);
			SetPVarInt(playerid, "TalkingLivels", 999);
			return 1;
		}
	}
	new tacha = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_DRIVER)//если входит в авто мы показываем ему текстдрав
	{
		if(!IsABoat(tacha) && !IsAPlane(tacha) && GetVehicleModel(tacha) != 509 && GetVehicleModel(tacha) != 481 && GetVehicleModel(tacha) != 510 && !BezBenzacar(tacha))
		{
		    UpdateSpeedometr(playerid,0);
			STimer[playerid] = SetTimerEx("UpdateSpeedometr", 200, true, "ii",playerid,0);
			for(new i;i!=21;i++) PlayerTextDrawShow(playerid, DartProjectTD[i][playerid]);
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
	    if(VehicleEnters[playerid]!=GetPlayerVehicleID(playerid)) OnPlayerCheat(playerid, 4);
		if(!VehInfo[caridi][vFuel])
		{
			SCM(playerid, COLOR_GREY, "В автомобиле закончился бензин!");
			SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Доберитесь до ближайшей заправки, или же вызовите такси, или же механика. [/call]");
			PlayerInfo[playerid][pFuelcar] = 0;
		}
		if(GetVehicleModel(caridi) != 481 || GetVehicleModel(caridi) != 509 || GetVehicleModel(caridi) != 510)
		{
			if(GetPVarInt(playerid, "engine_on_off") == 0) SCM(playerid,COLOR_GREY,"Чтобы завести двигатель нажмите на клавишу ''{ffffff}2{AFAFAF}'', чтобы включить фары нажмите клавишу ''{FFFFFF}CTRL{AFAFAF}''");
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		new newcar = GetPlayerVehicleID(playerid);
		if(IsATaxiCar(newcar))
		{
			if(PlayerInfo[playerid][pJob] != 4) return SCM(playerid, COLOR_GREY, "Ты не работаешь таксистом."), RemoveFromVehicle(playerid);
			if(TaxiDuty{playerid})
			{
				format(stringer1,200, "{3399ff}Такси\n{ffffff}Тариф: {d3d3d3}%d$ за 1 км", TransportCompany_FareTaxi);
				taxi3d[GetPlayerVehicleID(playerid)] = Create3DTextLabel(stringer1, COLOR_YELLOW, 9999.0, 9999.0, 9999.0, 30.0, 0, 1);
				Taxi_Duty[newcar] = playerid+1, Attach3DTextLabelToVehicle(taxi3d[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), 0, 0, 1.5);
				return 1;
			}
			SCM(playerid, COLOR_GREY, "Ты не переоделся.");
			RemoveFromVehicle(playerid);
			return 1;
		}
		if(newcar >= aBusCar[0] && newcar <= aBusCar[1])
		{
		    if(PlayerInfo[playerid][pJob] != 6) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не водитель автобуса!"), RemovePlayerFromVehicle(playerid);
		    if(GetPVarInt(playerid, #busID) == newcar)
		    {
		        if(pTemp[playerid][bus_timer]) KillTimer(pTemp[playerid][bus_timer]);
         		new type_bus_race = 0, t_pos = GetPVarInt(playerid, #busPos), route = GetPVarInt(playerid, #busRoute);
				if((route == 0 && (t_pos == 1-1 || t_pos == 14-1 || t_pos == 21-1 || t_pos == 28-1 || t_pos == 32-1 || t_pos == 34-1))) type_bus_race = 1;
	        	SetPlayerRaceCheckpoint(playerid,type_bus_race,aBusPos[route][t_pos][0],aBusPos[route][t_pos][1],aBusPos[route][t_pos][2],aBusPos[route][t_pos+1][0],aBusPos[route][t_pos+1][1],aBusPos[route][t_pos+1][2],4.0);
      			return 1;
		    }
		    foreach(new i: Player)
		    {
		        if(!IsPlayerConnected(i) || i == playerid) continue;
		        if(GetPVarInt(i, #busID) == newcar) SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Данный автобус уже находится в аренде!"), RemovePlayerFromVehicle(playerid);
		    }
		    if(GetPVarInt(playerid, #busID) != newcar && GetPVarInt(playerid, #busID) != 0) return SCM(playerid, COLOR_GREY, "Вы уже арендуете автобус!"), RemovePlayerFromVehicle(playerid);
		    if(PlayerInfo[playerid][pCash] < 1000) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас не достаточно средств для аренды автобуса!"), RemovePlayerFromVehicle(playerid);
            ShowPlayerDialog(playerid,1551,0,"{FF6F00}Аренда автобуса","{"#cWHITE"}Вы хотите арендовать этот автобус за {FF6F00}$1000{"#cWHITE"}?","Арендовать","Отмена");
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 548 && GetPVarInt(playerid, "StartRabWork") && StartRabWork(playerid) && forma{playerid} == false) SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Для загрузки/разгрузки материалов  Введите: /carmat");
		if(IsAMatsCar(newcar))
		{
		    if(!GetPVarInt(playerid,"StartRabWork") && StartRabWork(playerid) && forma{playerid} == false) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!"), RemovePlayerFromVehicle(playerid);
			SCMF(playerid,TEAM_GROVE_COLOR,"Оружия: %d/%d", MatHaul[newcar-matscar[0]][mLoad],MatHaul[newcar-matscar[0]][mCapasity]);
			SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Для загрузки/разгрузки Оружия  Введите: /carm");
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 520)//Гидра
		{
		    if(!GetPVarInt(playerid,"StartRabWork") && StartRabWork(playerid)) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!"), RemovePlayerFromVehicle(playerid);
		    if(PlayerInfo[playerid][pMRInections] != 3 && PlayerInfo[playerid][pRKInections] < 8 || PlayerInfo[playerid][pMRInections] != 19 && PlayerInfo[playerid][pRKInections] < 8 || PlayerInfo[playerid][pMRInections] != 27 && PlayerInfo[playerid][pRKInections] < 8)
		    {
  				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPosEx(playerid, slx, sly, slz+5);
				RemoveFromVehicle(playerid);
				SCM(playerid, COLOR_GRAD1, "Вам недоступна данная техника.");
			}
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 425)//Апач
		{
		    if(!GetPVarInt(playerid,"StartRabWork") && StartRabWork(playerid)) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!"), RemovePlayerFromVehicle(playerid);
		    if(PlayerInfo[playerid][pMRInections] != 3 && PlayerInfo[playerid][pRKInections] < 8 || PlayerInfo[playerid][pMRInections] != 19 && PlayerInfo[playerid][pRKInections] < 8 || PlayerInfo[playerid][pMRInections] != 27 && PlayerInfo[playerid][pRKInections] < 8)
		    {
  				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPosEx(playerid, slx, sly, slz+5);
				RemoveFromVehicle(playerid);
				SCM(playerid, COLOR_GRAD1, "Вам недоступна данная техника.");
			}
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 432)//Танк
		{
		    if(!GetPVarInt(playerid,"StartRabWork") && StartRabWork(playerid)) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!"), RemovePlayerFromVehicle(playerid);
		    if(PlayerInfo[playerid][pMRInections] != 3 && PlayerInfo[playerid][pRKInections] < 8 || PlayerInfo[playerid][pMRInections] != 19 && PlayerInfo[playerid][pRKInections] < 8 || PlayerInfo[playerid][pMRInections] != 27 && PlayerInfo[playerid][pRKInections] < 8)
		    {
  				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPosEx(playerid, slx, sly, slz+5);
				RemoveFromVehicle(playerid);
				SCM(playerid, COLOR_GRAD1, "Вам недоступна данная техника.");
			}
		}
		if(newcar >= liccar[0] && newcar <= liccar[1])
		{
			if (PlayerInfo[playerid][pMRInections] != 11 && !pTemp[playerid][pOnExam]) {
				SCM(playerid,COLOR_GREY, "Транспорт пренадлежит государственной организации: Инструкторы."); RemoveFromVehicle(playerid);
			}
		}
		if(newcar >= rentcarsf[0] && newcar <= rentcarsf[1])
		{
			if(GetPVarInt(playerid, "arenda") != 1)
			{
				SPD(playerid,9126,DIALOG_STYLE_MSGBOX,"{FF6F00}Аренда машины","{FFFFFF}Стоимость аренды машины 5000 вирт","Снять","Отмена");
				TogglePlayerControllable(playerid, false);
			}
		}
		if(IsABoat(newcar))
		{
			if(PlayerInfo[playerid][pLicenses][2] < 1) { SCM(playerid, COLOR_WHITE, "У Вас нет лицензии на управление водным транспортом"); RemoveFromVehicle(playerid); }
		}
		if(IsAPlane(newcar))
		{
			if(PlayerInfo[playerid][pLicenses][1] == 1 || pTemp[playerid][pOnExam]) {}
			else
			{
				SCM(playerid, COLOR_WHITE, "У Вас нет лицензии пилота.");
				RemoveFromVehicle(playerid);
			}
		}
		if(VodPrava(newcar))
		{
			if(PlayerInfo[playerid][pLicenses][0] == 1 || !pTemp[playerid][pOnExam]) {}
			else
			{
				SCM(playerid, COLOR_WHITE, "У Вас нет водительских прав.");
				RemoveFromVehicle(playerid);
			}
		}
		if(newcar >= lsnewscar[0] && newcar <= lsnewscar[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 16 || PlayerInfo[playerid][pMRInections] == 16) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит государственной организации: San News."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= lvpdcar[0] && newcar <= lvpdcar[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 21 || PlayerInfo[playerid][pMRInections] == 21) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит государственной организации: LVPD."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= swatcar[0] && newcar <= swatcar[1])
		{
			if(PlayerInfo[playerid][pMRInections] == 25 || PlayerInfo[playerid][pLRInections] == 25) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит государственной организации: SWAT."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= streetcar[0] && newcar <= streetcar[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 24 || PlayerInfo[playerid][pMRInections] == 24) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит нелегальной организации: Street Racers."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= ruscar[0] && newcar <= ruscar[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 14 || PlayerInfo[playerid][pMRInections] == 14) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит нелегальной организации: Russian Mafia."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= lcncar[0] && newcar <= lcncar[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 5 || PlayerInfo[playerid][pMRInections] == 5) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит нелегальной организации: La Cosa Nostra."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= yakcar[0] && newcar <= yakcar[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 6 || PlayerInfo[playerid][pMRInections] == 6) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит нелегальной организации: Yakuza."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= comptruck[0] && newcar <= comptruck[1])
		{
			if(PlayerInfo[playerid][pJob] == 5) { SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Для загрузки продуктов,  Введите: /load "); }
			else { SCM(playerid, COLOR_GREY, "Вы не работаете развозчиком продуктов."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= benzovoz[0] && newcar <= benzovoz[1])
		{
			if(PlayerInfo[playerid][pJob] == 5) { SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Для загрузки бензина,  Введите: /loadbenz "); }
			else { SCM(playerid, COLOR_GREY, "Вы не работаете развозчиком бензина."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= govcar[0] && newcar <= govcar[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 7 || PlayerInfo[playerid][pMRInections] == 7) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит государственной организации: Мэрии г.Los Santos."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= aBusCar[0] && newcar <= aBusCar[1])
		{
		    if(PlayerInfo[playerid][pJob] != 6) { SCM(playerid, COLOR_GREY, "Вы не работаете водителем автобуса."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= matsfuraballas[0] && newcar <= matsfuraballas[0])
		{
			if(PlayerInfo[playerid][pLRInections] == 12 || PlayerInfo[playerid][pMRInections] == 12) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит нелегальной организации: The Ballas Gang."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= fbicar[0] && newcar <= fbicar[4])
		{
			if(PlayerInfo[playerid][pLRInections] == 2 || PlayerInfo[playerid][pMRInections] == 2) { }
			else { SCM(playerid, COLOR_GRAD1, "Транспорт пренадлежит государственной организации: FBI."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= sapdpatrul[0] && newcar <= sapdpatrul[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 1 || PlayerInfo[playerid][pMRInections] == 1) { }
			else { SCM(playerid, COLOR_GRAD1, "Транспорт пренадлежит государственной организации: LSPD."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= sapdcar[0] && newcar <= sapdcar[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 1 || PlayerInfo[playerid][pMRInections] == 1){ }
			else { SCM(playerid, COLOR_GRAD1, "Транспорт пренадлежит государственной организации: LSPD."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= medicsls[0] && newcar <= medicsls[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 4 || PlayerInfo[playerid][pMRInections] == 4) { }
			else { SCM(playerid, COLOR_GRAD1, "Транспорт пренадлежит государственной организации: Midics Los Santos."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= ministrcar[0] && newcar <= ministrcar[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 26 || PlayerInfo[playerid][pMRInections] == 26) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит государственной организации: Правительству."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= mehanik[0] && newcar <= mehanik[1])
		{
			if(PlayerInfo[playerid][pJob] == 2 && PlayerInfo[playerid][pMRInections] == 0) { }
			else { SCM(playerid, COLOR_GRAD1, "Вы не работаете механиком."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= sfpdcar[0] && newcar <= sfpdcar[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 10 || PlayerInfo[playerid][pMRInections] == 10) { }
			else { SCM(playerid, COLOR_GRAD1, "Транспорт пренадлежит государственной организации: SFPD."); RemoveFromVehicle(playerid); }
		}
		new Float:slx, Float:sly, Float:slz;
		GetPlayerPos(playerid, slx, sly, slz);
		if(newcar >= matsfuragrove[0] && newcar <= matsfuragrove[0])
		{
			if(PlayerInfo[playerid][pLRInections] == 15 || PlayerInfo[playerid][pMRInections] == 15) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит нелегальной организации: Grove Street Gang."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= matsfuraactek[0] && newcar <= matsfuraactek[0])
		{
			if(PlayerInfo[playerid][pLRInections] == 17 || PlayerInfo[playerid][pMRInections] == 17) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит нелегальной организации: Varios Los Aztecas Gang."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= matsfuravagos[0] && newcar <= matsfuravagos[0])
		{
			if(PlayerInfo[playerid][pLRInections] == 13 || PlayerInfo[playerid][pMRInections] == 13) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит нелегальной организации: Los Santos Vagos Gang."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= matsfurarifa[0] && newcar <= matsfurarifa[0])
		{
			if(PlayerInfo[playerid][pLRInections] == 18 || PlayerInfo[playerid][pMRInections] == 18) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит нелегальной организации: The Rifa Gang."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= ballascar[0] && newcar <= ballascar[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 12 || PlayerInfo[playerid][pMRInections] == 12) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит нелегальной организации: The Ballas Gang."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= grovecar[0] && newcar <= grovecar[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 15 || PlayerInfo[playerid][pMRInections] == 15) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит нелегальной организации: Grove Street Gang."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= coronoscar[0] && newcar <= coronoscar[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 17 || PlayerInfo[playerid][pMRInections] == 17) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит нелегальной организации: Varios Los Aztecas Gang."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= vagoscar[0] && newcar <= vagoscar[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 13 || PlayerInfo[playerid][pMRInections] == 13) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит нелегальной организации: Los Santos Vagos Gang."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= rifacar[0] && newcar <= rifacar[1])
		{
			if(PlayerInfo[playerid][pLRInections] == 18 || PlayerInfo[playerid][pMRInections] == 18) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит нелегальной организации: The Rifa Gang."); RemoveFromVehicle(playerid); }
		}
		if(newcar >= matscar[0] && newcar <= matscar[1])
		{
			if (PlayerInfo[playerid][pMRInections] == 19 || proverkaforma{playerid} == true) { }
			else { SCM(playerid, COLOR_GREY, "Транспорт пренадлежит государственной организации: Army Зона 51"); RemoveFromVehicle(playerid); }
		}
		if(newcar >= armycar[0] && newcar <= armycar[1])
		{
			if(PlayerInfo[playerid][pMRInections] == 3 || PlayerInfo[playerid][pMRInections] == 19) { }
			else { SCM(playerid, COLOR_GRAD1, "Транспорт пренадлежит государственной организации: Army San Fierro"); RemoveFromVehicle(playerid); SetPlayerPosEx(playerid, slx, sly, slz+5); }
		}
		if(newcar >= vmfcar[0] && newcar <= vmfcar[1])
		{
			if(PlayerInfo[playerid][pMRInections]== 27 || PlayerInfo[playerid][pMRInections] == 27) { }
			else { SCM(playerid, COLOR_GRAD1, "Транспорт пренадлежит государственной организации: Военно Морскому Флоту."); RemoveFromVehicle(playerid); SetPlayerPosEx(playerid, slx,sly,slz+5); }
		}
		if(newcar >= armcar[0] && newcar <= armcar[1])
		{
			if(PlayerInfo[playerid][pMRInections] == 19 || keys[playerid] == 1 || proverkaforma{playerid} == true) { }
			else { SCM(playerid, COLOR_GRAD1, "Транспорт пренадлежит государственной организации: Army Зона 51."); RemoveFromVehicle(playerid); SetPlayerPosEx(playerid, slx, sly, slz+5); }
		}
	}
	if(newstate == PLAYER_STATE_SPAWNED)
	{
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		if((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1)) SetPlayerSpawn(playerid);
		WantedPoints[playerid] = 0;
		WantedLevel[playerid] = 0;
		pTemp[playerid][pSpawn]  = true;
	}
	return 1;
}
stock LockCar(carid)
{
    gCarLock[carid] = true;
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(carid,engine,lights,alarm,true,bonnet,boot,objective);
	foreach(new i: Player) SetVehicleParamsForPlayer(carid,i,0,1);
}

stock InitLockDoors(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		for(new c = 0; c < 265; c++)
		{
			if (gCarLock[c] == true) SetVehicleParamsForPlayer(c,playerid,0,1);
		}
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	SetPVarInt(playerid,"Anti_AirFly",gettime()+1);
	SetPVarInt(playerid, "check_car_kick", gettime()+5);
    race_exitvehicle(playerid);
	if(GetPVarInt(playerid, "PEfir") != 999)
	{
		SCM(playerid,COLOR_WHITE, "Вы вышли из прямого эфира");
		SetPVarInt(playerid, "PEfir", 999);
	}
	if(TaxiDuty{playerid} && IsATaxiCar(GetPlayerVehicleID(playerid)))
	{
		Delete3DTextLabel(taxi3d[GetPlayerVehicleID(playerid)]);
		Taxi_Duty[vehicleid] = 0;
		if(GetPVarInt(playerid,"Taxi_Duty_Player"))
		{
			DeletePVar(GetPVarInt(playerid,"Taxi_Duty_Player")-1,"fX_map");
			DeletePVar(GetPVarInt(playerid,"Taxi_Duty_Player")-1,"fY_map");
			DeletePVar(GetPVarInt(playerid,"Taxi_Duty_Player")-1,"fZ_map");
			DeletePVar(playerid,"Taxi_Duty_Player");
		}
	}
	if(GetPVarInt(playerid, "Pefir") == 1 || GetPVarInt(playerid, "Pefir") == 2)
	{
	    DeletePVar(playerid, "Pefir");
	    SetPVarInt(playerid, "PEfir", 999);
		SCM(playerid,COLOR_WHITE, "Вы вышли из прямого эфира");
	}
	return 1;
}

race_exitvehicle(playerid)
{
	if (GetPVarInt(playerid, "PlayerInRace") == 1 && RaceStarting[2] == 1)
	{
	    Iter_Remove(RacersList, playerid);
	    PlayersInRace{0} --;
	    PlayerScore{playerid} = 0;
		for(new v = 0;v!= 10; v++) PlayerTextDrawHide(playerid, Race[v][playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid, "PlayerInRace");
		DestroyVehicle(GetPVarInt(playerid, "race_check"));
		format(format_string,128,"[RACE]: %s(%d) покинул транспортное средство. Участников: %i", PlayerInfo[playerid][pNames], playerid, PlayersInRace{0});
		RaceChat(COLOR_LIGHTBLUE, format_string);
		if (PlayersInRace{0} == 0)
		{
	        raceTime = 1;
	        PlayersInRace{0} = 0;
	        SendClientMessageToAll(COLOR_YELLOW, "Информация: Все участники покинули свои транспортные средства, гоночные мероприятия окончены.");
        	foreach(new s: RacersList)
		    {
				for(new v = 0;v!= 10; v++) PlayerTextDrawHide(s, Race[v][s]);
 				PlayerScore{s} = 0;
		        PlayerPosition{s} = 0;
		        Iter_Remove(RacersList, s);
		    }
		    RaceStarting[2] = 0;
		    typeRace = 3;
	        //state RaceStarted:No;
		}
  		SetPlayerPosEx(playerid, 827.0083,5.8989,1004.1870);
		SetPlayerFacingAngle(playerid, 269.6992);
		SetPlayerInterior(playerid, 3);
		SetPlayerVirtualWorld(playerid, 300);
	}
}
stock timestamp (unix_timestamp = 0, & year = 1970, & month = 1, & day  = 1, & hour =  0, & minute = 0, & second = 0)
{
    year = unix_timestamp/31557600, unix_timestamp -= year*31557600, year += 1970;
    if (year % 4 == 0) unix_timestamp -= 21600;
    day = unix_timestamp/86400;
    switch(day)
    {
        case 0..30: second = day, month = 1;
        case 31..58: second = day - 31, month = 2;
        case 59..89: second = day - 59, month = 3;
        case 90..119: second = day - 90, month = 4;
        case 120..150: second = day - 120, month = 5;
        case 151..180: second = day - 151, month = 6;
        case 181..211: second = day - 181, month = 7;
        case 212..242: second = day - 212, month = 8;
        case 243..272: second = day -243, month = 9;
        case 273..303: second = day - 273, month = 10;
        case 304..333: second = day - 304, month = 11;
        case 334..366: second = day - 334, month = 12;
    }
    unix_timestamp -= day*86400, hour = unix_timestamp/3600;
    unix_timestamp -= hour*3600, minute = unix_timestamp/60;
    unix_timestamp -= minute*60, day = second + 1;
    second = unix_timestamp;
}
new bans_day[3];
publics: CheckBanList(playerid)
{
	if(cache_get_row_count(connects))
	{
	    new data[16], admin[24], email[32];
	    cache_get_field_content(0, "Admin", admin, connects, sizeof(admin));
	    cache_get_field_content(0, "Date", data, connects, sizeof(data));
 		cache_get_field_content(0, "Reason", email, connects, sizeof(email));
 		SetPVarString(playerid, "AdminBan", admin);
     	SetPVarString(playerid, "DateBan", data);
     	SetPVarString(playerid, "ReasonBan", email);
		SetPVarInt(playerid, "BanDate", cache_get_field_content_int(0, "UnBanDate", connects));
		if(gettime() >= GetPVarInt(playerid, "BanDate") && GetPVarInt(playerid, "BanDate") >= 1) SetPVarInt(playerid, "UnBanPlayer", 1);
		timestamp(GetPVarInt(playerid, "BanDate"), bans_day[0], bans_day[1], bans_day[2]), SetPVarInt(playerid, "Block", 1);
		SetPVarInt(playerid, "Bloack_Msg_Year", bans_day[0]); SetPVarInt(playerid, "Bloack_Msg_Month", bans_day[1]); SetPVarInt(playerid, "Bloack_Msg_Day", bans_day[2]);
	}
	return 1;
}
publics: UnBan(playerid)
{
    if(!cache_get_row_count(connects)) return SendClientMessage(playerid, COLOR_RED,"Игрок не забанен!");
	new str[24], query_mysql[80];
    cache_get_field_content(0, "Nick", str, connects, sizeof(str));
 	SCMF(playerid,-1, "Вы успешно разбанили аккаунт: %s", str);
	format(query_mysql,sizeof(query_mysql), "DELETE FROM `BanList` WHERE `Nick` = '%s'", str), mysql_empty(connects, query_mysql);
	return 1;
}
stock check_block_account(playerid)
{
    if(GetPVarInt(playerid, "UnBanPlayer"))
    {
        new query_mysql[80];
    	format(query_mysql,sizeof(query_mysql), "DELETE FROM `BanList` WHERE `Nick` = '%s'", PlayerInfo[playerid][pNames]), mysql_empty(connects, query_mysql);
		SendClientMessage(playerid, COLOR_YELLOW, "Срок бана вышел, Ваш аккаунт успешно разблокирован."), DeletePVar(playerid, "Block");
		return KickEx(playerid, 1125);
    }
    new str[140];
	if(GetPVarInt(playerid, "Block"))
	{
	    new dataun[16], adminun[24], emailun[32];
 		GetPVarString(playerid, "AdminBan", adminun,24);
     	GetPVarString(playerid, "DateBan", dataun,16);
     	GetPVarString(playerid, "ReasonBan", emailun,32);
		if(GetPVarInt(playerid, "BanDate") >= 1) format(str,sizeof(str), "{FFFFFF}Аккаунт: %s\nДата блокировки: %s\nАдминистратор: %s\nПричина: %s\n\n\nДата разблокировки: %d/%d/%d",PlayerInfo[playerid][pNames], dataun,adminun,emailun,GetPVarInt(playerid, "Bloack_Msg_Day"), GetPVarInt(playerid, "Bloack_Msg_Month"), GetPVarInt(playerid, "Bloack_Msg_Year")), ShowPlayerDialog(playerid, 0000, 0,"{FF6F00}Аккаунт заблокирован.", str, "Выход","");
        else ShowPlayerDialog(playerid, 0000, 0,"{FF6F00}Аккаунт заблокирован", "{FFFFFF}Ваш акаунт заблокирован навсегда!", "Выход","");
		return KickEx(playerid, 4441);
	}
	return 0;
}
public OnPlayerRequestClass(playerid, classid)
{
	if(ORC{playerid} == true) return 1;
	ORC{playerid} = true;
	new mysql_string [128], QUERY[85];
	mysql_format(connects, mysql_string, 128, "SELECT `id` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", PlayerInfo[playerid][pNames]);
	mysql_tquery(connects, mysql_string, "FindPlayerInTable", "dd", playerid, g_MysqlRaceCheck[playerid]);
	format(QUERY,sizeof(QUERY), "SELECT * FROM `BanList` WHERE Nick = '%s'", PlayerInfo[playerid][pNames]), mysql_tquery(connects, QUERY, "CheckBanList", "d", playerid);
	for(new s = 0; s < sizeof(GZInfo); s++) GangZoneShowForPlayer(playerid,GZInfo[s][gID],GetGangZoneColor(s));
	for(new i = 0; i < 3; i++) GangZoneShowForPlayer(playerid,ZonsWar[i],16711888);
	for(new s; s < 4; s++) RINFO[playerid][SShout][s] = 0,RINFO[playerid][SAFK][s] = 0;
	CountVezit2++;
	if(CountVezit2 > onlinee)
	{
		new mtext[50];
		new year, month,day;
		getdate(year, month, day);
		new hour,minuite,second;
		gettime(hour,minuite,second);
		FixHour(hour);
		hour = shifthour;
		onlinee = CountVezit2;
		onlineeH = hour;
		onlineeMi = minuite;
		onlineeD = day;
		onlineeM = month;
		switch(month)
		{
		case 1: { mtext = "Января"; }
		case 2: { mtext = "Февраля"; }
		case 3: { mtext = "Марта"; }
		case 4: { mtext = "Апреля"; }
		case 5: { mtext = "Мая"; }
		case 6: { mtext = "Июня"; }
		case 7: { mtext = "Июля"; }
		case 8: { mtext = "Августа"; }
		case 9: { mtext = "Сентября"; }
		case 10: { mtext = "Октября"; }
		case 11: { mtext = "Ноября"; }
		case 12: { mtext = "Декабря"; }
		}
		format(stringer1, 144, "~ Новый рекорд онлайна! Был запечетлен в {"#cGREEN"}%d:%d, %d %s 2015{FFFFFF} года. Новый онлайн {"#cGREEN"}%d.",onlineeH,onlineeMi,onlineeD,mtext,onlinee);
		SendClientMessageToAll(COLOR_WHITE,stringer1);
		SaveMaxOnline();
	}
	new Float:pHealth;
	GetPlayerHealth(playerid, pHealth);
	if(pHealth) ClearAnimations(playerid, 1);
	SetPlayerInterior(playerid,0);
	PlayerInfo[playerid][pInt] = 0;
	if(PlayerInfo[playerid][pLogin] == true)
	{
		SetSpawnInfo(playerid, 0, 0, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
		SpawnPlayer(playerid);
		return 1;
	}
	TogglePlayerControllable(playerid,0);
	return 1;
}
publics: FromFresh(playerid)
{
	if(BizWarTime > 0)
	{
		new kv1,kv2;
		if(PlayerInfo[playerid][kapture][1] == true && !ISAMAFIA(playerid)) EndBizwar(playerid);
		if(MZInfo[bFrakVlad]!=PlayerInfo[playerid][pMRInections] && MZInfo[bNapad]!=PlayerInfo[playerid][pMRInections]) return 1;
		switch(MZInfo[bMesto])
		{
		case 1:
			if(PlayerToKvadrat(playerid,300.755706, 2402.644531, 468.755706, 2580.644531))
			{
				if(MZInfo[bFrakVlad]==PlayerInfo[playerid][pMRInections])
				kv1++;
				else kv2++;
			}
		case 2:
			if(PlayerToKvadrat(playerid,-855.6808,1891.0676,-519.0121,2128.4995))
			{
				if(MZInfo[bFrakVlad]==PlayerInfo[playerid][pMRInections])
				kv1++;
				else kv2++;
			}
		case 3:
			if(PlayerToKvadrat(playerid,275.881378, 797.211608, 443.881378, 973.211608))
			{
				if(MZInfo[bFrakVlad]==PlayerInfo[playerid][pMRInections])
				kv1++;
				else kv2++;
			}
		}
		if(PlayerInfo[playerid][kapture][1] == true && !ISAMAFIA(playerid)) EndBizwar(playerid);
		if(MZInfo[bFrakVlad]!=PlayerInfo[playerid][pMRInections] && MZInfo[bNapad]!=PlayerInfo[playerid][pMRInections]) return 1;
		if(PlayerInfo[playerid][kapture][1] == false)
		{
			GangZoneFlashForPlayer(playerid,ZonsWar[MZInfo[bMesto]-1],GetColor(MZInfo[bNapad]));
			PlayerTextDrawShow(playerid, Bizwar[playerid][0]);
			format(stringer1,50,"~w~Time: ~g~%s",TimeConverter(BizWarTime));
			PlayerTextDrawSetString(playerid,Bizwar[playerid][0],stringer1);
			format(stringer1,50,"~w~%s ~g~0 ~w~Kill: ~g~0",GetMN(MZInfo[bFrakVlad]));
			PlayerTextDrawSetString(playerid,Bizwar[playerid][1],stringer1);
			PlayerTextDrawShow(playerid, Bizwar[playerid][1]);
			format(stringer1,50,"~w~%s ~g~0 ~w~Kill: ~g~0",GetMN(MZInfo[bNapad]));
			PlayerTextDrawSetString(playerid,Bizwar[playerid][2],stringer1);
			PlayerTextDrawShow(playerid, Bizwar[playerid][2]);
			PlayerInfo[playerid][kapture][1] = true;
		}
		else
		{
			format(stringer1,50,"~w~Time: ~g~%s",TimeConverter(BizWarTime));
			PlayerTextDrawSetString(playerid,Bizwar[playerid][0],stringer1);
			format(stringer1,50,"~w~%s ~g~%d ~w~Kill: ~g~%d",GetMN(MZInfo[bFrakVlad]),kv1,MZInfo[bCountDead][MZInfo[bFrakVlad]]);
			PlayerTextDrawSetString(playerid,Bizwar[playerid][1],stringer1);
			format(stringer1,50,"~w~%s ~g~%d ~w~Kill: ~g~%d",GetMN(MZInfo[bNapad]),kv2,MZInfo[bCountDead][MZInfo[bNapad]]);
			PlayerTextDrawSetString(playerid,Bizwar[playerid][2],stringer1);
		}
	}
	return 1;
}
publics: Fresh()
{
   	forveh(i)
	{
		if(Start{i} == true && GetVehicleSpeed(i) > 10)
		{
			DestroyPickup(autopick_mats[i]);
			DestroyDynamic3DTextLabel(mats3Dtxt[i]);
			Start{i} = false;
		}
	}
	if(ServerRestart[0] == 2)
	{
	    new totalplayers = 0;
	    foreach(new i:Player)
	        totalplayers++;

		if(totalplayers <= 0) SendRconCommand("exit");
	}
	new hour, minute, second;
	gettime(hour, minute, second);
	new tmphour, tmpminute, tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	if(BizWarTime > 0)
	{
		BizWarTime--;
		if(BizWarTime <= 0)
		{
			new mafianame[24];
			switch(MZInfo[bNapad])
			{
			case 6: mafianame = "Yakuza";
			case 14: mafianame = "Russian Mafia";
			case 5: mafianame = "LCN";
			}
			new mafianamev[24];
			switch(MZInfo[bFrakVlad])
			{
			case 6: mafianamev = "Yakuza";
			case 14: mafianamev = "Russian Mafia";
			case 5: mafianamev = "LCN";
			}
			if(MZInfo[bCountDead][MZInfo[bFrakVlad]] > MZInfo[bCountDead][MZInfo[bNapad]])
			{
				if(MZInfo[bType]==1)
				{
					format(stringer,BIG_SIZE, "{FFFFFF}[Стрела] Мафии {4169E1}%s{FFFFFF} не удалось отобрать у вас контроль над бизнесом {4169E1}%s{FFFFFF}. Бизнес отбит.",GetMN(MZInfo[bNapad]),BizInfo[MZInfo[bBiz]][bName]);
					SendFamilyMessage(MZInfo[bFrakVlad], COLOR_WHITE, stringer);
					format(stringer,BIG_SIZE, "{FFFFFF}[Стрела] Вам не удалось отобрать у мафии {4169E1}%s{FFFFFF} котроль над бизнесом {4169E1}%s{FFFFFF}. Бизнес оставлен.",GetMN(MZInfo[bFrakVlad]),BizInfo[MZInfo[bBiz]][bName]);
					SendFamilyMessage(MZInfo[bNapad], COLOR_WHITE, stringer);
				}
				else
				{
					format(stringer,BIG_SIZE, "{FFFFFF}[Стрела] Мафии {4169E1}%s{FFFFFF} не удалось отобрать у вас контроль над бизнесом {4169E1}%s{FFFFFF}. Бизнес отбит.",GetMN(MZInfo[bNapad]),SBizzInfo[MZInfo[bBiz]][sMessage]);
					SendFamilyMessage(MZInfo[bFrakVlad], COLOR_WHITE, stringer);
					format(stringer,BIG_SIZE, "{FFFFFF}[Стрела] Вам не удалось отобрать у мафии {4169E1}%s{FFFFFF} котроль над бизнесом {4169E1}%s{FFFFFF}. Бизнес оставлен.",GetMN(MZInfo[bFrakVlad]),SBizzInfo[MZInfo[bBiz]][sMessage]);
					SendFamilyMessage(MZInfo[bNapad], COLOR_WHITE, stringer);
				}
			}
			else if(MZInfo[bCountDead][MZInfo[bFrakVlad]] == MZInfo[bCountDead][MZInfo[bNapad]])
			{
				if(MZInfo[bType]==1)
				{
					format(stringer,BIG_SIZE, "{FFFFFF}[Стрела] Стрела за бизнес {4169E1}%s{FFFFFF} закончилась ничьей. {8B0000}Бизнес потерян.",BizInfo[MZInfo[bBiz]][bName]);
					SendFamilyMessage(MZInfo[bFrakVlad], COLOR_WHITE, stringer);
					format(stringer,BIG_SIZE, "{FFFFFF}[Стрела] Стрела за бизнес {4169E1}%s{FFFFFF} закончилась ничьей. {32CD32}Бизнес оставлен.",BizInfo[MZInfo[bBiz]][bName]);
					SendFamilyMessage(MZInfo[bNapad], COLOR_WHITE, stringer);
					BizInfo[MZInfo[bBiz]][bKrisha] = 0;
					UpdateBizInfo(MZInfo[bBiz]);
					SaveBusiness(MZInfo[bBiz]);
				}
				else
				{
					format(stringer,BIG_SIZE, "{FFFFFF}[Стрела] Стрела за бизнес {4169E1}%s{FFFFFF} закончилась ничьей. {8B0000}Бизнес потерян.",SBizzInfo[MZInfo[bBiz]][sMessage]);
					SendFamilyMessage(MZInfo[bFrakVlad], COLOR_WHITE, stringer);
					format(stringer,BIG_SIZE, "{FFFFFF}[Стрела] Стрела за бизнес {4169E1}%s{FFFFFF} закончилась ничьей. {32CD32}Бизнес оставлен.",SBizzInfo[MZInfo[bBiz]][sMessage]);
					SendFamilyMessage(MZInfo[bNapad], COLOR_WHITE, stringer);
					SBizzInfo[MZInfo[bBiz]][sbMafia] = 0;
					UpdateBizInfo(MZInfo[bBiz]);
					SaveBusiness(MZInfo[bBiz]);
				}
			}
			else
			{
				if(MZInfo[bType]==1)
				{
					format(stringer,BIG_SIZE, "{FFFFFF}[Стрела] Мафия {4169E1}%s{FFFFFF} забрала у вас контроль над бизнесом {4169E1}%s{FFFFFF}. {8B0000}Бизнес потерян.",GetMN(MZInfo[bNapad]),BizInfo[MZInfo[bBiz]][bName]);
					SendFamilyMessage(MZInfo[bFrakVlad], COLOR_WHITE, stringer);
					format(stringer,BIG_SIZE, "{FFFFFF}[Стрела] Вы отобрали контроль над бизнесом {4169E1}%s{FFFFFF} у мафии {4169E1}%s{FFFFFF}. {32CD32}Бизнес захвачен.",BizInfo[MZInfo[bBiz]][bName],GetMN(MZInfo[bFrakVlad]));
					SendFamilyMessage(MZInfo[bNapad], COLOR_WHITE, stringer);
					BizInfo[MZInfo[bBiz]][bKrisha] = MZInfo[bNapad];
					UpdateBizInfo(MZInfo[bBiz]);
					SaveBusiness(MZInfo[bBiz]);
				}
				else
				{
					format(stringer,BIG_SIZE, "{FFFFFF}[Стрела] Мафия {4169E1}%s{FFFFFF} забрала у вас контроль над бизнесом {4169E1}%s{FFFFFF}. {8B0000}Бизнес потерян.",GetMN(MZInfo[bNapad]),SBizzInfo[MZInfo[bBiz]][sMessage]);
					SendFamilyMessage(MZInfo[bFrakVlad], COLOR_WHITE, stringer);
					format(stringer,BIG_SIZE, "{FFFFFF}[Стрела] Вы отобрали контроль над бизнесом {4169E1}%s{FFFFFF} у мафии {4169E1}%s{FFFFFF}. {32CD32}Бизнес захвачен.",GetMN(MZInfo[bFrakVlad]),SBizzInfo[MZInfo[bBiz]][sMessage]);
					SendFamilyMessage(MZInfo[bNapad], COLOR_WHITE, stringer);
					SBizzInfo[MZInfo[bBiz]][sbMafia] = MZInfo[bNapad];
					UpdateBizInfo(MZInfo[bBiz]);
					SaveBusiness(MZInfo[bBiz]);
				}
			}
			foreach(new m: Player)
			{
				if(MZInfo[bFrakVlad]!=PlayerInfo[m][pMRInections] && MZInfo[bNapad]!=PlayerInfo[m][pMRInections]) continue;
				EndBizwar(m);
			}
			MZInfo[bFrakVlad] = 0;
			MZInfo[bNapad] = 0;
			MZInfo[bBiz] = 255;
			GangZoneStopFlashForAll(ZonsWar[MZInfo[bMesto]-1]);
			GangZoneHideForAll(ZonsWar[MZInfo[bMesto]]);
			GangZoneShowForAll(ZonsWar[MZInfo[bMesto]], 16711888);
			BizWarTime = 0;
			BizHourTime =2;
			MZInfo[bMesto]=0;
			MZInfo[bCountDead][MZInfo[bNapad]] = 0;
			MZInfo[bCountDead][MZInfo[bFrakVlad]] = 0;
			MZInfo[bType]=0;
		}
	}
	if(svt < gettime() && StartVibori == true)
	{
		StartVibori = false;
		for(new hs; hs != 2; hs++)
		{
			Delete3DTextLabel(gVibMarKan[hs]);
			Delete3DTextLabel(gVibMarKantwo[hs]);
		}
		SendClientMessageToAll(0xD0E324AA, "Внимание! Выборы окончены. Посмотреть результаты голосования можно в мэрии!");
		foreach(new i: Player) { if(PlayerInfo[i][pVoted] == 1) { PlayerInfo[i][pVoted] = 0; } }
		mysql_empty(connects,"UPDATE `accounts` SET `pVoted`='0'");
	}
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		format(stringer,SMALL_SIZE, "Сейчас времени %d:00 часов",tmphour);
		ABroadCast(COLOR_LIGHTRED,stringer,6);
		ghour = tmphour;
		PayDay();
		if (realtime) SetWorldTime(tmphour);
		if(tmphour == 5)
		{
			for(new i=0;i<5;i++) SendClientMessageToAll(0x9F0000FF,"");
			for(new h=1;h<MAX_HOTEL;h++) CheckHotel(h);
			for(new h=0;h<sizeof(HouseInfo);h++) CheckHouse(h);
			for(new x=1;x<=BIZES;x++) CheckBusiness(x);
			SendClientMessageToAll(0x9F0000FF,"Внимание! Рестарт сервера через 5 минут");
		}
	}
	if(hour == 5)
	{
		if(minute == 4 && second == 30)
		{
			for (new i = 0; i < 5; i++) SendClientMessageToAll(0x9F0000FF,"");
   			SaveMaterials();
		    for(new h = 0; h < sizeof(HouseInfo); h++) SaveHouse(h);
			for(new g= 0; g < sizeof(GZInfo); g++) SaveGZ(g);
			SaveBankMafia(); SaveBankFrac();
			for(new i = 0; i < sizeof(SBizzInfo); i ++) SaveSBizz(i);
			for(new i = 1; i <= BIZES; i ++) SaveBusiness(i);
			for(new i = 1; i < MAX_HOTEL; i++) SaveHotel(i);
			SendClientMessageToAll(0x9F0000FF,"Внимание! Рестарт сервера через 30 секунд");
		}
		if(minute == 5 && ServerRestart[0] == 0)
		{
		    new time = GetTickCount();
		    foreach(new i: Player)
			{
				ShowPlayerDialog(i,0000,DIALOG_STYLE_MSGBOX, "{FF6F00}Ночной рестарт сервера:","{FFFFFF}Происходит рестарт сервера\nЭто может занять до 3 минут.\n\nБлагодарим Вас за ожидание.\n\nПричина рестарта:\n-Обновление\n- Исправление технических недочетов\n- Обновления", "Готово", "");
				KickEx(i, 2222);
			}
			printf("[SaveAll] - %d <ms>",GetTickCount() - time);
			format(stringer1,100, "[SaveAll] Сохранение всего и домов - %d <ms>",GetTickCount() - time);
			ABroadCast(0xAA3333AA,stringer1,1);
			mysql_tquery(connects,"ANALYZE TABLE `accounts`, `business`, `zone`, `house`, `hotel`, `unitpay_payments`","","");
			mysql_tquery(connects,"OPTIMIZE TABLE `accounts`, `business`, `zone`, `house`, `hotel`, `unitpay_payments`","","");
			if(!mysql_errno()) print("Auto Restart - Loading... Optimize and Analyze database was successful");
			else print("Auto Restart - Loading... Optimize and Analyze database was not successful");
			ServerRestart[0] = 2;
			return 1;
		}
    }
	if(minute == 00 && second == 00 || minute == 10  && second == 00 || minute == 20  && second == 00 || minute == 30  && second == 00 || minute == 40 && second == 00 || minute == 50 && second == 00)
	{
		SendClientMessageToAll(0xFF6F00FF,"{FF6F00}INSPIRE-INFO: {FFFFFF}На сервере присутствует система доната. {"#cGREEN"}/donate");
		SendClientMessageToAll(0xFF6F00FF,"{FF6F00}INSPIRE-INFO: {FFFFFF}Слушайте приятную музыку на {"#cGREEN"}/play");
		SendClientMessageToAll(0xFF6F00FF,"{FF6F00}INSPIRE-INFO: {FFFFFF}Задайте интересующийся Вас вопрос нашей адмнистрации / помощникам {"#cGREEN"}/mm");
		SendClientMessageToAll(0xFF6F00FF,"{FF6F00}INSPIRE-INFO: {FFFFFF}Пополнить свой баланс в рублях, Вы можете на нашем сайте {"#cGREEN"}FORUM.INSPIRE-RP.RU");
	}
	if (realtime) { SetWorldTime(tmphour); }
	return 1;
}

stock ShowStats(playerid,targetid)
{
	if(!IsPlayerConnected(targetid)) return 1;
	new jtext[25];
	switch(PlayerInfo[targetid][pJob])
	{
		case 2: jtext = "Механик";
		case 4:  jtext = "Таксист";
		case 5:  jtext = "Развозчик продуктов";
		case 6:  jtext = "Водитель автобуса";
		case 15:  jtext = "Местный DJ";
		default:  jtext = "Безработный";
	}
	new status[20];
	switch(PlayerInfo[targetid][pLevel])
	{
		case 11..16: status = "Освоившийся";
		case 17..25: status = "Постоянный игрок";	case 26..30: status = "Дед";
	}
	switch(PlayerInfo[targetid][pDRInections])
	{
		case 1: status = "Bronze VIP"; case 2: status = "Silver VIP";  case 3: status = "Gold VIP";
		default: status = "Новичек";
	}
	new mtext[20];
	switch(PlayerInfo[targetid][pSex])
	{
		case 1: mtext = "Мужской"; case 2: mtext = "Женский"; default: mtext = "Нет";
	}
	new htext[20];
	if(PlayerInfo[targetid][pHouse] != -1)
	{
		switch(HouseInfo[PlayerInfo[targetid][pHouse]][hKlass])
		{
			case 0:htext = "Эконом класс";	case 1:htext = "Cредний класс";	case 2:htext = "Элитный класс";	case 3:htext = "Класс особняк";	default:htext = "Неизвестно";
		}
	}
	else htext = "Нет";
	new btext[24];
	if(PlayerInfo[playerid][pBusiness] != -1) strmid(btext, BizInfo[PlayerInfo[playerid][pBusiness]][bName], 0, strlen(BizInfo[PlayerInfo[playerid][pBusiness]][bName]), 255);
	else btext = "Нет";
	new cartext[24];
	if(PlayerInfo[playerid][pCar][0] != 0 || PlayerInfo[playerid][pCar][0] != 462) format(cartext, 64, "%s", VehicleNames[PlayerInfo[playerid][pCar][0]-400]);
	else cartext = "Нет";
	new cartext2[24];
	if(PlayerInfo[playerid][pCar][1] != 0 || PlayerInfo[playerid][pCar][1] != 462) format(cartext2, 64, "%s", VehicleNames[PlayerInfo[playerid][pCar][1]-400]);
	else cartext2 = "Нет";

	new nxtlevel = PlayerInfo[targetid][pLevel]+1;
	new expamount = nxtlevel*levelexp;

	stringer = "";
	format(stringer1,MAX_STR,"{FFFFFF}Ник:\t\t\t\t%s\n",PlayerInfo[targetid][pNames]);
	strcat(stringer,stringer1);
	format(stringer1,MAX_STR,"{FFFFFF}Уровень:\t\t\t%i\n",PlayerInfo[targetid][pLevel]);
	strcat(stringer,stringer1);
	format(stringer1,MAX_STR,"{FFFFFF}EXP:\t\t\t\t%d / %d час(ов)\n",PlayerInfo[targetid][pExp],expamount);
	strcat(stringer,stringer1);
	format(stringer1,MAX_STR,"{FFFFFF}Деньги:\t\t\t%i$\n\n",GetPlayerMoney(targetid));//atext
	strcat(stringer,stringer1);

	format(stringer1,MAX_STR,"{FFFFFF}Предупреждения:\t\t%i\n",PlayerInfo[targetid][pWarns]);
	strcat(stringer,stringer1);
	format(stringer1,MAX_STR,"{FFFFFF}Номер телефона:\t\t%i\n",PlayerInfo[targetid][pPnumber]);
	strcat(stringer,stringer1);
	format(stringer1,MAX_STR,"{FFFFFF}Законопослушность:\t\t%i\n",PlayerInfo[targetid][pZakonp]);
	strcat(stringer,stringer1);
	format(stringer1,MAX_STR,"{FFFFFF}Уровень розыска:\t\t%i\n\n",WantedLevel[targetid]);
	strcat(stringer,stringer1);

	if(PlayerInfo[targetid][pMRInections] != 0)
	{
		format(stringer1,MAX_STR,"{FFFFFF}Фракция:\t\t\t%s\n",GetMember[PlayerInfo[targetid][pMRInections]-1]);
		strcat(stringer,stringer1);
		format(stringer1,MAX_STR,"{FFFFFF}Должность:\t\t\t%s\n",PlayerRank[PlayerInfo[targetid][pMRInections]-1][PlayerInfo[targetid][pRKInections]-1]);
		strcat(stringer,stringer1);
	}

	format(stringer1,MAX_STR,"{FFFFFF}Выговоров:\t\t\t%d/3\n",PlayerInfo[targetid][vig]);
	strcat(stringer,stringer1);
	format(stringer1,MAX_STR,"{FFFFFF}Работа:\t\t\t\t%s\n",jtext);
	strcat(stringer,stringer1);
	format(stringer1,MAX_STR,"{FFFFFF}Ед. Материалов:\t\t%i\n",PlayerInfo[targetid][pMats]);
	strcat(stringer,stringer1);
	format(stringer1,MAX_STR,"{FFFFFF}Наркотики:\t\t\t%i\n\n",PlayerInfo[targetid][pDrugs]);
	strcat(stringer,stringer1);

	format(stringer1,MAX_STR,"{FFFFFF}Жильё:\t\t\t\t%s\n",htext);
	strcat(stringer,stringer1);
	format(stringer1,MAX_STR,"{FFFFFF}Бизнес:\t\t\t%s\n",btext);
	strcat(stringer,stringer1);
	format(stringer1,MAX_STR,"{FFFFFF}Машина #1:\t\t\t%s\n",cartext);
	strcat(stringer,stringer1);
	format(stringer1,MAX_STR,"{FFFFFF}Машина #2:\t\t\t%s\n",cartext2);
	strcat(stringer,stringer1);
	format(stringer1,MAX_STR,"{FFFFFF}Статус:\t\t\t\t%s\n",status);
	strcat(stringer,stringer1);
	format(stringer1,MAX_STR,"{FFFFFF}Пол:\t\t\t\t%s\n\n",mtext);
	strcat(stringer,stringer1);

	if(PlayerInfo[targetid][bAdmin] > 0)
	{
		format(stringer1,MAX_STR,"{FF0000}Выговоров:{FFFFFF}\t\t\t%d/3\n",PlayerInfo[targetid][pAvig]);
		strcat(stringer,stringer1);
		format(stringer1,MAX_STR,"{FF0000}Уровень администратирования:{FFFFFF}\t\t%d\n",PlayerInfo[targetid][bAdmin]);
		strcat(stringer,stringer1);
		format(stringer1,MAX_STR,"{FF0000}Должность:{FFFFFF}\t\t\t%s\n",GetAdmin[PlayerInfo[targetid][bAdmin]-1]);
		strcat(stringer,stringer1);
	}
	SPD(playerid,0000,DIALOG_STYLE_MSGBOX,"{FF6F00}Статистика персонажа",stringer,"Закрыть","");
	return 1;
}

stock SetPlayerToTeamColor(playerid)
{
    if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SetPlayerColor(playerid, 0xFFFFFF20);
	switch(PlayerInfo[playerid][pMRInections])
	{
		case 0:	SetPlayerColor(playerid, 0xFFFFFF20);
		case 1: SetPlayerColor(playerid, COLOR_DBLUE);
		case 2: SetPlayerColor(playerid, 0x313131AA);
		case 3: SetPlayerColor(playerid, COLOR_GREEN);
		case 4: SetPlayerColor(playerid, 0xA52A2AFF);
		case 5: SetPlayerColor(playerid, 0xDDA701FF);
		case 6: SetPlayerColor(playerid, COLOR_REDD);
		case 7: SetPlayerColor(playerid, 0x114D71FF);
		case 8: SetPlayerColor(playerid, 0xB313E7FF);
		case 10: SetPlayerColor(playerid, COLOR_DBLUE);
		case 11: SetPlayerColor(playerid, 0xFFE7BAAA);
		case 12: SetPlayerColor(playerid, 0x8813E7FF);
		case 13: SetPlayerColor(playerid, 0xDBD604AA);
		case 14: SetPlayerColor(playerid, COLOR_GRAD1);
		case 15: SetPlayerColor(playerid, 0x009F00AA);
		case 16: SetPlayerColor(playerid, 0x40848BAA);
		case 17: SetPlayerColor(playerid, TEAM_AZTECAS_COLOR);
		case 18: SetPlayerColor(playerid, 0x83BFBFAA);
		case 19: SetPlayerColor(playerid, COLOR_GREEN);
		case 21: SetPlayerColor(playerid, COLOR_DBLUE);
		case 24: SetPlayerColor(playerid, 0xF45000FF);
		case 25: SetPlayerColor(playerid, 0x2E8B57FF);
		case 26: SetPlayerColor(playerid, 0x708090AA);
		case 27: SetPlayerColor(playerid, COLOR_GREEN);
		case 28: SetPlayerColor(playerid, 0x114D71FF);
	}
	return 1;
}

public OnGameModeExit() return 1;

publics:family_loading ( )
{
	if (!cache_get_row_count(connects)) return print ( "[Загрузка]: В базе данных не найдена не одна семья." ) ;
	for (new f; f < cache_get_row_count(connects); f++)
	{
	   	family_info[f+1][f_id] = cache_get_field_content_int(f, "fam_id", connects);
		cache_get_field_content(f, "fam_name", family_info[f+1][f_name], connects, strlen(family_info[f+1][f_name]));
		cache_get_field_content(f, "fam_creator", family_info[f+1][f_creator], connects, strlen(family_info[f+1][f_creator]));
		cache_get_field_content(f, "fam_data", family_info[f+1][f_creating_data], connects, strlen(family_info[f+1][f_creating_data]));
		family_info[f+1][f_chat_color] = cache_get_field_content_int(f, "fam_chat_color", connects);
		family_info[f+1][f_members_amount] = cache_get_field_content_int(f, "fam_members_amount", connects);
		family_info[f+1][f_nationality] = cache_get_field_content_int(f, "fam_nationality", connects);
	}
	printf("[Загрузка]: Загружено %d семей", cache_get_row_count(connects));
	return 1;
}
stock family_message (family, color, text[] )
{
	foreach(new i: Player)
	{
		if ( player_family [ i ] != family ) continue;
		SCM ( i, color, text ) ;
	}
	return 1;
}
publics: off_family_members_callback(playerid)
{
	new rows = cache_get_row_count(connects), temp [ 24 ],ofm_string[ 256 ];
	if(rows != 0)
	{
		for(new i = 0; i < rows ;i++)
		{
			cache_get_field_content ( i, "Name", temp, connects);
			strcat(ofm_string,temp);
			strcat(ofm_string,"\n");
		}
	}
	ShowPlayerDialog ( playerid, 996 , DIALOG_STYLE_LIST, "{FF6F00}Члены семьи", ofm_string, "Назад","" ) ;
	return 1;
}

publics: LoadProperty()
{
	new i=cache_get_row_count(connects);
	new time = GetTickCount();
	if(cache_get_row_count(connects) > 0)
	{
		for(new he;he < cache_get_row_count(connects); he++)
		{
   			HouseInfo[he][hID] = cache_get_field_content_int(he, "hID", connects);
			HouseInfo[he][hEnter][0] = cache_get_field_content_float(he, "hEntrancex", connects);
			HouseInfo[he][hEnter][1] = cache_get_field_content_float(he, "hEntrancey", connects);
			HouseInfo[he][hEnter][2] = cache_get_field_content_float(he, "hEntrancez", connects);
			HouseInfo[he][hExit][0] = cache_get_field_content_float(he, "hExitx", connects);
			HouseInfo[he][hExit][1] = cache_get_field_content_float(he, "hExity", connects);
			HouseInfo[he][hExit][2] = cache_get_field_content_float(he, "hExitz", connects);
			cache_get_field_content(he, "hOwner", HouseInfo[he][hOwner], connects, strlen(HouseInfo[he][hOwner]));
			HouseInfo[he][hValue] = cache_get_field_content_int(he, "hValue", connects);
			HouseInfo[he][hHel] = cache_get_field_content_int(he, "hHel", connects);
			HouseInfo[he][hInt] = cache_get_field_content_int(he, "hInt", connects);
			HouseInfo[he][hLock] = cache_get_field_content_int(he, "hLock", connects);
			HouseInfo[he][hOwned] = cache_get_field_content_int(he, "hOwned", connects);
			HouseInfo[he][hTakings] = cache_get_field_content_int(he, "hTakings", connects);
			HouseInfo[he][hKlass] = cache_get_field_content_int(he, "hKlass", connects);
			HouseInfo[he][hVehSost] = cache_get_field_content_int(he, "hVehSost", connects);
			HouseInfo[he][hCar][0] = cache_get_field_content_float(he, "hCarx", connects);
			HouseInfo[he][hCar][1] = cache_get_field_content_float(he, "hCary", connects);
			HouseInfo[he][hCar][2] = cache_get_field_content_float(he, "hCarz", connects);
			HouseInfo[he][hCar][3] = cache_get_field_content_float(he, "hCarc", connects);
			HouseInfo[he][hStyle] = cache_get_field_content_int(he, "hStyle", connects);
			HouseInfo[he][hKolesa] = cache_get_field_content_int(he, "hKolesa", connects);
			HouseInfo[he][hBenz] = cache_get_field_content_int(he, "hBenz", connects);
			HouseInfo[he][hBal][0] = cache_get_field_content_int(he, "hBal1", connects);
			HouseInfo[he][hBal][1] = cache_get_field_content_int(he, "hBal2", connects);
			HouseInfo[he][hBal][2] = cache_get_field_content_int(he, "hBal3", connects);
			HouseInfo[he][hBal][3] = cache_get_field_content_int(he, "hBal4", connects);
			HouseInfo[he][hSafe] = cache_get_field_content_int(he, "hSafe", connects);
			HouseInfo[he][hNarko] = cache_get_field_content_int(he, "hNarko", connects);
			HouseInfo[he][hGun][0] = cache_get_field_content_int(he, "hGun1", connects);
			HouseInfo[he][hGun][1] = cache_get_field_content_int(he, "hGun2", connects);
			HouseInfo[he][hGun][2] = cache_get_field_content_int(he, "hGun3", connects);
			HouseInfo[he][hGun][3] = cache_get_field_content_int(he, "hGun4", connects);
			HouseInfo[he][hGun][4] = cache_get_field_content_int(he, "hGun5", connects);
			HouseInfo[he][hGunAmmo][0] = cache_get_field_content_int(he, "hGunAmmo1", connects);
			HouseInfo[he][hGunAmmo][1] = cache_get_field_content_int(he, "hGunAmmo2", connects);
			HouseInfo[he][hGunAmmo][2] = cache_get_field_content_int(he, "hGunAmmo3", connects);
			HouseInfo[he][hGunAmmo][3] = cache_get_field_content_int(he, "hGunAmmo4", connects);
			HouseInfo[he][hGunAmmo][4] = cache_get_field_content_int(he, "hGunAmmo5", connects);
			HouseInfo[he][hGarage]  = cache_get_field_content_int(he, "hGarage", connects);
			HouseInfo[he][CarDrived][0] = cache_get_field_content_float(he, "CarDrivedCar1", connects);
			HouseInfo[he][CarDrived][1] = cache_get_field_content_float(he, "CarDrivedCar2", connects);
			if(HouseInfo[he][hGarage] == 1) CreateDynamic3DTextLabel("Чтобы выйти из гаража нажмите 'ALT'", -1, 2495.8093,-2565.6794,2501.5364+0.8,9.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,he+50);CreateDynamic3DTextLabel("Чтобы покинуть гараж\nПосигнальте 'H'", COLOR_BLUE, 2486.3569,-2555.4048,2503.1860+0.8,9.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,he+50);
			if(HouseInfo[he][hOwned] == 0)
			{
				HouseInfo[he][hPickup] = CreateDynamicPickup(1273, 23, HouseInfo[he][hEnter][0], HouseInfo[he][hEnter][1], HouseInfo[he][hEnter][2],-1);
				HouseInfo[he][hMIcon] = CreateDynamicMapIcon(HouseInfo[he][hEnter][0], HouseInfo[he][hEnter][1], HouseInfo[he][hEnter][2], 31, COLOR_WHITE, 0, -1, -1, 200.0);
			}
			if(HouseInfo[he][hOwned] == 1)
			{
				HouseInfo[he][hPickup] = CreateDynamicPickup(19522, 23, HouseInfo[he][hEnter][0], HouseInfo[he][hEnter][1], HouseInfo[he][hEnter][2],-1);
				HouseInfo[he][hMIcon] = CreateDynamicMapIcon(HouseInfo[he][hEnter][0], HouseInfo[he][hEnter][1], HouseInfo[he][hEnter][2], 32, COLOR_WHITE, 0, -1, -1, 200.0);
			}
		}
		printf("[Загрузкa]: LoadProperty | Загружено %d | Time: %d (ms)",i, GetTickCount() - time);
	}
	else printf("Дома не загружены.");
	return 1;
}

publics: LoadBizes()
{
	if(!cache_get_row_count(connects)) return printf("Бизнесы не загружены.");
	new akt[30], time = GetTickCount();
	for(new h = 1; h <= cache_get_row_count(connects); h++)
	{
   		BizInfo[h][bID] = cache_get_field_content_int(h, "bID", connects);
		BizInfo[h][EnterX] = cache_get_field_content_float(h, "EnterX", connects);
		BizInfo[h][EnterY] = cache_get_field_content_float(h, "EnterY", connects);
		BizInfo[h][EnterZ] = cache_get_field_content_float(h, "EnterZ", connects);
		BizInfo[h][ExitX] = cache_get_field_content_float(h, "ExitX", connects);
		BizInfo[h][ExitY] = cache_get_field_content_float(h, "ExitY", connects);
		BizInfo[h][ExitZ] = cache_get_field_content_float(h, "ExitZ", connects);
		cache_get_field_content(h, "bOwner", BizInfo[h][bOwner], connects, strlen(BizInfo[h][bOwner]));
		BizInfo[h][bPrice] = cache_get_field_content_int(h, "bPrice", connects);
		BizInfo[h][bInt] = cache_get_field_content_int(h, "bInt", connects);
		BizInfo[h][bVW] = cache_get_field_content_int(h, "bVW", connects);
		BizInfo[h][bLock] = cache_get_field_content_int(h, "bLock", connects);
		cache_get_field_content(h, "bName", BizInfo[h][bName], connects, strlen(BizInfo[h][bName]));
		BizInfo[h][bKrisha] = cache_get_field_content_int(h, "bKrisha", connects);
		BizInfo[h][bPribil] = cache_get_field_content_int(h, "bPribil", connects);
		BizInfo[h][BarX] = cache_get_field_content_float(h, "BarX", connects);
		BizInfo[h][BarY] = cache_get_field_content_float(h, "BarY", connects);
		BizInfo[h][BarZ] = cache_get_field_content_float(h, "BarZ", connects);
		BizInfo[h][bCena][0] = cache_get_field_content_int(h, "bCena1", connects);
		BizInfo[h][bCena][1] = cache_get_field_content_int(h, "bCena2", connects);
		BizInfo[h][bCena][2] = cache_get_field_content_int(h, "bCena3", connects);
		BizInfo[h][bCena][3] = cache_get_field_content_int(h, "bCena4", connects);
		BizInfo[h][bCena][4] = cache_get_field_content_int(h, "bCena5", connects);
		BizInfo[h][bCena][5] = cache_get_field_content_int(h, "bCena6", connects);
		BizInfo[h][bCena][6] = cache_get_field_content_int(h, "bCena7", connects);
		BizInfo[h][bCena][7] = cache_get_field_content_int(h, "bCena8", connects);
		BizInfo[h][bCena][8] = cache_get_field_content_int(h, "bCena9", connects);
		BizInfo[h][bVhod] = cache_get_field_content_int(h, "bVhod", connects);
		BizInfo[h][bNalog] = cache_get_field_content_int(h, "bNalog", connects);
		BizInfo[h][bBank] = cache_get_field_content_int(h, "bBank", connects);
		BizInfo[h][bTypeBiz] = cache_get_field_content_int(h, "bTypeBiz", connects);
		BizInfo[h][bCheck] = cache_get_field_content_int(h, "bCheck", connects);
		switch(BizInfo[h][bKrisha])
		{
			case 5: akt = "La Cosa Nostra";
			case 6: akt = "Yakuza";
			case 14: akt = "Russian Mafia";
			default: akt = "Неизвестно";
		}
		if(!strcmp( BizInfo[h][ bOwner ], "None", true ) )
		{
			BizInfo[h][ bPickup ] = CreateDynamicPickup(1274, 1, BizInfo[h][ EnterX ], BizInfo[h][ EnterY ], BizInfo[h][ EnterZ ],-1,-1,-1,100.0);
			format(stringer, MAX_STR, "{FF7800}%s\n{FFFFFF}Бизнес находится на продаже\nЦена: {FF7800}%i$", BizInfo[h][bName],BizInfo[h][bPrice]);
		}
		else
		{
			BizInfo[h][ bPickup ] = CreateDynamicPickup(19132, 1, BizInfo[h][ EnterX ], BizInfo[h][ EnterY ], BizInfo[h][ EnterZ ],-1,-1,-1,100.0);
			if(BizInfo[h][bVhod] > 0) format(stringer, BIG_SIZE, "{FF7800}%s\n{FFFFFF}Владелец:{FF7800} %s\n{FFFFFF}Цена за вход: {FF7800}$%i\n{FFFFFF}Контроль: {FF7800}%s", BizInfo[h][bName],BizInfo[h][bOwner],BizInfo[h][bVhod],akt);
			else format(stringer, BIG_SIZE, "{FF7800}%s\n{FFFFFF}Владелец: {FF7800}%s\n{FFFFFF}Контроль:{FF7800} %s", BizInfo[h][bName],BizInfo[h][bOwner],akt);
		}
		new icon = 0, type = BizInfo[h][bTypeBiz];
		if(type == 1) icon = 17; else if(type == 2) icon = 48; else if(type == 3) icon = 14; else if(type == 4) icon = 49; else if(type == 5) icon = 27; else if(type == 6) icon = 56; else if(type == 7) icon = 45; else if(type == 8) icon = 6;
		if(icon) BizInfo[h][bMapIcon] = CreateDynamicMapIcon( BizInfo[h] [ EnterX ], BizInfo[h] [ EnterY ], BizInfo[h][ EnterZ ] , icon , -1 );
		BizInfo[h][bLabel] = CreateDynamic3DTextLabel(stringer, 0xC4DAADFF, BizInfo[h][ EnterX ],BizInfo[h][ EnterY ],BizInfo[h][ EnterZ ], 15.0,INVALID_PLAYER_ID,INVALID_PLAYER_ID,1,-1,-1,-1,100.0);
		BizInfo[h][bLab] = CreateDynamicPickup(1239,1,BizInfo[h][ BarX ], BizInfo[h][ BarY ], BizInfo[h][ BarZ ],BizInfo[h][ bVW ],BizInfo[h][ bInt ],-1,100.0);
 		BizInfo[h][bLabelBuy] = CreateDynamic3DTextLabel("Нажмите клавишу\n{FF6F00}'N'\n{FFFFFF}Для покупки", CWHITE, BizInfo[h][ BarX ], BizInfo[h][ BarY ], BizInfo[h][ BarZ ], 5.0,INVALID_PLAYER_ID,INVALID_PLAYER_ID,1,BizInfo[h][ bVW ],BizInfo[h][ bInt ],-1,100.0);
		BIZES++;
	}
	printf("[Загрузка]: Business | Загружено: %i бизнесов | Time: %i (ms)", BIZES, GetTickCount() - time);
	return 1;
}
publics:LoadHotel()
{
    if(!cache_get_row_count(connects)) return printf("Отели не загружены");
	new time = GetTickCount();
	for(new i; i != cache_get_row_count(connects); i++)
	{
		HotelInfo[i+1][mID] = cache_get_field_content_int(i, "mID", connects);
		cache_get_field_content(i, "mOwned", HotelInfo[i+1][mOwned], connects, strlen(HotelInfo[i+1][mOwned]));
		HotelInfo[i+1][mOwner] = cache_get_field_content_int(i, "mOwner", connects);
		HotelInfo[i+1][mEnter][0] = cache_get_field_content_float(i, "mX", connects);
		HotelInfo[i+1][mEnter][1] = cache_get_field_content_float(i, "mY", connects);
		HotelInfo[i+1][mEnter][2] = cache_get_field_content_float(i, "mZ", connects);
		HotelInfo[i+1][mVW] = cache_get_field_content_int(i, "mVW", connects);
		HotelInfo[i+1][mCar] = cache_get_field_content_int(i, "mCar", connects);
		HotelInfo[i+1][mExit][0] = cache_get_field_content_float(i, "eX", connects);
		HotelInfo[i+1][mExit][1] = cache_get_field_content_float(i, "eY", connects);
		HotelInfo[i+1][mExit][2] = cache_get_field_content_float(i, "eZ", connects);
		HotelInfo[i+1][mLock] = cache_get_field_content_int(i, "mLock", connects);
		HotelInfo[i+1][mMoney] = cache_get_field_content_int(i, "mMoney", connects);
		HotelInfo[i+1][mOplata] = cache_get_field_content_int(i, "mOplata", connects);
		HotelInfo[i+1][mVirt] = cache_get_field_content_int(i, "mVirt", connects);
		HotelInfo[i+1][mCarDrived] = cache_get_field_content_float(i, "mCarDrived", connects);
		CreateDynamic3DTextLabel("Чтобы выйти из гаража нажмите 'ALT'", -1, 1177.3361,-1081.6122,1002.8329+0.8,9.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,i+50);
		CreateDynamic3DTextLabel("Чтобы покинуть гараж\nПосигнальте 'H'", COLOR_BLUE, 1165.5143,-1071.1439,1004.1325+0.8,9.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,i+50);
		if(!strcmp(HotelInfo[i+1][mOwned], "None", true)) format(stringer, 130, "{FFFFFF}Комната в отеле - {FF7800}№%d{FFFFFF}\nКомната свободна\nНажмите на клавишу {FF7800}L-ALT{FFFFFF} чтобы заселится", i+1);
		else format(stringer, 200, "{FFFFFF}Комната в отеле - {FF7800}№%d{FFFFFF}\nКомната занята!\nВладелец: {FF7800}%s{FFFFFF}\nИнформация: {FF7800}L-ALT", i+1, HotelInfo[i+1][mOwned]);
		HotelInfo[i+1][hLabelHot] = CreateDynamic3DTextLabel(stringer, 0xC4DAADFF, HotelInfo[i+1][mEnter][0],HotelInfo[i+1][mEnter][1],HotelInfo[i+1][mEnter][2], 9.0,INVALID_PLAYER_ID,INVALID_PLAYER_ID,1,-1,-1,-1,100.0);
		addhotel ++;
	}
	printf("[Загрузка]: LoadHotel загружено - %i потрачено %i (ms)", addhotel, GetTickCount() - time);
	return 1;
}
stock MeAction(playerid,action[],Float:distance = 13.0)
{
	if(GetPVarInt(playerid, "gag")) return	SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
	if(PlayerInfo[playerid][pMuted] > 0) return SCM(playerid,COLOR_WHITE,"У Вас бан чата");
	format(stringer,SMALL_SIZE,"%s %s",PlayerInfo[playerid][pNames],action);
	ProxDetector(distance, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	return 1;
}

stock UpdateBizInfo( i )
{
	new strin[400],akt[50];
	switch(BizInfo[i][bKrisha])
	{
		case 5: akt = "La Cosa Nostra";
		case 6: akt = "Yakuza";
		case 14: akt = "Russian Mafia";
		default: akt = "Неизвестно";
	}
	DestroyDynamicMapIcon(BizInfo[ i ][ bMapIcon ]);
	DestroyDynamicPickup(BizInfo[i][bLab]);
	DestroyDynamicPickup( BizInfo[ i ][ bPickup ]);
	if(!strcmp(BizInfo[i][bOwner], "None",true))
	{
		BizInfo[i][ bPickup ] = CreateDynamicPickup(1274, 1, BizInfo[i][ EnterX ], BizInfo[i][ EnterY ], BizInfo[i][ EnterZ ],-1,-1,-1,100.0);
		format(strin, sizeof(strin), "{FF7800}%s\n{FFFFFF}Бизнес находится на продаже\nЦена: {FF7800}%i$", BizInfo[i][bName],BizInfo[i][bPrice]);
	}
	else
	{
		BizInfo[i][ bPickup ] = CreateDynamicPickup(19132, 1, BizInfo[i][ EnterX ], BizInfo[i][ EnterY ], BizInfo[i][ EnterZ ],-1,-1,-1,100.0);
		if(BizInfo[i][bVhod] > 0) format(strin, sizeof(strin), "{FF7800}%s\n{FFFFFF}Владелец:{FF7800} %s\n{FFFFFF}Цена за вход: {FF7800}$%i\n{FFFFFF}Контроль: {FF7800}%s", BizInfo[i][bName],BizInfo[i][bOwner],BizInfo[i][bVhod],akt);
		else format(strin, sizeof(strin), "{FF7800}%s\n{FFFFFF}Владелец: {FF7800}%s\n{FFFFFF}Контроль:{FF7800} %s", BizInfo[i][bName],BizInfo[i][bOwner],akt);
	}
	BizInfo[i][bLab] = CreateDynamicPickup(1239,1,BizInfo[ i ][ BarX ], BizInfo[ i ][ BarY ], BizInfo[ i ][ BarZ ],BizInfo[ i ][ bVW ],BizInfo[ i ][ bInt ],-1,100.0);
	BizInfo[i ][ bMapIcon ] = CreateDynamicMapIcon(BizInfo[i][ EnterX ],BizInfo[ i ][ EnterY ],BizInfo[ i ][ EnterZ ], 56, -1 );
	return UpdateDynamic3DTextLabelText( BizInfo[ i ][bLabel ], 0xC4DAADFF, strin);
}

publics: LoadSBizz()
{
	new i = 0;
	new string2[300];
	if(cache_get_row_count(connects) > 0)
	{
		for(new he = 0;he < cache_get_row_count(connects); he++)
		{
			SBizzInfo[he][sID] = cache_get_field_content_int (he, "sID", connects);
			SBizzInfo[he][sOwned] = cache_get_field_content_int (he, "sOwned", connects);
			cache_get_field_content(he, "sOwner", SBizzInfo[he][sOwner], connects, strlen(SBizzInfo[he][sOwner]));
			cache_get_field_content(he, "sMessage", SBizzInfo[he][sMessage], connects, strlen(SBizzInfo[he][sMessage]));
			SBizzInfo[he][sEntranceX] = cache_get_field_content_float (he, "sEntranceX", connects);
			SBizzInfo[he][sEntranceY] = cache_get_field_content_float (he, "sEntranceY", connects);
			SBizzInfo[he][sEntranceZ] = cache_get_field_content_float (he, "sEntranceZ", connects);
			SBizzInfo[he][sBuyPrice] = cache_get_field_content_int (he, "sBuyPrice", connects);
			SBizzInfo[he][sLocked] = cache_get_field_content_int (he, "sLocked", connects);
			SBizzInfo[he][sPrice] = cache_get_field_content_int (he, "sPrice", connects);
			SBizzInfo[he][sBenz] = cache_get_field_content_int (he, "sBenz", connects);
			SBizzInfo[he][sPriceBenz] = cache_get_field_content_int (he, "sPriceBenz", connects);
			SBizzInfo[he][sTill] = cache_get_field_content_int (he, "sTill", connects);

			i++;
			if(!SBizzInfo[he][sOwned])
			{
				//
				SBizzInfo[he][sBuyPrice] = 1000000;
				SBizzInfo[he][sOwned] = 0;
				SBizzInfo[he][sLocked] = 1;
				SBizzInfo[he][sPrice] = 2500;
				SBizzInfo[he][sBenz] = 2500;
				SBizzInfo[he][sPriceBenz] = 2500;
				SBizzInfo[he][sTill] = 100000;
				//
				format(string2, 164, "{FFFFFF}Заправочная станция: {FFC873}№%i{FFFFFF}\nНазвание заправки: {FFC873}%s{FFFFFF}\nГосударственная цена: {FFC873}%d{FFFFFF}\n\nВведите: {FFC873}/buyfuel{FFFFFF} для покупки",SBizzInfo[he][sID],SBizzInfo[he][sMessage],SBizzInfo[he][sBuyPrice]);
			}
			else
			{
				if(!SBizzInfo[he][sLocked]) format(string2, sizeof(string2), "{FFFFFF}Заправочная станция: {FFC873}№%i{FFFFFF}\nНазвание заправки: {FFC873}%s{FFFFFF}\nВладелец: {00C90D}%s{FFFFFF}\nБензина в скважине: {FFC873}%i литров{FFFFFF}\nЦена за 1 литр: {FFC873}$%d{FFFFFF}\n\n{00C90D}Заправка работает{FFFFFF}",SBizzInfo[he][sID],SBizzInfo[he][sMessage],SBizzInfo[he][sOwner],SBizzInfo[he][sBenz],SBizzInfo[he][sPriceBenz]);
				else format(string2, sizeof(string2), "{FFFFFF}Заправочная станция: {FFC873}№%i{FFFFFF}\nНазвание заправки: {FFC873}%s{FFFFFF}\nВладелец: {00C90D}%s{FFFFFF}\nБензина в скважине: {FFC873}%i литров{FFFFFF}\nЦена за 1 литр: {FFC873}$%d{FFFFFF}\n\n{FF0000}Заправка не работает{FFFFFF}",SBizzInfo[he][sID],SBizzInfo[he][sMessage],SBizzInfo[he][sOwner],SBizzInfo[he][sBenz],SBizzInfo[he][sPriceBenz]);
			}
			SBizzInfo[he][sLabel] = Create3DTextLabel(string2,COLOR_YELLOW,SBizzInfo[he][sEntranceX], SBizzInfo[he][sEntranceY], SBizzInfo[he][sEntranceZ],20.0,0,1);
			SBizzInfo[he][sIcon] = CreateDynamicMapIcon(SBizzInfo[he][sEntranceX], SBizzInfo[he][sEntranceY], SBizzInfo[he][sEntranceZ], 47, COLOR_WHITE, 0, -1, -1, 50.0);
		}
		printf("[Загрузкa]: LoadSBizz | Загружено %d",i);
	}
	else printf("сБизнесов не загружены.");
	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid) 
{
    new string[256];
    for(new i = 0; i != 9; i++)
    {
        if(playertextid == Tune[i])
        {
            new vehicleid = GetPlayerVehicleID(playerid);
            switch(GetPVarInt(playerid, "TuneType"))
            {
                case 1:
				{
				    AddVehicleComponent(vehicleid,TWheels[i][tID]);
				    SetPVarInt(playerid, "ColorT", i);
				    format(string, sizeof(string), "{FFFFFF}Вы хотите установить колеса {FF9900}%s\n{FFFFFF}Цена: {FF9900}5000$\n\n{FFFFFF}Установить?",TWheels[i][Named]);
				    ShowPlayerDialog(playerid, 9464, 0, "Колеса",string,"Далее","Отмена");
				}
                case 2: SetPVarInt(playerid, "ColorT", i), ChangeVehicleColor(vehicleid, TColor[i][tID], TColor[i][tID]);
                case 3:
				{
				    if(i == 0) ChangeVehiclePaintjob(vehicleid, 0);
				    else if(i == 1) ChangeVehiclePaintjob(vehicleid, 2);
				    else ChangeVehiclePaintjob(vehicleid, 3);
				    SetPVarInt(playerid, "ColorT", i);
				    ShowPlayerDialog(playerid, 9464, 0, "Наклейка","{FFFFFF}Вы хотите установить наклейку?\n{FFFFFF}Цена: {FF9900}5000$\n\n{FFFFFF}Установить?","Далее","Отмена");
				}
                case 4:
                {
                    new cena;
				    if(i == 0) AddVehicleComponent(vehicleid,1009), cena = 5000;
				    else if(i == 1) AddVehicleComponent(vehicleid,1008), cena = 10000;
				    else AddVehicleComponent(vehicleid,1010), cena = 20000;
				    format(string, sizeof(string), "{FFFFFF}Вы хотите установить нитро?\n{FFFFFF}Цена: {FF9900}%i$\n\n{FFFFFF}Установить?", cena);
				    ShowPlayerDialog(playerid, 9464, 0, "Нитро",string,"Далее","Отмена");
				}
				case 5:
				{
				    if(i == 0) SetVehicleHealth(vehicleid, 1000.0);
				    else RepairVehicle(vehicleid);
                    ShowPlayerDialog(playerid, 9464, 0, "Ремонт","{FFFFFF}Вы хотите отремонтировать авто?\n{FFFFFF}Цена: {FF9900}2000$\n\n{FFFFFF}Продолжить?","Далее","Отмена");
				}
			}
		}
	}
	return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    new string[256];
    if(GetPVarInt(playerid,"Show_TextRegister") && !GetPVarInt(playerid,"ClickRegister"))
	{
		if(clickedid == Text:INVALID_TEXT_DRAW)
		{
		    Hide_TextRegister(playerid);
			KickEx(playerid, 0001);
		}
		if(clickedid == TextDraw_Register[5] || clickedid == TextDraw_Register[6])
		{
			TextDrawHideForPlayer(playerid,TextDraw_Register[18]);
			TextDrawHideForPlayer(playerid,TextDraw_Register[19]);
            new rand;
			if(clickedid == TextDraw_Register[5])
			{
				PlayerInfo[playerid][pSex] = 1;
				rand = random(sizeof(Player_Skin_Male));
		        PlayerInfo[playerid][pModel] = Player_Skin_Male[rand];
		        PlayerInfo[playerid][pChar] = Player_Skin_Male[rand];
				TextDrawShowForPlayer(playerid,TextDraw_Register[18]);
			}
			if(clickedid == TextDraw_Register[6])
			{
				PlayerInfo[playerid][pSex] = 2;
				rand = random(sizeof(Player_Skin_Female));
		        PlayerInfo[playerid][pModel] = Player_Skin_Female[rand];
		        PlayerInfo[playerid][pChar] = Player_Skin_Female[rand];
				TextDrawShowForPlayer(playerid,TextDraw_Register[19]);
			}
		}
		else if(clickedid == TextDraw_Register[10])// password
		{
			ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_INPUT, "{FF6F00}Регистрация", "{FFFFFF}Введите пароль!", "Выбрать", "Отмена");
			SetPVarInt(playerid,"ClickRegister",true);
		}
		else if(clickedid == TextDraw_Register[14]) // secret password
		{
			ShowPlayerDialog(playerid, 1112, DIALOG_STYLE_INPUT, "{FF6F00}Регистрация", "{FFFFFF}Введите Вашу E-mail почту!", "Выбрать", "Отмена");
			SetPVarInt(playerid,"ClickRegister",true);
		}
		else if(clickedid == TextDraw_Register[3]) // secret password
		{
			if(!GetPVarInt(playerid,"InputPas")) return SendClientMessage(playerid, COLOR_GREY, "Введите пароль.");
			if(!GetPVarInt(playerid,"InputSecretPas")) return SendClientMessage(playerid, COLOR_GREY, "Введите Вашу E-mail почту.");
		    if(!PlayerInfo[playerid][pSex]) return SendClientMessage(playerid, COLOR_GREY, "Выберите пол.");
			DeletePVar(playerid,"InputPas");
			DeletePVar(playerid,"InputSecretPas");
			Hide_TextRegister(playerid);

	        PlayerInfo[playerid][bAdmin] = 0;
	        PlayerInfo[playerid][pLogin] = true;
			SendClientMessage(playerid, CORANGE, "Поздравляем Вас с успешной регистрацией!");
			PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
			RegistrationPlayer(playerid,PlayerInfo[playerid][pChar]);
		}
		return true;
	}
	else if(GetPVarInt(playerid,"Show_TextLogin") && !GetPVarInt(playerid,"ClickRegister"))
	{
		if(clickedid == Text:INVALID_TEXT_DRAW)
		{
		    Hide_TextLogin(playerid);
			KickEx(playerid, 0002);
		}
		else if(clickedid == TextDraw_Login[6])
		{
			ShowPlayerDialog(playerid, 1113, DIALOG_STYLE_INPUT, "{FF6F00}Авторизация", "{FFFFFF}Введите пароль!", "Выбрать", "Отмена");
			SetPVarInt(playerid,"ClickRegister",true);
		}
		else if(clickedid == TextDraw_Login[3])
		{
		    GetPVarString(playerid,"TD_Password_Input",string,24);
		    if(!GetPVarInt(playerid,"InputPas")) return SendClientMessage(playerid, COLOR_GREY, "Введите пароль.");
            strmid(PlayerInfo[playerid][pLoadNames], PlayerInfo[playerid][pNames], 0, 24, 255);
			new query[156];
			mysql_format(connects,query,156, "SELECT * FROM `accounts` WHERE `id` = '%d' AND `pKey` = '%s'", PlayerInfo[playerid][pID], string);
			mysql_tquery(connects, query, "LoginCallback", "d", playerid);
			DeletePVar(playerid,"InputPas");
			string[0] = 0;
		}
		DeletePVar(playerid,"TD_Password_Input");
		DeletePVar(playerid,"ClickRegister");
	}
    new vehicleid = GetPlayerVehicleID(playerid);
	if(GetPVarInt(playerid, "TuninG"))
	{
	    if(clickedid == Tuning[6]) // X CLOSE
	    {
	        tuninguse = false;
	        
	        format(c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][3],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][4],
			vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][5],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][6],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][7],
			vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][8],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][9],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][10],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][11],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][12],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][13]);
			if(GetPVarInt(playerid,"carid_1")-1 == 0) UpdatePlayerDataEx(playerid, "cVehcom", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);
			if(GetPVarInt(playerid,"carid_1")-1 == 1) UpdatePlayerDataEx(playerid, "cVehcom2", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);

			for(new i = 0; i != 14; i++) TextDrawHideForPlayer(playerid, Tuning[i]);
	        for(new i = 0; i != 9; i++) PlayerTextDrawHide(playerid, Tune[i]);
	        DeletePVar(playerid, "TuneType");
	        DeletePVar(playerid, "carid_1");
	        DeletePVar(playerid, "TuninG");
	        CancelSelectTextDraw(playerid);
	        SetCameraBehindPlayer(playerid);
	    }
		else if(clickedid == Tuning[7]) //WHEELS
	    {
	        switch(GetPVarInt(playerid, "TuneType"))
	        {
				case 4:
				{
				    InterpolateCameraPos(playerid, 2150.715087, -2169.608398, 15.604330, 2158.826171, -2174.988281, 16.196464, 1000);
					InterpolateCameraLookAt(playerid, 2154.019531, -2172.957519, 13.911876, 2154.407470, -2174.056640, 14.049816, 1000);
				}
			}
	        for(new i = 0; i != 9; i++) PlayerTextDrawSetString(playerid, Tune[i], TWheels[i][Named]);
	        SetPVarInt(playerid, "TuneType",1);
	        SetTimerEx("TuneCamera", 1000, false, "d", playerid);
	    }
	    else if(clickedid == Tuning[8]) // COLOR
	    {
	        switch(GetPVarInt(playerid, "TuneType"))
	        {
				case 1:
				{
				    InterpolateCameraPos(playerid, 2157.244140, -2172.652587, 14.268106, 2158.826171, -2174.988281, 16.196464, 1000);
					InterpolateCameraLookAt(playerid, 2153.750976, -2176.084716, 13.259450, 2154.407470, -2174.056640, 14.049816, 1000);
				}
				case 4:
				{
				    InterpolateCameraPos(playerid, 2150.715087, -2169.608398, 15.604330, 2158.826171, -2174.988281, 16.196464, 1000);
					InterpolateCameraLookAt(playerid, 2154.019531, -2172.957519, 13.911876, 2154.407470, -2174.056640, 14.049816, 1000);
				}
			}
	        for(new i = 0; i != 9; i++) PlayerTextDrawSetString(playerid, Tune[i], TColor[i][Named]);
	        SetPVarInt(playerid, "TuneType",2);
	    }
	    else if(clickedid == Tuning[9]) // PAINTJOBS
	    {
	        switch(GetPVarInt(playerid, "TuneType"))
	        {
				case 1:
				{
				    InterpolateCameraPos(playerid, 2157.244140, -2172.652587, 14.268106, 2158.826171, -2174.988281, 16.196464, 1000);
					InterpolateCameraLookAt(playerid, 2153.750976, -2176.084716, 13.259450, 2154.407470, -2174.056640, 14.049816, 1000);
				}
				case 4:
				{
				    InterpolateCameraPos(playerid, 2150.715087, -2169.608398, 15.604330, 2158.826171, -2174.988281, 16.196464, 1000);
					InterpolateCameraLookAt(playerid, 2154.019531, -2172.957519, 13.911876, 2154.407470, -2174.056640, 14.049816, 1000);
				}
			}
	        PlayerTextDrawSetString(playerid, Tune[0], "PaintJob 1");
		    PlayerTextDrawSetString(playerid, Tune[1], "PaintJob 2");
		    PlayerTextDrawSetString(playerid, Tune[2], "PaintJob 3");
	        for(new i = 3; i != 9; i++) PlayerTextDrawSetString(playerid, Tune[i], "__");
	        SetPVarInt(playerid, "TuneType",3);
	    }
	    else if(clickedid == Tuning[10]) // NITRO
	    {
	        switch(GetPVarInt(playerid, "TuneType"))
	        {
				case 1:
				{
				    InterpolateCameraPos(playerid, 2157.244140, -2172.652587, 14.268106, 2158.826171, -2174.988281, 16.196464, 1000);
					InterpolateCameraLookAt(playerid, 2153.750976, -2176.084716, 13.259450, 2154.407470, -2174.056640, 14.049816, 1000);
				}
			}
	        PlayerTextDrawSetString(playerid, Tune[0], "Nitro x2");
		    PlayerTextDrawSetString(playerid, Tune[1], "Nitro x5");
		    PlayerTextDrawSetString(playerid, Tune[2], "Nitro x10");
	        for(new i = 3; i != 9; i++) PlayerTextDrawSetString(playerid, Tune[i], "__");
	        SetPVarInt(playerid, "TuneType",4);
	        SetTimerEx("TuneCamera", 1000, false, "d", playerid);
	    }
	    else if(clickedid == Tuning[11])
		{
			AddVehicleComponent(vehicleid,1087);
			SetPVarInt(playerid, "TuneType",6);
			ShowPlayerDialog(playerid, 9464, 0, "{FF6F00}Гидравлика","{FFFFFF}Вы хотите установить гидравлику на авто?\n{FFFFFF}Цена: {FF9900}50.000$\n\n{FFFFFF}Установить?","Далее","Отмена");
		}
	    else if(clickedid == Tuning[12])
	    {
	        PlayerTextDrawSetString(playerid, Tune[0], "Repair Engine");
	        PlayerTextDrawSetString(playerid, Tune[1], "Full Repair");
	        for(new i = 2; i != 9; i++) PlayerTextDrawSetString(playerid, Tune[i], "__");
	        SetPVarInt(playerid, "TuneType",5);
		}
	    else if(clickedid == Tuning[13]) //AUTO TUNING
	    {
			SetPVarInt(playerid, "TuneType",7);
			switch(GetVehicleModel(vehicleid))
			{
			    case 483: AddVehicleComponent(vehicleid,1027);
	            case 562:
	            {
	                AddVehicleComponent(vehicleid,1046);
	                AddVehicleComponent(vehicleid,1171);
	                AddVehicleComponent(vehicleid,1149);
	                AddVehicleComponent(vehicleid,1035);
	                AddVehicleComponent(vehicleid,1147);
	                AddVehicleComponent(vehicleid,1036);
	                AddVehicleComponent(vehicleid,1040);
	        	}
	            case 560:
	            {
	                AddVehicleComponent(vehicleid,1028);
	                AddVehicleComponent(vehicleid,1169);
	                AddVehicleComponent(vehicleid,1141);
	                AddVehicleComponent(vehicleid,1032);
	                AddVehicleComponent(vehicleid,1138);
	                AddVehicleComponent(vehicleid,1026);
	                AddVehicleComponent(vehicleid,1027);
	        	}
	            case 565:
				{
	                AddVehicleComponent(vehicleid,1046);
	                AddVehicleComponent(vehicleid,1153);
	                AddVehicleComponent(vehicleid,1150);
	                AddVehicleComponent(vehicleid,1054);
	                AddVehicleComponent(vehicleid,1049);
	                AddVehicleComponent(vehicleid,1047);
	                AddVehicleComponent(vehicleid,1051);
	        	}
	            case 559:
				{
	                AddVehicleComponent(vehicleid,1065);
	                AddVehicleComponent(vehicleid,1160);
	                AddVehicleComponent(vehicleid,1159);
	                AddVehicleComponent(vehicleid,1067);
	                AddVehicleComponent(vehicleid,1162);
	                AddVehicleComponent(vehicleid,1069);
	                AddVehicleComponent(vehicleid,1071);
	        	}
	            case 561:
	            {
	                AddVehicleComponent(vehicleid,1064);
	                AddVehicleComponent(vehicleid,1155);
	                AddVehicleComponent(vehicleid,1154);
	                AddVehicleComponent(vehicleid,1055);
	                AddVehicleComponent(vehicleid,1158);
	                AddVehicleComponent(vehicleid,1056);
	                AddVehicleComponent(vehicleid,1062);
	        	}
	        	case 558:
	        	{
	                AddVehicleComponent(vehicleid,1089);
	                AddVehicleComponent(vehicleid,1166);
	                AddVehicleComponent(vehicleid,1168);
	                AddVehicleComponent(vehicleid,1088);
	                AddVehicleComponent(vehicleid,1164);
	                AddVehicleComponent(vehicleid,1090);
	                AddVehicleComponent(vehicleid,1094);
	            }
	            case 575:
	            {
	                AddVehicleComponent(vehicleid,1044);
	                AddVehicleComponent(vehicleid,1174);
	                AddVehicleComponent(vehicleid,1176);
	                AddVehicleComponent(vehicleid,1042);
	                AddVehicleComponent(vehicleid,1099);
	        	}
	            case 534:
	            {
	                AddVehicleComponent(vehicleid,1126);
	                AddVehicleComponent(vehicleid,1179);
	                AddVehicleComponent(vehicleid,1180);
	                AddVehicleComponent(vehicleid,1122);
	                AddVehicleComponent(vehicleid,1101);
	                AddVehicleComponent(vehicleid,1125);
	                AddVehicleComponent(vehicleid,1123);
	                AddVehicleComponent(vehicleid,1100);
	            }
	            case 567:
	            {
	                AddVehicleComponent(vehicleid,1129);
	                AddVehicleComponent(vehicleid,1189);
	                AddVehicleComponent(vehicleid,1187);
	                AddVehicleComponent(vehicleid,1102);
	                AddVehicleComponent(vehicleid,1133);
	            }
	            case 576:
	            {
	                AddVehicleComponent(vehicleid,1191);
	                AddVehicleComponent(vehicleid,1193);
	                AddVehicleComponent(vehicleid,1018);
	                AddVehicleComponent(vehicleid,1087);
	                AddVehicleComponent(vehicleid,1134);
	        	}
	        	default: return SendClientMessage(playerid, COLOR_GREY, "На Ваше т/с нельзя установить внешний тюнинг!");
			}
			return ShowPlayerDialog(playerid, 9464, 0, "{FF6F00}Внешний тюнинг","{FFFFFF}Вы хотите установить внешний тюнинг на авто?\n{FFFFFF}Цена: {FF9900}100.000$\n\n{FFFFFF}Установить?","Далее","Отмена");
	    }
	    if(_:clickedid == INVALID_TEXT_DRAW)
	    {
	        tuninguse = false;
	        
	        format(c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][0],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][1],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][2],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][3],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][4],
			vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][5],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][6],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][7],
			vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][8],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][9],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][10],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][11],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][12],vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1][13]);
			if(GetPVarInt(playerid,"carid_1")-1 == 0) UpdatePlayerDataEx(playerid, "cVehcom", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);
			if(GetPVarInt(playerid,"carid_1")-1 == 1) UpdatePlayerDataEx(playerid, "cVehcom2", c_vehicle_components_add[playerid][GetPVarInt(playerid,"carid_1")-1]);

	        for(new i = 0; i != 14; i++) TextDrawHideForPlayer(playerid, Tuning[i]);
	        for(new i = 0; i != 9; i++) PlayerTextDrawHide(playerid, Tune[i]);
	        DeletePVar(playerid, "TuneType");
	        DeletePVar(playerid, "carid_1");
	        DeletePVar(playerid, "TuninG");
	        CancelSelectTextDraw(playerid);
			SetCameraBehindPlayer(playerid);
	    }
	    return 1;
	}
	if(_:clickedid != INVALID_TEXT_DRAW)
	{
		if(clickedid == ACshop[5]) return SPD(playerid,8890,DIALOG_STYLE_LIST, "{FF6F00}Шляпы","{FFFFFF}18970\n18969\n18968\n18973\n18972\n18950\n18949\n18951\n18946\n18932\n18926\n18945","Просмотр","Выход");
		else if(clickedid == ACshop[7]) return SPD(playerid,8891,DIALOG_STYLE_LIST, "{FF6F00}Очки","{FFFFFF}19140\n19139\n19138\n19033\n19034\n19031\n19028\n19025\n19019\n19012\n19008\n19007","Просмотр","Выход");
		else if(clickedid == ACshop[1])
		{
			if(GetPVarInt(playerid, "check_for_clicked")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы редактируете аксессуар, сначала сохраните его, а потом продолжайте действие!");
			if(!GetPVarInt(playerid, "ShopACOne") && !GetPVarInt(playerid, "ShopACTwo")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не выбрали аксессуар");
			PlayerInfo[playerid][pCash] -= GetPVarInt(playerid, "AccessoriesCost");
			if(GetPVarInt(playerid, "ShopACOne")) PlayerInfo[playerid][pAccessories][0] = GetPVarInt(playerid, "ShopACOne"), UpdatePlayerData(playerid, "pAcessories1", PlayerInfo[playerid][pAccessories][0]);
			if(GetPVarInt(playerid, "ShopACTwo")) PlayerInfo[playerid][pAccessories][1] = GetPVarInt(playerid, "ShopACTwo"), UpdatePlayerData(playerid, "pAcessories2", PlayerInfo[playerid][pAccessories][1]);
			if(BizEnter{playerid} != 255) BizInfo[BizEnter{playerid}][bBank] += GetPVarInt(playerid, "AccessoriesCost");
			DeletePVar(playerid, "check_for_clicked");
			DeletePVar(playerid, "AccessoriesCost");
			DeletePVar(playerid, "ShopACOne");
		 	DeletePVar(playerid, "ShopACTwo");
			PlayerTextDrawSetString(playerid,ShopACcost[playerid], "None");
			SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Вы успешно приобрели аксессуар, отредактировать позицию шапки Вы можете в инвентаре клавиша: ''H''");
			return 1;
		}
		else if(clickedid == ACshop[3])
		{
		    PlayerTextDrawSetString(playerid,ShopACcost[playerid], "None");
		    if(GetPVarInt(playerid, "ShopACOne")) RemovePlayerAttachedObject(playerid,0);
		    if(GetPVarInt(playerid, "ShopACTwo")) RemovePlayerAttachedObject(playerid,1);
		    if(PlayerInfo[playerid][pAccessories][0] != 0x0) SetPlayerAttachedObject(playerid,0,PlayerInfo[playerid][pAccessories][0],2,PlayerInfo[playerid][PositionAcc][0],PlayerInfo[playerid][PositionAcc][1], PlayerInfo[playerid][PositionAcc][2],PlayerInfo[playerid][PositionAcc][3],PlayerInfo[playerid][PositionAcc][4],PlayerInfo[playerid][PositionAcc][5], PlayerInfo[playerid][PositionAcc][6], PlayerInfo[playerid][PositionAcc][7],PlayerInfo[playerid][PositionAcc][8]);
			if(PlayerInfo[playerid][pAccessories][1] != 0x0) SetPlayerAttachedObject(playerid,1,PlayerInfo[playerid][pAccessories][1],2,0.1, 0.03, 0.0, 0.0, 90.0, 90.0);
			DeletePVar(playerid, "AccessoriesCost");
			DeletePVar(playerid, "ShopACOne");
			DeletePVar(playerid, "ShopACTwo");
			DeletePVar(playerid, "check_for_clicked");
			for(new i = 0x0; i != 9; i++) TextDrawHideForPlayer(playerid, ACshop[i]);
			PlayerTextDrawHide(playerid, ShopACcost[playerid]);
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid, "ACshop");
			SetPlayerPosEx(playerid, 849.3651,126.6783,3265.6733);
			SetPlayerFacingAngle(playerid, 219.5653);
			SetPlayerVirtualWorld(playerid, BizEnter{playerid});
			SetPlayerInterior(playerid, 1);
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, true);
			return 1;
		}
		else if(clickedid == bankmenu[3]) // WITHDRAW
		{
			format(stringer,MAX_STR, "{FFFFFF}Баланс вашего счёта: %d вирт\nВведите нужную вам сумму", PlayerInfo[playerid][pBank]);
			SPD(playerid,8814,DIALOG_STYLE_INPUT,"{FF6F00}Снятие со счёта",stringer,"Скрыть","Назад");
			return 1;
		}
		else if(clickedid == bankmenu[6]) // PUT MONEY
		{
			format(stringer,MAX_STR, "{FFFFFF}Баланс вашего счёта: %d вирт\nВведите нужную вам сумму", PlayerInfo[playerid][pBank]);
			SPD(playerid,8816,DIALOG_STYLE_INPUT,"{FF6F00}Положить на счёт",stringer,"Скрыть","Назад");
			return 1;
		}
		else if(clickedid == bankmenu[9]) // GET MONEY
		{
			if(PlayerInfo[playerid][pHousecash] <=0) return	SCM(playerid, COLOR_GRAD1, "Нет денег за ваш дом");
			if(!PlayerToPoint(10.0,playerid,1296.6184,-1352.8342,19.0469)) return SCM(playerid, COLOR_WHITE, "Вы не в банке");
			PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pHousecash];
			SCMF(playerid,COLOR_WHITE,"Информация: Банк вернул Вам %d вирт. Всего доброго.", PlayerInfo[playerid][pHousecash]);
			PlayerInfo[playerid][pHousecash] = 0;
			UpdatePlayerData(playerid, "pHousecash", PlayerInfo[playerid][pHousecash]);
			return 1;
		}
		else if(clickedid == bankmenu[11]) // CLOSE
		{
			for(new close; close < 24; close++) TextDrawHideForPlayer(playerid, bankmenu[close]);
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid, "bankmenu");
		}
		else if(clickedid == bankmenu[15]) // PUT BIZZ
		{
			if(PlayerInfo[playerid][pBusiness] == -1) return SPD(playerid,2929,DIALOG_STYLE_INPUT,"{FF6F00}Перевод на счёт бизнеса","{FFFFFF}Введите сумму, которую вы хотите перести","Принять","Отмена");
			else if(PlayerInfo[playerid][pFuelBiz] == -1) return SPD(playerid,2929,DIALOG_STYLE_INPUT,"{FF6F00}Перевод на счёт бизнеса","{FFFFFF}Введите сумму, которую вы хотите перести","Принять","Отмена");
			else SCM(playerid, COLOR_GREY, "Вы не бизнесмен!");
		}
		else if(clickedid == bankmenu[23]) // INFO
		{
			format(stringer1,MAX_SQL,"{7CE700}Доступные команды:\n\n{FFFFFF}- /withdraw - Снять деньги со счёта\n\n{7CE700}Информация:{FFFFFF} Положить деньги на дом, положить деньги на счет , Вы сможете в главном меню банка\n\nОстальная информация:\nИмя: %s\nСостояние счёта: %d",PlayerInfo[playerid][pNames],PlayerInfo[playerid][pBank]);
			SPD(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FF6F00}Банковские услуги",stringer1,"Скрыть","");
		}
		else if(GetPVarInt(playerid, "SelectAvto") != -1)
		{
			if(clickedid == Text:INVALID_TEXT_DRAW)  return SPD(playerid,2426,0,"Предупреждение","Вы действительно хотите покинуть магазин?","Да","Нет");
			else if(clickedid == SHOPAUTOTEXT[0]) return BackCar(playerid);
			else if(clickedid == SHOPAUTOTEXT[1]) return NextCar(playerid);
			else if(clickedid == SHOPAUTOTEXT[2]) return NextColor(playerid,0);
			else if(clickedid == SHOPAUTOTEXT[3]) return NextColor(playerid,1);
			else if(clickedid == SHOPAUTOTEXT[4]) return BackColor(playerid,1);
			else if(clickedid == SHOPAUTOTEXT[5]) return BackColor(playerid,0);
			else if(clickedid == SHOPAUTOTEXT[6]) return SPD(playerid,2324,0,"{FF6F00}Подтверждение покупки автомобиля","{FFFFFF}Пожалуйста, выберите, какой автомобиль вы хотите купить ? \n\nПри нажатии на клавишу 'Первый' - Вы купите автомобиль в гараж №1\nПри нажатии на клавишу 'Второй' - Вы купите автомобиль в гараж №2","Первый","Второй");
			else if(clickedid == SHOPAUTOTEXT[7]) return SPD(playerid,2425,0,"{FF6F00}Предупреждение","{FFFFFF}Вы действительно хотите покинуть магазин?","Да","Нет");
		}
	}
	if(PlayerInfo[playerid][bAdmin] < 1) return 1;
	ResetTDRecon(playerid);
	if(clickedid == ReconText[5]) return SPD(playerid,232,DIALOG_STYLE_INPUT,"{FF6F00}Change","{FFFFFF}'	Введите ид игрока	'","Далее","Отмена");
	else if(clickedid == ReconText[6])
	{
		RINFO[playerid][Schoice] = 1;
		return NextRecon(playerid);
	}
	else if(clickedid == ReconText[7])
	{
		RINFO[playerid][Schoice] = 2;
		return NextRecon(playerid);
	}
	else if(clickedid == ReconText[8])
	{
		RINFO[playerid][Schoice] = 3;
		return NextRecon(playerid);
	}
	else if(clickedid == ReconText[9]) return SPD(playerid,233,DIALOG_STYLE_INPUT,"{FF6F00}Warn","{FFFFFF}'	Введите причину варна	'","Далее","Отмена");
	else if(clickedid == ReconText[10])
	{
		RINFO[playerid][Schoice] = 4;
		return NextRecon(playerid);
	}
	else if(clickedid == ReconText[11])
	{
		RINFO[playerid][Schoice] = 5;
		return NextRecon(playerid);
	}
	else if(clickedid == ReconText[12]) return PlayerSpects(playerid,RINFO[playerid][sID]);
	else if(clickedid == ReconText[13]) return TogglePlayerSpectating(playerid,false);
	else if(clickedid == ReconText[14])
	{
		stringer = "";
		strcat(stringer,"{"#cGREEN"}Level:{FFFFFF} Лвл | Количество exp / Кол. exp необходимое для получения след. лвл\n");
		strcat(stringer,"{"#cGREEN"}Warns:{FFFFFF} Количество варнов\n{C0C0C0}\tЕсли число не отрицательное, то у игрока нет варнов, но они были раньше\n");
		strcat(stringer,"{"#cGREEN"}Armour:{FFFFFF} Броня\n{"#cGREEN"}Health:{FFFFFF} Здоровье\n{"#cGREEN"}CarHP:{FFFFFF} Здоровье машины\n{C0C0C0}\tТолько если игрок в транспорте,иначе значение будет 0\n");
		strcat(stringer,"{"#cGREEN"}Speed:{FFFFFF} Скорость транспорта / Макс. Скорость транспорта\n{C0C0C0}\tТолько если игрок в транспорте\n");
		strcat(stringer,"{"#cGREEN"}Ping:{FFFFFF} Пинг\n");
		strcat(stringer,"{"#cGREEN"}Ammo:{FFFFFF} Количество патронов на клиенте | Количество патронов на сервере\n{C0C0C0}\tТо что оображается игроку | Реальнок количество патронов\n");
		strcat(stringer,"{C0C0C0}\tПоказывает патроны оружия, которое у игрока в данный момент в руках\n");
		strcat(stringer,"{"#cGREEN"}Shot:{FFFFFF} Количество выстрелов / Количество попаданий | Процент попаданий\n");
		strcat(stringer,"{C0C0C0}\tСервер подсчитывает количество выстрелов сделанных игроком, пока он онлайн\n\tНа глаз можно определить, использует ли игрок AIM\n");
		strcat(stringer,"{"#cGREEN"}TimeShot:{FFFFFF}Количество выстрелов / Количество попаданий | Процент попаданий\n");
		strcat(stringer,"{C0C0C0}\tТоже самое, что предыдущая строка, но счетчик обнуляется каждые 10 минут\n\tВ меню Recon можно обнулить в любой момент - \"ResetShot\"");
		return SPD(playerid,0000,0,"Help",stringer,"Закрыть","");
	}
	else if(clickedid == ReconText[15])//Check GM
	{
		RINFO[playerid][sSer] = false;
		return SCM(playerid,0xFFFFFF90,"В разработке");
	}
	else if(clickedid == ReconText[16])//Check GM 2
	{
		RINFO[playerid][sSer] = false;
		return SCM(playerid,0xFFFFFF90,"В разработке");
	}
	else if(clickedid == ReconText[17])//Check GMCar
	{
		RINFO[playerid][sSer] = false;
		return SCM(playerid,0xFFFFFF90,"В разработке");
	}
	else if(clickedid == ReconText[18])//ResetShot
	{
		RINFO[playerid][sSer] = false;
		RINFO[RINFO[playerid][sID]][SShout][2] = 0;
		RINFO[RINFO[playerid][sID]][SShout][3] = 0;
		return SCM(playerid,0xFFFFFFFF,"Обнулено");
	}
	else if(clickedid == ReconText[19])//Mute
	{
		RINFO[playerid][sSer] = false;
		if(PlayerInfo[RINFO[playerid][sID]][pMuteTime] > 0)
		{
			format(stringer,SMALL_SIZE,"%d",RINFO[playerid][sID]);
			return  cmd::unmute(playerid,stringer);
		}
		return SPD(playerid,240,DIALOG_STYLE_INPUT,"{FF6F00}Mute","{FFFFFF}'	Введите время и причину мута (через запятую)	'","Далее","Отмена");
	}
	else if(clickedid == ReconText[20])//Slap
	{
		RINFO[playerid][sSer] = false;
		format(stringer,SMALL_SIZE,"%d",RINFO[playerid][sID]);
		return cmd::slap(playerid,stringer);
	}
	else if(clickedid == ReconText[21])//Prison
	{
		RINFO[playerid][sSer] = false;
		return SPD(playerid,239,DIALOG_STYLE_INPUT,"{FF6F00}Prison","{FFFFFF}'	Введите время и причину присона (через запятую)	'","Далее","Отмена");
	}
	else if(clickedid == ReconText[22])//Freeze
	{
		RINFO[playerid][sSer] = false;
		format(stringer,SMALL_SIZE,"%d",RINFO[playerid][sID]);
		return cmd::freeze(playerid,stringer);
	}
	else if(clickedid == ReconText[23])//UnFreeze
	{
		RINFO[playerid][sSer] = false;
		format(stringer,SMALL_SIZE,"%d",RINFO[playerid][sID]);
		return cmd::unfreeze(playerid,stringer);
	}
	else if(clickedid == ReconText[24])//Kick
	{
		RINFO[playerid][sSer] = false;
		return SPD(playerid,234,DIALOG_STYLE_INPUT,"{FF6F00}Kick","{FFFFFF}'	Введите причину кика	'","Далее","Отмена");
	}
	else if(clickedid == ReconText[25])//SKick
	{
		RINFO[playerid][sSer] = false;
		return SCM(playerid,0xFFFFFF90,"В разработке");
	}
	else if(clickedid == ReconText[26])//Ban
	{
		RINFO[playerid][sSer] = false;
		return SPD(playerid,235,DIALOG_STYLE_INPUT,"{FF6F00}Ban","{FFFFFF}'	Введите дни и причину бана (через запятую)	'","Далее","Отмена");
	}
	else if(clickedid == ReconText[27])//SBan
	{
		RINFO[playerid][sSer] = false;
		return SPD(playerid,236,DIALOG_STYLE_INPUT,"{FF6F00}SBan","{FFFFFF}'	Введите дни и причину бана (через запятую)	'","Далее","Отмена");
	}
	else if(clickedid == ReconText[28])//IBan
	{
		RINFO[playerid][sSer] = false;
		return SPD(playerid,237,DIALOG_STYLE_INPUT,"{FF6F00}IBan","{FFFFFF}'	Введите причину бана	'","Далее","Отмена");
	}
	else if(clickedid == ReconText[29])//Stats
	{
		RINFO[playerid][sSer] = false;
		format(stringer,SMALL_SIZE,"%d",RINFO[playerid][sID]);
		return cmd::getstats(playerid,stringer);
	}
	else if(clickedid == ReconText[30])//IWep
	{
		RINFO[playerid][sSer] = false;
		format(stringer,SMALL_SIZE,"%d",RINFO[playerid][sID]);
		return cmd::iwep(playerid,stringer);
	}
	else if(clickedid == ReconText[31])//GetIP
	{
		RINFO[playerid][sSer] = false;
		format(stringer,SMALL_SIZE,"%d",RINFO[playerid][sID]);
		return cmd::getip(playerid,stringer);
	}
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	if(response)
	{
		SetPVarInt(playerid, "AttachSlot", index);
		SetPVarInt(playerid, "AttachModel", modelid);
		SetPVarInt(playerid, "AttachBone", boneid);

		SetPVarFloat(playerid, "fOffsetX", fOffsetX);
		SetPVarFloat(playerid, "fOffsetY", fOffsetY);
		SetPVarFloat(playerid, "fOffsetZ", fOffsetZ);

		SetPVarFloat(playerid, "fRotX", fRotX);
		SetPVarFloat(playerid, "fRotY", fRotY);
		SetPVarFloat(playerid, "fRotZ", fRotZ);

		SetPVarFloat(playerid, "fScaleX", fScaleX);
		SetPVarFloat(playerid, "fScaleY", fScaleY);
		SetPVarFloat(playerid, "fScaleZ", fScaleZ);
	 	ShowPlayerDialog(playerid,8892,0,"{FF6F00}Редактирование","{"#cWHITE"}Объект сохранен.","Закрыть","");
	}
    return 1;
}

stock GangersChat(color, string[])
{
	foreach(new i: Player)
	{
		if(!IsAGang(i)) continue;
		SCM(i, color, string);
	}
	return 1;
}

stock MafiaChat(color, string[])
{
	foreach(new i: Player)
	{
		if(!ISAMAFIA(i)) continue;
		SCM(i, color, string);
	}
	return 1;
}

public OnGameModeInit()
{
	for (new i=0;i<sizeof(SALUTEINFOS);i++) SALUTEINFOS[i][SaluteUse] = false;
	for(new i;i<20;i++) gDSTurn[i] = INVALID_PLAYER_ID;
	SendRconCommand("language Russian");
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_GLOBAL);
	ShowNameTags(true);
	SetNameTagDrawDistance(21.0);
	EnableStuntBonusForAll(false);
	DisableInteriorEnterExits();
	SetWeather(1);
	new tmphour, tmpminute, tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	ghour = tmphour;
	SetWorldTime(tmphour);
	AreaBase = CreateDynamicSphere(492.6442 , -153.7014 , 611.1124 , 50.0 , 0 , 0 , -1);
	LoadDrawsInit();
	ObshiakGang();
	LoadObject();
	LoadPickups();
	Load3DTexts();
	LoadVehicles();
	Menu();
	ZonsWar[0] = GangZoneCreate(300.755706, 2402.644531, 468.755706, 2580.644531);
	ZonsWar[1] = GangZoneCreate(-855.6808,1891.0676,-519.0121,2128.4995);
	ZonsWar[2] = GangZoneCreate(275.881378, 797.211608, 443.881378, 973.211608);
	Furi[0][gBallas] = 0; Furi[0][gVagos] = 0; Furi[0][gGrove] = 0; Furi[0][gAztek] = 0; Furi[0][gRifa] = 0;
	PlayerHaul[0][pLoad] = 0;
	AlhambraDJ = false;
	PlayersHaul[0][sLoad] = 0;
	MatHaul[0][mCapasity] = 5000;
	MatHaul[1][mCapasity] = 5000;
	MatHaul[2][mCapasity] = 5000;
	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if(!realtime) SetWorldTime(wtime);
	LimitPlayerMarkerRadius(100.0);
	ManualVehicleEngineAndLights();
	AllowInteriorWeapons(true);
	AddPlayerClass(79,1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	
	CreateDynamicMapIcon(2094.4277,-631.5884,63.8019,11,0); // Шахта
	CreateDynamicMapIcon(1325.4530,-1558.2452,13.5397,56,0); // Мойщик окон
	CreateDynamicMapIcon(-2089.1138,84.2848,35.3134,18,0); // Counter Strike
	CreateDynamicMapIcon(-761.8918,-134.2520,65.6949,11,0); // Лесопилка
	CreateDynamicMapIcon(1979.0079,-1275.7002,23.9095,59,0);  // баллас
	CreateDynamicMapIcon(2684.2649,-1100.9130,69.0958,60,0);  // вагос
	CreateDynamicMapIcon(2495.3684,-1688.0365,13.5553,62,0);  // грув
	CreateDynamicMapIcon(2185.9600,-1811.9399,13.5469,58,0);  // ацтек
	CreateDynamicMapIcon(2776.2354,-1937.9946,13.9518,61,0);  // рифа
	CreateDynamicMapIcon(-89.2786,-1585.9827,2.6172,24,0);  // дровосек
	CreateDynamicMapIcon(-2.9803,-363.4466,5.4297,51,0); //
	CreateDynamicMapIcon(-1882.5100,866.3918,35.1719,45,0); //clothes sf
	CreateDynamicMapIcon(472.4380,-1515.5332,40.5726,45,0); //clothes ls
	CreateDynamicMapIcon(542.1437,-1272.3624,51.3059,55,0); //Car ls
	CreateDynamicMapIcon(-1948.4501,278.1562,68.9698,55,0); //Car sf
	CreateDynamicMapIcon(-1638.6560,1206.3889,68.9698,55,0); //car sf
	CreateDynamicMapIcon(1657.0205,2254.5571,10.8203,25,0); //Сasino RIch
	CreateDynamicMapIcon(1552.8314,-1675.9022,16.1953,30,0); //!
	CreateDynamicMapIcon(1478.8680,-1804.6306,13.5630,56,0); //!
	CreateDynamicMapIcon(-2243.8826,-87.9706,35.3203,49,0); //мисти
	CreateDynamicMapIcon(2312.4189,-1641.4185,22.3378,49,0); //бар
	CreateDynamicMapIcon(1465.1370,-1009.9205,26.8438,52,0);// банк лс
	CreateDynamicMapIcon(-2623.7166,1410.6890,7.0938,49,0); //джизз
	CreateDynamicMapIcon(212.2816,1812.2374,21.8672,56,0); //точка наблюдения
	CreateDynamicMapIcon(606.5850,-1458.3682,14.3793,47,0); //Central Hotel
	CreateDynamicMapIcon(221.6311,-1441.6997,13.2510,46,0); // Voenkom LS
	CreateDynamicMapIcon(1168.0460,1367.3354,10.8125,46,0); // Voenkom LV
	CreateDynamicMapIcon(738.9775,-1416.2195,13.5234,36,0); // Автошкола
	
	SetTimer("_@OnPlayerUpdateTimer", 1000, 1);
    forveh(v)
	{
		vehcreat[v] = false;
		SetVehicleNumberPlate(v, "Гражданский");
	}
	SetGameModeText("« Role Play »");
	connects = mysql_connect("triniti.ru-hoster.com", "", "", "");
	mysql_empty(connects, "SET CHARACTER SET cp1251");
	mysql_log(LOG_ERROR | LOG_WARNING, LOG_TYPE_TEXT);
	if(!mysql_errno()) printf("Подключение к базе успешно");
	else return printf("Подключиться к базе не удалось");
	mysql_tquery(connects,"SELECT * FROM `family_system`","family_loading", "") ;
	mysql_tquery(connects,"SELECT * FROM `materials`", "OnLoadMaterialsCallback", "");
	mysql_tquery(connects,"SELECT * FROM `mafiabalance`", "OnLoadBankMafiaCallback", "");
	mysql_tquery(connects,"SELECT * FROM `online`", "OnLoadMaxOnline", "");
	mysql_tquery(connects,"SELECT * FROM `zone`", "LoadGZ","");
	mysql_tquery(connects,"SELECT * FROM `loadbankfrac`", "CallBankLoadBankFrac", "");
	mysql_tquery(connects,"SELECT * FROM `sbizz`", "LoadSBizz","");
	mysql_tquery(connects,"SELECT * FROM `business`", "LoadBizes","");
	mysql_tquery(connects,"SELECT * FROM `house`", "LoadProperty","");
	mysql_tquery(connects,"SELECT * FROM `hotel`", "LoadHotel","");
	mysql_empty(connects,"UPDATE `accounts` SET `pVoted` = '0'");
	ServerName();
	return 1;
}

stock GetClosestPlayer(p1)
{
	new Float:dis,Float:dis2,player;
	player = INVALID_PLAYER_ID;
	dis = 99999.99;
	foreach(new x: Player)
	{
		if(x != p1)
		{
			dis2 = GetDistanceBetweenPlayers(x,p1);
			if(dis2 < dis && dis2 != -1.00) dis = dis2,player = x;
		}
	}
	return player;
}
stock PayDay()
{
	if(!BizWarTime) BizHourTime--;
	for(new f = 0; f < sizeof(FrakCD); f++) if(FrakCD[f] > 0 && FracVoina[f] != 1) FrakCD[f]--;
	new hour, minute, second;
	gettime(hour, minute, second);
	new rOne = 2 + random(2), rTwo = 4 + random(2), rThree = 6 + random(2), rFour = 9 + random(3);
	for(new i =0;i<sizeof(VladGzone);i++) VladGzone[i] = 0;
	FracBank[0][fGrove] += VladGzone[2]*200;
	FracBank[0][fVagos] += VladGzone[1]*200;
	FracBank[0][fRifa] += VladGzone[4]*200;
	FracBank[0][fAztek] += VladGzone[3]*200;
	FracBank[0][fBallas] += VladGzone[0]*200;
	SaveBankFrac();
	foreach(new i: Player)
	{
		if(pTemp[i][pAFK] < 5)
		{
			if(PlayerInfo[i][pRubInfo][1] == 1 && PlayerInfo[i][pRubInfo][0] < 1000 && GetPVarInt(i, "game_time") > 4) PlayerInfo[i][pRubInfo][0] += rOne, SCMF(i, -1, "• {FFC800}[Подсказка] {ffffff}BONUS: На Ваш счёт зачислены бонусные рубли. (%d рублей)", rOne);
			if(PlayerInfo[i][pRubInfo][1] == 2 && PlayerInfo[i][pRubInfo][0] < 1500 && GetPVarInt(i, "game_time") > 4) PlayerInfo[i][pRubInfo][0] += rTwo, SCMF(i, -1, "• {FFC800}[Подсказка] {ffffff}BONUS: На Ваш счёт зачислены бонусные рубли. (%d рублей)", rTwo);
			if(PlayerInfo[i][pRubInfo][1] == 3 && PlayerInfo[i][pRubInfo][0] < 2000 && GetPVarInt(i, "game_time") > 4) PlayerInfo[i][pRubInfo][0] += rThree, SCMF(i, -1, "• {FFC800}[Подсказка] {ffffff}BONUS: На Ваш счёт зачислены бонусные рубли. (%d рублей)", rThree);
			if(PlayerInfo[i][pRubInfo][1] == 4 && PlayerInfo[i][pRubInfo][0] < 3000 && GetPVarInt(i, "game_time") > 4) PlayerInfo[i][pRubInfo][0] += rFour, SCMF(i, -1, "• {FFC800}[Подсказка] {ffffff}BONUS: На Ваш счёт зачислены бонусные рубли. (%d рублей)", rFour);
		}
	    SetPVarInt(i,"game_time",0);
		if(PlayerInfo[i][bAdmin] > 0 && PlayerInfo[i][pMRInections] > 0)
		{
			PlayerInfo[i][pLRInections] = 0;
			PlayerInfo[i][pMRInections] = 0;
			PlayerInfo[i][pRKInections] = 0;
		}
		if(PlayerInfo[i][pWanted] >= 1)
		{
			WantedLevel[i] -= 1;
			PlayerInfo[i][pWanted] -=1;
			SetPlayerWantedLevel(i, PlayerInfo[i][pWanted]);
			UpdatePlayerData(i, "pWanted", PlayerInfo[i][pWanted]);
		}
		new exp = PlayerInfo[i][pExp];
		new nxtlevel = PlayerInfo[i][pLevel]+1;
		new expamount = nxtlevel*levelexp;
		if(exp >= expamount)
		{
			PlayerInfo[i][pLevel] += 1;
			PlayerInfo[i][pExp] = 0;
			SCM(i,COLOR_ORANGE,"Поздравляем! Ваш игровой уровень повышен!");
			SetPlayerScore(i, PlayerInfo[i][pLevel]);
		}
		switch(PlayerInfo[i][pMRInections])
		{
		case 1,10,21,25:{ PlayerInfo[i][pPayCheck] += 2000*PlayerInfo[i][pRKInections]+random(10000); }
		case 3,19,27:{ PlayerInfo[i][pPayCheck] += 1500*PlayerInfo[i][pRKInections]+random(10000); }
		case 2:{ PlayerInfo[i][pPayCheck] += 3000*PlayerInfo[i][pRKInections]+random(10000); }
		case 7:{ PlayerInfo[i][pPayCheck] += 4000*PlayerInfo[i][pRKInections]+random(10000); }
		case 4,22:{ PlayerInfo[i][pPayCheck] += 4000*PlayerInfo[i][pRKInections]+random(10000); }
		case 11:{ PlayerInfo[i][pPayCheck] += 1000*PlayerInfo[i][pRKInections]+random(10000); }
		}
		PlayerInfo[i][pExp]++;
		new checks = PlayerInfo[i][pPayCheck];
		if(PlayerInfo[i][pDRInections] >=1) GameTextForPlayer(i, "PayDay", 5000, 1);
		else GameTextForPlayer(i, "~w~PayDay", 5000, 1);
		SendClientMessage(i,CWHITE,"==========[{"#cGRAY"}Банковский чек{"#cWHITE"}]=========");
		if(PlayerInfo[i][pDRInections] >=1)
		{
			SCMF(i,COLOR_WHITE," Зарплата: {"#cGREEN"}%d$", checks);
			PlayerInfo[i][pBank] += checks;
			SCMF(i,COLOR_WHITE," Текущий баланс: {"#cGREEN"}%d$", PlayerInfo[i][pBank]);
			PlayerInfo[i][pZakonp] += 1;
		}
		else
		{
			SCMF(i,COLOR_WHITE," Зарплата: {"#cGREEN"}%d$", checks);
			PlayerInfo[i][pBank] += checks;
			SCMF(i,COLOR_WHITE," Текущий баланс: {"#cGREEN"}%d$", PlayerInfo[i][pBank]);
			PlayerInfo[i][pZakonp] += 1;
		}
		SendClientMessage(i,CWHITE,"==================================");
		if(PlayerInfo[i][punWarns] == 1) { PlayerInfo[i][punWarnstime] += 1; SCMF(i,-1,"- [UNWARN] Автоматическое снятие варна через {"#cGREEN"}%d часов", 10 - PlayerInfo[i][punWarnstime]); }
		if(PlayerInfo[i][punWarns] == 1 && PlayerInfo[i][punWarnstime] >=10)
		{
 			PlayerInfo[i][WarnAdmin] = 0;
 			strmid(PlayerInfo[i][WarnAdmin], "None", 0, strlen("None"), 255);
 			PlayerInfo[i][WarnOffline] = 0;
			PlayerInfo[i][WarnReason] = 0;
			strmid(PlayerInfo[i][WarnReason], "None", 0, strlen("None"), 255);
			PlayerInfo[i][punWarnstime] = 0;
			PlayerInfo[i][punWarns] = 0;
			PlayerInfo[i][pWarns] -=1;
			SCM(i,COLOR_GREY, "- [UNWARN] С Вас было снято одно предупреждение!");
		}
		PlayerInfo[i][pPayCheck] = 0;
		PlayerInfo[i][pPayDayHad] += 1;
	}
	if(hour == 00 && minute == 00 && second == 00 || hour == 08 && minute == 00 && second == 00 || hour == 10 && minute == 00 && second == 00 || hour == 13 && minute == 00 && second == 00 || hour == 18 && minute == 00 && second == 00 || hour == 21 && minute == 00 && second == 00)
	{
	    DeathMatch_Time = 300;
		SendClientMessageToAll(COLOR_YELLOW,"Внимание! Через 5 минут пройдет соревнование по {FFFFFF}Counter Strike.");
		SendClientMessageToAll(COLOR_YELLOW,"Внимание! Желающим прибыть на место регистрации в {FFFFFF}г.San-Fierro \"/gps -> Развлечения -> Counter Strike\"");
	}
	if(hour == 01 && minute == 00 && second == 00 || hour == 09 && minute == 00 && second == 00 || hour == 11 && minute == 00 && second == 00 || hour == 14 && minute == 00 && second == 00 || hour == 17 && minute == 00 && second == 00 || hour == 22 && minute == 00 && second == 00)
	{
	    RaceStarting[2] = 3;
	    RaceStarting[0] = 300;
		SendClientMessageToAll(COLOR_YELLOW,"Внимание! Через 5 минут пройдут {FFFFFF}гоночные мероприятия. | Максимальное количество участников: 40 человек.");
		SendClientMessageToAll(COLOR_YELLOW,"Внимание! Желающим прибыть в центр {FFFFFF}г.Los-Santos \"/gps -> Развлечения -> Гонки\"");
		switch(random(4))
		{
		    case 0: SendClientMessageToAll(COLOR_YELLOW,"Карта: {FFFFFF}Wolking Street Race."), typeRace = 0;
		    case 1: SendClientMessageToAll(COLOR_YELLOW,"Карта: {FFFFFF}Las-Venturas / San-Fierro Race"), typeRace = 1;
		    case 2: SendClientMessageToAll(COLOR_YELLOW,"Карта: {FFFFFF}Las-Venturas / San-Fierro Race"), typeRace = 1;
		    case 3: SendClientMessageToAll(COLOR_YELLOW,"Карта: {FFFFFF}Wolking Street Race."), typeRace = 0;
		    default: SendClientMessageToAll(COLOR_YELLOW,"Карта: {FFFFFF}Las-Venturas / San-Fierro Race"), typeRace = 1;
		}
	}
	if(hour == 02 && minute == 00 && second == 00 || hour == 10 && minute == 00 && second == 00 || hour == 12 && minute == 00 && second == 00 || hour == 15 && minute == 00 && second == 00 || hour == 19 && minute == 00 && second == 00)
	{
 		BaseStarting[1] = 3;
		BaseStarting[0] = 300;
		SendClientMessageToAll(COLOR_LIGHTBLUE,"Внимание! Через 5 минут пройдут соревнования по {FFFFFF}Бейсджампингу. | Максимальное количество участников: 30 человек.");
		SendClientMessageToAll(COLOR_LIGHTBLUE,"Внимание! Желающим прибыть в центр {FFFFFF}г.Las-Venturas \"/gps -> Развлечения -> Бейсджампинг\"");
	}
	CheckMatsAll();
	ObshiakGang();
	Update3DTextsArmy();
	return 1;
}

stock CheckMatsAll()
{
	if(armmatbi < 0) armmatbi = 50000;
	else if(armmatsf < 0) armmatsf = 50000;
	else if(armyvmf < 0) armyvmf = 50000;
	else if(lspdmatbi < 0) lspdmatbi = 50000;
	else if(sfpdmats < 0) sfpdmats = 50000;
	else if(lvpdmats < 0) lvpdmats = 50000;
	else if(fbimats < 0) fbimats = 50000;
	else if(yakuzamats < 0) yakuzamats = 50000;
	else if(rmmats < 0) rmmats = 50000;
	else if(lcnmats < 0) lcnmats = 50000;
	else if(rifamatbi < 0) rifamatbi = 50000;
	else if(ballasmatbi < 0) ballasmatbi = 50000;
	else if(groovmatbi < 0) groovmatbi = 50000;
	else if(vagosmatbi < 0) vagosmatbi = 50000;
	else if(aztekmatbi < 0) aztekmatbi = 50000;
	return 1;
}

stock SendAdminMessage(color,const message[])
{
	foreach(new i: Player)
	{
		if(IsPlayerConnected(i) && PlayerInfo[i][pID])
		{
			if((!(PlayerInfo[i][pSettings] & sAdminInfo))) SendClientMessage(i,color,message);
		}
	}
}

stock ABroadCast(color,const string[],level)
{
	foreach(new i: Player)
	{
		if(!IsPlayerConnected(i)) break;
		if (PlayerInfo[i][bAdmin] >= level) SCM(i, color, string);
	}
	return 1;
}

stock RaceChat(color, string[])
{
	foreach(new i : RacersList)
	{
	    if(!IsPlayerConnected(i)) break;
		if(GetPVarInt(i, "PlayerInRace") != 0) SCM(i, color, string);
	}
}

stock AllVidem(color, const string[] , level)
{
	foreach(new i: Player)
	{
		if(!IsPlayerConnected(i)) break;
		if(PlayerInfo[i][bAdmin] >= level) SCM(i, color, string);
		if(PlayerInfo[i][pHelper] >= level) SCM(i, color, string);
	}
	return 1;
}

stock OOCOff(color,const string[])
{
	foreach(new i: Player)
	{
		SCM(i, color, string);
	}
}
stock LSNews(color,const string[])
{
	foreach(new i: Player)
	{
		if(!lNews[i]) SCM(i, color, string);
	}
	return 1;
}

stock SendJobMessage(job, color, string[])
{
	foreach(new i: Player)
	{
		if(PlayerInfo[i][pJob] == job) SCM(i, color, string);
	}
}

stock SendFamilyMessage(family, color, string[])
{
	foreach(new i: Player)
	{
	    if(StartRabWork(i) && !GetPVarInt(i, "StartRabWork") && ((!(PlayerInfo[i][pSettings] & sFractionChat)))) continue;
		if(PlayerInfo[i][pMRInections] == family || PlayerInfo[i][pLRInections] == family)
		{
			if(PlayerInfo[i][pSettings] & sPlayerIDChat) SendClientMessage(i,color,string);
			else SCM(i, color, string);
		}
	}
	return 1;
}
stock ProxDetector(Float:radius = 30.0, playerid, text[], col1 = 0xFFFFFFFF, col2 = 0xCCCCCCFF, col3 = 0x999999FF, col4 = 0x666666FF, col5 = 0x333333FF)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	new Float:dist, virtualworld = GetPlayerVirtualWorld(playerid), interior = GetPlayerInterior(playerid);
	foreach(new i: Player)
	{
		if(!BigEar[i])
		{
			if(virtualworld != GetPlayerVirtualWorld(i) || interior != GetPlayerInterior(i)) continue;
			dist = GetPlayerDistanceFromPoint(i, x, y, z);
			if(dist < radius / 16) SCM(i, col1, text);
			else if(dist < radius / 8) SCM(i, col2, text);
			else if(dist < radius / 4) SCM(i, col3, text);
			else if(dist < radius / 2) SCM(i, col4, text);
			else if(dist < radius) SCM(i, col5, text);
		}
		else SCM(i, col1, text);
	}
	return 1;
}


stock ProxDetectorS(Float:radi, playerid, targetid)
{
	if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	}
	return 0;
}

public OnPlayerText(playerid, text[])
{
	if(!PlayerInfo[playerid][pLogin]) return 0;
	if(Empty_Message(text)) return SCM(playerid,-1, "• {AC0000}[Ошибка] {ffffff}Невозможно отправить пустое сообщение!") & 0;
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, text);
		if(GetPVarInt(playerid, "ReklamaYES")) { DeletePVar(playerid, "ReklamaYES"); return 0; }
	}
	if(PlayerInfo[playerid][pLogin] == true || PlayerInfo[playerid][bAdmin] == 0)
	{
		if(GetPVarInt(playerid,"AntiFlood") > gettime()) { SCM(playerid, -1, "Пожалуйста, не флудите."); return 0; }
		SetPVarInt(playerid,"AntiFlood",gettime() + 1);
	}
	if(GetPVarInt(playerid, "TalkingLivels") == 1)
	{
		if(PlayerInfo[playerid][pMuted] == 1) { SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}У Вас бан чата!"); return 0; }
		format(stringer,MAX_STR, "< LS News > [Тел.] %s: %s", PlayerInfo[playerid][pNames], text);
		LSNews(0x0073b7AA, stringer);
	}
	if(GetPVarInt(playerid, "TalkingLivels") == 2)
	{
		if(PlayerInfo[playerid][pMuted] == 1) { SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}У Вас бан чата!"); return 0; }
		if(PlayerInfo[playerid][pMRInections] == 16)
		{
			format(stringer,MAX_STR, "< LS News > Ведущий %s: %s", PlayerInfo[playerid][pNames], text);
			LSNews(0x0073b7AA, stringer);
			return 0;
		}
		else
		{
			format(stringer,MAX_STR, "< LS News > Гость %s: %s", PlayerInfo[playerid][pNames], text);
			LSNews(0x0073b7AA, stringer);
			return 0;
		}
	}
	if(GetPVarInt(playerid, "Tel") == 1)
	{
		format(stringer, MAX_STR, "[Телефон] %s: %s", PlayerInfo[playerid][pNames], text);
		ProxDetector(20.0, playerid, stringer,COLOR_GRAD1,COLOR_GRAD2,COLOR_GRAD3,COLOR_GRAD4,COLOR_GRAD4);
		return 0;
	}
	if(GetPVarInt(playerid, "Mobile") != 999)
	{
		format(stringer, MAX_STR, "[Телефон] %s: %s", PlayerInfo[playerid][pNames], text);
		ProxDetector(20.0, playerid, stringer,COLOR_GRAD1,COLOR_GRAD2,COLOR_GRAD3,COLOR_GRAD4,COLOR_GRAD4);
	}
	if(IsPlayerConnected(GetPVarInt(playerid, "Mobile")))
	{
		if(GetPVarInt(GetPVarInt(playerid, "Mobile"), "Mobile") == playerid)
		{
			SCM(GetPVarInt(playerid, "Mobile"), COLOR_YELLOW,stringer);
		}
		else { SCM(playerid, COLOR_GRAD1,"На второй линии никого нет"); return 0; }
		return 0;
	}
	if(GetPVarInt(playerid, "PEfir") != 999)
	{
		if(PlayerInfo[playerid][pMRInections] == 16 || PlayerInfo[playerid][pLRInections] == 16)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}У Вас бан чата!"); return 0; }
			format(stringer,MAX_STR, "< LS News > %s: %s", PlayerInfo[playerid][pNames], text);
			LSNews(0x0073b7AA, stringer);
		}
		if(GetPVarInt(playerid, "Pefir") == 2)
		{
			if(PlayerInfo[playerid][pMuted] == 1) { SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}У Вас бан чата!"); return 0; }
			format(stringer,MAX_STR, "< LS News > %s: %s", PlayerInfo[playerid][pNames], text);
			LSNews(0x0073b7AA, stringer);
		}
		return 0;
	}
	if(strcmp(text, "q", true) == 0)
	{
		new suspect = GetClosestPlayer(playerid);
		if(GetDistanceBetweenPlayers(playerid,suspect) < 2) {}
		switch(PlayerInfo[playerid][pMRInections])
		{
		case 13:
			{
				format(stringer,MAX_STR, "показал(-a) распальцовку Los Santos Vagos Gang");
				SetPlayerChatBubble(playerid,stringer,0xDD90FFFF,30.0,10000);
				format(stringer,MAX_STR, "%s показал(-a) распальцовку Los Santos Vagos Gang", PlayerInfo[playerid][pNames]);
				ProxDetector(30.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
				if(!GetPVarInt(playerid, "PlayerCuffed") ) {    ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0,1); }
				return 0;
			}
		case 15:
			{
				format(stringer,MAX_STR, "показал(-a) распальцовку Grove Street Gang");
				SetPlayerChatBubble(playerid,stringer,0xDD90FFFF,30.0,10000);
				format(stringer,MAX_STR, "%s показал(-a) распальцовку Grove Street Gang", PlayerInfo[playerid][pNames]);
				ProxDetector(30.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
				if(!GetPVarInt(playerid, "PlayerCuffed") ) {    ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0,1); }
				return 0;
			}
		case 17:
			{
				format(stringer,MAX_STR, "показал(-a) распальцовку Varios Los Aztecas Gang");
				SetPlayerChatBubble(playerid,stringer,0xDD90FFFF,30.0,10000);
				format(stringer,MAX_STR, "%s показал(-a) распальцовку Varios Los Aztecas Gang", PlayerInfo[playerid][pNames]);
				ProxDetector(30.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
				if(!GetPVarInt(playerid, "PlayerCuffed") ) {    ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0,1); }
				return 0;
			}
		case 12:
			{
				format(stringer,MAX_STR, "показал(-a) распальцовку The Ballas Gang");
				SetPlayerChatBubble(playerid,stringer,0xDD90FFFF,30.0,10000);
				format(stringer,MAX_STR, "%s показал(-a) распальцовку The Ballas Gang", PlayerInfo[playerid][pNames]);
				ProxDetector(30.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
				ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0,1);
				return 0;
			}
		case 18:
			{
				format(stringer,MAX_STR, "показал(-a) распальцовку The Rifa Gang");
				SetPlayerChatBubble(playerid,stringer,0xDD90FFFF,30.0,10000);
				format(stringer,MAX_STR, "%s показал(-a) распальцовку The Rifa Gang", PlayerInfo[playerid][pNames]);
				ProxDetector(30.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
				if(!GetPVarInt(playerid, "PlayerCuffed") ) {    ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0,1); }
				return 0;
			}
		case 6:
			{
				format(stringer,MAX_STR, "показал(-a) татуировку Yakuza's Family");
				SetPlayerChatBubble(playerid,stringer,0xDD90FFFF,30.0,10000);
				format(stringer,MAX_STR, "%s показал(-a) татуировку Yakuza's Family", PlayerInfo[playerid][pNames]);
				ProxDetector(30.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
				if(!GetPVarInt(playerid, "PlayerCuffed") ) {    ApplyAnimation(playerid,"GANGS","prtial_hndshk_01",4.0,0,0,0,0,0,1); }
				return 0;
			}
		case 5:
			{
				format(stringer,MAX_STR, "показал(-a) татуировку La Cosa Nostra's Family");
				SetPlayerChatBubble(playerid,stringer,0xDD90FFFF,30.0,10000);
				format(stringer,MAX_STR, "%s показал(-a) татуировку La Cosa Nostra's Family", PlayerInfo[playerid][pNames]);
				ProxDetector(30.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
				if(!GetPVarInt(playerid, "PlayerCuffed") ) {    ApplyAnimation(playerid,"GANGS","prtial_hndshk_01",4.0,0,0,0,0,0,1); }
				return 0;
			}
		case 14:
			{
				format(stringer,MAX_STR, "показал(-a) наколку 'Золотые купола'");
				SetPlayerChatBubble(playerid,stringer,0xDD90FFFF,30.0,10000);
				format(stringer,MAX_STR, "%s показал(-a) наколку 'Золотые купола'", PlayerInfo[playerid][pNames]);
				ProxDetector(30.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
				if(!GetPVarInt(playerid, "PlayerCuffed") ) { ApplyAnimation(playerid,"GANGS","prtial_hndshk_01",4.0,0,0,0,0,0,1); }
				return 0;
			}
		}
		if(PlayerInfo[playerid][bAdmin] >= 1 && PlayerInfo[playerid][pLevel] >= 35)
		{
			format(stringer,MAX_STR, "показал(-a) распальцовку Admins Team");
			SetPlayerChatBubble(playerid,stringer,0xDD90FFFF,30.0,10000);
			format(stringer,MAX_STR, "%s показал(-a) распальцовку Admins Team", PlayerInfo[playerid][pNames]);
			ProxDetector(30.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
			ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0,1);
			return 0;
		}
	}
	if(strcmp(text, "эй", true) == 0 || strcmp(text, "э", true) == 0 || strcmp(text, "эй бля", true) == 0|| strcmp(text, "блять", true) == 0 || strcmp(text, "Блядь", true) == 0 || strcmp(text, "мля", true) == 0)
	{
		SetPlayerChatBubble(playerid,"возмущается",0xDD90FFFF,30.0,10000);
		if(!GetPVarInt(playerid, "PlayerCuffed") ) {     ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0,1); }
		return 0;
	}
	if(strcmp(text, "мда", true) == 0 || strcmp(text, "идиот", true) == 0 || strcmp(text, "сука", true) == 0 || strcmp(text, "пидр", true) == 0 )
	{
		SetPlayerChatBubble(playerid, "Facepalm", 0xDD90FFFF, 30.0, 10000);
		if(!GetPVarInt(playerid, "PlayerCuffed") ) { ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,0,0,0,0,1); }
		return 0;
	}
	Speech(playerid,text);
	return 0;
}

stock GetString(param1[],param2[]) return !strcmp(param1, param2, false);

stock Float:GetPlayerDistanceToPlayer(playerid,nearplayerid)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(nearplayerid,x,y,z);
	return GetPlayerDistanceFromPoint(playerid,x,y,z);
}

stock Speech(playerid, text[], Float:distance = 13.0, color = 1)
{
	if(!PlayerInfo[playerid][pLogin]) return 1;
	if(PlayerInfo[playerid][pMuted] > 0) return SendClientMessage(playerid,CGRAY,"У Вас бан чата");
	if(GetString(text,"xD"))
	{
		MeAction(playerid,"смеётся");
		return 0;
	}
	if(GetString(text,"здравия"))
	{
		MeAction(playerid,"отдал(-а) честь");
		return 0;
	}
	if(GetString(text,":D"))
	{
		MeAction(playerid,"хохочет во весь голос");
		return 0;
	}
	if(GetString(text,")"))
	{
		MeAction(playerid,"улыбается");
		return 0;
	}
	if(GetString(text,"))"))
	{
		MeAction(playerid,"смеётся");
		return 0;
	}
	if(GetString(text,"("))
	{
		MeAction(playerid,"расстроился(-ась)");
		return 0;
	}
	if(GetString(text,"(("))
	{
		MeAction(playerid, "сильно расстроился(-ась)");
		return 0;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && PlayerTied{playerid} == false && PlayerCuffedTime[playerid] == 0)
	{
		ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1,1);
		SetTimerEx("AnimClear", 3000, 0, "d", playerid);
	}
	if(GetPVarInt(playerid, "gag"))
	{
		SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
		return 0;
	}
	new mes[144];
	if(GetPVarInt(playerid, "mask_true")) {
	    if(PlayerInfo[playerid][pSettings] & sPlayerIDChat) format(mes,sizeof(mes),"- %s {7a7667}(%s)", text,PlayerInfo[playerid][pNames]);
	    else format(mes,sizeof(mes),"- %s {7a7667}(%s)[%d]", text,PlayerInfo[playerid][pNames],playerid);
	}
	else {
	    if(PlayerInfo[playerid][pSettings] & sPlayerIDChat) format(mes,sizeof(mes),"- %s %s(%s)",text,GetFractionColor(PlayerInfo[playerid][pMRInections]),PlayerInfo[playerid][pNames]);
	    else format(mes,sizeof(mes),"- %s %s(%s)[%d]",text,GetFractionColor(PlayerInfo[playerid][pMRInections]),PlayerInfo[playerid][pNames],playerid);
	}

	foreach(new i: Player)
	{
		new Float:rdist,c;
		rdist = GetPlayerDistanceToPlayer(playerid,i);
		if (rdist > distance || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(i)) continue;
		if(color)
		{
			switch(floatround(rdist))
			{
				case 0..4: c = 0xFFFFFFFF;
				case 5..8: c = 0xCCCCCCFF;
				case 9..14: c = 0xAAAAAAFF;
				default: c = 0x888888FF;
			}
		}
		else c = COLOR_WHITE;
		SendClientMessage(i,c,mes);
	}
	SetPlayerChatBubble(playerid, text, COLOR_WHITE, 20.0, 10000);
	return 1;
}

public OnPlayerUpdate(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
	new Float:xw, Float:yw, Float:zw;
    GetPlayerVelocity(playerid,xw,yw,zw);
	if(xw > 2.0 || yw > 2.0)
	{
		SetPVarInt(playerid, "rvet_pizdu", GetPVarInt(playerid, "rvet_pizdu") + 1);
		if(GetPVarInt(playerid, "rvet_pizdu") >= 3)
		{
		    DeletePVar(playerid, "rvet_pizdu");
	 		OnPlayerCheat(playerid, 8);
		}
	}
	if(GetPlayerWeapon(playerid) != 0 && GetPlayerWeapon(playerid) != 46 && pTemp[playerid][pAFK] < 2)
	{
		if(!AGun[playerid][GetPlayerWeapon(playerid)] && PlayerInfo[playerid][pLogin])
		{
			AntiFakeGun[playerid]++;
			if(AntiFakeGun[playerid] > 25*5) return OnPlayerCheat(playerid, 5); // 5 сек
		}
		if(!AntiFakeGun[playerid]) AGunAmmo[playerid][GetPlayerWeapon(playerid)] = GetPlayerAmmo(playerid);
	}
	if(GetPlayerWeapon(playerid) == 38) RemovePlayerWeapon(playerid, 38);
	pTemp[playerid][pAFK] = 0;
	RINFO[playerid][SAFK][0] = 0;
	new animlib[30], animname[30];
	GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, sizeof(animlib), animname, sizeof(animname));
	if(SpeedPlayer(playerid) > 40 && !strcmp(animlib, "SWIM", true) && !strcmp(animname, "SWIM_crawl", true) && !PlayerInfo[playerid][bAdmin] && !IsPlayerInAnyVehicle(playerid))
	{
		SetPVarInt(playerid,"KickPlayer",GetPVarInt(playerid,"KickPlayer")+1);
		if(GetPVarInt(playerid,"KickPlayer") >= 3) OnPlayerCheat(playerid, 6);
	}
	if(GetPVarInt(playerid,#LessPil))
	{
		if(GetPVarInt(playerid,#LessProc) > 100) return 1;
		stringer1 = "";
		format(stringer1,24,"PROCENT: %d%",GetPVarInt(playerid,#LessProc));
		TextDrawSetString(ProcentDraw[playerid],stringer1);
		stringer1 = "";
		format(stringer1,24,"AMOUNT: %d KG",GetPVarInt(playerid, #jobCash));
		TextDrawSetString(AmountLDraw[playerid],stringer1);
	}
	else { TextDrawHideForPlayer(playerid, ProcentDraw[playerid]), TextDrawHideForPlayer(playerid, AmountLDraw[playerid]); }
	if(GetPVarInt(playerid,#LessProc) >= 100)
	{
		MoveObject(gDerevo[GetPVarInt(playerid,#Derevo)],Derevo[GetPVarInt(playerid, #Derevo)][0],Derevo[GetPVarInt(playerid, #Derevo)][1],Derevo[GetPVarInt(playerid, #Derevo)][2]+0.004,0.004, 0.00000000,90.00000000,0.00000000);
		SetPVarInt(playerid, #LessProc, 0);
		TextDrawHideForPlayer(playerid, ProcentDraw[playerid]);
		SetPVarInt(playerid, #jobTimer, _:SetTimerEx("drop_derevo",2000,false,"i",playerid));
	}
	return 1;
}
publics: clearattach(playerid)
{
	if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 6)) RemovePlayerAttachedObject(playerid, 6);
	return 1;
}
publics: AntiBG(playerid)
{
	if(!GetPVarInt(playerid, "PlayerCuffed")) ApplyAnimation(playerid,"PED","getup_front",4.0,0,0,0,0,0);
	times[playerid] = false;
	SetTimerEx("AntiBG2", 2000, 0, "d", playerid);
	return 1;
}
publics: AntiBG2(playerid) return times[playerid] = true;
publics: Unfreez(playerid) return TogglePlayerControllable(playerid, true);
new timerCount[MAX_PLAYERS];
publics: Updating(playerid)
{
	if(!IsPlayerConnected(playerid) && PlayerInfo[playerid][pLogin] && myti[playerid]) return KillTimer(mytimer[playerid]);
	//ANTI-CHEAT
    if (GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK) OnPlayerCheat(playerid, 7);
    AntiCheatTimer(playerid);
	if(acstruct[playerid][checkmaptp])
	{
		new Float:dis = GetPlayerDistanceFromPoint(playerid, acstruct[playerid][maptp][0], acstruct[playerid][maptp][1], acstruct[playerid][maptp][2]);
		if(dis < 5.0)
		{
			new Float:disd = GetPlayerDistanceFromPoint(playerid, acstruct[playerid][LastOnFootPosition][0], acstruct[playerid][LastOnFootPosition][1], acstruct[playerid][LastOnFootPosition][2]);
			if(disd > 25.0) OnPlayerCheat(playerid, 9);
		}
		acstruct[playerid][checkmaptp] = 0;
	}
	new animlib[30], animname[30];
   	GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, sizeof(animlib), animname, sizeof(animname));
	if (GetPlayerSkin(playerid)!=0 && GetPlayerSkin(playerid)!=76 && GetPlayerState(playerid)==PLAYER_STATE_ONFOOT)
	{
	  	if (!strcmp(animlib, "PED", true) && !strcmp(animname, "RUN_PLAYER", true))
		{
		    SetPVarInt(playerid,"PlayerRunTime",GetPVarInt(playerid,"PlayerRunTime")+1);
   			if (GetPVarInt(playerid,"PlayerRunTime")>=10)
			{
				DeletePVar(playerid,"PlayerRunTime");
				OnPlayerCheat(playerid, 10);
			}
		}
		else if(GetPVarInt(playerid,"PlayerRunTime")) DeletePVar(playerid,"PlayerRunTime");
	}
	if(!IsPlayerInRangeOfPoint(playerid, 700.0, 2197.8979,-703.6056,45.2664) && Player_Job_Waxta{playerid})
    {
        if(PlayerInfo[playerid][pMRInections]) SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
		else SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
        Player_Job_Waxta{playerid} = false;
		if(IsPlayerAttachedObjectSlotUsed(playerid,0)) RemovePlayerAttachedObject(playerid,0);
		DeletePVar(playerid, #drova);
		SendClientMessage(playerid, COLOR_REDD, "Вы покинули территорию работы!");
	}
	if(!IsPlayerInRangeOfPoint(playerid, 100.0, 1339.0961,-1551.8062,13.5718) && GetPVarInt(playerid, #job_window))
	{
 		new string[100];
		DeletePVar(playerid, #job_window);
        SetPlayerSkin(playerid,GetPVarInt(playerid,"PSkin"));
        if(!GetPVarInt(playerid, #window_money)) return SendClientMessage(playerid, CORANGE, "Вы ничего не заработали!");
		PlayerInfo[playerid][pCash] += GetPVarInt(playerid, #window_money)*120;
        format(string, sizeof(string), "Вы заработали %d$. Окон помыто: %d", GetPVarInt(playerid, #window_money)*120, GetPVarInt(playerid, #window_money));
		SendClientMessage(playerid, CORANGE, string);
		DeletePVar(playerid, #window_money);
   		if(lNomer[playerid] == 3) MoveDynamicObject(lift[2], 1353.06506, -1569.89990, 84.81356, 1.00);
		if(lNomer[playerid] == 2) MoveDynamicObject(lift[1], 1340.48779, -1566.53296, 84.77550, 1.00);
		if(lNomer[playerid] == 1) MoveDynamicObject(lift[0], 1328.02014, -1563.87646, 84.65142, 1.00);
		lNomer[playerid] = 0;
		nLift[lNomer[playerid]-1] = 0;
		SCM(playerid, COLOR_REDD, "Вы покинули территорию работы!");
	}
	if(GetPVarInt(playerid,#LessPil) && !IsPlayerInRangeOfPoint(playerid, 100.0, -703.2038,-156.3844,63.8574))
	{
        SetPlayerSkin(playerid, GetPVarInt(playerid, "OldLessSkin"));
		SCMF(playerid,COLOR_PAYCHEC, "Вы закончили рабочий день, Ваш заработок: %i$",GetPVarInt(playerid, #jobCash)*3);
		PlayerInfo[playerid][pCash] += GetPVarInt(playerid, #jobCash)*3;
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
		DeletePVar(playerid, #jobCash);
		DeletePVar(playerid, #OldLessSkin);
		DeletePVar(playerid, #LessPil);
		DeletePVar(playerid, #Derevo);
		TextDrawHideForPlayer(playerid, ProcentDraw[playerid]), TextDrawHideForPlayer(playerid, AmountLDraw[playerid]);
		DisablePlayerCheckpoint(playerid), RemovePlayerWeapon(playerid, 9);
		SCM(playerid, COLOR_REDD, "Вы покинули территорию работы!");
	}
	if(GetPVarInt(playerid, "SMOKE") > gettime())
	{
	    new string[70];
		switch(GetPVarInt(playerid, "SMOKE")-gettime())
		{
		    case 60, 45, 30, 15:
		    {
		        format(string, sizeof(string), "%s стряхнул(а) пепел с сигареты", PlayerInfo[playerid][pNames]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
			}
		}
	}
	else if(GetPVarInt(playerid, "SMOKE") == gettime())
	{
	    DeletePVar(playerid, "SMOKE");
	    DeletePVar(playerid, "ZatJ");
        RemovePlayerAttachedObject(playerid,3);
		new string[50];
	    format(string, sizeof(string), "%s выкинул(а) окурок", PlayerInfo[playerid][pNames]);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
	}
	if (GetPlayerState(playerid)==PLAYER_STATE_ONFOOT && !strcmp(animname, "CAR_SIT_PRO", false)) OnPlayerCheat(playerid, 11);
	//ANTI-CHEAT
	FromFresh(playerid);
	timerCount[playerid]++;
	if(GetPVarInt(playerid,"ACshop") && !GetPVarInt(playerid, "check_for_clicked")) SelectTextDraw(playerid, 0xFFFFFFAA);
	if(GetPVarInt(playerid,"bankmenu")) SelectTextDraw(playerid, 0xBDBDBDFF);
	if(gVip[playerid][adTime]) gVip[playerid][adTime]--;
	if(pTemp[playerid][pAdvertTime] > 0) pTemp[playerid][pAdvertTime]--;
	if(gVip[playerid][adTime] == 1)
	{
		format(stringer, BIG_SIZE,"« VIP Radio » %s. Отправитель: %s[%d]. Телефон: %d", gVip[playerid][adText], gVip[playerid][adSender], gVip[playerid][adID], gVip[playerid][adNumber]);
		SendClientMessageToAll(0xFFD700FF, stringer);
		gVip[playerid][adTime] = 0;
		gVip[playerid][adID] = 0;
		gVip[playerid][adNumber] = 0;
		strdel(gVip[playerid][adText],0,100);
		strdel(gVip[playerid][adSender],0,24);
	}
	if(GetPVarInt(playerid, #pFillingStarting))
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(vehicleid && VehInfo[vehicleid][vFuel] < 300) VehInfo[vehicleid][vFuel] += 5;
		else if(vehicleid && VehInfo[vehicleid][vFuel] >= 300)
		{
		    VehInfo[vehicleid][vFuel] = 300;
			TogglePlayerControllable(playerid,true);
			MeAction(playerid, "заправил(а) автомобиль");
			SendClientMessage(playerid,CGREEN,"Автомобиль заправлен, всего Вам доброго.");
			DeletePVar(playerid, #pFillingStarting);
			DeletePVar(playerid, #pFilling);
			DeletePVar(playerid, #pFillingID);
		}
	}
	if(PlayerInfo[playerid][pContract] > 0) PlayerInfo[playerid][pContract]--;
	if(crashcuff[playerid] > 0) crashcuff[playerid]--;
	if(PlayerInfo[playerid][pDrugtime] > 0) PlayerInfo[playerid][pDrugtime]--;
	if(pTemp[playerid][pInHospital] == true && PlayerInfo[playerid][pHealthPlayer] < 100.0) SetPlayerHealthAC(playerid,PlayerInfo[playerid][pHealthPlayer]+1.5), GameTextForPlayer(playerid,"~g~+ ~w~1.5 HP",2000,1);
	if(GetPVarInt(playerid, "checksalon")) SelectTextDraw(playerid, 0x0080FFFF);
	if(AntiDMZone(playerid) && GetPlayerWeapon(playerid) > 0) SetPlayerArmedWeapon(playerid,0);
	if(GetPVarInt(playerid, "gps_pic") == 228) {
	    if(PlayerToPoint(2.0, playerid, 312.6434,-165.7492,999.6010) || PlayerToPoint(2.0, playerid, 1542.5778,-1773.6821,1506.5640)) MatsArmyGive(playerid);
	}
	if(PlayerInfo[playerid][pCash] < GetPlayerMoney(playerid)) ResetPlayerMoney(playerid),GivePlayerMoney(playerid, PlayerInfo[playerid][pCash]);
	else if(PlayerInfo[playerid][pCash] > GetPlayerMoney(playerid)) ResetPlayerMoney(playerid),GivePlayerMoney(playerid, PlayerInfo[playerid][pCash]);
	if(timerCount[playerid] >= 60)
	{
	    timerCount[playerid] = 0;
	    GivePVarInt(playerid, "game_time", 1);
	}
	new Float:hp;
	if(PickupUp[playerid] != -1 && !IsPlayerInRangeOfPoint(playerid, 2.0, PickupInfo[PickupUp[playerid]][PickX], PickupInfo[PickupUp[playerid]][PickY], PickupInfo[PickupUp[playerid]][PickZ])) PickupUp[playerid] = -1;
	if(RINFO[playerid][sID] != INVALID_PLAYER_ID)
	{
		RINFO[playerid][SAFK][1]++;
		if(RINFO[playerid][SAFK][0] > 3) RINFO[playerid][SAFK][2]++;
		RINFO[playerid][SAFK][3]++;
		if(RINFO[playerid][SAFK][3]/60 >= 10)
		{
			RINFO[playerid][SAFK][3] = 0;
			RINFO[playerid][SShout][2] = 0;
			RINFO[playerid][SShout][3] = 0;
		}
		UpdateRecon(playerid);
	}
	GetVehicleHealth(GetPlayerVehicleID(playerid), hp);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(hp < 100)
		{
			Engines{GetPlayerVehicleID(playerid)} = false;
			DeletePVar(playerid, "engine_on_off");
			GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),0,0,alarm,doors,bonnet,boot,objective);
		}
	}
	if(AntiBan[playerid] > 0) AntiBan[playerid]--;
	if(!PlayerToPoint(40.0,playerid,264.1425,77.4712,1001.0391) && PlayerInfo[playerid][pJailTime] > 0)
	{
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerPosEx(playerid,264.1425,77.4712,1001.0391);
		SetPlayerFacingAngle(playerid, 263.0160);
		PlayerInfo[playerid][pJailed] = 1;
		PlayerInfo[playerid][pMestoJail] = 1;
		UpdatePlayerData(playerid, "pMestoJail", PlayerInfo[playerid][pMestoJail]);
	}
	if(SwatDoor[playerid] > 0)
	{
		SwatDoor[playerid]--;
		if(SwatDoor[playerid] == 1) MoveObject(gatevorota,2852.86889648,2186.00732422,12.59907532, 3.0);//Есль 1 секунда осталось начинаем поднимать ворота
	}
	if(gVipTime > 0) gVipTime--;
	if(lspdgate2[playerid] > 0)
	{
		lspdgate2[playerid]--;
		if(lspdgate2[playerid] == 1) MoveObject(lspdgate,1544.69921875,-1630.7998046875,13.10000038147-0.05,0.05,0.00000000,89.00000000,90.00000000);
	}
	if(sfpdgates[0][playerid] > 0)
	{
		sfpdgates[0][playerid]--;
		if(sfpdgates[0][playerid] == 1) MoveObject(sfpdgate[0],-1572.1739502,658.7340088,6.7649999-0.05,0.05,0.0000000,269.7497864,270.5000000);
	}
	if(sfpdgates[1][playerid] > 0)
	{
		sfpdgates[1][playerid]--;
		if(sfpdgates[1][playerid] == 1) MoveObject(sfpdgate[1],-1701.4420166,687.6950073,24.5750008-0.05,0.05,0.0000000,270.0000000,90.0000000);
	}
	if(lvpdgates[1][playerid] > 0)
	{
		lvpdgates[1][playerid]--;
		if(lvpdgates[1][playerid] == 1) MoveObject(lvpdgate[1],2238.1860352,2450.4460449,10.6000004-0.05,0.05,0.0000000,270.2502441,269.9999695);
	}
	if(armygates[0][playerid] > 0)
	{
		armygates[0][playerid]--;
		if(armygates[0][playerid] == 1) MoveObject(armygate[0],135.10,1940.86,21.09, 1.2);
	}
	if(fbigate2[playerid] > 0)
	{
		fbigate2[playerid]--;
		if(fbigate2[playerid] == 1) MoveObject(fbigate,1125.47656, -1701.98438, 14.31931598, 2);
	}
	if(vmfgates[1][playerid] > 0)
	{
		vmfgates[1][playerid]--;
		if(vmfgates[1][playerid] == 1) MoveObject(vmfgate[0],-2278.5000000,2395.5000000,5.1000000, 1.2);
	}
	if(vmfgates[0][playerid] > 0)
	{
		vmfgates[0][playerid]--;
		if(vmfgates[0][playerid] == 1) MoveObject(vmfgate[1],-2297.7000000,2369.3000000,7.2000000, 1.2);
	}
	if(MSH[0][playerid] > 0)
	{
		MSH[0][playerid] --;
		if(MSH[0][playerid] == 1) MoveObject(medshlag[0],1185.7998,-1342,13.3-0.004,0.004,0,88.995,90);
	}
	if(MSH[1][playerid] > 0)
	{
		MSH[1][playerid] --;
		if(MSH[1][playerid] == 1) MoveObject(medshlag[1],1185.7002,-1305.40039,13.3-0.004,0.004,0,269.998,90);
	}
	if(lvpdgates[2][playerid] > 0)
	{
		lvpdgates[2][playerid]--;
		if(lvpdgates[2][playerid] == 1) MoveObject(autogate,-2053.2219238,-102.4700012,35.9290009, 2.0);
	}
	if(armygates[1][playerid] > 0)
	{
		armygates[1][playerid]--;
		if(armygates[1][playerid] == 1) MoveObject(armygate[1],-1530.0350342,482.5390015,7.8540001, 1.2);
	}
	if(armygates[2][playerid] > 0)
	{
		armygates[2][playerid]--;
		if(armygates[2][playerid] == 1) MoveObject(armygate[2],345.11,1797.59,20.00, 1.2);
	}
	if(lvpdgates[0][playerid] > 0)
	{
		lvpdgates[0][playerid]--;
		if(lvpdgates[0][playerid] == 1) MoveObject(lvpdgate[0],2335.1560059,2443.7409668,7.0000000, 1.2);
	}
	if(antiwarn[playerid] > 0)
	{
		antiwarn[playerid]--;
		if(antiwarn[playerid] == 1) anti{playerid} = false, antiwarn[playerid] = 0;
	}
	if(Music2 == true)
	{
		if(IsPlayerInRangeOfPoint(playerid, MusicU[4], MusicU[1], MusicU[2], MusicU[3]))
		{
			if(!GetPVarInt(playerid,"Music"))
			{
				SetPVarInt(playerid,"Music",1);
				PlayAudioStreamForPlayer(playerid, UMusic, MusicU[1], MusicU[2], MusicU[3], MusicU[4], true);
			}
		}
		else
		{
			if(GetPVarInt(playerid,"Music"))
			{
				DeletePVar(playerid,"Music");
				StopAudioStreamForPlayer(playerid);
			}
		}
	}
	RINFO[playerid][SAFK][0] ++;
	if(RINFO[playerid][SAFK][0] >= 3) SetPVarInt(playerid, "pIsAFK",1);
	if(GetPVarInt(playerid, "pIsAFK")) DeletePVar(playerid, "pIsAFK");
	pTemp[playerid][pAFK] ++;
	if(pTemp[playerid][pAFK] >= 3)
	{
	    if(pTemp[playerid][pAFK] >= 1800) SCM(playerid, COLOR_REDD, "Вы были кикнуты за долгое бездействие! [AFK]"), KickEx(playerid, 1800);
		format(stringer1,SMALL_SIZE,"Игрок на паузе: %d секунд.",pTemp[playerid][pAFK] - 2);
		SetPlayerChatBubble(playerid,stringer1,-1,10.0,1600);
		if(!GetPVarInt(playerid, "pIsAFK")) SetPVarInt(playerid, "pIsAFK",1);
	}
	if(PlayerInfo[playerid][pAvig] >= 3) DeleteAdministration(playerid,PlayerInfo[playerid][pNames]);
	if(PlayerInfo[playerid][vig] >= 3)
	{
		SetPlayerArmourAC(playerid,0);
		ResetPlayerWeapons(playerid);
		PlayerInfo[playerid][pMRInections] = 0;
		PlayerInfo[playerid][pLRInections] = 0;
		PlayerInfo[playerid][pRKInections] = 0;
		PlayerInfo[playerid][vig] = 0;
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		UpdatePlayerData(playerid,"vig",PlayerInfo[playerid][vig]);
		SpawnPlayer(playerid);
		SCM(playerid, COLOR_LIGHTRED, "Вы уволены из Вашей организации, по скольку получили 3-и выговора от Лидера организации.");
	}
	if(PlayerInfo[playerid][pMuteTime] > 0 && PlayerInfo[playerid][pMuted] == 1)
	{
		PlayerInfo[playerid][pMuteTime] --;
		if(PlayerInfo[playerid][pMuteTime] == 1)
		{
			PlayerInfo[playerid][pMuted] = 0;
			PlayerInfo[playerid][pMuteTime] = 0;
			SCM(playerid,COLOR_WHITE,"Вам включили чат. Пожалуйста больше не нарушайте правила");
		}
	}
	if(PlayerInfo[playerid][pJailed] > 0)
	{
		if(PlayerInfo[playerid][pJailTime] > 0) PlayerInfo[playerid][pJailTime]--;
		if(PlayerInfo[playerid][pJailTime] <= 0)
		{
			if(PlayerInfo[playerid][pJailed] == 1)
			{
				if(PlayerInfo[playerid][pMestoJail] == 1)
				{
					SetPlayerInterior(playerid, 0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerPosEx(playerid,1547.11,-1675.76,13.94);//Тюрьма
					SetPlayerFacingAngle(playerid, 95.0636);
				}
				if(PlayerInfo[playerid][pMestoJail] == 2)
				{
					SetPlayerInterior(playerid, 0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerPosEx(playerid,-1607.1873,721.3649,12.2721);//Тюрьма
					SetPlayerFacingAngle(playerid, 2.3026);
				}
				if(PlayerInfo[playerid][pMestoJail] == 3)
				{
					SetPlayerInterior(playerid, 0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerPosEx(playerid,2334.8467,2454.9456,14.9688);//Тюрьма
					SetPlayerFacingAngle(playerid, 115.7874);
				}
			}
			else if(PlayerInfo[playerid][pJailed] == 4)
			{
				SetPlayerWorldBounds(playerid,20000.0000,-20000.0000,20000.0000,-20000.0000); //
				SetPlayerInterior(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerPosEx(playerid, 90.2101,1920.4854,17.9422);
			}
			PlayerInfo[playerid][pJailTime] = 0;
			PlayerInfo[playerid][pJailed] = 0;
			SCM(playerid, COLOR_ISPOLZUY,"Вы заплатили свой долг обществу, теперь вы свободны!");
			PlayerInfo[playerid][pMestoJail] = 0;
			UpdatePlayerData(playerid, "pMestoJail", PlayerInfo[playerid][pMestoJail]);
			WantedLevel[playerid] = 0;
			PlayerInfo[playerid][pWanted] = 0;
			UpdatePlayerData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
			WantedPoints[playerid] = 0;
			SetPlayerWantedLevel(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			GameTextForPlayer(playerid, "~g~Freedom", 5000, 1);
			SetPlayerToTeamColor(playerid);
		}
	}
	if(PlayerInfo[playerid][pPrison][1] > 0 && PlayerInfo[playerid][pPrison][0] != 0) {
	    PlayerInfo[playerid][pPrison][1] --;
	    if(PlayerInfo[playerid][pPrison][1] == 1) SpawnPlayer(playerid), PlayerInfo[playerid][pPrison][1] = 0, PlayerInfo[playerid][pPrison][0] = 0;
	}
	if(GetPVarInt(playerid, "Tazer"))
	{
		if(TazerTime[playerid] <= 0) DeletePVar(playerid, "Tazer");
		else TazerTime[playerid] --;
	}
	if(GetPVarInt(playerid, "PlayerCuffed") == 1)
	{
		if(PlayerCuffedTime[playerid] <= 0)
		{
			TogglePlayerControllable(playerid, 1);
			DeletePVar(playerid, "PlayerCuffed");
			PlayerCuffedTime[playerid] = 0;
		}
		else PlayerCuffedTime[playerid] --;
	}
	if(GetPVarInt(playerid, "PlayerCuffed") == 2)
	{
		if(PlayerCuffedTime[playerid] <= 0)
		{
			TogglePlayerControllable(playerid, 1);
			DeletePVar(playerid, "PlayerCuffed");
			PlayerCuffedTime[playerid] = 0;
		}
		else PlayerCuffedTime[playerid] --;
	}
	return 1;
}
publics: tieTime(playerid)
{
	if(GetPVarInt(playerid, "gag")) return 1;
	DeletePVar(playerid, "gag"),SCM(playerid, COLOR_GREY, "Кляп стал мокрым и выпал, вы снова можете говорить!");
	return 1;
}
publics: _@OnPlayerUpdateTimer()
{
	if(TOTALDEREVO == 37)
	{
		for(new i; i < sizeof(Derevo); i++)
		{
			DestroyObject(gDerevo[i]);
			gDerevo[i] = CreateObject(616,Derevo[i][0],Derevo[i][1],Derevo[i][2],0.0000000,0.0000000,0.0000000);
		}
		TOTALDEREVO = 0;
	}
	if(ServerRestart[1] > 0) {
	    ServerRestart[1]--;
	    if(ServerRestart[1] == 1) Maintenance(), ServerRestart[1] = 0;
	}
	if(ServerRestart[2] > 0) {
	    ServerRestart[2]--;
	    if(ServerRestart[2] == 1) FinishMaintenance(), ServerRestart[2] = 0;
	}
	if(DeathMatch_Time_Start)
	{
	    DeathMatch_Time_Start--;
	    new mes[50];
		format(mes, sizeof(mes), "TIME: ~w~%s",TimeConverter(DeathMatch_Time_Start));
		TextDrawSetString(CounterSText[12], mes);
	    if(!DeathMatch_Time_Start) End_MP_DM();
	}
	if(DeathMatch_Time)
	{
	    DeathMatch_Time--;
	    if(!DeathMatch_Time) Start_MP_DM();
	}
    if(RaceStarting[0] > 0) {
		RaceStarting[0]--;
    	if(RaceStarting[0] == 120) {
	  		SendClientMessageToAll(COLOR_YELLOW,"Внимание! Через 2 минуты пройдут {FFFFFF}гоночные мероприятия. | Максимальное количество участников: 40 человек.");
			SendClientMessageToAll(COLOR_YELLOW,"Внимание! Желающим прибыть в центр {FFFFFF}г.Los-Santos \"/gps -> Развлечения -> Гонки\"");
			switch(typeRace)
			{
   				case 0: SendClientMessageToAll(COLOR_YELLOW,"Карта: {FFFFFF}Wolking Street Race.");
		    	case 1: SendClientMessageToAll(COLOR_YELLOW,"Карта: {FFFFFF}Las-Venturas / San-Fierro Race");
			}
	    }
	    if(RaceStarting[0] == 2 && PlayersInRace{0} > 1 && RaceStarting[2] == 3) {
            SendClientMessageToAll(COLOR_YELLOW,"Информация: Гонки начались!");
            SetTimer("SecondStartedRaces", 1100, false);
            RaceStarting[0]=0; RaceStarting[1] = 11;
		}
		else if(RaceStarting[2] == 3 && PlayersInRace{0} < 2 && RaceStarting[0] == 2) {
		    SendClientMessageToAll(COLOR_YELLOW,"Информация: Гонка отменена из-за не достаточного количества участников.");
		    RaceStarting[2] = 0; RaceStarting[0] = 0; raceTime = 1; PlayersInRace{0} = 0; typeRace = 3;
			foreach(new i: Player)
			{
			    if(!GetPVarInt(i, #PlayerInRace)) continue;
			    DeletePVar(i, #PlayerInRace);
			    Iter_Remove(RacersList, i);
			}
		}
	}
    if(BaseStarting[0] > 0) {
		BaseStarting[0]--;
    	if(BaseStarting[0] == 120) {
	  		SendClientMessageToAll(COLOR_LIGHTBLUE,"Внимание! Через 2 минуты пройдут соревнования по {FFFFFF}Бейсджампингу. | Максимальное количество участников: 30 человек.");
			SendClientMessageToAll(COLOR_LIGHTBLUE,"Внимание! Желающим прибыть в центр {FFFFFF}г.Las-Venturas \"/gps -> Развлечения -> Бейсджампинг\"");
	    }
	    if(BaseStarting[0] == 2 && PlayersInBase{0} > 1 && BaseStarting[1] == 3) {
			SendClientMessageToAll(COLOR_LIGHTBLUE,"Информация: Бейсджампинг начался!");
            StartedBase();
			BaseStarting[0]=0;
		}
		else if(BaseStarting[1] == 3 && PlayersInBase {0} < 2 && BaseStarting[0] == 2) {
		    SendClientMessageToAll(COLOR_LIGHTBLUE,"Информация: Бейсджампинг отменен из-за недостаточного количества участников.");
		    BaseStarting[1] = 0; BaseStarting[0] = 0; PlayersInBase{0} = 0;
   			foreach(new i: Player)
			{
			    if(!GetPVarInt(i, #PlayerInBase)) continue;
			    DeletePVar(i, #PlayerInBase);
			    Iter_Remove(BaseList, i);
			}
		}
	}
   	if(gAdvertTime > 0) gAdvertTime--;
	for(new i;i<MAX_ADVERT_COUNT;i++)
	{
		if(gAdvert[i][adTime]) gAdvert[i][adTime]--;
		if(gAdvert[i][adCheked] && !gAdvert[i][adTime])
		{
			FracBank[0][fLsnews] += gAdvert[i][adMoney];
			new mes[128];
			format(mes,sizeof(mes),"INSPIRE-FM || %s. Отправитель: %s (тел. %d)",gAdvert[i][adText],gAdvert[i][adSender],gAdvert[i][adPhone]);
			SendClientMessageToAll(CGREEN,mes);
			format(mes,sizeof(mes),"\t\t\t\tПроверил сотрудник: %s",gAdvert[i][adCheker]);
			SendClientMessageToAll(CGREEN,mes);
			strdel(gAdvert[i][adSender],0,24);
			gAdvert[i][adPhone] = 0;
			strdel(gAdvert[i][adText],0,100);
			strdel(gAdvert[i][adCheker],0,24);
			gAdvert[i][adBusy] = false;
			gAdvert[i][adCheked] = false;
			gAdvert[i][adCheking] = false;
			gAdvert[i][adTime] = 0;
			if(gAdvertCount > 0) gAdvertCount--;
		}
	}
	new text[186];
	strcat(text,"{"#cINFO"}  Очередь на экзамен:{"#cWHITE"}");
	for(new i;i<20;i++)
	{
		if(gDSTurn[i] != INVALID_PLAYER_ID && !IsPlayerConnected(gDSTurn[i]) || (gDSTurn[i] != INVALID_PLAYER_ID && !pTemp[gDSTurn[i]][pWaitingExam])) gDSTurn[i] = INVALID_PLAYER_ID;
		if(i != 19 && gDSTurn[i] == INVALID_PLAYER_ID && gDSTurn[i+1] != INVALID_PLAYER_ID)
		{
			gDSTurn[i] = gDSTurn[i+1];
			gDSTurn[i+1] = INVALID_PLAYER_ID;
			if(!i)
			{
				new mes[128];
				format(mes,sizeof(mes),"%s ожидает Вызова на практический экзамен по вождению",PlayerInfo[gDSTurn[0]][pNames]);
				foreach(new j: Player)
				{
					if(!IsPlayerConnected(j) || !PlayerInfo[j][pLogin]) continue;
					else if(PlayerInfo[j][pMRInections] == 11) SendClientMessage(j,CINFO,mes);
				}
			}
		}
		if(gDSTurn[i] != INVALID_PLAYER_ID) format(text,sizeof(text),"%s\n%d. %s",text,i+1,PlayerInfo[gDSTurn[i]][pNames]);
	}
    UpdateDynamic3DTextLabelText(gDSTurnText,CWHITE,text);
	Fresh();
	race_timer();
	return 1;
}
publics: race_timer()
{
	if(RaceStarting[2] == 1)
	{
	    raceTime ++;
	    foreach(new i: RacersList)
	    {
	        if(!GetPVarInt(i, #PlayerInRace)) continue;
	        format(stringer, 20, "Time: %02i:%02i",(raceTime/60),raceTime - (60 * (floatround(raceTime)/60)));
	        PlayerTextDrawSetString(i,Race[8][i], stringer);
	        if (GetTopOne() == -1)
	    	{
		 		format(stringer, 13,"1. ~w~None");
				PlayerTextDrawSetString(i,Race[2][i], stringer);
	   		}
			else format(stringer, 33,"1. ~w~%s", PlayerInfo[GetTopOne()][pNames]);
			PlayerTextDrawSetString(i,Race[2][i], stringer);
			if (GetTopTwo() == -1)
			{
				format(stringer, 13,"2. ~w~None");
				PlayerTextDrawSetString(i,Race[3][i], stringer);
			}
			else format(stringer, 33,"2. ~w~%s", PlayerInfo[GetTopTwo()][pNames]);
			PlayerTextDrawSetString(i,Race[3][i], stringer);
			if (GetTopThree() == -1)
			{
				format(stringer, 13,"3. ~w~None");
				PlayerTextDrawSetString(i,Race[4][i], stringer);
			}
			else format(stringer, 33,"3. ~w~%s", PlayerInfo[GetTopThree()][pNames]);
			PlayerTextDrawSetString(i,Race[4][i], stringer);
			format(stringer, 30, "Racers: ~w~%d/40", PlayersInRace{0});
			PlayerTextDrawSetString(i,Race[5][i], stringer);
		}
	}
}
publics: SpawnCars(playerid)
{
    forveh(c)
	{
		if(!IsVehicleOccupied(c) && GetVehicleModel(c) != 508) SetVehicleToRespawn(c);
	}
	format(stringer, 100, "Администратор %s зареспавнил незанятый транспорт.",PlayerInfo[playerid][pNames]);
	SendClientMessageToAll(COLOR_LIGHTRED, stringer);
}
stock FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0) { hour = hour+24; }
	else if (hour > 23) { hour = hour-24; }
	shifthour = hour;
	return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(newkeys == 8 && GetPVarInt(playerid, "Selfie") > 0) return NextSelfie(playerid);
	if(newkeys == 16 && IsPlayerInAnyVehicle(playerid) && GetPVarInt(playerid, "TuningCar") == 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя во время тюнинга покидать транспортное средство!");
	if(newkeys & 16) GangMenu(playerid);
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid,1.5,319.5459,1888.9373,907.8959) || IsPlayerInRangeOfPoint(playerid,1.5,323.1256,1888.9172,907.8959))
		{
			if(StartVibori == false) return	true;
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
			if(PlayerInfo[playerid][pGolos] >= 1) return SCM(playerid,CRED,"• {AC0000}[Ошибка] {ffffff}Вы уже голосовали. Повторное голосование невозможно!");
			if(PlayerInfo[playerid][pVoted]) return SCM(playerid, COLOR_RED,"• {AC0000}[Ошибка] {ffffff}Вы уже голосовали.");
			cmd::candidates(playerid);
			ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,1);
		}
	}
	if(newkeys & KEY_CTRL_BACK)
	{
		for(new i;i<sizeof(SellTicket);i++)
		{
		    if(IsPlayerInRangeOfPoint(playerid,2.0,SellTicket[i][0],SellTicket[i][1],SellTicket[i][2]) && !GetPVarInt(playerid, #busTicket)) { PlayerInfo[playerid][pCash] -= TransportCompany_FareTicket; SetPVarInt(playerid, #busTicket, 1); SCM(playerid, COLOR_GREEN, "Вы успешно приобрели проездной билет!"); break; }
		}
	}
	if(newkeys & 16)
	{
		if(RINFO[playerid][sID] != INVALID_PLAYER_ID) SelectTextDraw(playerid, 0xFF9933FF);
	}
	if(GetPVarInt(playerid, #LessPil) && PRESSED(KEY_FIRE))
	{
		if(IsPlayerInRangeOfPoint(playerid,2.5,Derevo[GetPVarInt(playerid, #Derevo)][0],Derevo[GetPVarInt(playerid, #Derevo)][1],Derevo[GetPVarInt(playerid, #Derevo)][2]))
		{
			new animlib[30], animname[30];
			if(!strcmp(animlib, "CHAINSAW", true) && !strcmp(animname, "CSAW_1", true) || !strcmp(animlib, "CHAINSAW", true) && !strcmp(animname, "CSAW_2", true)) return GivePVarInt(playerid, #LessProc, 2);
		}
	}
	if(PRESSED(KEY_FIRE) || PRESSED(KEY_HANDBRAKE) || PRESSED(KEY_CROUCH) || PRESSED(KEY_ACTION))
	{
		if(GetPVarInt(playerid,#LessStatus) && IsPlayerAttachedObjectSlotUsed(playerid, 3)) return ClearAnimations(playerid), ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
	}
 	if(PRESSED(KEY_FIRE))
	{
		if(PlayerToPoint(10.0,playerid,2485.8572,-2560.5715,2501.0859))
		{
			if(GetPlayerWeapon(playerid) == 41)
			{
				if(!GetPVarInt(playerid, "clicked_house"))
				{
					ProsInfo[playerid][caridhouse[playerid]] = 0;
					timerP[playerid] = SetTimerEx("house_color_car",1000,1,"i",playerid);
					SetPVarInt(playerid, "clicked_house", 1);
				}
			}
		}
	}
	if(newkeys == KEY_YES)
	{
		if(GetPVarInt(playerid,"Taxi_Duty_Player"))
		{
		    if(GetPVarInt(playerid,"GiveInfoTaxi")) return SCM(playerid, COLOR_GREY, "Вы уже передали информацию, ждите.");
   			new Float:distance = GetPlayerDistanceFromPoint(GetPVarInt(playerid,"Taxi_Duty_Player")-1,GetPVarFloat(GetPVarInt(playerid,"Taxi_Duty_Player")-1,"fX_map"),GetPVarFloat(GetPVarInt(playerid,"Taxi_Duty_Player")-1,"fY_map"),GetPVarFloat(GetPVarInt(playerid,"Taxi_Duty_Player")-1,"fZ_map"));
			format(stringer1, 250,"{ffffff}Расстояние: %.1f км\nСтоимость поездки за 1 км: %i$\n\nПодтвердить?",distance,TransportCompany_FareTaxi);
			ShowPlayerDialog(GetPVarInt(playerid,"Taxi_Duty_Player")-1, 551, DIALOG_STYLE_MSGBOX, "{FF6F00}Такси", stringer1, "Выбрать", "Отмена");
			SCM(playerid, COLOR_WHITE, "Вы передали информацию пассажиру.");
			SetPVarInt(playerid,"GiveInfoTaxi",true);
			return true;
		}
	}
	if(newkeys == KEY_YES)
	{
		if(GetPlayerWeapon(playerid) != 0)
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				if((GetTickCount() - GetPVarInt(playerid,"Floodgun")) <= 2000)
				{
					SendClientMessage(playerid,COLOR_GREY,"Не флудите!");
					return 0;
				}
				if(!IsPlayerConnected(playerid)) return 1;
				SetPVarInt(playerid,"Floodgun",GetTickCount());
				new GunIDEx = GetPlayerWeapon(playerid);
				new GunAmmoEx = GetPlayerAmmo(playerid);
				if(GunIDEx != 0 && GunIDEx != 46 && AGun[playerid][GunIDEx] == false) return OnPlayerCheat(playerid, 12);
				if(GunIDEx == 9 || GunIDEx == 26 || GunIDEx == 16 || GunIDEx == 27 || GunIDEx == 37 || GunIDEx == 38 || GunIDEx == 35 || GunIDEx == 36 || GunIDEx == 39 || GunIDEx == 44 || GunIDEx == 45) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя выбрасывать запрещенное оружие!");
				if(GunIDEx > 0 && GunAmmoEx != 0)
				{
					new f = MAX_GUN_DROP+1;
    				for(new a = 0; a < MAX_GUN_DROP; a++)
					{
						if(g_info[a][Ob_Pos][0] == 0.0)
						{
							f = a;
							break;
						}
					}
					RemovePlayerWeapon(playerid, GunIDEx);	            g_info[f][Ob_Dta][0] = GunIDEx;
					g_info[f][Ob_Dta][1] = GunAmmoEx;
					GetPlayerPos(playerid, g_info[f][Ob_Pos][0], g_info[f][Ob_Pos][1], g_info[f][Ob_Pos][2]);
					g_info[f][obI_jD] = CreateDynamicObject(GunObjects[GunIDEx], g_info[f][Ob_Pos][0], g_info[f][Ob_Pos][1], g_info[f][Ob_Pos][2]-1, 93.7, 120.0, 120.0);
					format(msgs, 160, "{FFFFFF}Оружие: {FF6F00}%s\n{FFFFFF}Выбросил: {FF6F00}%s",nameGun[g_info[f][Ob_Dta][0]], PlayerInfo[playerid][pNames]);
					g_info[f][LabelGun] = CreateDynamic3DTextLabel(msgs, 0x317CDFFF, g_info[f][Ob_Pos][0], g_info[f][Ob_Pos][1], g_info[f][Ob_Pos][2], 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1,-1, 100.0);
					format(msgs, 60, "Вы выбросили {FF6F00}%s", nameGun[g_info[f][Ob_Dta][0]]);
					SendClientMessage(playerid, COLOR_WHITE, msgs);
					MeAction(playerid, "положил оружие на землю");
				}
			}
		}
		if(GetPVarInt(playerid, #job_window))
		{
		    if(OknaGame[playerid] != 1) return OknaGameStart(playerid);
		    OknaGameEnd{playerid}++;
		   	OknaGameStart(playerid);
		}
		if(GetPVarInt(playerid, "ProverkaDice"))
		{
			if(GetPVarInt(playerid, "KostiName") < 999)
			{
				if(!PlayerToPoint(30.0,playerid,1130.7448,-1.4491,1000.6797)) return SCM(playerid, COLOR_WHITE, "Вы должны находиться в казино!");
				new dice = random(12)+1;
				new dice1 = random(12)+1;
				format(stringer, MAX_STR, "%s и %s бросили кости. Результат: {CC9900}%i:%i",PlayerInfo[GetPVarInt(playerid, "KostiName")][pNames],PlayerInfo[playerid][pNames],dice,dice1);
				ProxDetector(5.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
				if(dice > dice1)
				{
					PlayerInfo[GetPVarInt(playerid, "KostiName")][pCash] += GetPVarInt(playerid, "KostiMoney");
					PlayerInfo[playerid][pCash] -= GetPVarInt(playerid, "KostiMoney");
					SCM(GetPVarInt(playerid, "KostiName"), COLOR_GREEN, "Поздравляем, Вы выиграли!");
					SCM(playerid, COLOR_ORANGE, "К сожалению, Вы проиграли!");
					format(stringer, SMALL_SIZE, "~g~+%d$", GetPVarInt(playerid, "KostiMoney"));
					GameTextForPlayer(GetPVarInt(playerid, "KostiName"), stringer, 3000, 1);
					format(stringer, SMALL_SIZE, "~r~-%d$", GetPVarInt(playerid, "KostiMoney"));
					GameTextForPlayer(playerid, stringer, 3000, 1);
					format(stringer,SMALL_SIZE, "Выпало: %i",dice1);
					SetPlayerChatBubble(playerid,stringer,COLOR_ORANGE,30.0,10000);
					format(stringer,SMALL_SIZE, "Выпало: %i",dice);
					SetPlayerChatBubble(GetPVarInt(playerid, "KostiName"),stringer,TEAM_GROVE_COLOR,30.0,10000);
					ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
					SetPlayerAttachedObject(playerid, 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
					ApplyAnimation(GetPVarInt(playerid, "KostiName"),"CARRY","crry_prtial",4.1,1,0,0,1,1);
					SetPlayerAttachedObject(GetPVarInt(playerid, "KostiName"), 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
					SetTimerEx("DiceOff",5000,0,"i",playerid);
					SetPVarInt(playerid, "OpustitRuki", 1);
					SetPVarInt(GetPVarInt(playerid, "KostiName"), "OpustitRuki",1);
					dicetime = gettime() + 5;
					DeletePVar(playerid, "ZapretDice");
					DeletePVar(GetPVarInt(playerid, "KostiName"), "ZapretDice");
					SetPVarInt(playerid, "KostiMoney",0);
					DeletePVar(playerid, "ProverkaDice");
					SetPVarInt(playerid, "KostiName",999);
				}
				if(dice < dice1)
				{
					PlayerInfo[GetPVarInt(playerid, "KostiName")][pCash] -= GetPVarInt(playerid, "KostiMoney");
					PlayerInfo[playerid][pCash] += GetPVarInt(playerid, "KostiMoney");
					SCM(playerid, COLOR_GREEN, "Поздравляем, Вы выиграли!");
					SCM(GetPVarInt(playerid, "KostiName"), COLOR_ORANGE, "К сожалению, Вы проиграли!");
					format(stringer, SMALL_SIZE, "~g~+%d$", GetPVarInt(playerid, "KostiMoney"));
					GameTextForPlayer(playerid, stringer, 3000, 1);
					format(stringer, SMALL_SIZE, "~r~-%d$", GetPVarInt(playerid, "KostiMoney"));
					GameTextForPlayer(GetPVarInt(playerid, "KostiName"), stringer, 3000, 1);
					format(stringer,SMALL_SIZE, "Выпало: %i",dice1);
					SetPlayerChatBubble(playerid,stringer,TEAM_GROVE_COLOR,30.0,10000);
					format(stringer,SMALL_SIZE, "Выпало: %i",dice);
					SetPlayerChatBubble(GetPVarInt(playerid, "KostiName"),stringer,COLOR_ORANGE,30.0,10000);
					ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
					SetPlayerAttachedObject(playerid, 1 , 1851, 1, 0.062397, 0.453746, 0.000000, 0.000000, 94.689308, 0.000000);
					ApplyAnimation(GetPVarInt(playerid, "KostiName"),"CARRY","crry_prtial",4.1,1,0,0,1,1);
					SetPlayerAttachedObject(GetPVarInt(playerid, "KostiName"), 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
					SetTimerEx("DiceOff",5000,0,"i",playerid);
					SetPVarInt(playerid, "OpustitRuki", 1);
					SetPVarInt(GetPVarInt(playerid, "KostiName"), "OpustitRuki",1);
     				dicetime = gettime() + 5;
					DeletePVar(playerid, "ZapretDice");
					DeletePVar(GetPVarInt(playerid, "KostiName"), "ZapretDice");
					DeletePVar(playerid, "KostiMoney");
					DeletePVar(playerid, "ProverkaDice");
					SetPVarInt(playerid, "KostiName",999);
				}
				if(dice == dice1)
				{
					SCM(playerid, COLOR_ORANGE, "Игра закончилась в ничью!");
					SCM(GetPVarInt(playerid, "KostiName"), COLOR_ORANGE, "Игра закончилась в ничью!");
					format(stringer,SMALL_SIZE, "Выпало: %i",dice1);
					SetPlayerChatBubble(playerid,stringer,COLOR_LIGHTBLUE,30.0,10000);
					format(stringer,SMALL_SIZE, "Выпало: %i",dice);
					SetPlayerChatBubble(GetPVarInt(playerid, "KostiName"),stringer,COLOR_LIGHTBLUE,30.0,10000);
					ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,1,0,0,1,1);
					SetPlayerAttachedObject(playerid, 1 , 1851, 1, 0.062397, 0.453746, 0.000000, 0.000000, 94.689308, 0.000000);
					ApplyAnimation(GetPVarInt(playerid, "KostiName"),"CARRY","crry_prtial",4.1,1,0,0,1,1);
					SetPlayerAttachedObject(GetPVarInt(playerid, "KostiName"), 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
					SetTimerEx("DiceOff",5000,0,"i",playerid);
					SetPVarInt(playerid, "OpustitRuki", 1);
					SetPVarInt(GetPVarInt(playerid, "KostiName"), "OpustitRuki",1);
					dicetime = gettime() + 5;
					DeletePVar(playerid, "ZapretDice");
					DeletePVar(GetPVarInt(playerid, "KostiName"), "ZapretDice");
					DeletePVar(playerid, "KostiMoney");
					DeletePVar(playerid, "ProverkaDice");
					SetPVarInt(playerid, "KostiName",999);
				}
			}
		}
	}
	else if(newkeys == KEY_NO)
	{
	    if(GetPVarInt(playerid, #job_window))
		{
		    if(OknaGame[playerid] != 0) return OknaGameStart(playerid);
	        OknaGameEnd{playerid}++;
	        OknaGameStart(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid,5.0,-28.3916,-185.1342,1003.5469) && BizEnter{playerid} != 255)
		{
			format(stringer,350,"Телефонный номер [%d $]\nАптечки в дом [%d $]\nФотоаппарат [%d $]\nЦветы [%d $]\nМаска [%d $]\nАптечка [%d $]\nМагнитофон [%d $]\nСигареты [150 $]\nЗажигалка [100 $]",BizInfo[BizEnter{playerid}][bCena][0],
			BizInfo[BizEnter{playerid}][bCena][1],BizInfo[BizEnter{playerid}][bCena][2],BizInfo[BizEnter{playerid}][bCena][3],BizInfo[BizEnter{playerid}][bCena][4],BizInfo[BizEnter{playerid}][bCena][5],BizInfo[BizEnter{playerid}][bCena][6]);
			SPD(playerid, 69, 2, "{FF6F00}Магазин 24/7", stringer, "Купить", "Отмена");
		}
		if((IsPlayerInRangeOfPoint(playerid,5.0,377.4127,-67.8296,1001.5151) || IsPlayerInRangeOfPoint(playerid,5.0,450.4566,-83.9682,999.5547)) && BizEnter{playerid} != 255)
		{
			format(stringer,350,"Бургер [%d $]\nРыбный суп [%d $]\nБольшой бургер [%d $]\nКотлеты [%d $]\nПельмени [%d $]\nГамбургер [%d $]\nШашлык [%d $]\nСосиска в тесте [%d $]\nХотДог [%d $]",BizInfo[BizEnter{playerid}][bCena][0],BizInfo[BizEnter{playerid}][bCena][1],
			BizInfo[BizEnter{playerid}][bCena][2],BizInfo[BizEnter{playerid}][bCena][3],BizInfo[BizEnter{playerid}][bCena][4],BizInfo[BizEnter{playerid}][bCena][5],BizInfo[BizEnter{playerid}][bCena][6],BizInfo[BizEnter{playerid}][bCena][7],BizInfo[BizEnter{playerid}][bCena][8]);
			SPD(playerid, 68, 2, "{FF6F00}Столовая", stringer, "Купить", "Отмена");
		}
		if((IsPlayerInRangeOfPoint(playerid,5.0,-224.7808,1404.8208,27.7734) || IsPlayerInRangeOfPoint(playerid,5.0,1215.7865,-13.3533,1000.9219) || IsPlayerInRangeOfPoint(playerid,5.0,-2653.9016,1407.3019,906.2734) || IsPlayerInRangeOfPoint(playerid,5.0,498.3263,-18.9214,1000.67194) || IsPlayerInRangeOfPoint(playerid,5.0,497.8108,-75.7788,998.7578)) && BizEnter{playerid} != 255)
		{
			format(stringer,350,"Вода [%d $]\nСода [%d $]\nCoca-Cola [%d $]\nПиво [%d $]\nВино [%d $]\nАбсент [%d $]\nВиски [%d $]\nВодка [%d $]\nКоньяк [%d $]",BizInfo[BizEnter{playerid}][bCena][0],BizInfo[BizEnter{playerid}][bCena][1],BizInfo[BizEnter{playerid}][bCena][2],BizInfo[BizEnter{playerid}][bCena][3],
			BizInfo[BizEnter{playerid}][bCena][4],BizInfo[BizEnter{playerid}][bCena][5],BizInfo[BizEnter{playerid}][bCena][6],BizInfo[BizEnter{playerid}][bCena][7],BizInfo[BizEnter{playerid}][bCena][8]);
			SPD(playerid, 67, 2, "{FF6F00}Бар", stringer, "Купить", "Отмена");
		}
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
	    	for(new a = 0; a < MAX_GUN_DROP; a++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 1.5, g_info[a][Ob_Pos][0], g_info[a][Ob_Pos][1], g_info[a][Ob_Pos][2]))
				{
					if((GetTickCount() - GetPVarInt(playerid,"Floodgun")) <= 2000)
					{
						SendClientMessage(playerid,COLOR_GREY,"Не флудите!");
						return 0;
					}
					SetPVarInt(playerid,"Floodgun",GetTickCount());
					DestroyDynamicObject(g_info[a][obI_jD]);
					GivePlayerWeaponAC(playerid, g_info[a][Ob_Dta][0], g_info[a][Ob_Dta][1]);
					g_info[a][Ob_Dta][1] = 0;
					g_info[a][Ob_Pos][0] = 0.0;
					g_info[a][Ob_Pos][1] = 0.0;
					g_info[a][Ob_Pos][2] = 0.0;
					g_info[a][obI_jD] = -1;
					DestroyDynamic3DTextLabel(g_info[a][LabelGun]);
					format(msgs, 60, "Вы подобрали {FF6F00}%s", nameGun[g_info[a][Ob_Dta][0]]);
					SendClientMessage(playerid, COLOR_WHITE, msgs);
					g_info[a][Ob_Dta][0] = 0;
				}
			}
		}
	}
	if(newkeys == KEY_NO)
	{
		if(GetPVarInt(playerid, "ProverkaDice") == 1)
		{
			if(GetPVarInt(playerid, "KostiName") < 999)
			{
				SetPVarInt(playerid, "KostiName",999);
				DeletePVar(playerid, "KostiMoney");
				DeletePVar(playerid, "ProverkaDice");
				SCM(playerid, -1,"- Вы отказались от предложения");
				SCM(GetPVarInt(playerid, "KostiName"),-1,"- Игрок отказался от предложения");
			}
		}
	}
	if(newkeys == 262144) {
	    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER && GetPVarInt(playerid, "dialog_Inv") < gettime()) ShowPlayerInventory(playerid), SetPVarInt(playerid, "dialog_Inv", gettime()+7);
	}
	if(newkeys == 2)
	{
		for(new i = 1; i < MAX_HOTEL; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid,  10.0, 1165.4014,-1074.0515,1002.8329) && GetPlayerVirtualWorld(playerid) == i+50)
			{
				if(GetPlayerState(playerid) == 2)
				{
					SetVehiclePos(GetPlayerVehicleID(playerid),604.9717,-1494.0067,14.6772);
					PutPlayerInVeh(playerid,GetPlayerVehicleID(playerid),0);
					SetVehicleZAngle(GetPlayerVehicleID(playerid), 270.2349);
					SetCameraBehindPlayer(playerid);
					LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetVehicleVirtualWorld(caridhouse[playerid], 0);
				}
			}
		}
		for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if(IsPlayerInRangeOfPoint(playerid,  10.0, 2485.8252,-2558.3596,2501.0859) && GetPlayerVirtualWorld(playerid) == i+50)
			{
				if(GetPlayerState(playerid) == 2)
				{
					SetVehiclePos(GetPlayerVehicleID(playerid),HouseInfo[i][hCar][0], HouseInfo[i][hCar][1], HouseInfo[i][hCar][2]);
					PutPlayerInVeh(playerid,GetPlayerVehicleID(playerid),0);
					SetVehicleZAngle(GetPlayerVehicleID(playerid), HouseInfo[i][hCar][3]);
					SetCameraBehindPlayer(playerid);
					LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
				}
			}
		}
		if(PlayerToPoint(10.0,playerid,1544.6689453,-1630.8129883,13.0000000))
		{
			if(PlayerInfo[playerid][pMRInections] == 1 || PlayerInfo[playerid][pLRInections] == 1)
			{
				if(lspdgate2[playerid] > 0) return SCM(playerid,COLOR_GRAD1,"Шлакбаум уже открыт.");
				MoveObject(lspdgate,1544.69921875,-1630.7998046875,13.10000038147+0.05,0.05,0.0000,5.00000000,90.00000000);
				lspdgate2[playerid] = 7;
				SCM(playerid,COLOR_GRAD1,"Шлакбаум закроется через 7 секунд!");
				return 1;
			}
		}
		if(PlayerToPoint(10.0,playerid,-1572.1810303,658.8629761,6.7500000))
		{
			if(PlayerInfo[playerid][pMRInections] == 10 || PlayerInfo[playerid][pLRInections] == 10)
			{
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY,"Вы не в автомобиле");
				if(sfpdgates[0][playerid] > 0) return SCM(playerid,COLOR_GRAD1,"Шлакбаум уже открыт.");
				MoveObject(sfpdgate[0],-1572.1810303,658.8629761,6.7500000+0.05,0.05,0.0000000,0.0000000,270.0000000);
				sfpdgates[0][playerid] = 7;
				SCM(playerid,COLOR_GRAD1,"Шлакбаум закроется через 7 секунд!");
				return 1;
			}
		}
		if(PlayerToPoint(10.0,playerid,-1701.4489746,687.6469727,24.6130009))
		{
			if(PlayerInfo[playerid][pMRInections] == 10 || PlayerInfo[playerid][pLRInections] == 10)
			{
				if(sfpdgates[1][playerid] > 0) return SCM(playerid,COLOR_GRAD1,"Шлакбаум уже открыт.");
				MoveObject(sfpdgate[1],-1701.4289551,687.5770264,24.5000000+0.05,0.05,0.0000000,0.0000000,90.0000000);
				sfpdgates[1][playerid] = 7;
				SCM(playerid,COLOR_GRAD1,"Шлакбаум закроется через 7 секунд!");
				return 1;
			}
		}
		if(PlayerToPoint(10.0,playerid,2238.1850586,2450.5600586,10.5349998))
		{
			if(PlayerInfo[playerid][pMRInections] == 21 || PlayerInfo[playerid][pLRInections] == 21)
			{
				if(lvpdgates[1][playerid] > 0) return SCM(playerid,COLOR_GRAD1,"Шлакбаум уже открыт.");
				MoveObject(lvpdgate[1],2238.1850586,2450.5600586,10.5349998+0.05,0.05,0.0000000,0.0000000,270.0000000);
				lvpdgates[1][playerid] = 7;
				SCM(playerid,COLOR_GRAD1,"Шлакбаум закроется через 7 секунд!");
				return 1;
			}
		}
		if(PlayerToPoint(10.0,playerid,-1530.0350342,482.5390015,7.8540001))
		{
			if(PlayerInfo[playerid][pMRInections] == 3 || PlayerInfo[playerid][pLRInections] == 3 || PlayerInfo[playerid][pMRInections] == 19 || PlayerInfo[playerid][pLRInections] == 19 || PlayerInfo[playerid][pMRInections] == 27 || PlayerInfo[playerid][pLRInections] == 27)
			{
				if(armygates[1][playerid] > 0) return SCM(playerid,COLOR_GRAD1,"Ворота уже открыты.");
				MoveObject(armygate[1],-1530.0350342,482.5390015,0.8540001, 1.2);
				armygates[1][playerid] = 7;
				SCM(playerid,COLOR_GRAD1,"Ворота закроются через 7 секунд!");
				return 1;
			}
		}
		if(PlayerToPoint(10.0,playerid,135.10,1940.86,21.09))
		{
			if(PlayerInfo[playerid][pMRInections] == 3 || PlayerInfo[playerid][pLRInections] == 3 || PlayerInfo[playerid][pMRInections] == 19 || PlayerInfo[playerid][pLRInections] == 19 || PlayerInfo[playerid][pMRInections] == 27 || PlayerInfo[playerid][pLRInections] == 27)
			{
				if(armygates[0][playerid] > 0) return SCM(playerid,COLOR_GRAD1,"Ворота уже открыты.");
				MoveObject(armygate[0],135.10,1940.86,14.09, 1.2);
				armygates[0][playerid] = 7;
				SCM(playerid,COLOR_GRAD1,"Ворота закроются через 7 секунд!");
				return 1;
			}
		}
		if(PlayerToPoint(10.0,playerid,345.11, 1797.59, 20.00))
		{
			if(PlayerInfo[playerid][pMRInections] == 3 || PlayerInfo[playerid][pLRInections] == 3 || PlayerInfo[playerid][pMRInections] == 19 || PlayerInfo[playerid][pLRInections] == 19 || PlayerInfo[playerid][pMRInections] == 27 || PlayerInfo[playerid][pLRInections] == 27 || keysvorota{playerid} == true)
			{
				if(armygates[2][playerid] > 0) return SCM(playerid,COLOR_GRAD1,"Ворота уже открыты.");
				MoveObject(armygate[2],345.11,1797.59,13.00, 1.2);
				armygates[2][playerid] = 7;
				SCM(playerid,COLOR_GRAD1,"Ворота закроются через 7 секунд!");
				return 1;
			}
		}
		if(PlayerToPoint(10.0,playerid,2335.1560059,2443.7409668,7.0000000))
		{
			if(PlayerInfo[playerid][pMRInections] == 21 || PlayerInfo[playerid][pLRInections] == 21)
			{
				if(lvpdgates[0][playerid] > 0) return SCM(playerid,COLOR_GRAD1,"Ворота уже открыты.");
				MoveObject(lvpdgate[0],2335.1560059,2443.7409668,0.0000000, 1.2);
				lvpdgates[0][playerid] = 7;
				SCM(playerid,COLOR_GRAD1,"Ворота закроются через 7 секунд!");
				return 1;
			}
		}
		if(PlayerToPoint(10.0,playerid,1126.0670,-1701.5974,13.6528))
		{
			if(PlayerInfo[playerid][pMRInections] == 2 || PlayerInfo[playerid][pLRInections] == 2)
			{
				if(fbigate2[playerid] > 0) return SCM(playerid,COLOR_GRAD1,"Ворота уже открыты.");
				MoveObject(fbigate,1116.77656, -1701.98438, 14.31931598, 3.0);
				fbigate2[playerid] = 10;
				SCM(playerid,COLOR_GRAD1,"Ворота закроются через 10 секунд!");
				return 1;
			}
		}
		if(PlayerToPoint(10.0,playerid,-2053.2219238,-102.4700012,35.9290009))
		{
			if(PlayerInfo[playerid][pMRInections] == 11 || PlayerInfo[playerid][pLRInections] == 11)
			{
				if(lvpdgates[2][playerid] > 0) return SCM(playerid,COLOR_GRAD1,"Ворота уже открыты.");
				MoveObject(autogate,-2053.2219238,-102.4700012,28.9290009, 2.0);
				lvpdgates[2][playerid] = 7;
				SCM(playerid,COLOR_GRAD1,"Ворота закроются через 7 секунд!");
				return 1;
			}
		}
		if(PlayerToPoint(10.0,playerid,-2278.3257,2395.6650,4.9141))
		{
			if(PlayerInfo[playerid][pMRInections] == 3 || PlayerInfo[playerid][pLRInections] == 3 || PlayerInfo[playerid][pMRInections] == 19 || PlayerInfo[playerid][pLRInections] == 19 || PlayerInfo[playerid][pMRInections] == 27 || PlayerInfo[playerid][pLRInections] == 27)
			{
				if(vmfgates[1][playerid] > 0) return SCM(playerid,COLOR_GRAD1,"Ворота уже открыты.");
				MoveObject(vmfgate[0],-2281.9990234375,2391.2160644531,5.0999999046326, 2.0);
				vmfgates[1][playerid] = 7;
				SCM(playerid,COLOR_GRAD1,"Ворота закроются через 7 секунд!");
				return 1;
			}
		}
		if(PlayerToPoint(10.0,playerid,-2297.5771,2369.4287,4.9141))
		{
			if(PlayerInfo[playerid][pMRInections] == 3 || PlayerInfo[playerid][pLRInections] == 3 || PlayerInfo[playerid][pMRInections] == 19 || PlayerInfo[playerid][pLRInections] == 19 || PlayerInfo[playerid][pMRInections] == 27 || PlayerInfo[playerid][pLRInections] == 27)
			{
				if(vmfgates[0][playerid] > 0) return SCM(playerid,COLOR_GRAD1,"Ворота уже открыты.");
				MoveObject(vmfgate[1],-2291.1040039063,2378.8159179688,7.1999998092651, 2.0);
				vmfgates[0][playerid] = 7;
				SCM(playerid,COLOR_GRAD1,"Ворота закроются через 7 секунд!");
				return 1;
			}
		}
		if(PlayerToPoint(10.0,playerid,1185.7998,-1342,13.3))
		{
			if(IsPlayerInAnyVehicle(playerid) && newkeys == 2)
			{
				if(PlayerInfo[playerid][pMRInections] == 4)
				{
					if(MSH[0][playerid]> 0) return SCM(playerid, COLOR_GREY, "Ворота уже открыты");
					MoveObject (medshlag[0], 1185.7998,-1342,13.3+0.004, 0.004,0,20,90);
					MSH[0][playerid] = 10;
					SCM(playerid, COLOR_GRAD1, "Ворота закроются через 10 секунд!");
				}
			}
		}
		if(PlayerInfo[playerid][pMRInections] == 4 || PlayerInfo[playerid][pLRInections] == 4)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerToPoint(3.0,playerid,1177.8132,-1308.6379,14.0309))
				{
					if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, -2501.9170,524.2781,491.5463);
						SetVehicleZAngle(tmpcar, 273.4404);
					}
				}
				else if(PlayerToPoint(3.0,playerid,-2500.6748,534.4558,491.7077))
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1177.6068,-1338.8422,14.0904);
					SetVehicleZAngle(tmpcar, 269.4621);
					return 1;
				}
			}
		}
		if(PlayerToPoint(10.0,playerid,1185.7002,-1305.40039,13.3))
		{
			if(IsPlayerInAnyVehicle(playerid) && newkeys == 2)
			{
				if(PlayerInfo[playerid][pMRInections] == 4)
				{
					if(MSH[1][playerid] > 0) return SCM(playerid, COLOR_GREY, "Ворота уже открыты");
					MoveObject (medshlag[1], 1185.7002,-1305.40039,13.3+0.004, 0.004,0,339.998,90);
					MSH[1][playerid] = 10;
					SCM(playerid, COLOR_GRAD1, "Ворота открыты , они закроются через 10 секунд.");
				}
			}
		}
	}
	if(newkeys & 128)
	{
	    if(IsPlayerInRangeOfPoint(playerid,200,2290.0781,-931.9880,30.0904))
	    {
	        if(GetPVarInt(playerid,"hand")) return true;
	        if(IsPlayerInRangeOfPoint(playerid,8,2290.0781,-931.9880,30.0904)
			|| IsPlayerInRangeOfPoint(playerid,8,2279.2209,-933.6857,28.7694)
			|| IsPlayerInRangeOfPoint(playerid,8,2285.1550,-949.7159,30.2480)
			|| IsPlayerInRangeOfPoint(playerid,8,2289.6580,-965.1357,30.5411)
			|| IsPlayerInRangeOfPoint(playerid,8,2287.0684,-982.4492,32.9638))
			{
		        if(!Player_Job_Waxta{playerid}) return SendClientMessage(playerid, COLOR_GREY, "Вы не переоделись в рабочую одежду.");
		        ApplyAnimation(playerid,"BASEBALL","Bat_4",4.1,1,1,1,1,1);
		        SetPVarInt(playerid,"hand",true);
		        SetTimerEx("hand",15000,false,"i",playerid);
		        return true;
			}
	    }
	}
	if((newkeys & KEY_FIRE) || ((newkeys & 128) && (oldkeys & 128) && (newkeys & KEY_SECONDARY_ATTACK) ) || newkeys & KEY_FIRE || (newkeys & KEY_SPRINT && newkeys & KEY_SECONDARY_ATTACK) || (newkeys & 128) || (newkeys & KEY_SPRINT && newkeys & KEY_FIRE ))
	{
		if(PlayerToPoint(20.0,playerid,815.8962,-1346.3770,13.5296))
		{
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0,1);
			return 1;
		}
		if(PlayerToPoint(40.0,playerid,305.4001,1885.9868,904.3759))
		{
			if(IsACop(playerid) || IsAArm(playerid) || IsAGang(playerid) || PlayerInfo[playerid][pMRInections] == 7 || PlayerInfo[playerid][pMRInections] == 28) return 1;
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0,1);
			return 1;
		}
		if(PlayerToPoint(40.0,playerid,2693.6914,-1702.2168,11.1259))
		{
			if(IsAGang(playerid)) return 1;
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			ApplyAnimation(playerid, "PED","fucku",4.0,0,0,0,0,0,1);
			return 1;
		}
		if(AntiDMZone(playerid))
		{
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			ApplyAnimation(playerid, "PED","fucku",4.0,0,0,0,0,0,1);
			return 1;
		}
	}
	if(newkeys == 128 || newkeys == 16)
	{
		if(GetPlayerCameraMode(playerid) == 184) return KickEx(playerid,25);
	}
	if(newkeys == 128) SetPVarInt(playerid,"newkeys_128",gettime()+2);
	if(newkeys == KEY_WALK)
	{
		if(IsPlayerInRangeOfPoint(playerid,5.0,1111.2699,-1797.0839,16.5938))
		{
		    if(PlayerInfo[playerid][pJob] != 4) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не работаете водителем такси.");
		    if(TaxiDuty{playerid}) TaxiDuty{playerid} = false, SCM(playerid, COLOR_YELLOW2, "Вы закончили свой рабочий день.");
		    else TaxiDuty{playerid} = true, SCM(playerid, COLOR_YELLOW2, "Вы переоделись в водителя такси");
		}
		if(GetPVarInt( playerid, "Intropic" ) != 0 )
		{
   			if(GetPVarInt(playerid, "domkolesa") > gettime()) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя так часто входить и выходить из дома, попробуйте снова через 5 секунд.");
			new Float:X, Float:Y, Float:Z;
			GetVehiclePos(GetPVarInt( playerid, "Intropic" ), X, Y, Z);
			SetPlayerPosEx(playerid, X+3, Y+1, Z);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid, 0);
			DeletePVar(playerid, "Intropic");
		}
		if(IsPlayerInRangeOfPoint(playerid,2.0,-2653.8198,641.1459,3014.4548))
		{
		    if(PlayerInfo[playerid][pHealthPlayer] < 80.0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не можете выйти из больницы пока не вылечитесь!");
		    pTemp[playerid][pInHospital] = false;
			if(PlayerInfo[playerid][pHospital]) PlayerInfo[playerid][pHospital] = 0;
			SetPlayerPosEx(playerid,1177.1721,-1323.3220,14.0576);
			SetPlayerFacingAngle(playerid, 270);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}
		if(IsPlayerInRangeOfPoint(playerid,2.0,-2634.0007,649.4626,3008.6758) && PlayerInfo[playerid][pMRInections] == 4)
		{
			SetPlayerPosEx(playerid,-2457.1323,517.8947,492.1730);
			SetPlayerFacingAngle(playerid, 178.3528);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			pTemp[playerid][pInHospital] = false;
		}
		if(IsPlayerInRangeOfPoint(playerid,3.0,-2457.1323,517.8947,492.1730) && PlayerInfo[playerid][pMRInections] == 4)
		{
			TogglePlayerControllable(playerid, false);
			SetTimerEx("UnFreez", 3000, 0, "d", playerid);
			SetPlayerPosEx(playerid,-2633.9351,644.9452,3010.4805);
			SetPlayerFacingAngle(playerid, 178.3294);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			pTemp[playerid][pInHospital] = true;
		}
		if(BizEnter{playerid} != 255 )
		{
			if(IsPlayerInRangeOfPoint(playerid, 4.0, BizInfo[BizEnter{playerid}][ExitX], BizInfo[BizEnter{playerid}][ExitY], BizInfo[BizEnter{playerid}][ExitZ])) SPD(playerid,66,0,"{FF6F00}Выход","{FFFFFF}Внимание!\nВы точно хотите покинуть помещение?", "Да", "Нет");
		}
		if(IsPlayerInRangeOfPoint(playerid,2.0,2094.4832,-631.7184,63.7913))
		{
			if(!Player_Job_Waxta{playerid}) ShowPlayerDialog(playerid,8743,DIALOG_STYLE_MSGBOX,"{FF6F00}Работа на шахте","{FFFFFF}Вы действительно хотите начать работу на шахте?","Начать","Отмена");
			else ShowPlayerDialog(playerid,8743,DIALOG_STYLE_MSGBOX,"{FF6F00}Работа на шахте","{FFFFFF}Вы действительно хотите закончить работу на шахте?","Закончить","Отмена");
		}
		if(!IsPlayerInAnyVehicle(playerid))
		{
			if(IsABankomat(playerid))
			{
				if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
				ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
				SPD(playerid, 8900, DIALOG_STYLE_LIST, "{FF6F00}Терминал приёма платежей", "» Снять наличные\n» Баланс\n» Домашний счёт\n» Оплата комнаты в отеле\n» Оплата бизнеса", "Далее", "Выход");
				return 1;
			}
		}
		if(PlayerToPoint(1.0,playerid,1409.2363,1320.1711,1501.0840) || PlayerToPoint(1.0,playerid,1407.3414,1320.1711,1501.0840) || PlayerToPoint(1.0,playerid,1402.9962,1320.1710,1501.0840) || PlayerToPoint(1.0,playerid,1401.1169,1320.1708,1501.0859))
		{
			if(GetPVarInt(playerid,"bankmenu")) return 1;
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
			ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
			for(new bank; bank < 24; bank++) TextDrawShowForPlayer(playerid, bankmenu[bank]);
			SelectTextDraw(playerid, 0xBDBDBDFF);
			SetPVarInt(playerid,"bankmenu",1);
			return 1;
		}
		if(GetPVarInt(playerid, "SMOKE") > gettime())
		{
		    new string[50];
		    if(GetPVarInt(playerid, "ZatJ") > gettime()) return 1;
		    SetPVarInt(playerid, "ZatJ", gettime()+10);
		    ApplyAnimation(playerid,"GANGS","smkcig_prtl",4.1,0,1,1,1,1,1);
		    SetTimerEx("ClearAnimText", 8000, false, "d", playerid);
		    format(string, sizeof(string), "%s затянул(а) сигарету", PlayerInfo[playerid][pNames]);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
			return 1;
		}
	}
	if(newkeys == KEY_WALK)
	{
		for(new i = 1; i < MAX_HOTEL; i++)
		{
			if(PlayerToPoint(2, playerid, HotelInfo[i][mExit][0], HotelInfo[i][mExit][1], HotelInfo[i][mExit][2]) && GetPlayerVirtualWorld(playerid) == HotelInfo[i][mVW]) { SPD(playerid, 889, DIALOG_STYLE_MSGBOX, "{FF6F00}Выход:","{FFFFFF}Выберите место, куда Вы хотите выйти:", "Отель", "Гараж"); }
			if(PlayerToPoint(3.0, playerid, 1177.3361,-1081.6122,1002.8329) && GetPlayerVirtualWorld(playerid) == i+50)
			{
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerInterior(playerid, 2);
				SetPlayerVirtualWorld(playerid, HotelInfo[i][mVirt]);
				SetPlayerPosEx(playerid, HotelInfo[i][mEnter][0], HotelInfo[i][mEnter][1], HotelInfo[i][mEnter][2]);
			}
		}
	}
	if(newkeys == KEY_WALK)
	{
		for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if(IsPlayerInRangeOfPoint(playerid,  3.0, 2495.5120,-2565.7524,2501.0859) && GetPlayerVirtualWorld(playerid) == i+50)
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				SetPlayerPosEx(playerid,HouseInfo[i][hEnter][0], HouseInfo[i][hEnter][1], HouseInfo[i][hEnter][2]);
				RemovePlayerWeapon(playerid, 41);
			}
			if(HouseInfo[i][hGarage] == 1)
			{
				if (PlayerToPoint(2, playerid,HouseInfo[i][hExit][0],HouseInfo[i][hExit][1],HouseInfo[i][hExit][2]) &&GetPlayerVirtualWorld(playerid) == i+50 ) SPD(playerid,70,DIALOG_STYLE_MSGBOX, "{FF6F00}Выход:","{FFFFFF}Выберите место, куда вы хотите выйти:", "Улица", "Гараж");
			}
			else {
				if (PlayerToPoint(2, playerid,HouseInfo[i][hExit][0],HouseInfo[i][hExit][1],HouseInfo[i][hExit][2]) && GetPlayerVirtualWorld(playerid) == i+50)
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPosEx(playerid,HouseInfo[i][hEnter][0],HouseInfo[i][hEnter][1],HouseInfo[i][hEnter][2]);
					PlayerInfo[playerid][pInt] = 0;
					PlayerInfo[playerid][pLocal] = 255;
				}
			}
		}
	}
	if(newkeys == KEY_WALK)
	{
		for(new hotel = 1; hotel < MAX_HOTEL; hotel ++)
		{
			if(PlayerToPoint(1, playerid, HotelInfo[hotel][mEnter][0], HotelInfo[hotel][mEnter][1], HotelInfo[hotel][mEnter][2]))
			{
				if(HotelInfo[hotel][mOwner] == 1)
				{
					new hotels[20];
					if(IsPlayerConnected(GetPlayerID(HotelInfo[hotel][mOwned]))) { hotels = "{22ff00}В игре"; }
					else if(!IsPlayerConnected(GetPlayerID(HotelInfo[hotel][mOwned]))) { hotels = "{ff0000}Не в игре"; }
					format(stringer, 230, "{FFFFFF}Владелец: {FF6F00}%s {FFFFFF}(%s{FFFFFF})\n\n{FFFFFF}Номер комнаты: {FF6F00}%d\n\n{FFFFFF}Личное авто: {FF6F00}%s{FFFFFF}\nСостояние комнаты: %s", HotelInfo[hotel][mOwned], hotels, hotel, VehicleNames[HotelInfo[hotel][mCar]-400], (HotelInfo[hotel][mLock] ? ("{FF0000}Закрыта") : ("{FF6F00}Открыта")));
					SPD(playerid, 10001, DIALOG_STYLE_MSGBOX, "{FF6F00}Комната занята", stringer, "Войти","Отмена");
					return 1;
				}
				else
				{
					format(stringer, 150, "{FFFFFF}Добро пожаловать в отель.\n\nНомер комнаты: {FF6F00}%d{FFFFFF}\nЦена комнаты: {FF6F00}100.000 $", hotel);
					SPD(playerid, 10002, DIALOG_STYLE_MSGBOX, "{FF6F00}Комната свободна", stringer, "Купить", "Отмена");
					return 1;
				}
			}
		}
	}
	if(newkeys == KEY_WALK)
	{
		for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(PlayerToPoint(1, playerid, HouseInfo[h][hEnter][0], HouseInfo[h][hEnter][1], HouseInfo[h][hEnter][2]))
			{
			    new hk [ 24 ];
			    switch(HouseInfo[h][hKlass])
			    {
			        case 0: hk = "Эконом";
			        case 1: hk = "Де-Люкс";
			        case 2: hk = "Люкс";
			        case 3: hk = "Премиум";
			        case 4: hk = "Бизнес";
			        case 5: hk = "Элитный";
			        default: hk = "Эконом";
			    }
			    switch(HouseInfo[h][hOwned])
			    {
		 			case 1:
		 			{
						format(stringer, BIG_SIZE, "{FFFFFF}Номер дома: {"#cGREEN"}%d{FFFFFF}\nВладелец: {"#cGREEN"}%s {FFFFFF}\nКласс: {"#cGREEN"}%s{FFFFFF}\nГос.Цена: {"#cGREEN"}$%d\n{FFFFFF}Гараж: {"#cGREEN"}%s",h,HouseInfo[h][hOwner],hk,HouseInfo[h][hValue],(HouseInfo[h][hGarage]?("Есть"):("Отсутствует")));
						ShowPlayerDialog(playerid,10075,DIALOG_STYLE_MSGBOX,"{FFDD73}Частный дом",stringer,"Вход","Отмена");
						return 1;
		  			}
		  			case 0:
		  			{
						format(stringer, BIG_SIZE, "{FFFFFF}Гос.Цена: {"#cGREEN"}$%d{FFFFFF}\nКласс: {"#cGREEN"}%s{FFFFFF}\nНомер дома: {"#cGREEN"}%d\n{FFFFFF}Гараж: {"#cGREEN"}%s",HouseInfo[h][hValue],hk,h,(HouseInfo[h][hGarage]?("Есть"):("Отсутствует")));
						ShowPlayerDialog(playerid,10026,DIALOG_STYLE_MSGBOX,"{FFDD73}Частный дом",stringer,"Приобрести","Отмена");
						return 1;
					}
				}
			}
		}
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_JUMP)
	{
		if(!IsPlayerInAnyVehicle(playerid)) { if(times[playerid] == true) SetTimerEx("AntiBG", 1000, 0, "d", playerid);}
	}
	if(newkeys == KEY_CROUCH)
	{
		if(PlayerToPoint(10.0,playerid,2852.82348633,2186.05371094,5.02263880))
		{
			if(PlayerInfo[playerid][pMRInections] == 25 || PlayerInfo[playerid][pLRInections] == 25)
			{
				if(SwatDoor[playerid] > 0) return SCM(playerid,COLOR_GREY,"Ворота уже открыты.");
				MoveObject(gatevorota,2852.82348633,2186.05371094,5.02263880, 3.0);
				SwatDoor[playerid] = 10;
				SCM(playerid,COLOR_GREY,"Ворота закроются в течение 10 секунд!");
				return 1;
			}
			SCM(playerid,COLOR_GREY,"У вас нету пропуска!");
		}
		if(PlayerInfo[playerid][pMRInections] == 19 || PlayerInfo[playerid][pLRInections] == 19)//сигнал
		{
			if(IsPlayerConnected(playerid))
			{
				if(PlayerToPoint(8.0,playerid,290.2172,1822.6295,17.6406))
				{
					if (GetPlayerState(playerid) == 2)
					{
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 433) return SCM(playerid,COLOR_GREY,"Попробуйте в объезд!");
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 282.0428, 1822.5503, 17.6406);
					}
				}
				else if(PlayerToPoint(8.0,playerid,282.0428,1822.5503,17.6406))
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 433) return SCM(playerid,COLOR_GREY,"Попробуйте в объезд!");
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 290.2172,1822.6295,17.6406);
					return 1;
				}
			}
		}
	}
	else if (newkeys == KEY_SUBMISSION) cmd::eng(playerid);
	if(newkeys == KEY_WALK)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			if(GetPVarInt(playerid, "PLAYERANIM"))
			{
				ClearAnimations(playerid, 1);
				SetPlayerSpecialAction(playerid,0);
				for(new i; i< 3; i++) TextDrawHideForPlayer(playerid, ANIMATION[i]);
				DeletePVar(playerid, "PLAYERANIM");
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
			}
		}
	}
	if(newkeys & KEY_SPRINT)
	{
		if(GetPVarInt(playerid, #pFilling) && !GetPVarInt(playerid, #pFillingStarting))
		{
		    new fillingid = GetPVarInt(playerid, #pFillingID);
		    if(!PlayerToPoint(10.0, playerid, SBizzInfo[fillingid][sEntranceX], SBizzInfo[fillingid][sEntranceY], SBizzInfo[fillingid][sEntranceZ])) return true;
		    new vehicleid = GetPlayerVehicleID(playerid);
			new Float:benz = 300.0 - VehInfo[vehicleid][vFuel];
			new cenabenz = SBizzInfo[fillingid][sPrice]*floatround(benz);
			if(PlayerInfo[playerid][pCash] < cenabenz) return SCMF(playerid,COLOR_GREY,"У вас не хватает денег. Нужно %d вирт",cenabenz);
			PlayerInfo[playerid][pCash] -= cenabenz;
			SBizzInfo[fillingid][sTill] += cenabenz;
			SBizzInfo[fillingid][sBenz] -= floatround(benz);
			format(stringer1,300, "{FFFFFF}Заправочная станция: {FFC873}№%i{FFFFFF}\nНазвание заправки: {FFC873}%s{FFFFFF}\nВладелец: {00C90D}%s{FFFFFF}\nБензина в скважине: {FFC873}%i литров{FFFFFF}\nЦена за 1 литр: {FFC873}$%d{FFFFFF}\n\n{00C90D}Заправка работает{FFFFFF}",SBizzInfo[fillingid][sID],SBizzInfo[fillingid][sMessage],SBizzInfo[fillingid][sOwner],SBizzInfo[fillingid][sBenz],SBizzInfo[fillingid][sPriceBenz]);
			Update3DTextLabelText(SBizzInfo[fillingid][sLabel], TEAM_GROVE_COLOR, stringer1);
			SCM(playerid, COLOR_GREEN, "Заправка началась, пожалуйста подождите!");
			TogglePlayerControllable(playerid,false);
			SetPVarInt(playerid, #pFillingStarting, 1);
			MeAction(playerid, "вставил(а) в бак шланг");
			MeAction(playerid, "заправляет автомобиль");
		}
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_JUMP)
	{
		if(IsAGang(playerid))
		{
			if(GetPVarInt(playerid, "usemats"))
			{
				RemovePlayerAttachedObject(playerid,1);
				SCM(playerid,COLOR_RED,"Вы уронили Ящик!");
				PlayerInfo[playerid][pMats] -= 250;
				DeletePVar(playerid, "usemats");
				return 1;
			}
		}
	}
	if(newkeys & KEY_FIRE)
	{
		if(IsAGang(playerid))
		{
			if(GetPVarInt(playerid, "usemats"))
			{
				RemovePlayerAttachedObject(playerid,1);
				SCM(playerid,COLOR_RED,"Вы уронили Ящик!");
				PlayerInfo[playerid][pMats] -= 250;
				DeletePVar(playerid, "usemats");
				return 1;
			}
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK  || (newkeys & KEY_SUBMISSION  && newkeys & KEY_SECONDARY_ATTACK ))
	{
		if(IsAGang(playerid))
		{
			if(GetPVarInt(playerid, "usemats"))
			{
				RemovePlayerAttachedObject(playerid,1);
				SCM(playerid,COLOR_RED,"Вы уронили Ящик!");
				PlayerInfo[playerid][pMats] -= 250;
				DeletePVar(playerid, "usemats");
				return 1;
			}
		}
	}
	new carid = GetPlayerVehicleID(playerid);
	if(newkeys == 1)
	{
		if(GetPVarInt(playerid, "checksalon") == 1) return 1;
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(Light{carid} == false)
		{
			GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(carid,engine,true,alarm,doors,bonnet,boot,objective);
			Light{carid} = true;
		}
		else
		{
			GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(carid,engine,false,alarm,doors,bonnet,boot,objective);
			Light{carid} = false;
		}
	}
	if(GetPVarInt(playerid, #job_window))
	{
	    switch(lNomer[playerid])
	    {
			case 1:
			{
				if(newkeys == KEY_WALK)
				{
				    if(IsPlayerInRangeOfPoint(playerid,0.5,1342.5583,-1566.8060,62.0532) || IsPlayerInRangeOfPoint(playerid,0.5,1342.4893,-1566.7864,24.9903) || IsPlayerInRangeOfPoint(playerid,0.5,1342.3462,-1566.7469,84.3849)) ShowPlayerDialog(playerid,5555,DIALOG_STYLE_LIST,"{FF6F00}Выбор","Средний\nНиз\nКрыша","Выбрать","Отмена");
	                else if(IsPlayerInRangeOfPoint(playerid,0.5,1339.0663,-1565.8689,62.0532))
				    {
		    			if(GetPVarInt(playerid, #window_start)) return SendClientMessage(playerid, CORANGE, "Повторите попытку позже!");
						if(mOkna[0] != 0) return SendClientMessage(playerid,CORANGE,"Окно еще чистое!");
						mOkna[0] = 1;
						ClearAnimations(playerid);
						OknaGameStart(playerid);
					}
					else if(IsPlayerInRangeOfPoint(playerid,0.5,1340.8939,-1566.3580,62.0532))
					{
					    if(GetPVarInt(playerid, #window_start)) return SendClientMessage(playerid, CORANGE, "Повторите попытку позже!");
						if(mOkna[1] != 0) return SendClientMessage(playerid,CORANGE,"Окно еще чистое!");
						mOkna[1] = 1;
						ClearAnimations(playerid);
						OknaGameStart(playerid);
					}
				}
			}
			case 2:
			{
				if(newkeys == KEY_WALK)
				{
					if(IsPlayerInRangeOfPoint(playerid,0.5,1330.0901,-1563.8910,58.0040) || IsPlayerInRangeOfPoint(playerid,0.5,1330.2109,-1563.9208,25.6387) || IsPlayerInRangeOfPoint(playerid,0.5,1329.8837,-1563.8627,84.2608)) ShowPlayerDialog(playerid,6666,DIALOG_STYLE_LIST,"{FF6F00}Выбор","Средний\nНиз\nКрыша","Выбрать","Отмена");
	                else if(IsPlayerInRangeOfPoint(playerid,0.5,1326.6486,-1563.4073,58.0040))
					{
	    				if(GetPVarInt(playerid, #window_start)) return SendClientMessage(playerid, CORANGE, "Повторите попытку позже!");
						if(mOkna[2] != 0) return SendClientMessage(playerid,CORANGE,"Окно еще чистое!");
						mOkna[2] = 1;
						ClearAnimations(playerid);
						OknaGameStart(playerid);
					}
					else if(IsPlayerInRangeOfPoint(playerid,0.5,1328.2921,-1563.6371,58.0040))
					{
					    if(GetPVarInt(playerid, #window_start)) return SendClientMessage(playerid, CORANGE, "Повторите попытку позже!");
						if(mOkna[3] != 0) return SendClientMessage(playerid,CORANGE,"Окно еще чистое!");
						mOkna[3] = 1;
						ClearAnimations(playerid);
						OknaGameStart(playerid);
					}
				}
			}
			case 3:
			{
				if(newkeys == KEY_WALK)
				{
				    if(IsPlayerInRangeOfPoint(playerid,0.5,1355.2325,-1570.2013,84.4229) || IsPlayerInRangeOfPoint(playerid,0.5,1355.2919,-1570.2163,61.9292) || IsPlayerInRangeOfPoint(playerid,0.5,1330.2109,-1563.9208,25.6387) || IsPlayerInRangeOfPoint(playerid,0.5,1355.0466,-1570.1488,27.0908)) ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,"{FF6F00}Выбор","{FFFFFF}Средний\nНиз\nКрыша","Выбрать","Отмена");
	                else if(IsPlayerInRangeOfPoint(playerid,0.5,1351.8999,-1569.3032,61.9292))
				    {
					    if(!GetPVarInt(playerid, #window_start)) return SendClientMessage(playerid, CORANGE, "Повторите попытку позже!");
						if(mOkna[4] == 0) return SendClientMessage(playerid,CORANGE,"Окно еще чистое!");
						mOkna[4] = 1;
						ClearAnimations(playerid);
						OknaGameStart(playerid);
					}
					else if(IsPlayerInRangeOfPoint(playerid,0.5,1353.8344,-1569.8267,61.9292))
					{
					    if(GetPVarInt(playerid, #window_start)) return SendClientMessage(playerid, CORANGE, "Повторите попытку позже!");
						if(mOkna[5] != 0) return SendClientMessage(playerid,CORANGE,"Окно еще чистое!");
						mOkna[5] = 1;
						ClearAnimations(playerid);
						OknaGameStart(playerid);
					}
				}
			}
		}
	}
	return 1;
}
publics: AnimClear(playerid) return ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)//Клик меню
{
   	if (source) return OnPlayerCheat(playerid, 13);
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pMRInections]==11)
		{
		    if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
			SPD(playerid, 7777, DIALOG_STYLE_LIST, "{FF6F00}Выдача лицензий:", "{FFFFFF}» Водительские права\n» Лицензия на полёты\n» Лицензия на вождение водного транспорта\n» Лицензия на оружие", "Скрыть", "Отмена");
			SetPVarInt(playerid, "ChosenPlayer", clickedplayerid);
		}
	}
	return 1;
}
stock GiveMoney(playerid, amount)
{
	PlayerInfo[playerid][pCash] += amount;
	GivePlayerMoney(playerid, amount);
	return 1;
}
stock VodPrava(carid)
{
	switch (GetVehicleModel(carid))
	{
	case 400..416,418..424,426..429,431..445,449,451,455,456,458,459,461: return 1;
	case 463,466..468,470,471,474,475,477..480,482,483,485,486,489..492,494..496,498..508: return 1;
	case 514..518,521..531,533..537,539..547,549..551,554..562,564..568,572..576,578..583,585..589,596..605,609: return 1;
	}
	return 0;
}

stock Megaphone(carid)
{
	switch (GetVehicleModel(carid))
	{
	case 425,427,433,470,490,497,500,523,528,548,563,596,597,598,599,601,560: return 1;
	}
	return 0;
}
forward Leaders(playerid, query[]);
public Leaders(playerid, query[])
{
	new rows = cache_get_row_count(connects);
	if(rows)
	{
		new online[20];
		new name[24],leader;
		new ttextt[32],leadertt[32];
		stringer = "";
		while(--rows >= 0)
		{
			leader = cache_get_field_content_int (rows, "pLRInections", connects);
			cache_get_field_content(rows,"Name", name, connects, 24);
			cache_get_field_content(rows, "pGetonDate", online, connects, 20);
			switch (leader)
			{
			case 1: leadertt = "{2641FE}LSPD\t\t";
			case 2: leadertt = "{313131}ФБР\t\t";
			case 3: leadertt = "{33AA33}Армия: Авианосец";
			case 4: leadertt = "{A52A2A}МЧС\t\t";
			case 5: leadertt = "{DDA701}LCN\t\t";
			case 6: leadertt = "{FF0000}Yakuza\t\t";
			case 7: leadertt = "{114D71}Мэрия г.Los-Santos\t\t";
			case 8: leadertt = "{B313E7}Casino Rich";
			case 10: leadertt = "{2641FE}SFPD\t\t";
			case 11: leadertt = "{139BEC}Инструкторы";
			case 12: leadertt = "{8813E7}The Ballas\t";
			case 13: leadertt = "{DBD604}The Vagos\t";
			case 14: leadertt = "{B4B5B7}Русская мафия";
			case 15: leadertt = "{009F00}The Grove\t";
			case 16: leadertt = "{40848B}San News\t";
			case 17: leadertt = "{01FCFF}The Aztecas\t";
			case 18: leadertt = "{83BFBF}The Rifa\t\t";
			case 19: leadertt = "{33AA33}Армия: Зона 51";
			case 21: leadertt = "{2641FE}LVPD\t\t";
			case 24: leadertt = "{F45000}Street Racers  ";
			case 25: leadertt = "{2E8B57}SWAT\t\t";
			case 26: leadertt = "{708090}Правительство";
			case 27: leadertt = "{33AA33}Военно Морской Флот";
			case 28: leadertt = "{114D71}Мэрия г.San-Fierro";
			default: leadertt = "{FF6F00}Неизвестно";
			}
			if(IsPlayerConnected(GetPlayerID(name))) { ttextt = "[{2CE40C}Онлайн{FFFFFF}]"; }
			else if(!IsPlayerConnected(GetPlayerID(name))) { ttextt = "[{E40C0C}Оффлайн{FFFFFF}]"; }
			format(stringer1,BIG_SIZE,"{FFFFFF}%s {ffffff}%s {ffffff}%s Дата последнего посещения: %s\n",leadertt,name,ttextt,online); strcat(stringer,stringer1);
		}
		SPD(playerid,7822,DIALOG_STYLE_MSGBOX,"Лидеры организаций:\t",stringer,"Готово","");
	}
	else SCM(playerid, 0xFF0000AA, "Данные не найдены.");
	return 1;
}
LoadPickups()
{
	buycard = CreatePickupAC(1239,23,1396.7162,1320.5580,1501.0907);
    CreatePickupAC(1275, 23, 2094.4832,-631.7184,63.7913); // Переодевалка
	CreateDynamic3DTextLabel("Работа шахтера\nНажмите ALT",COLOR_WHITE,2094.4832,-631.7184,63.7913,15.0);
	pickupjob = CreatePickupAC(2060, 23, 2224.3357,-717.0111,41.792);
	CreateDynamic3DTextLabel("Место сдачи ресурсов",COLOR_WHITE,2224.3357,-717.0111,41.792,45.0);
	PickJob[0] = CreatePickupAC(1275,23,1339.0961,-1551.8062,13.5718); // Синий пикап устройства на работу
	PickJob[1] = CreatePickupAC(1239,23,1339.25818, -1562.37292, 85.40128); // Подъемник 1
	PickJob[2] = CreatePickupAC(1239,23,1326.14648, -1559.76343, 85.40128); // Подъемник 2
	PickJob[5] = CreatePickupAC(1239,23,1351.6071,-1565.3457,85.5469); // Подъемник 3
	PickJob[3] = CreatePickupAC(1318,23,1328.0315,-1556.1882,13.5469); // Вход снизу
	PickJob[4] = CreatePickupAC(1318,23,1336.6454,-1546.2263,13.5718); // Выход снизу
	PickJob[6] = CreatePickupAC(1318,23,1345.4406,-1550.7123,13.5718); // Вход на крышу
	PickJob[7] = CreatePickupAC(1318,23,1359.2455,-1544.1842,85.5469); // Вход на крышу
    pickCounter[0] = CreatePickupAC(1318,23,-2089.1128,84.2403,35.3134);
    pickCounter[1] = CreatePickupAC(1318,23,2744.6816,-1781.9973,1647.7140);
    pickCounter[2] = CreatePickupAC(19134,23,2742.1382,-1777.4297,1647.7140);
	LessPick[0] = CreatePickupAC(1275, 23, -759.6343,-133.6706,65.7941);
	LessPick[1] = CreatePickupAC(1239, 23, -765.8640,-125.1859,65.5907);
    ammunation = CreatePickupAC(1239,23,291.6252,-84.1213,1001.5156);
	yashik = CreatePickupAC(2358,23,308.0871,-168.2088,999.5938);
    pickupAccessories = CreatePickupAC(1239,23,848.5844,123.7375,3265.6733);
	Pickup[0] = CreatePickupAC(1275,23,240.2621,73.5407,1005.0391);
	Pickup[1] = CreatePickupAC(1275,23,-176.4790,-73.3101,915.9959);
	Pickup[2] = CreatePickupAC(1275,23,1545.0599,-1776.7859,1506.5640,3);
	Pickup[3] = CreatePickupAC(1275,23,-2648.4429,657.2535,3014.4626);
	Pickup[4] = CreatePickupAC(1275,23,287.1122,1880.3435,907.8959);
	Pickup[5] = CreatePickupAC(1275,23,221.1690,124.1797,999.0156);
	Pickup[6] = CreatePickupAC(1275,23,-2082.4319,-93.0586,2855.1479);
	Pickup[7] = CreatePickupAC(1275,23,999.4126,1003.8877,1999.7999);
	Pickup[8] = CreatePickupAC(1275,23,1545.1235,-1776.2736,1506.5640,2);
	Pickup[9] = CreatePickupAC(1275,23,225.7270,183.8094,1003.0313,322);
	Pickup[10] = CreatePickupAC(1275,23,229.0861,168.9929,1003.0234,21);
	Pickup[11] = CreatePickupAC(1275,23,-29.1098,-84.3851,1019.4539);
	Pickup[12] = CreatePickupAC(1275,23,1545.0599,-1776.7859,1506.5640,1);
    BasePic[0] = CreatePickupAC(1318,23,2186.9199,1113.3633,12.6538); //Пикап входа в инту
    BasePic[1] = CreatePickupAC(1318,23,834.6677,7.3224,1004.1870,301); // Пикап выхода из инты
    BasePic[2] = CreatePickupAC(19134,23,822.7521,3.1842,1004.1797,301); // Пикап записи на БейсДжампинг
	racePickup[0]=CreatePickupAC(1318,23,834.6677,7.3224,1004.1870,300);// пикап выхода в инте
    racePickup[1]=CreatePickupAC(1318,23,1778.2397,-1661.6633,14.4365);// пикап входа в инту
    racePickup[2]=CreatePickupAC(19134,23,822.7521,3.1842,1004.1797,300); // Пикап записи на гоночки
	spawnpickup[0] = CreatePickupAC(1318, 23, 1751.3958,-1899.6113,13.3859);
	spawnpickup[1] = CreatePickupAC(1318, 23, 1752.0554,-1932.2941,13.3859);
	spawnpickup[2] = CreatePickupAC(1318, 23, 294.3841,1828.6956,718.4039);
	spawnpickup[3] = CreatePickupAC(1318, 23, 294.6748,1784.2068,718.4039);
    ProposeInt[0] = CreatePickupAC(1318, 23, 1752.2766,-1754.1945,14.7250);
    ProposeInt[1] = CreatePickupAC(1318, 23, 2216.7869,-36.0041,606.8281);
	pickuptook[0] = CreatePickupAC(19134,23,1743.9087,-1886.6670,13.3949);
	pickuptook[1] = CreatePickupAC(19134,23,1473.1429,-1024.1007,23.8281);
	pickuptook[2] = CreatePickupAC(19134,23,1213.8303,-1324.6779,13.5671);
	hotelpickup[0] = CreatePickupAC(1318, 23, 606.5850,-1458.3682,14.3793);
	hotelpickup[1] = CreatePickupAC(1318, 23, 1330.6763,-1063.9916,3359.7158);
	hotelpickup[2] = CreatePickupAC(19131, 23, 1325.1055,-1047.6830,3359.7109);
	hotelpickup[3] = CreatePickupAC(1239, 23, 1321.4440,-1050.7181,3359.7109);
	semia = CreatePickupAC(19131,23,287.1121,1893.0858,907.8959);
	buydom = CreatePickupAC(1239, 23, 1936.1525,-2124.4460,13.6949, 0);
	casino[0] = CreatePickupAC(1318,23,1022.9812,-1121.4835,23.8728);
	casino[1] = CreatePickupAC(1318,23,1133.1108,-15.8323,1000.6797,35);
	autoshoppick[0] = CreatePickupAC(19133, 23, 556.5716,-1292.6392,17.2482, 0);
	autoshoppick[1] = CreatePickupAC(19133, 23, -1951.2544,293.6375,35.4688, 0);
	autoshoppick[2] = CreatePickupAC(19133, 23, -1657.7015,1210.2267,7.2500, 0);
	autoshoppick[3] = CreatePickupAC(19133, 23, 2200.8857,1394.2892,11.0625, 0);
	piro = CreatePickupAC(1252, 23, -2236.3635,130.9908,1035.4141);
	kazarma[0] = CreatePickupAC(1318, 23, -1366.4771,500.9758,11.1953, 0);
	kazarma[1] = CreatePickupAC(1318, 23, 141.4133,1875.4969,17.8434, 0);
	kazarma[2] = CreatePickupAC(1318, 23, 1549.1754,-1757.7046,1506.5640, 1);
	kazarma[3] = CreatePickupAC(1318, 23, 1549.1787,-1757.6177,1506.5640, 2);
	kazarma[4] = CreatePickupAC(1318, 23, -2241.1550,2296.3848,6.3469, 0);
	kazarma[5] = CreatePickupAC(1318, 23, 1549.1787,-1757.6177,1506.5640, 3);
	pokupkas = CreatePickupAC(19134, 23, -1739.1028,-8.7062,1546.0060);
	prabota  = CreatePickupAC(1274,23,317.0201,1888.4530,904.3759);
	lspic[0] = CreatePickupAC(19130,23,1658.5272,-1691.3774,15.6094); // LSN вход
	lspic[1] = CreatePickupAC(1318,23,998.2885,999.8708,1999.7999,1); // LSN выход
	lspic[2] = CreatePickupAC(19130,23,1648.9468,-1641.9387,83.7813); // LSN крыша
	medpic[0] = CreatePickupAC(1318,23,1172.4338,-1323.2861,15.4029);//вход
	hippy[0] = CreatePickupAC(19132,23,266.7173,305.1666,999.1484);
	hippy[1] = CreatePickupAC(19132,23,1284.5511,-1585.5269,13.5469);
	CreatePickupAC(1579,23,271.5976,303.7009,999.1558,13);
	chekmats[0] = CreatePickupAC(1239,2,-1297.3777,505.1444,11.1953); // пикап1
	chekmats[1] = CreatePickupAC(1239,2,-1405.5594,502.5779,11.1953); // пикап1
	chekmats[2] = CreatePickupAC(1239,2,-1336.0455,500.4789,11.3047); // пикап1
	paintPic[3] = CreatePickupAC(1318,23,2595.8333,2790.2686,10.8203);// Выход
	paintPic[2] = CreatePickupAC(1318,23,299.9672,-141.9943,1004.0625);// Вход
	paintPic[0] = CreatePickupAC(1318,23,2495.4136,2781.5190,10.8203);// Выход
	paintPic[1] = CreatePickupAC(1318,23,2503.4006,2778.9316,10.8203);// Вход
	serdce[0] = CreatePickupAC(1240,23,-2022.4574,-118.4710,1035.1719,1);//сердечко в аш
	serdce[1] = CreatePickupAC(1240,23,359.51,188.21,1008.38);//сердечко в мерии
	serdce[2] = CreatePickupAC(1240,23,2131.47,-2283.91,20.67);//сердечко на грузчиках
	serdce[3] = CreatePickupAC(2821,23,817.2604,-1343.7609,13.1000);//Еда на спавне
	serdce[3] = CreatePickupAC(2821,23,817.2604,-1343.7609,13.1000);//Еда на спавне
	skinshop[0] = CreatePickupAC(1275,23,206.0302,-3.5463,1001.2109);//скиншоп
	skinshop[1] = CreatePickupAC(1275,23,181.5291,-89.3950,1002.0307);//скиншо
	ArmyZone = GangZoneCreate(-49.979476, 1695.982177, 414.020507, 2175.982177);
	JobsDJ[0] = CreatePickupAC(1239,23,1065.0127,5.6529,977.6364);// Club New 1
	JobsDJ[1] = CreatePickupAC(1239,23,1074.6111,5.6431,977.6364);// Club New 2
	chekmatlva[0] = CreatePickupAC(1239,2,223.8502,1931.5122,17.6406); // пикап1
	chekmatlva[1] = CreatePickupAC(1239,2,190.7502,1931.7085,17.6406); // пикап1
	chekmatlva[2] = CreatePickupAC(1239,2,155.8935,1903.3306,18.6603); // пикап3
	chekmatlva[3] = CreatePickupAC(1239,2,137.4635,1880.8014,17.8359); // пикап4
	chekmatlva[4] = CreatePickupAC(1239,2,117.9774,1869.8710,17.8359); // пикап5
	chekmatlva[5] = CreatePickupAC(1239,2,112.7323,1875.2440,17.8359); // пикап6
	chekmatlva[6] = CreatePickupAC(1239,2,153.5131,1845.9530,17.6406); // пикап7
	chekmatlva[7] = CreatePickupAC(1239,2,171.9801,1834.7606,17.6406); // пикап8
	chekmatlva[8] = CreatePickupAC(1239,2,176.9783,1841.3126,17.6406); // пикап9
	chekmatlva[9] = CreatePickupAC(1239,2,233.3041,1842.0875,17.6406); // пикап10
	restoran[0] = CreatePickupAC(19130,23,1293.2485,-1871.6499,13.5469); // пикап1
	restoran[1] = CreatePickupAC(19130,23,453.4494,-18.2765,1001.1328,1); // пикап1
	victim2[0] = CreatePickupAC(1318,23,461.7025,-1500.7941,31.0454); // Магазин Одежды Вход
	victim2[1] = CreatePickupAC(1318,23,227.5632,-8.0904,1002.2109); // Магазин Одежды Выход
	zip[0] = CreatePickupAC(1318,23,-1882.5100,866.3918,35.1719); // Магазин ZIP Вход
	zip[1] = CreatePickupAC(1318,23,161.3232,-97.1035,1001.8047); // Магазин ZIP Выход
	buygunzakon[0] = CreatePickupAC(353,23,-155.1864,-78.7271,915.9959); //gun FBI
	buygunzakon[1] = CreatePickupAC(353,23,311.9774,-165.2273,999.6010,228); //gun Police
	buygunzakon[2] = CreatePickupAC(353,23,311.9774,-165.2273,999.6010,1); //gun Police
	buygunzakon[3] = CreatePickupAC(353,23,302.5668,-127.6718,1004.0625,11); //gun Police
	buygunzakon[4] = CreatePickupAC(353,23,290.3902,-107.9638,1001.5156); //gun swat
	lspd[0] = CreatePickupAC(1318,23,1555.1332,-1675.7180,16.1953);//Lspd вход
	lspd[1] = CreatePickupAC(1318,23,246.7096,62.8786,1003.6406);//Lspd выход
	lspd[4] = CreatePickupAC(1318,23,316.6778,-170.0422,999.5938,228);//Lspd вых из аммо
	lspd[2] = CreatePickupAC(1318,23,1524.486938,-1677.990844,6.218750);//Lspd Вход
	lspd[5] = CreatePickupAC(1318,23,1568.6144,-1689.9901,6.2188);//Lspd Вход из гаража
	lspd[3] = CreatePickupAC(1318,23,246.4416,87.6784,1003.6406);//Lspd выход в гараже
	sf[4]  = CreatePickupAC(1318,23,-1606.4298,672.0637,-4.9063);//Lspd выход в гараже
	sf[0]  = CreatePickupAC(1318,23,316.3047,-170.2971,999.5938,1);//Lspd выход в гараже
	sf[1]  = CreatePickupAC(1318,23,213.9762,120.8990,999.0156);//Lspd выход в гараже
	sf[2] = CreatePickupAC(1318,23,-1594.2096,716.1803,-4.9063);//sfpd
	sf[3] = CreatePickupAC(1318,23,246.4636,107.2969,1003.2188);//сфпд
	lvpdpic[0] = CreatePickupAC(1318,23,2297.1138,2451.4346,10.8203);//lvpd вход с гаража
	lvpdpic[1] = CreatePickupAC(1318,23,238.7510,138.6254,1003.0234,322);//lvpd вход в гараж
	lvpdpic[2] = CreatePickupAC(1318,23,2337.1335,2459.3105,14.9742);//Центральный вход
	lvpdpic[3] = CreatePickupAC(1318,23,288.8456,166.9235,1007.1719,322);//Центральный выход
	lvpdpic[4] = CreatePickupAC(1318,23,2297.1165,2468.6892,10.8203);//lvpd оружие вход
	lvpdpic[5] = CreatePickupAC(1318,23,299.9460,-141.8767,1004.0625,15);//lvpd оружие выход
	lvpdpic[6] = CreatePickupAC(1318,23,2278.3835,2458.0950,38.6837);//крыша
	yakexit[0] = CreatePickupAC(1318,23,1298.7498,-797.0133,1084.0078,3);
	yakexit[1] = CreatePickupAC(1318,23,1456.1324,2773.4790,10.8203);
	rmpic[1] = CreatePickupAC(1318,23,937.0892,1733.2124,8.8516);//RM вход
	rmpic[0] = CreatePickupAC(1318,23,1298.7498,-797.0133,1084.0078,5);//RM выход
	fbidoor[0] = CreatePickupAC(1318,23,-163.8959,-79.3242,916.4860);//fbi выход
	fbidoor[1] = CreatePickupAC(1318,23,1076.1617,-1696.8126,13.5701);//fbi вход
	fbidoor[2] = CreatePickupAC(1318,23,1104.6935,-1675.5286,13.6528);//fbi вход запас
	lcnpic[0] = CreatePickupAC(1318,23,1298.7498,-797.0133,1084.0078,2);
	lcnpic[1] = CreatePickupAC(1318,23,1455.8972,751.4310,11.0234);//lcn вход
	narkoexit = CreatePickupAC(1318,23,318.6952,1114.5037,1083.8828); //Наркопритон выход
	narkoenter =  CreatePickupAC(1318,23,2166.0068,-1671.3362,15.0734); // Наркопритон вход
	avtosh[2] = CreatePickupAC(19135,23,-2103.0759,-106.1484,2855.1479,1);
	avtosh[3] = CreatePickupAC(19135,23,739.0715,-1417.9703,13.5234);
	avtosh[0] = CreatePickupAC(19135,23,739.0297,-1429.0310,13.7178);
	avtosh[1] = CreatePickupAC(19135,23,-2076.5823,-99.0453,2855.1479,1);
	marenter[0] = CreatePickupAC(1318,23,1478.9420,-1806.2986,13.5630);// Мэрия выход
	marenter[1] = CreatePickupAC(1318,23,303.9025,1894.0406,904.3759);// выход
	bankpic[0] = CreatePickupAC(1318,23,1465.1370,-1009.9205,26.8438);//Банк вход
	bankpic[1] = CreatePickupAC(1318,23,1412.2792,1315.8641,1501.0840);//Банк выход
	ballasvhod[0] = CreatePickupAC(1318,23,-68.8021,1351.1979,1080.2109,34);//Ballas на улицу
	ballasvhod[1] = CreatePickupAC(1318,23,2002.4426,-1285.6887,28.4881);//Ballas в интерьр
	rifa[0] = CreatePickupAC(1318,23,-229.29,1401.13,27.77,63);//Rifa вход на улицу
	rifa[1] = CreatePickupAC(1318,23,2185.8225,-1815.2219,13.5469);//Rida вход
	mo[0] = CreatePickupAC(1318,23,1122.7072,-2036.9958,69.8942);//вход в Правительство
	mo[1] = CreatePickupAC(1318,23,-25.3392,-53.4068,1019.4539);//выход из министерства
	vagospic[0] = CreatePickupAC(1318,23,2628.7734,-1085.3013,69.6156);//Vagos вход
	vagospic[1] = CreatePickupAC(1318,23,300.4915,305.8677,1003.5391,75);//Vagos выход
	aztecpic[0] = CreatePickupAC(1318,23,2751.9336,-1936.5782,13.5394);// ацтеки
	aztecpic[1] = CreatePickupAC(1318,23,-42.5856,1405.4747,1084.4297,36); //цтеки
	grooveexit = CreatePickupAC(1318,23,2495.7993,-1692.4044,1014.7422,1);//grove spawn выход
	grooveenter = CreatePickupAC(1318,23,2495.3271,-1690.9893,14.7656);//Дом грув
	swatenter = CreatePickupAC(1318,1,2870.0339,2214.7891,10.9449);//swat//Пикап входа
	swatexit = CreatePickupAC(1318,1,238.6690,139.3077,1003.0234,21);//swat
	swatenter2 = CreatePickupAC(1318,1,296.8525,-112.0709,1001.5156);//swat вход в оружейку
	swatexit2 = CreatePickupAC(1318,1,288.7522,166.9949,1007.1719,21);//swat
	ammomer = CreatePickupAC(1239,23,286.5950,1873.5746,907.8959);
	plen[0] = CreatePickupAC(1318,23,305.6964,-159.2085,999.5938);//стрелка1
	plen[1] = CreatePickupAC(1318,23,306.4392,-159.2731,999.5938);//стрелка2
	zona = CreatePickupAC(1318,23,279.2340,1833.1393,18.0874);//стрелка1
	zonaa = CreatePickupAC(1318,23,291.8918,1833.7253,18.1027);//стрелка2
	sklad[0] = CreatePickupAC(1318,23,340.5722,1949.2020,22.0172);//стрелка3
	sklad[1] = CreatePickupAC(1318,23,316.3806,-170.2857,999.5938,229);//стрелка4
	minstr = CreatePickupAC(1239,23,-16.5004,-59.7917,1019.4539);//оружие министерства
}
stock GetMN(fraca)
{
	new mafianame[15];
	switch(fraca)
	{
	case 6: mafianame = "Yakuza";
	case 14: mafianame = "Russian Mafia";
	case 5: mafianame = "LCN";
	}
	return mafianame;
}
stock GetColor(fraca)
{
	switch(fraca)
	{
	case 6: return 0xFF000040;
	case 14: return 0x26262640;
	case 5: return 0xDDA70140;
	}
	return 1;
}
stock Reklama(playerid, const string[])
{
	if(IsIpFound(string) || strfind(string, "Переезд", true) != -1 || strfind(string, "Новый сервер", true) != -1 || strfind(string, "NEW IP", true) != -1 ||
			strfind(string, "АДМИНКИ", true) != -1 || strfind(string, "Лидерки", true) != -1 || strfind(string, "vk . com", true) != -1 || strfind(string, "Переехали", true) != -1 ||
			strfind(string, "переезжаем", true) != -1 || strfind(string, "дам админку", true) != -1 || strfind(string, "vk .com", true) != -1 || strfind(string, "vk.com", true) != -1 ||
			strfind(string, ".com", true) != -1 || strfind(string, "cheat-master", true) != -1 || strfind(string, "Переехали", true) != -1 || strfind(string, "переехали", true) != -1 ||
			strfind(string, "Чит Мастер", true) != -1 || strfind(string, "привет от", true) != -1 || strfind(string, "Good Role Play", true) != -1 || strfind(string, "Samp-Grp", true) != -1 || strfind(string, "Bathory", true) != -1
			|| strfind(string, "youtube.com", true) != -1)
	{
		if(PlayerInfo[playerid][pMuteTime] > 0) return 1;
		PlayerInfo[playerid][pMuted] = 1;
		PlayerInfo[playerid][pMuteTime] = 60;
		format(stringer, MAX_STR, "<Анти Реклама> %s[%d] подозревается в рекламе [IP: %s]",PlayerInfo[playerid][pNames],playerid,PlayerInfo[playerid][pIP]);
		ABroadCast(COLOR_YELLOW,stringer,1);
		format(stringer, SMALL_SIZE, "<Анти Реклама> Текст: %s",string);
		ABroadCast(COLOR_YELLOW,stringer,1);
		SCM(playerid, COLOR_LIGHTRED, "<Анти Реклама> Вы получили затычку за подозрение в рекламе посторонних проектов");
		SetPVarInt(playerid, "ReklamaYES", 1);
		return 0;
	}
	return 1;
}
stock CanGiverankPlayer(playerid)
{
	if(PlayerInfo[playerid][pLRInections] >= 1) return 1;
	new rank = PlayerInfo[playerid][pRKInections];
	switch(PlayerInfo[playerid][pMRInections])
	{
	case 1, 10, 21: if(rank >= 14) return 1;
	case 2: if(rank >= 9) return 1;
	case 3, 19: if(rank >= 14) return 1;
	case 4: if(rank >= 9) return 1;
	case 7: if(rank >= 5) return 1;
	case 8: if(rank >= 5) return 1;
	case 16: if(rank >= 12) return 1;
	case 11: if(rank >= 9) return 1;
	case 22: if(rank >= 9) return 1;
	case 24: if(rank >= 9) return 1;
	case 25: if(rank >= 9) return 1;
	case 26: if(rank >= 9) return 1;
	case 27: if(rank >= 10) return 1;
	}
	return 0;
}
stock IsUninviteRank(playerid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	new member = PlayerInfo[playerid][pMRInections], rank = PlayerInfo[playerid][pRKInections];
	switch(member)
	{
	case 1, 10, 21: if(rank >= 14) return 1;
	case 2: if(rank >= 9) return 1;
	case 3, 19: if(rank >= 14) return 1;
	case 4: if(rank >= 9) return 1;
	case 5: if(rank >= 9) return 1;
	case 6: if(rank >= 9) return 1;
	case 7: if(rank >= 5) return 1;
	case 8: if(rank >= 4) return 1;
	case 11: if(rank >= 9) return 1;
	case 12: if(rank >= 9) return 1;
	case 13: if(rank >= 9) return 1;
	case 14: if(rank >= 9) return 1;
	case 15: if(rank >= 9) return 1;
	case 16: if(rank >= 9) return 1;
	case 17: if(rank >= 9) return 1;
	case 18: if(rank >= 9) return 1;
	case 22: if(rank >= 9) return 1;
	case 24: if(rank >= 9) return 1;
	case 25: if(rank >= 9) return 1;
	case 26: if(rank >= 9) return 1;
	case 27: if(rank >= 10) return 1;
	}
	return 0;
}
stock IsValidRank(playerid,rank)
{
	new mem = 0;
	if(PlayerInfo[playerid][pLRInections] > 0) mem = PlayerInfo[playerid][pLRInections];
	else if(PlayerInfo[playerid][pMRInections] > 0) mem = PlayerInfo[playerid][pMRInections];
	switch(mem)
	{
	case 1, 3, 10, 19, 21: { switch(rank) { case 1..14:return 1; } }
	case 26, 4, 5, 6, 11, 12, 13, 14, 15, 17, 18, 22, 24, 25: { switch(rank) { case 1..9: return 1; } }
	case 7: { switch(rank) { case 1..5:return 1; } }
	case 8: { switch(rank) { case 1..4:return 1; } }
	case 16: { switch(rank) { case 1..12:return 1; } }
	case 2: { switch(rank) { case 1..21:return 1; } }
	case 27: { switch(rank) { case 1..10:return 1; } }
	}
	return 0;
}
stock CanRangPlayer(playerid)
{
	if(PlayerInfo[playerid][pLRInections] >= 1) return 1;
	new rank = PlayerInfo[playerid][pRKInections];
	switch(PlayerInfo[playerid][pMRInections])
	{
	case 1, 10, 21: if(rank >= 14) return 1;
	case 2: if(rank >= 9) return 1;
	case 3, 19: if(rank >= 14) return 1;
	case 4: if(rank >= 9) return 1;
	case 5: if(rank >= 9) return 1;
	case 6: if(rank >= 9) return 1;
	case 7: if(rank >= 5) return 1;
	case 8: if(rank >= 5) return 1;
	case 16: if(rank >= 12) return 1;
	case 11: if(rank >= 9) return 1;
	case 12: if(rank >= 9) return 1;
	case 13: if(rank >= 9) return 1;
	case 14: if(rank >= 9) return 1;
	case 15: if(rank >= 9) return 1;
	case 17: if(rank >= 9) return 1;
	case 18: if(rank >= 9) return 1;
	case 22: if(rank >= 9) return 1;
	case 24: if(rank >= 9) return 1;
	case 25: if(rank >= 9) return 1;
	case 26: if(rank >= 9) return 1;
	case 27: if(rank >= 10) return 1;
	}
	return 0;
}
stock CanInvitePlayer(playerid)
{
	if(PlayerInfo[playerid][pLRInections] >= 1) return 1;
	new rank = PlayerInfo[playerid][pRKInections];
	switch(PlayerInfo[playerid][pMRInections])
	{
	case 1, 10, 21: if(rank >= 14) return 1;
	case 2: if(rank >= 9) return 1;
	case 4,5,6,11,12,13,14,15,17,18,22,24,25,26: if(rank >= 9) return 1;
	case 3, 19: if(rank >= 14) return 1;
	case 7: if(rank >= 5) return 1;
	case 8: if(rank >= 4) return 1;
	case 9, 16, 20: if(rank >= 12) return 1;
	case 27: if(rank >= 10) return 1;
	}
	return 0;
}
Load3DTexts()
{
    CreateDynamic3DTextLabel("{FFFFFF}Устройство на работу",-1,1065.0127,5.6529,977.6364,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}Устройство на работу",-1,1074.6111,5.6431,977.6364,5.0);
    CreateDynamic3DTextLabel("{FFFFFF}DidJey | {FF6F00}''/dj''",-1,1056.5503,-13.5629,979.3359,10.0);
	CreateDynamic3DTextLabel("{FFFFFF}Банковская карта\n\n{FF6F00}Управление / Регистрация",COLOR_WHITE,1396.7162,1320.5580,1501.0907,10.0);
    CreateDynamic3DTextLabel("Месторождение металла\nНажмите {FF6F00}ПКМ",COLOR_WHITE,2290.0781,-931.9880,30.0904,10.0);
	CreateDynamic3DTextLabel("Месторождение металла\nНажмите {FF6F00}ПКМ",COLOR_WHITE,2279.2209,-933.6857,28.7694,15.0);
	CreateDynamic3DTextLabel("Месторождение металла\nНажмите {FF6F00}ПКМ",COLOR_WHITE,2285.1550,-949.7159,30.2480,33.0);
	CreateDynamic3DTextLabel("Месторождение металла\nНажмите {FF6F00}ПКМ",COLOR_WHITE,2289.6580,-965.1357,30.5411,33.0);
	CreateDynamic3DTextLabel("Месторождение металла\nНажмите {FF6F00}ПКМ",COLOR_WHITE,2287.0684,-982.4492,32.9638,33.0);
    CreateDynamic3DTextLabel("{FFFFFF}Автомастерская\nВведите: {FF9900}/tuning", COLOR_WHITE,2154.3062,-2173.1570,14.3018, 15.0);
    CreateDynamic3DTextLabel("{D9F6F6}Помощь новичку",COLOR_WHITE, -765.8640,-125.1859,65.5907,5.0);
	CreateDynamic3DTextLabel("{D9F6F6}Устройство на работу\n{FF7C00}[Лесопилка]",COLOR_WHITE, -759.6343,-133.6706,65.7941,5.0);
	CreateDynamic3DTextLabel("{FF7C00}Склад", COLOR_WHITE, -748.4984,-121.6920,66.0069,5.0);
	for(new i;i<sizeof(SellTicket);i++)
	{
	    CreateDynamicObjectEx(962,SellTicket[i][0],SellTicket[i][1],SellTicket[i][2],90.0, 0.0,SellTicket[i][3],300.0);
		CreateDynamic3DTextLabel("{FFFFFF}Продажа проездного билета {"#cGREEN"}[$5000]{FFFFFF}\nНажмите 'H'",COLOR_WHITE,SellTicket[i][0],SellTicket[i][1],SellTicket[i][2],15.0);
	}
    CreateDynamic3DTextLabel("Тюрьма полицейского департамента\nLSPD\n''/arrest''", CWHITE, 268.3327,77.8972,1001.0391,15.0);
    CreateDynamic3DTextLabel("Тюрьма полицейского департамента\nSFPD\n''/arrest''", CWHITE, 218.2263,114.9286,999.0156,15.0);
    CreateDynamic3DTextLabel("Тюрьма полицейского департамента\nLVPD\n''/arrest''", CWHITE, 198.3940,157.9389,1003.0234,15.0);
    CreateDynamic3DTextLabel("[ Гоночные мероприятия ]", CWHITE, 1778.2397,-1661.6633,14.4365,20.0);
    CreateDynamic3DTextLabel("[ Вход в FBI ]", CWHITE, 1104.6935,-1675.5286,13.6528,20.0);
    CreateDynamic3DTextLabel("[ {D9F6F6}Парковка FBI{FFFFFF} ]\nИспользуйте сигнал (H)", CWHITE, 1125.47656, -1701.98438, 14.2973,20.0);
    CreateDynamic3DTextLabel("{"#cINFO"}Оплата номера в отеле", CWHITE, 1325.1055,-1047.6830,3359.7109,7.0);
	CreateDynamic3DTextLabel("{"#cINFO"}Вахта", CWHITE, 1321.4440,-1050.7181,3359.7109,5.0);
    CreateDynamic3DTextLabel("{"#cINFO"}Получении лицензий",CWHITE,-2080.6445,-104.7761,2855.1479,10.0);
    gDSTurnText = CreateDynamic3DTextLabel("_",CWHITE,-2077.5415,-107.8916,2856.0452,10.0);
	gArmyText[0] = CreateDynamic3DTextLabel("_",COLOR_WHITE,312.6407,-165.6835,999.6010,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0);
	gArmyText[1] = CreateDynamic3DTextLabel("_",COLOR_WHITE,1542.5778,-1773.6821,1506.5640+1,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,1);
	gArmyText[2] = CreateDynamic3DTextLabel("_",COLOR_WHITE,1542.5778,-1773.6821,1506.5640+1,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,3);
 	CreateDynamic3DTextLabel("{FF7800}АРЕНДА МОПЕДОВ", 0xFF0000FF,1743.9087,-1886.6670,13.3949+1,30.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
 	CreateDynamic3DTextLabel("{FF7800}АРЕНДА МОПЕДОВ", 0xFF0000FF,1473.1429,-1024.1007,23.8281+1,30.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
 	CreateDynamic3DTextLabel("{FF7800}АРЕНДА МОПЕДОВ", 0xFF0000FF,1213.8303,-1324.6779,13.5671+1,30.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel( "{FFFFFF}Центральный отель {FF7800}г.Los-Santos", COLOR_ORANGE, 606.5850,-1458.3682,14.3793,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel( "{FFFFFF}Телевизор.\nВведите: {FF7C00}(/tv){FFFFFF}\nЧтобы начать просмотр", COLOR_ORANGE, 2484.3877,-2567.5808,2501.0859,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel( "Информация о семьях", COLOR_WHITE, 287.1121,1893.0858,907.8959,10,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	Create3DTextLabel("Покупка дома на колёсах",COLOR_ORANGE,1936.1525,-2124.4460,13.6949,7.0,0,1);
	Create3DTextLabel("{FF7800}Нажмите клавишу 'ALT'\nЧтобы покинуть Hospital Los Santos", COLOR_ORANGE, -2653.8198,641.1459,3014.4548, 15.0, 0, 0);
	Create3DTextLabel("{FF7800}Нажмите клавишу 'ALT'\nЧтобы войти в Hospital Los Santos", COLOR_ORANGE, -2456.8862,520.4370,492.1730, 15.0, 0, 0);
	Create3DTextLabel("{FF7800}Нажмите клавишу 'ALT'\nЧтобы войти в гараж больницы.", COLOR_ORANGE, -2634.0007,649.4626,3008.6758, 15.0, 0, 0);
	Create3DTextLabel("Casino Los Santos", COLOR_BLUE, 1022.9812,-1121.4835,23.8728, 15.0, 0, 0);
	CreateDynamic3DTextLabel("CAR SHOP\nCLASS: Nope", 0xFF0000FF,556.5716,-1292.6392,17.2482+1,40.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("CAR SHOP\nCLASS: C&D", 0xFF0000FF,-1951.2544,293.6375,35.4688+1,40.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("CAR SHOP\nCLASS: A&B", 0xFF0000FF,-1657.7015,1210.2267,7.2500+1,40.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	CreateDynamic3DTextLabel("CAR SHOP\nCLASS: A&B", 0xFF0000FF,2200.8857,1394.2892,11.0625+1,40.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
	BandText[0] = Create3DTextLabel("{FFFFFF}Склад {9400D3}Ballas Gang\n{D2F25E}Нажмите: 'F'",0xFF80FFAA,-71.5424,1366.1405,1080.2185,7.0,34,0); // Ballas
	BandText[1] = Create3DTextLabel("{FFFFFF}Склад {FFD700}Vagos Gang\n{D2F25E}Нажмите: 'F'",0xFFFF00AA,300.4856,302.5443,1003.5391,7.0,75,0); // vagos
	BandText[2] = Create3DTextLabel("{FFFFFF}Склад {228B22}Grove Gang\n{D2F25E}Нажмите: 'F'",0x9ACD32AA,2492.0986,-1710.9407,1014.7422,7.0,1,0);// groove
	BandText[3] = Create3DTextLabel("{FFFFFF}Склад {00FFFF}Aztecas Gang\n{D2F25E}Нажмите: 'F'",0x0080FFAA,-45.9193,1401.2159,1084.4370,7.0,36,0); // AZTEC
	BandText[4] = Create3DTextLabel("{FFFFFF}Склад {5F9EA0}Rifa Gang\n{D2F25E}Нажмите: 'F'",0x0080FFAA,-219.9765,1406.8613,27.7656,7.0,63,0); // rifa
	CreateDynamic3DTextLabel("{"#cDEPARTMENT"}Покупка деталей",COLOR_BLUE, -1739.1028,-8.7062,1546.0060,15.0);
	Create3DTextLabel("ЗАПИСЬ НА ПЕЙНТБОЛ", COLOR_ORANGE, 2693.9631,-1708.9209,11.8478, 25.0, 0, 0);
	Create3DTextLabel("{ffff00}[Автомастерская]\n{ffff00}Введите: {42aaff}/tune",COLOR_YELLOW,1378.3544,-1898.6478,14.4922,18.0,0,1);
	Create3DTextLabel("{ffff00}[Автомастерская]\n{ffff00}Введите: {42aaff}/tune",COLOR_YELLOW,1369.8450,-1898.7551,14.4922,18.0,0,1);
	Create3DTextLabel("{ffff00}[Автомастерская]\n{ffff00}Введите: {42aaff}/tune",COLOR_YELLOW,1019.6838,-917.2219,42.8707,18.0,0,1);
	Create3DTextLabel("Военный осмотр",0xFFFFFFFFF,1174.2035,1354.4834,10.9219,10.0,0,0);
	Create3DTextLabel("Устройство на работу",0xFFFFFFFFF,313.4049,1890.0851,904.3759,10.0,0,0);
	Create3DTextLabel("'Кабинет'\nПриема избирательных листовок\n''ВЫБОРЫ''",0xFFFFFFFFF,318.4116,1891.4401,909.3654,7.0,0,0);
	Create3DTextLabel("[В шкафчике есть кепки, жилет и спецэкипировка]\n(( /cap /armour ))",0xFFA500FF,257.8165,77.0322,1003.6406,8.0,0, 1);
	Create3DTextLabel("Приемная генерала",0xFFFFFFFFF,1173.3198,1348.3237,10.9219,10.0,0,0);
	Create3DTextLabel("Медицинский осмотр",0xFFFFFFFFF,1174.2035,1358.4862,10.9219,10.0,0,0);
	Create3DTextLabel("Используйте - \'ALT\'",0x696969FF,1172.1096,1357.7673,10.9219,2.0,0,0);
	Create3DTextLabel("  Военкомат   ",0x9500FFFF,1168.6603,1363.4364,10.8203,17.0,0,0);
	Create3DTextLabel("{"#cGREEN"}Информация:\n{ffffff}/propose{"#cGREEN"} - предложить руку и сердце.\n{ffffff}/witness{"#cGREEN"} - предложить быть свидетелем на свадьбе.\n{ffffff}/divorce{"#cGREEN"} - разорвать брак.",0x9500FFFF,-1988.4612,1112.5281,54.4798,9.0,0,1);
	Create3DTextLabel("{"#cGREEN"}Информация:\n{ffffff}/propose{"#cGREEN"} - предложить руку и сердце.\n{ffffff}/witness{"#cGREEN"} - предложить быть свидетелем на свадьбе.\n{ffffff}/divorce{"#cGREEN"} - разорвать брак.",0x9500FFFF,2238.8950,-36.0390,607.6196,9.0,0,1);
	Create3DTextLabel("Вход в мэрию штата",0x6495EDFF,1478.7440,-1814.0393,13.5400,10.0,0,1);
	Create3DTextLabel("Банковское отделение штата",0x6495EDFF,1310.2540,-1366.8386,13.5084,10.0,0,1);
	Create3DTextLabel("~~~~~~~~~~~~~~~~~\nПриём на\nработу\n~~~~~~~~~~~~~~~~~",COLOR_YELLOW,359.8466,184.7337,1008.3828,10.0,0,1);
	Create3DTextLabel("[НАРКОПРИТОН]\nвведите /buydrugs [кол-во]\n1 грамм - 55 вирт\nмаксимум 500 грамм",0xBBBBBB,323.0342,1118.5804,1083.8828,10.0,0,1);
	Create3DTextLabel("~~~~~~~~~~~~~~~\nРазгрузочная\nзона\n~~~~~~~~~~~~~~~",COLOR_GREEN,334.9307,1962.9658,17.6406,10.0,0,1);
	Create3DTextLabel("~~~~~~~~~~~~~~~\nВыдача\nигральных костей\n~~~~~~~~~~~~~~~",COLOR_GREEN,1139.4990,-6.5656,1000.6719,10.0,0,1);
	Create3DTextLabel("~~~~~~~~~~~~~~~\nМесто разгрузки\nРусской мафии\n~~~~~~~~~~~~~~~",COLOR_GREEN,967.3965,1684.1112,8.8516,10.0,0,1);
	Create3DTextLabel("~~~~~~~~~~~~~~~\nМесто разгрузки\nЯкудза\n~~~~~~~~~~~~~~~",COLOR_GREEN,1460.3116,2763.8110,10.8203,10.0,0,1);
	Create3DTextLabel("~~~~~~~~~~~~~~~\nМесто разгрузки\nЛКН\n~~~~~~~~~~~~~~~",COLOR_GREEN,1454.3406,758.1638,11.0234,10.0,0,1);
	Create3DTextLabel("Клуб Alhambra\n{FF6F00}Стойка для работы DJ.\n{33AA33}Введите /dj",COLOR_GREEN,487.35198974609,-2.1640000343323,1002.3829956055,10.0,0,1);
	CreateDynamic3DTextLabel( "Банковские услуги\n{FF6F00}нажмите ''ALT''", COLOR_YELLOW, 1409.2363,1320.1711,1501.0840, 18.0);
	CreateDynamic3DTextLabel( "Банковские услуги\n{FF6F00}нажмите ''ALT''", COLOR_YELLOW, 1407.3414,1320.1711,1501.0840, 18.0);
	CreateDynamic3DTextLabel( "Банковские услуги\n{FF6F00}нажмите ''ALT''", COLOR_YELLOW, 1402.9962,1320.1710,1501.0840, 18.0);
	CreateDynamic3DTextLabel( "Банковские услуги\n{FF6F00}нажмите ''ALT''", COLOR_YELLOW, 1401.1169,1320.1708,1501.0859, 18.0);
	CreateDynamic3DTextLabel("{FFFFFF}Сигнал (H)",0xFFA500FF,291.6807,1825.3950,17.6406,10.0);
	for(new i = 0x0; i != sizeof(atm_position); i ++ ) CreateDynamic3DTextLabel("{"#cINFO"}Банкомат\n\nВзаимодействие: ''ALT''",COLOR_WHITE,atm_position[i][0],atm_position[i][1],atm_position[i][2],7.0);
}
stock LoadObject()
{
    for(new i; i < sizeof(Derevo); i++) gDerevo[i] = CreateObject(616,Derevo[i][0],Derevo[i][1],Derevo[i][2],0.0000000,0.0000000,0.0000000);
	//Тюрьма
	CreateObject(18759,5512.3423,1244.4044,22.188636779785,0.00000000,0.00000000,0.00000000);
	//Тюрьма
	medshlag[0] = CreateObject(968,1185.7998,-1342,13.3,0,88.995,90);
	medshlag[1] = CreateObject(968,1185.7002,-1305.40039,13.3,0,269.998,90);
	vmfgate[1] = CreateObject(980,-2297.7000000,2369.3000000,7.2000000,0.0000000,0.0000000,55.0000000);
	vmfgate[0] = CreateObject(988,-2278.5000000,2395.5000000,5.1000000,0.0000000,0.0000000,232.0000000);
	lspdgate = CreateObject(968,1544.6999500,-1630.8000500,13.1000000,0.0000000,89.0000000,90.0000000);
	fbigate = CreateObject(975,1125.47656,-1701.98438,14.29831598,0.00000000,0.00000000,180.00000000);
	autogate = CreateObject(986,-2053.2219238,-102.4700012,35.9290009,0.0000000,0.0000000,0.0000000);
	sfpdgate[0] = CreateObject(968,-1572.1739502,658.7340088,6.7649999,0.0000000,269.7497864,270.5000000);
	sfpdgate[1] = CreateObject(968,-1701.4420166,687.6950073,24.5750008,0.0000000,270.0000000,90.0000000);
	armygate[0] = CreateObject(980,135.10,1940.86,21.09,0.00,0.00,0.00);
	armygate[2] = CreateObject(980,345.11,1797.59,20.00,0.00,0.00,34.00);
	armygate[1] = CreateObject(975,-1530.0350342,482.5390015,7.8540001,0.0000000,0.0000000,0.0000000);
	lvpdgate[0] = CreateObject(980,2335.1560059,2443.7409668,7.0000000,0.0000000,0.0000000,240.0000000);
	lvpdgate[1] = CreateObject(968,2238.1860352,2450.4460449,10.6000004,0.0000000,270.2502441,269.9999695);
	gatevorota = CreateObject(980,2852.86889648,2186.00732422,12.59907532,0.00000000,0.00000000,90.00000000); //object(columbiangate) (1)3акрытые
	#include <LoadObject>
}
LoadVehicles()//Машины сервера
{
	TaxiCar[0] = CreateVehicleEx(420, 1098.3389,-1754.9941,13.1588,90.0764,6,1,CAR_SPAWN);
	CreateVehicleEx(420, 1098.3389,-1760.8467,13.1588,90.0764,6,1,CAR_SPAWN);
	CreateVehicleEx(420, 1098.3389,-1766.6736,13.1588,90.0764,6,1,CAR_SPAWN);
	CreateVehicleEx(420, 1098.3389,-1772.5911,13.1588,90.0764,6,1,CAR_SPAWN);
	CreateVehicleEx(420, 1062.7021,-1772.6469,13.1588,270.0569,6,1,CAR_SPAWN);
	CreateVehicleEx(420, 1062.7021,-1766.7351,13.1588,270.0569,6,1,CAR_SPAWN);
	CreateVehicleEx(420, 1062.7021,-1760.9009,13.1588,270.0569,6,1,CAR_SPAWN);
	CreateVehicleEx(420, 1062.7021,-1754.9417,13.1588,270.0569,6,1,CAR_SPAWN);
	CreateVehicleEx(420, 1062.7021,-1749.0109,13.1588,270.0569,6,1,CAR_SPAWN);
	CreateVehicleEx(420, 1062.7021,-1743.2328,13.1588,270.0569,6,1,CAR_SPAWN);
	TaxiCar[1] = CreateVehicleEx(420, 1062.7021,-1737.2672,13.1588,270.0569,6,1,CAR_SPAWN);

	medicsls[0] = CreateVehicleEx(416, -2474.4106, 502.8592, 491.7133, 0.0000, 1, 3, CAR_SPAWN);
	CreateVehicleEx(416, -2478.7581, 502.7447, 491.6231, 0.0000, 1, 3, CAR_SPAWN);
	CreateVehicleEx(416, -2470.0566, 502.8234, 491.7203, 0.0000, 1, 3, CAR_SPAWN);
	CreateVehicleEx(416, -2465.5669, 502.8269, 491.5127, 0.1030, 1, 3, CAR_SPAWN);
	CreateVehicleEx(416, -2461.0334, 502.9006, 491.7164, 0.0000, 1, 3, CAR_SPAWN);
	CreateVehicleEx(416, -2456.5466, 502.8759, 491.7103, 0.0000, 1, 3, CAR_SPAWN);
	CreateVehicleEx(416, -2452.3547, 502.8972, 491.6127, 359.9000, 1, 3, CAR_SPAWN);
	CreateVehicleEx(416, -2447.6824, 502.8342, 491.6229, 359.9000, 1, 3, CAR_SPAWN);
	CreateVehicleEx(416, -2430.6387, 502.2833, 492.0173, 0.1041, 1, 3, CAR_SPAWN);
	CreateVehicleEx(416, -2426.1294, 502.2259, 492.0207, 359.8990, 1, 3, CAR_SPAWN);
	CreateVehicleEx(416, -2421.9053, 502.2635, 492.0168, 359.4909, 1, 3, CAR_SPAWN);
	CreateVehicleEx(416, -2417.3372, 502.3409, 492.0166, 359.6970, 1, 3, CAR_SPAWN);
	CreateVehicleEx(416, -2427.1548, 535.1851, 491.5053, 273.7715, 1, 3, CAR_SPAWN);
	CreateVehicleEx(416, -2427.2488, 522.4935, 491.5053, 273.7715, 1, 3, CAR_SPAWN);
	CreateVehicleEx(416, -2427.4299, 527.1734, 491.5053, 273.7715, 1, 3, CAR_SPAWN);
	CreateVehicleEx(416, -2427.1951, 531.2836, 491.5053, 273.7715, 1, 3, CAR_SPAWN);
	medicsls[1] = CreateVehicleEx(426, -2469.2979, 516.3221, 51.4388, 179.7025, 3, 3, CAR_SPAWN);

	sfpdcar[0] = CreateVehicleEx(597, -1572.8986, 742.6428, -5.5355, 90.0000,1,79,CAR_SPAWN); // sfpdcar
	CreateVehicleEx(597, -1572.8986, 738.6428, -5.5355, 90.0000,1,79,CAR_SPAWN); // sfpdcar
	CreateVehicleEx(597, -1572.8986, 734.6428, -5.5355, 90.0000,1,79,CAR_SPAWN); // sfpdcar
	CreateVehicleEx(597, -1572.8986, 730.6428, -5.5355, 90.0000,1,79,CAR_SPAWN); // sfpdcar
	CreateVehicleEx(597, -1572.8986, 726.5028, -5.5355, 90.0000,1,79,CAR_SPAWN); // sfpdcar
	CreateVehicleEx(597, -1572.8986, 722.5708, -5.5355, 90.0000,1,79,CAR_SPAWN); // sfpdcar
	CreateVehicleEx(597, -1572.8986, 718.2868, -5.5355, 90.0000,1,79,CAR_SPAWN); // sfpdcar
	CreateVehicleEx(597, -1579.9634, 749.6013, -5.5355, 180.0000,1,79,CAR_SPAWN); // sfpdcar
	CreateVehicleEx(597, -1584.0024, 749.6013, -5.5355, 180.0000,1,79,CAR_SPAWN); // sfpdcar
	CreateVehicleEx(597, -1588.0934, 749.6013, -5.5355, 180.0000,1,79,CAR_SPAWN); // sfpdcar
	CreateVehicleEx(597, -1592.1324, 749.6013, -5.5355, 180.0000,1,79,CAR_SPAWN); // sfpdcar
	CreateVehicleEx(597, -1596.0125, 749.6013, -5.5355, 180.0000,1,79,CAR_SPAWN); // sfpdcar
	CreateVehicleEx(597, -1600.3164, 749.6013, -5.5355, 180.0000,1,79,CAR_SPAWN); // sfpdcar
	CreateVehicleEx(523,-1632.8319, 693.9442, -5.7421, 180.0000,0,1,CAR_SPAWN); // ????
	CreateVehicleEx(523,-1628.9219, 693.9442, -5.7421, 180.0000,0,1,CAR_SPAWN); // ????
	CreateVehicleEx(523,-1624.6208, 693.9442, -5.7421, 180.0000,0,1,CAR_SPAWN); // ????
	CreateVehicleEx(523,-1620.7108, 693.9442, -5.7421, 180.0000,0,1,CAR_SPAWN); // ????
	CreateVehicleEx(523,-1616.8008, 693.9442, -5.7421, 180.0000,0,1,CAR_SPAWN); // ????
	CreateVehicleEx(523,-1612.4998, 693.9442, -5.7421, 180.0000,0,1,CAR_SPAWN); // ????
	CreateVehicleEx(528,-1639.7885, 670.1018, -5.1330, -90.0000,0,1,CAR_SPAWN); // ????
	CreateVehicleEx(528,-1639.7885, 674.1968, -5.1330, -90.0000,0,1,CAR_SPAWN); // ????
	CreateVehicleEx(528,-1639.5917, 666.0528, -5.4797, -90.0000,53,53,CAR_SPAWN); // ????
	CreateVehicleEx(497, -1680.9290, 704.8461, 30.7351, 127.0000,79,1,CAR_SPAWN); // ????
	CreateVehicleEx(601, -1622.965, 653.932, -5.450, 90.0000,1,79,CAR_SPAWN); // sfpdcar
	sfpdcar[1] = CreateVehicleEx(427,-1638.7850,653.7558,-5.1094,271.5658,1,79,CAR_SPAWN); // SFPD Enforcer 0

	ruscar[0] = CreateVehicleEx(580,964.5038,1707.7654,8.4717,270.1920,0,0,CAR_SPAWN); //
	CreateVehicleEx(580,956.1552,1707.7443,8.4642,270.0861,0,0,CAR_SPAWN); //
	CreateVehicleEx(409,950.5296,1716.1368,8.4151,180.2047,0,0,CAR_SPAWN); //
	CreateVehicleEx(487,955.2507,1754.7340,8.8090,227.3316,0,0,CAR_SPAWN); //
	CreateVehicleEx(487,955.2507,1754.7340,8.8090,227.3316,0,0,CAR_SPAWN); //
	CreateVehicleEx(579,983.6653,1742.5369,8.6459,89.9983,0,0,CAR_SPAWN); //
	CreateVehicleEx(579,983.6631,1738.1848,8.6445,89.9981,0,0,CAR_SPAWN); //
	CreateVehicleEx(579,983.6636,1733.8856,8.6452,89.9983,0,0,CAR_SPAWN); //
	CreateVehicleEx(579,983.6652,1729.5123,8.6482,89.9982,0,0,CAR_SPAWN); //
	CreateVehicleEx(579,983.6371,1725.3397,8.6656,90.2309,0,0,CAR_SPAWN); //
	CreateVehicleEx(579,983.6531,1721.2339,8.6647,89.9953,0,0,CAR_SPAWN); //
	ruscar[1] = CreateVehicleEx(579,983.6689,1746.4585,8.6421,89.9979,0,0,CAR_SPAWN); //

	lcncar[0] =	CreateVehicleEx(445,1477.7389,718.0078,10.6538,104.1924,0,0,CAR_SPAWN); //
	CreateVehicleEx(409,1488.6670,719.5148,10.6790,88.6081,0,0,CAR_SPAWN); //
	CreateVehicleEx(445,1499.1523,718.1288,10.6402,76.7363,0,0,CAR_SPAWN); //
	CreateVehicleEx(445,1413.6324,743.1207,10.6295,270.0000,0,0,CAR_SPAWN); //
	CreateVehicleEx(445,1413.6324,746.2971,10.6421,270.0000,0,0,CAR_SPAWN); //
	CreateVehicleEx(445,1413.6324,749.4462,10.6418,270.0000,0,0,CAR_SPAWN); //
	CreateVehicleEx(445,1413.6324,752.6494,10.6421,270.0000,0,0,CAR_SPAWN); //
	CreateVehicleEx(445,1413.6324,755.9149,10.6496,270.0000,0,0,CAR_SPAWN); //
	CreateVehicleEx(445,1413.6324,759.0656,10.6428,270.0000,0,0,CAR_SPAWN); //
	CreateVehicleEx(445,1413.6324,762.2507,10.6625,270.0000,0,0,CAR_SPAWN); //
	lcncar[1] = CreateVehicleEx(487,1430.9792,788.0112,10.9864,179.1455,0,0,CAR_SPAWN); //

	rentcarsf[0] = CreateVehicleEx(415,-1992.3820,243.3328,34.9512,261.7145,0,0,CAR_SPAWN); // rentcar
	CreateVehicleEx(429,-1991.3319,247.8476,35.0468,261.2777,3,3,CAR_SPAWN); // rentcar
	CreateVehicleEx(458,-1990.6476,251.4531,34.9059,261.8576,2,2,CAR_SPAWN); // rentcarsf
	CreateVehicleEx(411,-1990.2252,255.0063,34.8230,263.9150,1,1,CAR_SPAWN); // rentcarsf
	CreateVehicleEx(426,-1989.7439,259.0538,34.9228,264.1123,5,5,CAR_SPAWN); // rentcarsf
	rentcarsf[1] = CreateVehicleEx(451,-1989.3835,263.5551,34.9737,264.1029,6,6,CAR_SPAWN); // rentcarsf

	ministrcar[0] = CreateVehicleEx(421,1245.4282,-2044.2001,59.7256,269.7390,1,1,CAR_SPAWN); //
	CreateVehicleEx(421,1245.1365,-2039.0664,59.7340,270.0924,1,1,CAR_SPAWN); //
	CreateVehicleEx(421,1245.0253,-2034.8112,59.7373,270.9549,1,1,CAR_SPAWN); //
	CreateVehicleEx(421,1277.7109,-2045.2172,58.9149,88.4058,1,1,CAR_SPAWN); //
	CreateVehicleEx(421,1277.6558,-2039.7623,58.8943,89.4921,1,1,CAR_SPAWN); //
	CreateVehicleEx(421,1277.6003,-2035.1647,58.8768,90.0355,1,1,CAR_SPAWN); //
	CreateVehicleEx(409,1243.1412,-2016.4199,59.7680,180.8818,1,1,CAR_SPAWN); //
	CreateVehicleEx(487,1115.6240,-2053.1128,74.5968,0.0371,1,1,CAR_SPAWN); //
	ministrcar[1] = CreateVehicleEx(487,1116.4135,-2020.6450,74.6070,359.4370,1,1,CAR_SPAWN); //

	streetcar[0] = CreateVehicleEx(541,1325.45007324,1278.74499512,10.52031231,0.00000000,6,0,CAR_SPAWN); //Bullet
	CreateVehicleEx(541,1328.84472656,1278.77734375,10.52031231,0.00000000,6,0,CAR_SPAWN); //Bullet
	CreateVehicleEx(541,1322.25524902,1278.72937012,10.52031231,0.00000000,6,0,CAR_SPAWN); //Bullet
	CreateVehicleEx(494,1319.06445312,1279.58300781,10.79031277,0.00000000,3,0,CAR_SPAWN); //Hotring
	CreateVehicleEx(494,1315.81445312,1279.54980469,10.79031277,0.00000000,3,0,CAR_SPAWN); //Hotring
	CreateVehicleEx(411,1312.61535645,1278.75488281,10.62031269,0.00000000,7,7,CAR_SPAWN); //Infernus
	CreateVehicleEx(411,1309.43933105,1278.77087402,10.62031269,0.00000000,7,7,CAR_SPAWN); //Infernus
	CreateVehicleEx(411,1306.27087402,1278.78625488,10.62031269,0.00000000,7,7,CAR_SPAWN); //Infernus
	CreateVehicleEx(415,1282.23937988,1287.77734375,10.66983414,270.00000000,51,51,CAR_SPAWN); //Cheetah
	CreateVehicleEx(415,1282.21057129,1290.88830566,10.66983414,270.00000000,51,51,CAR_SPAWN); //Cheetah
	CreateVehicleEx(415,1282.20983887,1294.15795898,10.66983414,270.00000000,51,51,CAR_SPAWN); //Cheetah
	CreateVehicleEx(477,1282.49475098,1297.38830566,10.67031288,270.00000000,65,65,CAR_SPAWN); //ZR-350
	CreateVehicleEx(477,1282.53881836,1300.63891602,10.67031288,270.00000000,65,65,CAR_SPAWN); //ZR-350
	CreateVehicleEx(477,1282.58056641,1303.88842773,10.67031288,270.00000000,65,65,CAR_SPAWN); //ZR-350
	CreateVehicleEx(562,1281.35266113,1316.24597168,10.57386208,270.00000000,86,86,CAR_SPAWN); //Elegy
	CreateVehicleEx(562,1281.32897949,1319.53356934,10.57386208,270.00000000,86,86,CAR_SPAWN); //Elegy
	CreateVehicleEx(562,1281.30603027,1322.46984863,10.57386208,270.00000000,86,86,CAR_SPAWN); //Elegy
	CreateVehicleEx(506,1281.19140625,1334.00134277,10.61242580,270.00000000,3,3,CAR_SPAWN); //Super GT
	CreateVehicleEx(506,1281.46875000,1327.28417969,10.61242580,270.00000000,3,3,CAR_SPAWN); //Super GT
	CreateVehicleEx(506,1281.31103516,1330.74353027,10.61242580,270.00000000,3,3,CAR_SPAWN); //Super GT
	streetcar[1] = CreateVehicleEx(494,1290.88220215,1273.95214844,10.79031277,270.00000000,0,6,CAR_SPAWN); //Hotring

	lvpdcar[0] = CreateVehicleEx(598,2268.9678,2443.6958,10.5668,359.5409,0,1,CAR_SPAWN); //
	CreateVehicleEx(598,2273.5706,2443.7290,10.5665,0.6987,0,1,CAR_SPAWN); //
	CreateVehicleEx(598,2277.9482,2443.7490,10.5654,359.8027,0,1,CAR_SPAWN); //
	CreateVehicleEx(598,2282.1309,2443.7957,10.5660,359.7104,0,1,CAR_SPAWN); //
	CreateVehicleEx(598,2282.5002,2476.4595,10.5663,181.3129,0,1,CAR_SPAWN); //
	CreateVehicleEx(598,2277.6665,2476.5178,10.5670,180.8092,0,1,CAR_SPAWN); //
	CreateVehicleEx(598,2273.6030,2476.5684,10.5669,180.3357,0,1,CAR_SPAWN); //
	CreateVehicleEx(598,2268.8853,2476.6331,10.5663,179.7468,0,1,CAR_SPAWN); //
	CreateVehicleEx(598,2269.2004,2459.8330,10.5683,0.1298,0,1,CAR_SPAWN); //
	CreateVehicleEx(598,2273.3623,2459.5422,10.5661,178.7547,0,1,CAR_SPAWN); //
	CreateVehicleEx(598,2278.0513,2459.7075,10.5667,359.0662,0,1,CAR_SPAWN); //
	CreateVehicleEx(598,2281.9307,2459.4504,10.5672,180.7914,0,1,CAR_SPAWN); //
	CreateVehicleEx(599,2290.6970,2443.7861,11.0110,1.2899,0,1,CAR_SPAWN); //
	CreateVehicleEx(599,2260.5859,2476.3032,11.0123,180.0692,0,1,CAR_SPAWN); //
	CreateVehicleEx(497,2348.60009766,2466.10009766,38.90000153,0.00000000,-1,1,CAR_SPAWN); //Police Maverick
	CreateVehicleEx(497,2336.89990234,2466.10009766,38.90000153,0.00000000,-1,1,CAR_SPAWN);
	CreateVehicleEx(497,2325.19995117,2466.10009766,38.90000153,0.00000000,-1,1,CAR_SPAWN);
	CreateVehicleEx(497,2347.89990234,2480.50000000,38.90000153,0.00000000,-1,1,CAR_SPAWN);
	CreateVehicleEx(497,2336.10009766,2480.50000000,38.90000153,0.00000000,-1,1,CAR_SPAWN);
	CreateVehicleEx(497,2324.10009766,2480.50000000,38.90000153,0.00000000,-1,1,CAR_SPAWN);
	CreateVehicleEx(497,2312.10009766,2480.60009766,38.90000153,0.00000000,-1,1,CAR_SPAWN);
	CreateVehicleEx(497,2300.10009766,2480.60009766,39.00000000,0.00000000,-1,1,CAR_SPAWN);
	CreateVehicleEx(497,2288.30004883,2480.69995117,39.00000000,0.00000000,-1,1,CAR_SPAWN);
	CreateVehicleEx(497,2276.50000000,2480.69995117,38.90000153,0.00000000,-1,1,CAR_SPAWN);
	CreateVehicleEx(497,2264.89990234,2480.69995117,38.90000153,0.00000000,-1,1,CAR_SPAWN);
	CreateVehicleEx(497,2252.89990234,2480.69995117,38.90000153,0.00000000,-1,1,CAR_SPAWN);
	CreateVehicleEx(598,2290.30004883,2421.39990234,10.69999981,268.00000000,-1,1,CAR_SPAWN);
	CreateVehicleEx(598,2297.50000000,2421.30004883,10.69999981,267.99499512,-1,1,CAR_SPAWN);
	CreateVehicleEx(598,2274.89990234,2421.50000000,10.69999981,268.00000000,-1,1,CAR_SPAWN);
	CreateVehicleEx(598,2282.30004883,2421.50000000,10.69999981,267.99499512,-1,1,CAR_SPAWN);
	CreateVehicleEx(598,2305.69995117,2421.00000000,10.69999981,267.99499512,-1,1,CAR_SPAWN);
	lvpdcar[1] = CreateVehicleEx(427,2290.9106,2477.1133,10.9520,180.0082,1,1,60000); // Enforcer LVPD

	lsnewscar[0] = CreateVehicleEx(582,1668.2490,-1699.8988,15.6692,113.6156,1,2,CAR_SPAWN); // LS NEWS VAN 0
	CreateVehicleEx(582,1668.3706,-1705.5723,15.6659,113.6156,1,2,CAR_SPAWN); // LS NEWS VAN 1
	CreateVehicleEx(582,1668.7556,-1711.6621,15.6669,113.6156,1,2,CAR_SPAWN); // LS NEWS VAN 2
	CreateVehicleEx(582,1668.5909,-1718.2150,15.6650,113.6156,1,2,CAR_SPAWN); // LS NEWS VAN 3
	CreateVehicleEx(582,1667.6899,-1694.3616,15.6655,113.6156,1,2,CAR_SPAWN); // LS NEWS VAN 4
	lsnewscar[1] = CreateVehicleEx(488,1654.4967,-1636.5563,83.9791,0.5793,1,2,CAR_SPAWN); //  // лс ньюс верт

	govcar[0] =	CreateVehicleEx(421,1501.0896,-1803.1877,13.2796,334.3187,1,1,CAR_SPAWN); // Goverment Washingtone
	CreateVehicleEx(421,1505.4840,-1803.4696,13.4350,333.0223,1,1,CAR_SPAWN); // Goverment Washingtone
	CreateVehicleEx(421,1509.8271,-1803.4679,13.2793,331.7095,1,1,CAR_SPAWN); // Goverment Washingtone
	CreateVehicleEx(421,1514.4700,-1803.6627,13.2796,332.9645,1,1,CAR_SPAWN); // Goverment Washingtone
	CreateVehicleEx(421,1518.7965,-1803.7859,13.2805,332.4236,1,1,CAR_SPAWN); // Goverment Washingtone
	CreateVehicleEx(409,1494.9070,-1784.4438,13.3469,179.8861,1,1,CAR_SPAWN); // Goverment Limo
	govcar[1] =	CreateVehicleEx(487,1540.6368,-1804.6204,13.7229,333.9519,1,1,CAR_SPAWN); // Maverick
	
	aBusCar[0] = CreateVehicleEx(437,1278.1936,-1806.0310,13.4728,90.4374,1,1,CAR_SPAWN);
	CreateVehicleEx(437,1278.5215,-1816.3060,13.5169,90.3709,1,1,CAR_SPAWN);
	aBusCar[1] = CreateVehicleEx(437,1278.4976,-1826.7605,13.5181,89.8360,1,1,CAR_SPAWN);

	mehanik[0] = CreateVehicleEx(525,1649.8070,-1107.4197,23.7879,270.4307,3,3,CAR_SPAWN);
	CreateVehicleEx(525,1649.5594,-1097.9303,23.7825,271.0184,3,3,CAR_SPAWN); // механик1
	CreateVehicleEx(525,1649.5481,-1088.9520,23.7802,271.2585,3,3,CAR_SPAWN); // механик2
	CreateVehicleEx(525,1649.4701,-1080.2677,23.7859,269.8732,3,3,CAR_SPAWN); // механик3
	CreateVehicleEx(525,1630.1318,-1107.5986,23.7810,90.0636,3,3,CAR_SPAWN); // механик4
	CreateVehicleEx(525,1629.4932,-1098.3491,23.7889,91.1477,3,3,CAR_SPAWN); // механик5
	CreateVehicleEx(525,1629.3313,-1089.4033,23.7905,89.8329,3,3,CAR_SPAWN); // механик6
	CreateVehicleEx(525,-70.9419,-1156.6366,1.6491,106.9529,0,3,CAR_SPAWN); // механик1
	CreateVehicleEx(525,-75.4985,-1153.8265,1.5561,106.9529,0,3,CAR_SPAWN); // механик2
	CreateVehicleEx(525,-79.4743,-1152.0967,2.1477,106.9529,0,3,CAR_SPAWN); // механик3
	CreateVehicleEx(525,-81.0021,-1197.2158,2.0621,13.2738,0,3,CAR_SPAWN); // механик4
	CreateVehicleEx(525,-85.3324,-1197.1295,2.1304,13.2739,0,3,CAR_SPAWN); // механик5
	mehanik[1] = CreateVehicleEx(525,-89.2924,-1196.4034,2.1066,13.2739,0,3,CAR_SPAWN); // механик6

	liccar[0] = CreateVehicleEx(426,770.4895000,-1436.6860000,13.0243000,0.0000000,209,209,CAR_SPAWN); //Manana
	CreateVehicleEx(487,762.2743,-1449.3195,13.2933,16.4663,209,209,CAR_SPAWN); // Maverick
	CreateVehicleEx(426,767.5891000,-1436.6599000,13.0243000,0.0000000,209,209,CAR_SPAWN); //Manana
	CreateVehicleEx(426,709.4402000,-1438.0111000,13.0243000,0.8400000,209,209,CAR_SPAWN); //Manana
	CreateVehicleEx(426,711.9614000,-1438.0393000,13.0243000,0.8400000,209,209,CAR_SPAWN); //Manana
	CreateVehicleEx(426,714.5219000,-1437.9867000,13.0243000,0.8400000,209,209,CAR_SPAWN); //Manana
	CreateVehicleEx(426,717.2418000,-1437.8595000,13.0243000,0.8400000,209,209,CAR_SPAWN); //Manana
	CreateVehicleEx(426,720.3210000,-1437.8307000,13.0243000,0.8400000,209,209,CAR_SPAWN); //Manana
	CreateVehicleEx(426,728.7277000,-1438.2018000,13.0243000,0.8400000,209,209,CAR_SPAWN); //Manana
	CreateVehicleEx(426,731.9734000,-1438.2527000,13.0243000,1.8000000,209,209,CAR_SPAWN); //Manana
	CreateVehicleEx(426,735.0963000,-1438.1913000,13.0243000,1.8000000,209,209,CAR_SPAWN); //Manana
	liccar[1] = CreateVehicleEx(426,738.1729000,-1438.1982000,13.0243000,1.9200000,209,209,CAR_SPAWN); //Manana

	yakcar[0] = CreateVehicleEx(550,1472.8889,2762.8508,10.5952,181.8833,0,0,CAR_SPAWN); //Sunrise
	CreateVehicleEx(409,1472.6630,2772.8391,10.5980,180.6813,0,0,CAR_SPAWN); //Лимузин
	CreateVehicleEx(550,1472.5605,2782.8152,10.5942,181.1568,0,0,CAR_SPAWN); //Sunrise
	CreateVehicleEx(487,1469.1836,2815.1477,10.9654,271.1967,0,0,CAR_SPAWN); //Вертолет
	CreateVehicleEx(550,1460.7052,2840.3477,10.6757,180.0000,0,0,CAR_SPAWN); //Sunrise
	CreateVehicleEx(550,1465.3212,2840.3479,10.6757,179.9999,0,0,CAR_SPAWN); //Sunrise
	CreateVehicleEx(550,1470.1836,2840.3354,10.6715,179.9998,0,0,CAR_SPAWN); //Sunrise
	CreateVehicleEx(550,1475.0186,2840.3379,10.6757,179.9998,0,0,CAR_SPAWN); //Sunrise
	CreateVehicleEx(550,1479.8295,2840.3311,10.6740,179.9158,0,0,CAR_SPAWN); //Sunrise
	CreateVehicleEx(550,1484.5872,2840.3420,10.6802,179.9998,0,0,CAR_SPAWN); //Sunrise
	yakcar[1] = CreateVehicleEx(550,1489.3992,2840.3389,10.6810,179.9998,0,0,CAR_SPAWN); //Sunrise

	sapdpatrul[0] = CreateVehicleEx(596,1570.2423, -1710.9011, 5.5755, 0.0000,1,79,CAR_SPAWN); // lspd copcar
	CreateVehicleEx(596,1574.3743, -1710.9011, 5.5755, 0.0000,1,79,CAR_SPAWN); // lspd copcar
	CreateVehicleEx(596,1578.5063, -1710.9011, 5.5755, 0.0000,1,79,CAR_SPAWN); // lspd copcar
	CreateVehicleEx(596,1583.4403, -1710.9011, 5.5755, 0.0000,1,79,CAR_SPAWN); // lspd copcar
	CreateVehicleEx(596,1587.3743, -1710.9011, 5.5755, 0.0000,1,79,CAR_SPAWN); // lspd copcar
	CreateVehicleEx(596,1591.4403, -1710.9011, 5.5755, 0.0000,1,79,CAR_SPAWN); // lspd copcar
	CreateVehicleEx(596,1595.3743, -1710.9011, 5.5755, 0.0000,1,79,CAR_SPAWN); // lspd copcar
	CreateVehicleEx(525,1601.9561, -1704.2853, 5.5755, 90.0000,1,79,CAR_SPAWN); // lspd copcar
	CreateVehicleEx(525,1601.9561, -1700.2853, 5.5755, 90.0000,1,79,CAR_SPAWN); // lspd copcar
	CreateVehicleEx(525,1601.9561, -1696.1414, 5.5755, 90.0000,1,79,CAR_SPAWN); // lspd copcar
	CreateVehicleEx(525,1601.9561, -1691.9293, 5.5755, 90.0000,1,79,CAR_SPAWN); // lspd copcar
	CreateVehicleEx(525,1601.9561, -1688.0693, 5.5755, 90.0000,1,79,CAR_SPAWN); // lspd copcar
	CreateVehicleEx(525,1601.9561, -1683.9293, 5.5755, 90.0000,1,79,CAR_SPAWN); // lspd copcar
	CreateVehicleEx(427,1545.3458, -1659.0269, 5.8542, 90.0000,1,79,CAR_SPAWN); // lspd enfoncer
	CreateVehicleEx(427,1545.3458, -1655.0269, 5.8542, 90.0000,1,79,CAR_SPAWN); // lspd enfoncer
	CreateVehicleEx(427,1545.3458, -1651.2369, 5.8542, 90.0000,1,79,CAR_SPAWN); // lspd enfoncer
	CreateVehicleEx(596,1572.02441406,-1605.98730469,13.20281219,159.99938965,1,79,CAR_SPAWN); //Police Car (LSPD)
	CreateVehicleEx(596,1587.17089844,-1606.42187500,13.20281219,159.99938965,1,79,CAR_SPAWN); //Police Car (LSPD)
	CreateVehicleEx(596,1575.66821289,-1606.22583008,13.20281219,159.99938965,1,79,CAR_SPAWN); //Police Car (LSPD)
	CreateVehicleEx(596,1579.50097656,-1606.26953125,13.20281219,159.99938965,1,79,CAR_SPAWN); //Police Car (LSPD)
	CreateVehicleEx(596,1583.29980469,-1606.45605469,13.20281219,159.99938965,1,79,CAR_SPAWN); //Police Car (LSPD)
	CreateVehicleEx(596,1536.01879883,-1676.16955566,13.20281219,0.00000000,1,79,CAR_SPAWN); //Police Car (LSPD)
	sapdpatrul[1] = CreateVehicleEx(596,1536.00012207,-1668.41052246,13.20281219,0.00000000,1,79,CAR_SPAWN); //Police Car (LSPD)

	sapdcar[0] = CreateVehicleEx(601,1534.7269, -1644.3800, 4.8840, 180.0000,-1,-1,CAR_SPAWN); // lspd tank
	CreateVehicleEx(541,1558.7554,-1711.1497,5.6118,0.3460,-1,79,CAR_SPAWN); // lspd BULLET
	CreateVehicleEx(541,1564.4729,-1710.8766,5.6119,359.9314,-1,79,CAR_SPAWN); // lspd BULLET
	CreateVehicleEx(601,1526.4313, -1644.7328, 6.0031, 180.0000,-1,79,CAR_SPAWN); // lspd ????
	CreateVehicleEx(601,1530.5684, -1644.7328, 6.0031, 180.0000,-1,79,CAR_SPAWN); // lspd ????
	CreateVehicleEx(523,1547.27758789,-1674.60498047,5.45539999,121.53100586,1,79,CAR_SPAWN); //HPV1000
	CreateVehicleEx(523,1547.42431641,-1676.89062500,5.45539999,118.10577393,1,79,CAR_SPAWN); //HPV1000
	CreateVehicleEx(523,1547.27758789,-1672.40002441,5.45539999,121.53076172,1,79,CAR_SPAWN); //HPV1000
	CreateVehicleEx(523,1547.27758789,-1670.20007324,5.45539999,121.53076172,1,79,CAR_SPAWN); //HPV1000
	CreateVehicleEx(523,1547.27758789,-1668.00000000,5.45539999,121.53076172,1,79,CAR_SPAWN); //HPV1000
	CreateVehicleEx(523,1547.42431641,-1679.00000000,5.45539999,118.10302734,1,79,CAR_SPAWN); //HPV1000
	CreateVehicleEx(523,1547.42431641,-1681.09997559,5.45539999,118.10302734,1,79,CAR_SPAWN); //HPV1000
	CreateVehicleEx(497,1555.352,-1610.253,13.561,90.000,79,1,CAR_SPAWN); // lspd mav
	sapdcar[1] = CreateVehicleEx(427,1538.1487,-1644.9996,6.0336,180.0003,1,79, 600); // LSPD Enforcer 0

	fbicar[0] = CreateVehicleEx(490,1129.5815,-1670.2406,13.7800,180.0178,0,0,CAR_SPAWN); // FBI RANCHER
	CreateVehicleEx(490,1126.5594,-1670.2164,13.7813,179.8516,0,0,CAR_SPAWN); //FBI Rancher
	CreateVehicleEx(490,1123.6556,-1670.2164,13.7815,179.9806,0,0,CAR_SPAWN); //FBI Rancher
	CreateVehicleEx(490,1120.5099,-1670.2175,13.7824,179.7440,0,0,CAR_SPAWN); //FBI Rancher
	CreateVehicleEx(490,1135.8407,-1673.0247,13.7799,90.3030,0,0,CAR_SPAWN); //FBI Rancher
	CreateVehicleEx(490,1135.8112,-1675.9304,13.7809,89.3450,0,0,CAR_SPAWN); //FBI Rancher
	CreateVehicleEx(490,1135.5724,-1682.1141,13.7810,89.9728,0,0,CAR_SPAWN); //FBI Rancher
	CreateVehicleEx(490,1135.5725,-1678.9988,13.7817,90.0989,0,0,CAR_SPAWN); //FBI Rancher
	fbicar[1] = CreateVehicleEx(427,1111.0868,-1693.0034,13.7848,269.2619,0,0, CAR_SPAWN); // FBI Enforcer 0
	fbicar[2] = CreateVehicleEx(560,1082.9226,-1706.6404,13.1672,89.2636,0,0,CAR_SPAWN); //Sultan FBI
	fbicar[3] = CreateVehicleEx(560,1069.0378,-1706.5903,13.1669,90.7712,0,0,CAR_SPAWN); //Sultan FBI
	fbicar[4] = CreateVehicleEx(560,1059.2819,-1706.6169,13.1672,90.0726,0,0,CAR_SPAWN); //Sultan FBI
	police[fbicar[2]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[fbicar[2]], fbicar[2], 0.0, 0.0, 0.85, 0.0, 0.0, 0.0);
	AddVehicleComponent(fbicar[2], 1010);	AddVehicleComponent(fbicar[2], 1170);	AddVehicleComponent(fbicar[2], 1029);	AddVehicleComponent(fbicar[2], 1030);
	AddVehicleComponent(fbicar[2], 1031);	AddVehicleComponent(fbicar[2], 1033);	AddVehicleComponent(fbicar[2], 1139);	AddVehicleComponent(fbicar[2], 1140);
	police[fbicar[3]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[fbicar[3]], fbicar[3], 0.0, 0.0, 0.85, 0.0, 0.0, 0.0);
	AddVehicleComponent(fbicar[3], 1010);	AddVehicleComponent(fbicar[3], 1170);	AddVehicleComponent(fbicar[3], 1029);	AddVehicleComponent(fbicar[3], 1030);
	AddVehicleComponent(fbicar[3], 1031);	AddVehicleComponent(fbicar[3], 1033);	AddVehicleComponent(fbicar[3], 1139);	AddVehicleComponent(fbicar[3], 1140);
	police[fbicar[4]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[fbicar[4]], fbicar[4], 0.0, 0.0, 0.85, 0.0, 0.0, 0.0);
	AddVehicleComponent(fbicar[4], 1010);	AddVehicleComponent(fbicar[4], 1170);	AddVehicleComponent(fbicar[4], 1029);	AddVehicleComponent(fbicar[4], 1030);
	AddVehicleComponent(fbicar[4], 1031);	AddVehicleComponent(fbicar[4], 1033);	AddVehicleComponent(fbicar[4], 1139);	AddVehicleComponent(fbicar[4], 1140);

	comptruck[0] = CreateVehicleEx(440,1.0235,-368.0243,5.5643,90.6093,2,2,CAR_SPAWN); // продуктовощ
	CreateVehicleEx(440,0.9863,-364.7068,5.5351,90.6048,1,1,CAR_SPAWN); // продуктовоз
	CreateVehicleEx(440,0.9476,-361.0444,5.5351,90.6048,0,0,CAR_SPAWN); // продуктовоз
	CreateVehicleEx(440,0.9099,-357.4743,5.5351,90.6048,43,43,CAR_SPAWN); // продуктовоз
	CreateVehicleEx(440,0.8716,-353.8435,5.5351,90.6048,34,34,CAR_SPAWN); // продуктовоз
	CreateVehicleEx(440,0.8365,-350.5167,5.5351,90.6048,55,45,CAR_SPAWN); // продуктовоз
	CreateVehicleEx(440,0.7862,-346.9642,6.4105,90.6048,56,56,CAR_SPAWN); // продуктовоз
	CreateVehicleEx(440,0.6810,-343.2654,5.5471,90.6511,35,35,CAR_SPAWN); // продуктовоз
	comptruck[1] = CreateVehicleEx(440,0.6531,-340.0890,5.5368,90.6518,3,3,CAR_SPAWN); // продуктовоз

	benzovoz[0] = CreateVehicleEx(403,-1004.8691,-686.8160,32.6148,90.4683,3,3,CAR_SPAWN); // бенз
	CreateVehicleEx(403,-1004.9096,-681.8693,32.6147,90.4683,3,3,CAR_SPAWN); // бенз1
	CreateVehicleEx(403,-1004.9517,-676.7342,32.6146,90.4683,3,3,CAR_SPAWN); // бенз2
	CreateVehicleEx(403,-1004.9948,-671.4503,32.6146,90.4683,3,3,CAR_SPAWN); // бенз3
	CreateVehicleEx(403,-1005.0370,-666.2866,32.6145,90.4683,3,3,CAR_SPAWN); // бенз4
	CreateVehicleEx(403,-1005.0771,-661.3845,32.6145,90.4683,3,3,CAR_SPAWN); // бенз5
	CreateVehicleEx(403,-1005.1198,-656.1423,32.6144,90.4683,3,3,CAR_SPAWN); // бенз6
	CreateVehicleEx(403,-1005.1617,-651.0016,32.6144,90.4683,3,3,CAR_SPAWN); // бенз7
	CreateVehicleEx(403,-1005.2026,-645.9958,32.6143,90.4683,3,3,CAR_SPAWN); // бенз8
	benzovoz[1] = CreateVehicleEx(403,-1005.2440,-640.9403,32.6143,90.4683,3,3,CAR_SPAWN); // бенз9
	CreateVehicleEx(584,-984.8389,-635.7936,33.1543,91.1889,3,3,CAR_SPAWN); // бенз11
	CreateVehicleEx(584,-984.7327,-640.9091,33.1543,91.1889,3,3,CAR_SPAWN); // бенз12
	CreateVehicleEx(584,-984.6266,-646.0191,33.1543,91.1889,3,3,CAR_SPAWN); // бенз13
	CreateVehicleEx(584,-984.5270,-650.8137,33.1543,91.1889,3,3,CAR_SPAWN); // бенз12
	CreateVehicleEx(584,-984.4152,-656.2086,33.1543,91.1889,3,3,CAR_SPAWN); // бенз13
	CreateVehicleEx(584,-984.3068,-661.4308,33.1543,91.1889,3,3,CAR_SPAWN); // бенз14

	swatcar[0] = CreateVehicleEx(497,2926.68457031,2222.95483398,34.77363586,90.00000000,-1,1,CAR_SPAWN); //Police Maverick
	CreateVehicleEx(523,2863.39916992,2211.58813477,10.60528564,274.00000000,11,1,CAR_SPAWN); //HPV1000
	CreateVehicleEx(523,2863.52392578,2208.52148438,10.60528564,273.99902344,11,1,CAR_SPAWN); //HPV1000
	CreateVehicleEx(523,2863.47827148,2205.45874023,10.60528564,273.99902344,3,1,CAR_SPAWN); //HPV1000
	CreateVehicleEx(427,2869.56372070,2203.00048828,11.19290829,0.00000000,-1,1,CAR_SPAWN); //Enforcer
	CreateVehicleEx(427,2873.41430664,2202.88476562,11.19290829,0.00000000,-1,1,CAR_SPAWN); //Enforcer
	CreateVehicleEx(597,2886.01025391,2210.84204102,10.81490803,180.00000000,-1,1,CAR_SPAWN); //Police Car (SFPD)
	CreateVehicleEx(597,2889.18530273,2210.82690430,10.81490803,180.00000000,-1,1,CAR_SPAWN); //Police Car (SFPD)
	CreateVehicleEx(597,2892.26684570,2210.88110352,10.81490803,180.00000000,-1,1,CAR_SPAWN); //Police Car (SFPD)
	CreateVehicleEx(597,2895.68872070,2210.87158203,10.81490803,180.00000000,-1,1,CAR_SPAWN); //Police Car (SFPD)
	CreateVehicleEx(597,2898.76391602,2210.92846680,10.81490803,180.00000000,-1,1,CAR_SPAWN); //Police Car (SFPD)
	CreateVehicleEx(597,2901.81445312,2211.02539062,10.81490803,180.00000000,-1,1,CAR_SPAWN); //Police Car (SFPD)
	CreateVehicleEx(601,2899.20556641,2183.62768555,10.87511730,0.00000000,-1,1,CAR_SPAWN); //S.W.A.T. Van
	CreateVehicleEx(601,2896.19848633,2183.58569336,10.87511730,0.00000000,-1,1,CAR_SPAWN); //S.W.A.T. Van
	CreateVehicleEx(599,2886.33593750,2183.56201172,11.33003426,0.00000000,-1,1,CAR_SPAWN); //Police Ranger
	CreateVehicleEx(599,2889.71606445,2183.52465820,11.33003426,0.00000000,-1,1,CAR_SPAWN); //Police Ranger
	swatcar[1] = CreateVehicleEx(497,2927.00122070,2201.67626953,34.82759476,90.00000000,-1,1,CAR_SPAWN); //Enforcer

	vmfcar[0] = CreateVehicleEx(417,-2227.5920410,2327.3811035,7.6469998,0.0000000,-1,-1,CAR_SPAWN); //Leviathan
	CreateVehicleEx(470,-2253.0979004,2284.9399414,4.9299998,90.0000000,-1,-1,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-2253.1010742,2288.0859375,4.9299998,90.0000000,-1,-1,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-2253.0778809,2291.0839844,4.9299998,90.0000000,-1,-1,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-2253.0930176,2294.1069336,4.9229999,90.0000000,-1,-1,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-2253.0979004,2297.1950684,4.9229999,90.0000000,-1,-1,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-2253.0839844,2300.0148926,4.9229999,90.0000000,-1,-1,CAR_SPAWN); //Patriot
	CreateVehicleEx(433,-2270.6369629,2297.4699707,5.3899999,270.0000000,-1,-1,CAR_SPAWN); //Barracks
	CreateVehicleEx(433,-2270.5539551,2303.4130859,5.3899999,270.0000000,-1,-1,CAR_SPAWN); //Barracks
	CreateVehicleEx(433,-2270.5769043,2309.3559570,5.3899999,270.0000000,-1,-1,CAR_SPAWN); //Barracks
	CreateVehicleEx(430,-2224.9360352,2399.5720215,0.0000000,44.7500000,-1,-1,CAR_SPAWN); //Predator
	CreateVehicleEx(430,-2231.3569336,2393.1330566,0.0000000,45.7476807,-1,-1,CAR_SPAWN); //Predator
	CreateVehicleEx(430,-2211.3640137,2413.2561035,0.0000000,44.7475586,-1,-1,CAR_SPAWN); //Predator
	CreateVehicleEx(431,-2285.9895,2343.4014,5.3966,298.0005,-1,-1,CAR_SPAWN); //Predator
	vmfcar[1] = CreateVehicleEx(430,-2204.7839355,2419.7028809,0.0000000,44.9975586,-1,-1,CAR_SPAWN); //Predator

	armycar[0] = CreateVehicleEx(470,-1373.51220703,456.75192261,7.43550014,0.00000000,16,16,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-1365.85681152,456.70425415,7.43550014,0.00000000,16,16,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-1369.57617188,456.73632812,7.43550014,0.00000000,16,16,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-1358.07031250,456.71954346,7.43550014,0.00000000,16,16,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-1361.94433594,456.67187500,7.43550014,0.00000000,16,16,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-1362.97888184,478.34671021,7.29751158,179.99993896,16,16,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-1351.29663086,478.37557983,7.29751158,179.99450684,16,16,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-1355.26831055,478.35995483,7.29751158,179.99450684,16,16,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-1359.21618652,478.32714844,7.29751158,179.99450684,16,16,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-1370.89941406,478.36630249,7.29751158,179.99450684,16,16,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-1366.86120605,478.36538696,7.29751158,179.99450684,16,16,CAR_SPAWN); //Patriot
	CreateVehicleEx(470,-1375.01354980,478.34878540,7.29751158,179.99450684,16,16,CAR_SPAWN); //Patriot
	CreateVehicleEx(476,-1414.21008301,497.02539062,12.36546516,0.00000000,114,114,CAR_SPAWN); //Rustler
	CreateVehicleEx(548,-1232.5464,448.2643,8.8370,38.9196,44,44,CAR_SPAWN); //
	CreateVehicleEx(548,-1249.5464,448.2643,8.8370,38.9196,44,44,CAR_SPAWN); //
	CreateVehicleEx(497,-1288.3956,492.2808,18.3785,319.9266,114,114,CAR_SPAWN); //
	CreateVehicleEx(497,-1277.4279,492.2578,18.3848,319.9934,114,114,CAR_SPAWN); //
	CreateVehicleEx(497,-1266.3976,492.2789,18.3793,319.9242,114,114,CAR_SPAWN); //
	CreateVehicleEx(548,-1544.3716,416.1617,8.7687,58.6979,1,1,CAR_SPAWN); //
	CreateVehicleEx(548,-1543.0992,396.6776,8.7286,60.8942,1,1,CAR_SPAWN); //
	CreateVehicleEx(563,-1412.8479,516.7408,18.9466,269.1989,114,114,CAR_SPAWN); //
	CreateVehicleEx(520,-1409.35668945,492.28271484,18.85000038,317.75207520,-1,-1,CAR_SPAWN); //Hydra
	CreateVehicleEx(520,-1424.35668945,492.28271484,18.85000038,317.75585938,-1,-1,CAR_SPAWN); //Hydra
	CreateVehicleEx(520,-1439.35668945,492.28271484,18.85000038,317.75585938,-1,-1,CAR_SPAWN); //Hydra
	CreateVehicleEx(520,-1454.35668945,492.28271484,18.86100038,317.75585938,-1,-1,CAR_SPAWN); //Hydra
	CreateVehicleEx(432,-1293.99926758,439.71520996,7.28025293,2.00000000,-1,-1,CAR_SPAWN); //Rhino
	CreateVehicleEx(432,-1287.47351074,439.80749512,7.28025293,1.99951172,-1,-1,CAR_SPAWN); //Rhino
	CreateVehicleEx(432,-1280.94641113,439.89965820,7.28025293,1.99951172,-1,-1,CAR_SPAWN); //Rhino
	CreateVehicleEx(430,-1446.6256,495.0446,-0.2441,90.2722,86,86,CAR_SPAWN); // Лодка 1
	CreateVehicleEx(430,-1438.8604,507.3962,-0.3404,90.3363,86,86,CAR_SPAWN); // Лодка 2
	armycar[1] = CreateVehicleEx(431,-1303.5890,443.6263,7.2826,0.000,44,44,CAR_SPAWN); // autobus

	matsfuraactek[0] = CreateVehicleEx(482,2190.0347,-1786.9136,13.3777,13.3777,2,1,CAR_SPAWN); //Burrito
	coronoscar[0] = CreateVehicleEx(518,2166.0854,-1790.7902,13.1526,215.7027,2,1,CAR_SPAWN); //
	CreateVehicleEx(518,2160.0552,-1791.0371,13.1508,221.4843,2,1,CAR_SPAWN); //
	CreateVehicleEx(529,2189.7837,-1808.5233,13.0785,44.9829,2,1,CAR_SPAWN); //
	CreateVehicleEx(529,2189.8193,-1802.9926,13.0815,47.4747,2,1,CAR_SPAWN); //
	CreateVehicleEx(529,2190.1396,-1797.8752,13.0266,50.6045,2,1,CAR_SPAWN);
	coronoscar[1] = CreateVehicleEx(478,2180.0000000,-1779.5999756,13.6000004,0.0000000,2,1,CAR_SPAWN); //Walton

	vagoscar[0] = CreateVehicleEx(467,2637.4700,-1069.3326,69.2975,179.7508,84,6,CAR_SPAWN); // Vagos 1
	CreateVehicleEx(467,2637.3894,-1079.5936,69.2988,179.2928,84,6,CAR_SPAWN); // Vagos 2
	CreateVehicleEx(474,2637.5159,-1091.3195,69.2933,180.1118,6,6,CAR_SPAWN); // Vagos 3
	CreateVehicleEx(474,2658.2859,-1078.6418,69.3793,90.3686,6,6,CAR_SPAWN); // Vagos 4
	CreateVehicleEx(474,2676.9719,-1078.5211,69.0612,90.3762,6,6,CAR_SPAWN); // Vagos 5
	vagoscar[1] = CreateVehicleEx(478,2692.4458,-1078.4188,69.0646,90.3767,6,6,CAR_SPAWN); //Walton
	matsfuravagos[0] = CreateVehicleEx(482,2708.5105,-1078.3143,69.1783,90.3865,6,1,CAR_SPAWN); //3фура

	grovecar[0] = CreateVehicleEx(600,2486.7856,-1680.8467,12.9853,333.5294,86,86,CAR_SPAWN);
	CreateVehicleEx(600,2491.6892,-1680.8110,12.9905,334.3155,86,86,CAR_SPAWN);
	CreateVehicleEx(492,2496.9253,-1680.3582,13.1278,335.2479,86,86,CAR_SPAWN);
	CreateVehicleEx(492,2502.0142,-1679.2673,13.1104,331.8155,86,86,CAR_SPAWN);
	CreateVehicleEx(466,2501.7458,-1655.4292,13.0974,56.2400,86,86,CAR_SPAWN);
	CreateVehicleEx(466,2507.2712,-1663.0812,13.1530,24.3497,86,86,CAR_SPAWN);
	CreateVehicleEx(600,2471.9756,-1653.3414,13.1145,88.9228,86,86,CAR_SPAWN); // Picador 2
	grovecar[1] = CreateVehicleEx(478,2479.1999512,-1653.5999756,13.5000000,90.0000000,86,86,CAR_SPAWN); //Walton
	matsfuragrove[0] = CreateVehicleEx(482,2505.2205,-1694.3320,13.6723,358.9510,86,86,CAR_SPAWN); //3фура

	rifacar[0] = CreateVehicleEx(567,2765.1370,-1977.7531,13.4467,1.1677,12,12,CAR_SPAWN); //
	CreateVehicleEx(567,2765.0212,-1967.7778,13.4191,1.3437,12,12,CAR_SPAWN); //
	CreateVehicleEx(567,2764.9094,-1957.4026,13.3894,1.0162,12,12,CAR_SPAWN); //
	CreateVehicleEx(534,2774.5869,-1949.2021,13.1372,2.6137,12,12,CAR_SPAWN); //
	CreateVehicleEx(534,2775.1714,-1961.5574,13.3952,0.4113,12,12,CAR_SPAWN); //
	CreateVehicleEx(534,2775.1685,-1970.6012,13.4159,0.1896,12,12,CAR_SPAWN); //
	rifacar[1] = CreateVehicleEx(478,2774.8147,-1932.6622,13.3906,357.6550,12,12,CAR_SPAWN); //Walton
	matsfurarifa[0] = CreateVehicleEx(482,2764.3013,-1935.9091,13.5394,357.1073,12,12,CAR_SPAWN); //3фура

	matsfuraballas[0] = CreateVehicleEx(482,1979.0079,-1275.7002,23.9095,179.9310,85,85,CAR_SPAWN); //3фура
	ballascar[0] = CreateVehicleEx(516,1981.8063,-1275.7004,23.9095,179.9310,85,85,CAR_SPAWN); //
	CreateVehicleEx(516,1984.6257,-1275.7036,23.9095,179.9310,85,85,CAR_SPAWN); //
	CreateVehicleEx(517,1987.5182,-1275.7074,23.9095,179.9310,85,85,CAR_SPAWN); //
	CreateVehicleEx(517,1990.3362,-1275.7108,23.9095,179.9310,85,85,CAR_SPAWN); //
	CreateVehicleEx(566,1993.4810,-1275.7144,23.9095,179.9310,85,85,CAR_SPAWN); //
	CreateVehicleEx(566,1996.3579,-1275.7178,23.9095,179.9310,85,85,CAR_SPAWN); //
	ballascar[1] = CreateVehicleEx(478,1999.2979,-1275.7213,23.9095,179.9310,85,85,CAR_SPAWN); //Walton

	armcar[0] = CreateVehicleEx(470,291.6765,1856.2783,17.6678,306.9763,43,0,CAR_SPAWN); //
	CreateVehicleEx(470,291.5853,1850.1703,17.6674,309.7868,43,0,CAR_SPAWN); //
	CreateVehicleEx(470,291.5353,1862.1675,17.6759,302.1415,43,0,CAR_SPAWN); //
	CreateVehicleEx(432,277.2724,2030.6893,17.6550,268.4021,0,0,CAR_SPAWN); // танк
	CreateVehicleEx(432,276.9091,2017.6702,18.0319,268.4021,0,0,CAR_SPAWN); // танк2
	CreateVehicleEx(500,221.9194,1855.0072,13.0356,1.6078,77,77,CAR_SPAWN); // тачка
	CreateVehicleEx(500,217.1713,1854.8744,13.0242,1.6078,77,77,CAR_SPAWN); // тачка
	CreateVehicleEx(500,212.6617,1854.7483,13.0134,1.6078,77,77,CAR_SPAWN); // тачка
	CreateVehicleEx(500,203.7943,1862.3488,13.2462,271.1720,77,77,CAR_SPAWN); // тачка
	CreateVehicleEx(500,203.7240,1866.9736,13.2801,271.3324,77,77,CAR_SPAWN); // тачка
	CreateVehicleEx(500,203.5927,1872.2008,13.2459,271.1720,77,77,CAR_SPAWN); // тачка
	CreateVehicleEx(497,144.9689,1950.7150,29.1754,359.9992,44,44,CAR_SPAWN); // обычный верт
	CreateVehicleEx(497,135.1045,1950.7152,29.1515,359.9985,44,44,CAR_SPAWN); // обычный верт2
	CreateVehicleEx(470,274.4993,2000.2352,17.6675,270.6052,43,0,CAR_SPAWN); //
	CreateVehicleEx(470,274.5747,1977.9242,17.6768,272.9560,43,0,CAR_SPAWN); //
	CreateVehicleEx(425,287.2229,1927.3916,18.2054,234.3114,43,0,CAR_SPAWN); //
	CreateVehicleEx(520,301.3592,2052.5264,18.3638,180.5396,0,0,CAR_SPAWN); //
	CreateVehicleEx(520,314.0055,2052.5469,18.3638,176.5419,0,0,CAR_SPAWN); //
	armcar[1] = CreateVehicleEx(431,343.1131,1990.7627,17.7473,90.000,77,77,CAR_SPAWN); //Autobuss
	matscar[0] = CreateVehicleEx(433,275.6767,1961.1750,18.0159,272.5789,43,0,CAR_SPAWN); //
	CreateVehicleEx(433,276.3317,1955.3665,18.0159,273.6414,43,0,CAR_SPAWN); //
	matscar[1] = CreateVehicleEx(433,276.7726,1949.7548,18.0093,271.6631,43,0,CAR_SPAWN);

	derby[0] = CreateVehicleEx(504,-1414.0229492,1058.5529785,1039.0419922,180.0000000,-1,-1,5);
	derby[1] = CreateVehicleEx(504,-1388.4510498,1058.5529785,1038.4189453,180.0000000,-1,-1,5);
	derby[2] = CreateVehicleEx(504,-1398.2089844,1058.5529785,1038.4399414,180.0000000,-1,-1,5);
	derby[3] = CreateVehicleEx(504,-1393.2399902,1058.5529785,1038.4229736,180.0000000,-1,-1,5);
	derby[4] = CreateVehicleEx(504,-1437.1500244,1058.5529785,1038.5100098,180.0000000,-1,-1,5);
	derby[5] = CreateVehicleEx(504,-1408.4260254,1058.5529785,1038.5510254,180.0000000,-1,-1,5);
	derby[6] = CreateVehicleEx(504,-1423.1820068,1058.5529785,1038.5510254,180.0000000,-1,-1,5);
	derby[7] = CreateVehicleEx(504,-1432.4239502,1058.5529785,1038.4659424,180.0000000,-1,-1,5);
	derby[8] = CreateVehicleEx(504,-1427.9210205,1058.5529785,1038.4599609,180.0000000,-1,-1,5);
	derby[9] = CreateVehicleEx(504,-1418.5329590,1058.5529785,1038.5510254,180.0000000,-1,-1,5);
	derby[10] = CreateVehicleEx(504,-1403.3769531,1058.5529785,1038.5510254,180.0000000,-1,-1,5);
	for(new i=0; i<11; i++) LinkVehicleToInterior(derby[i], 15);

	SetVehicleHealth(sfpdcar[1],3000);
	SetVehicleHealth(lvpdcar[1],3000);
	SetVehicleHealth(swatcar[1],3000);
	SetVehicleHealth(fbicar[1],3000);
	SetVehicleHealth(sapdcar[1],3000);
	return 1;
}
public OnVehicleMod(playerid,vehicleid,componentid)
{
	if(componentid != 1010 && GetPlayerInterior(playerid)==0 && PlayerInfo[playerid][bAdmin] != 13)
	{
		RemoveVehicleComponent(vehicleid,componentid);
		SetVehicleToRespawn(vehicleid);
		OnPlayerCheat(playerid, 14);
		return 1;
	}
	return 1;
}
GetFloatDifference(Float: Number1, Float: Number2) return floatround(Number1 > Number2 ? Number1 - Number2 : Number2 - Number1);
public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
    if(passenger_seat)
	{
		new Float:x, Float:y, Float:z;
		GetVehiclePos(vehicleid,x,y,z);
		if(GetFloatDifference(x,VehInfo[vehicleid-1][vehicleX]) > 20.0 || GetFloatDifference(y,VehInfo[vehicleid-1][vehicleY]) > 20.0 && pTemp[playerid][pAFK] < 3)
		{
		    VehInfo[vehicleid-1][vehicleX] = x;
		    VehInfo[vehicleid-1][vehicleY] = y;
		    VehInfo[vehicleid-1][vehicleZ] = z;
			SetPVarInt(playerid,"pKick4",GetPVarInt(playerid,"pKick4") + 1);
   			if(GetPVarInt(playerid,"pKick4") == 4) OnPlayerCheat(playerid, 15);
		}
	}
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(paintjobid>2)
	{
		ChangeVehiclePaintjob( vehicleid, 0 );
		SetVehicleToRespawn(vehicleid);
		OnPlayerCheat(playerid, 16);
		return 1;
	}
 	if (GetPlayerInterior(playerid)==0) return OnPlayerCheat(playerid, 17);
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	if(PlayerToPoint(30.0,playerid,1024.8700,-1023.9111,31.8337)) return 1;
 	if (GetPlayerInterior(playerid)==0) return OnPlayerCheat(playerid, 18);
	return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid) return 1;
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid)
{
    for(new i =0;i<sizeof(GZInfo);i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && PlayerToKvadrat(issuerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
			new string[56];
			format(string, sizeof(string), "{FF0000}- {D3D3D3}%.0f",amount);
			SetPlayerChatBubble(playerid, string, 0x6ab1ffaa, 20.0, 10000);
			PlayerPlaySound(playerid,1150,0.0,0.0,0.0);
   		}
	}
	if(IsPlayerInRangeOfPoint(playerid, 100.0, -703.2038,-156.3844,63.8574))
	{
	    ClearAnimations(playerid);
	    SetPlayerArmedWeapon(playerid,0);
     	SendClientMessage(playerid,CORANGE,"Здесь нельзя драться! Ведите себя адекватно!");
	}
	return true;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	acstruct[playerid][checkmaptp] = 1; acstruct[playerid][maptplastclick] = GetTickCount();
	acstruct[playerid][maptp][0] = fX; acstruct[playerid][maptp][1] = fY; acstruct[playerid][maptp][2] = fZ;
	if(IsATaxiCar(GetPlayerVehicleID(playerid)) && Taxi_Duty[GetPlayerVehicleID(playerid)])
	{
		new Float:distance = GetPlayerDistanceFromPoint(playerid,fX,fY,fZ);
		if(PlayerInfo[playerid][pCash] < (floatround(distance) / 100) * floatround(TransportCompany_FareTaxi / 10)) return SCM(playerid, COLOR_GREY, "У вас не хватает денег.");
	    SetPVarFloat(playerid,"fX_map",fX);
	    SetPVarFloat(playerid,"fY_map",fY);
	    SetPVarFloat(playerid,"fZ_map",fZ);
	    SCM(playerid, COLOR_WHITE, "Вы успешно отметили местоназначение на карте. Ожидайте ответа от таксиста.");
	    SCMF(Taxi_Duty[GetPlayerVehicleID(playerid)]-1, -1,"Пассажир вашего такси %s отметил на карте местоназначение. Расстояние %.1f, Стоимость %i$",PlayerInfo[playerid][pNames],distance,(floatround(distance) / 100) * floatround(TransportCompany_FareTaxi / 10));
		SCM(Taxi_Duty[GetPlayerVehicleID(playerid)]-1, COLOR_YELLOW2, "Для подтверждения нажмите Y.");
		SetPVarInt(Taxi_Duty[GetPlayerVehicleID(playerid)]-1,"Taxi_Duty_Player",playerid+1);
	}
	return 1;
}

publics: PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
    new Float:xxp,Float:yyp,Float:zzp;
    GetPlayerPos(playerid, xxp, yyp, zzp);
    return ((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y))?true:false;
}

GetGangColor(g)
{
	new zx;
	switch(g)
	{
		case 15: zx = 0x009900AA;
		case 17: zx = 0x00b4e1AA;
		case 12: zx = 0xCC00FFAA;
		case 18: zx = 0x6666ffAA;
		case 13: zx = 0xffcd00AA;
		default: zx = 0xcfbe0899;
	}
	return zx;
}
GetGangZoneColor(gangzonex)
{
	new zx;
	switch(GZInfo[gangzonex][gFrakVlad])
	{
		case 12: zx = 0xCC00FFAA;
		case 18: zx = 0x6666ffAA;
		case 13: zx = 0xffcd00AA;
		case 15: zx = 0x009900AA;
		case 17: zx = 0x00b4e1AA;
		default: zx = 0xFFBE0065;
	}
	return zx;
}
stock GetNearestVehicle(playerid)
{
	new Float:x,Float:y,Float:z;
    forveh(i)
        if(IsVehicleStreamedIn(i, playerid))
        {
            GetVehiclePos(i, x, y, z);
            if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z)) return i;
        }
    return 0;
}
stock IsPlayerInBandOnline(bandid)
{
	foreach(new i: Player)
	{
		if(!PlayerInfo[i][pLogin]) continue;
		if(PlayerInfo[i][pMRInections] == bandid || PlayerInfo[i][pLRInections] == bandid) return 1;
	}
	return 0;
}

stock GetWeaponSlotEx(weaponid)
{
	switch(weaponid)
	{
		case 0,1:return 0;
		case 2..9:return 1;
		case 22..24:return 2;
		case 25..27:return 3;
		case 28,29,32:return 4;
		case 30,31:return 5;
		case 33,34:return 6;
		case 35..38:return 7;
		case 16..18,39:return 8;
		case 41..43:return 9;
		case 10..15:return 10;
		case 44..46:return 11;
		case 40:return 12;
	}
	return -1;
}

stock UnLockCar(carid)
{
	gCarLock[carid] = false;
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(carid,engine,lights,alarm,false,bonnet,boot,objective);
	foreach(new i: Player) SetVehicleParamsForPlayer(carid,i,0,0);
}
stock Menu()
{
	BuyClothes = CreateMenu ( "Clothes", 1, 10.0, 130.0, 100.0, 80.0);
	AddMenuItem(BuyClothes, 0, "Next>>");
	AddMenuItem(BuyClothes, 0, "<<Previous");
	AddMenuItem(BuyClothes, 0, "Done");
	AddMenuItem(BuyClothes, 0, "Exit");
	return 1;
}
stock GetVehicleSpeed(vehicleid)
{
	new Float:x, Float:y, Float:z;
	GetVehicleVelocity(vehicleid, x, y, z);
	return floatround(floatsqroot(x*x+y*y+z*z)*100);
}
stock SpeedPlayer(playerid)
{
	new Float:ST[4];
	if(!IsPlayerInAnyVehicle(playerid)) GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
	else GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 213.3;
	return floatround(ST[3]);
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid) return 1;
stock NextCar(playerid)
{
	if(PlayerInfo[playerid][SalonInfo][1] > gettime()) return GameTextForPlayer(playerid,"Loading...",1000,3);
	SetPVarInt(playerid, "SelectAvto", GetPVarInt(playerid, "SelectAvto") +1);
	switch(GetPVarInt(playerid,"CarShop"))
	{
		case 0:if(GetPVarInt(playerid, "SelectAvto") >= 19) SetPVarInt(playerid, "SelectAvto", 0);//nope
		case 1:if(GetPVarInt(playerid, "SelectAvto") >= 38) SetPVarInt(playerid, "SelectAvto", 20);//c
		case 2:if(GetPVarInt(playerid, "SelectAvto") >= 56) SetPVarInt(playerid, "SelectAvto", 39);//d
		case 3:if(GetPVarInt(playerid, "SelectAvto") >= 85) SetPVarInt(playerid, "SelectAvto", 72);//a
		case 4:if(GetPVarInt(playerid, "SelectAvto") >= 71) SetPVarInt(playerid, "SelectAvto", 57);//b
	}
	return ShowingCar(playerid);
}
stock BackCar(playerid)
{
	if(PlayerInfo[playerid][SalonInfo][1] > gettime()) return GameTextForPlayer(playerid,"Loading...",1000,3);
	SetPVarInt(playerid, "SelectAvto", GetPVarInt(playerid, "SelectAvto")-1);
	switch(GetPVarInt(playerid,"CarShop"))
	{
	case 0:if(GetPVarInt(playerid, "SelectAvto") <= 0) SetPVarInt(playerid, "SelectAvto", 19);//nope
	case 1:if(GetPVarInt(playerid, "SelectAvto") <= 20) SetPVarInt(playerid, "SelectAvto", 38);//c
	case 2:if(GetPVarInt(playerid, "SelectAvto") <= 39) SetPVarInt(playerid, "SelectAvto", 56);//d
	case 3:if(GetPVarInt(playerid, "SelectAvto") <= 72) SetPVarInt(playerid, "SelectAvto", 85);//a
	case 4:if(GetPVarInt(playerid, "SelectAvto") <= 57) SetPVarInt(playerid, "SelectAvto", 71);//b
	}
	return ShowingCar(playerid);
}
stock ShowingCar(playerid)
{
	if(PlayerInfo[playerid][SalonInfo][0] != INVALID_VEHICLE_ID) DestroyVehicleEx(PlayerInfo[playerid][SalonInfo][0]);
	PlayerInfo[playerid][SalonInfo][0] = CreateVehicleEx(ShopCar[GetPVarInt(playerid, "SelectAvto")][0],-1658.7123,1212.8981,20.9499,285.2443,1,1,-1);
	SetVehicleVirtualWorld(PlayerInfo[playerid][SalonInfo][0], playerid+1);
	PutPlayerInVeh(playerid,PlayerInfo[playerid][SalonInfo][0],0);
	SetPlayerCameraPos(playerid,-1654.097045,1218.596679,22.708799);
	SetPlayerCameraLookAt(playerid,-1659.106201,1210.380737,19.987318);
	SetPVarInt(playerid,"BuyColor",-1);
	SetPVarInt(playerid,"BuyColor1",-1);
	format(stringer,BIG_SIZE,"~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%d~n~~y~COLOR1: ~w~-1 ~y~COLOR2: ~w~-1",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]);
	GameTextForPlayer(playerid,stringer, 5000, 3);
	format(stringer,SMALL_SIZE,"Model: %s~n~Cost: %d",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]);
	PlayerTextDrawSetString(playerid,ShopText[playerid],stringer);
	PlayerInfo[playerid][SalonInfo][1] = gettime()+1;
	return 1;
}

stock NextColor(playerid,whocolor)
{
	if(whocolor == 0)SetPVarInt(playerid,"BuyColor",GetPVarInt(playerid,"BuyColor")+1);
	else SetPVarInt(playerid,"BuyColor1",GetPVarInt(playerid,"BuyColor1")+1);
	if(GetPVarInt(playerid,"BuyColor") >= 126) DeletePVar(playerid, "BuyColor");
	if(GetPVarInt(playerid,"BuyColor1") >= 126) DeletePVar(playerid, "BuyColor1");
	ChangeVehicleColor(GetPlayerVehicleID(playerid),GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	format(stringer,BIG_SIZE,"~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%d~n~~y~COLOR1: ~w~%d ~y~COLOR2: ~w~%d",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1],GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	GameTextForPlayer(playerid,stringer, 5000, 3);
	return 1;
}
stock BackColor(playerid,whocolor)
{
	if(whocolor == 0)SetPVarInt(playerid,"BuyColor",GetPVarInt(playerid,"BuyColor")-1);
	else SetPVarInt(playerid,"BuyColor1",GetPVarInt(playerid,"BuyColor1")-1);
	if(GetPVarInt(playerid,"BuyColor") <= 0) SetPVarInt(playerid,"BuyColor",126);
	if(GetPVarInt(playerid,"BuyColor1") <= 0) SetPVarInt(playerid,"BuyColor1",126);
	ChangeVehicleColor(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	format(stringer,BIG_SIZE,"~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%d~n~~y~COLOR1: ~w~%d ~y~COLOR2: ~w~%d",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1],GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	GameTextForPlayer(playerid,stringer, 5000, 3);
	return 1;
}
stock ShowBuyCar(playerid)
{
	SetPVarInt(playerid, "checksalon",1);
	SetPVarInt(playerid, "SelectAvto", 0);
	switch(GetPVarInt(playerid,"CarShop"))
	{
		case 1: SetPVarInt(playerid, "SelectAvto", 20);//c
		case 2: SetPVarInt(playerid, "SelectAvto", 39);//d
		case 3: SetPVarInt(playerid, "SelectAvto", 72);//a
		case 4: SetPVarInt(playerid, "SelectAvto", 57);//b
	}
	PlayerTextDrawShow(playerid, ShopText[playerid]);
	for(new x; x < 12; x++) TextDrawShowForPlayer(playerid, SHOPAUTOTEXT[x]);
	SetPlayerVirtualWorld(playerid,playerid+1);
	SelectTextDraw(playerid, 0x0080FFFF);
	return ShowingCar(playerid);
}
stock ExitCar(playerid)
{
	for(new x; x < 12; x++) TextDrawHideForPlayer(playerid, SHOPAUTOTEXT[x]);
	PlayerTextDrawHide(playerid, ShopText[playerid]);
	if(PlayerInfo[playerid][SalonInfo][0] != INVALID_VEHICLE_ID) DestroyVehicleEx(PlayerInfo[playerid][SalonInfo][0]);
	PlayerInfo[playerid][SalonInfo][0] = INVALID_VEHICLE_ID;
	CancelSelectTextDraw(playerid);
	if(GetPVarInt(playerid,"AutoShop") != 0)
	{
		switch(GetPVarInt(playerid,"AutoShop"))
		{
			case 1: SetPlayerPosEx(playerid,556.5716,-1292.6392,17.2482);
			case 2: SetPlayerPosEx(playerid,-1951.2544,293.6375,35.4688);
			case 3: SetPlayerPosEx(playerid,-1657.7015,1210.2267,7.2500);
			case 4: SetPlayerPosEx(playerid, 2200.8857,1394.2892,11.0625);
		}
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerFacingAngle(playerid,0);
		SetCameraBehindPlayer(playerid);
		DeletePVar(playerid, "AutoShop");
		SetPVarInt(playerid, "SelectAvto",-1);
		DeletePVar(playerid, "checksalon");
		return 1;
	}
	return 1;
}
stock UpdateRecon(playerid)
{
	new i = RINFO[playerid][sID];
	if(!PlayerInfo[i][pLogin] && RINFO[playerid][sDialog] == false)
	{
		GameTextForPlayer(playerid,"~r~PLAYER DISCONNECT",3000,3);
		RINFO[playerid][sDialog] = true;
		return SPD(playerid,238,0,"{FF6F00}Внимание!","{FFFFFF}Игрок, за которым вы следили вышел\nХотите отключить Recon?","Выйти","Отмена");
	}
	if(!IsPlayerConnected(i) || !PlayerInfo[i][pLogin]) return 0;
	new Float:armour,Float:health,Float:healthcar,maxsped,gun;
	GetPlayerArmour(i, armour);
	GetPlayerHealth(i, health);
	GetVehicleHealth(GetPlayerVehicleID(i),healthcar);
	if(GetPlayerWeapon(i)) gun = PlayerInfo[i][pAmmo][GetWeaponSlotEx(GetPlayerWeapon(i))];
	if(IsPlayerInAnyVehicle(i)) maxsped = SpeedLimit[GetVehicleModel(GetPlayerVehicleID(i)) - 400];
	if(RINFO[i][SAFK][0] > 3) format(stringer,50,"~w~%s~n~ID: %d ~r~AFK",PlayerInfo[i][pNames],i);
	else format(stringer,50,"~w~%s~n~ID: %d",PlayerInfo[i][pNames],i);
	PlayerTextDrawSetString(playerid,ReconPlayerText[playerid][0],stringer);
	format(stringer,180,"%d : %d / %d~n~%d~n~%d~n~%d~n~%d~n~%d / %d~n~%d~n~%d : %d ~n~%d / %d : %d%%~n~%d / %d : %d%%~n~%d : %d",PlayerInfo[i][pLevel],PlayerInfo[i][pExp],(PlayerInfo[i][pLevel]+1)*4,
	PlayerInfo[i][pWarns],floatround(armour),floatround(health),floatround(healthcar),SpeedPlayer(i),maxsped,GetPlayerPing(i),GetPlayerAmmo(i),gun,
	RINFO[i][SShout][0],RINFO[i][SShout][1],(RINFO[i][SShout][1]*100)/(RINFO[i][SShout][0]+1),
	RINFO[i][SShout][2],RINFO[i][SShout][3],(RINFO[i][SShout][3]*100)/(RINFO[i][SShout][2]+1),
	RINFO[i][SAFK][1]/60,RINFO[i][SAFK][2]/60);
	PlayerTextDrawSetString(playerid,ReconPlayerText[playerid][1],stringer);
	return 1;
}
stock BadFloat(Float:x)
{
    if(x >= 10.0 || x <= -10.0)return 1;
   	return 0;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if(GetTickCount()-WeaponTime[playerid]<120 && weaponid!=17 && weaponid<=27 || GetTickCount()-WeaponTime[playerid]<30 &&  weaponid>27 && weaponid<=34)
	{
	    RapidFire{playerid}++;
	    if(RapidFire{playerid}>3)
	    {
	        OnPlayerCheat(playerid, 19);
	 		return 0;
		}
	}
	else RapidFire{playerid}=0;
	WeaponTime[playerid]=GetTickCount();
	if(hittype == BULLET_HIT_TYPE_VEHICLE && hitid != INVALID_VEHICLE_ID)
	{
		if((floatcmp(floatabs(fX), 100.0) == 1) || (floatcmp(floatabs(fY), 100.0) == 1) || (floatcmp(floatabs(fZ), 100.0) == 1))
		{
		    OnPlayerCheat(playerid, 20);
			return 0;
		}
	}
	new Float:Crasher[3];
	GetPlayerPos(playerid,Crasher[0],Crasher[1],Crasher[2]);
	if(Crasher[2]>50000 || Crasher[2]<-50000)
	{
		OnPlayerCheat(playerid, 21);
		return 0;
	}
	new Float:kLibPos[3];
	GetPlayerPos(playerid,kLibPos[0],kLibPos[1],kLibPos[2]);
	if(kLibPos[2]>50000 || kLibPos[2]<-50000)
	{
		OnPlayerCheat(playerid, 22);
		return 0;
	}
	if(hittype == BULLET_HIT_TYPE_PLAYER && (BadFloat(fX) || BadFloat(fY) || BadFloat(fZ)))
	{
	    OnPlayerCheat(playerid, 23);
	    return 0;
	}
	if(hitid != INVALID_PLAYER_ID)
	{
	    if(hitid == 1)
	    {
	        if(IsPlayerInAnyVehicle(playerid)) return false;
	        if(GetPVarInt(playerid,"PlayerInfo_MP_Staus") == 1 && GetPVarInt(hitid,"PlayerInfo_MP_Staus") == 1 || GetPVarInt(playerid,"PlayerInfo_MP_Staus") == 2 && GetPVarInt(hitid,"PlayerInfo_MP_Staus") == 2) { SCM(playerid, -1, "Не стреляйте по своим!"); return 0; }
	    }
	}
	if(GetWeaponSlotEx(weaponid) >= 0 && GetPVarInt(playerid, "check_car_kick") < gettime() && !IsPlayerInAnyVehicle(playerid))
	{
	   	SetPVarInt(playerid, "NewPlayerAmmo", GetPlayerAmmo(playerid));
		if(GetPVarInt(playerid, "NewPlayerAmmo") != GetPVarInt(playerid, "PlayerAmmo"))
		{
			OnPlayerAmmoChange(playerid, GetPVarInt(playerid, "NewPlayerAmmo"), GetPVarInt(playerid, "PlayerAmmo"));
			SetPVarInt(playerid, "PlayerAmmo", GetPVarInt(playerid, "NewPlayerAmmo"));
		}
		if(AGun[playerid][weaponid] == false) return OnPlayerCheat(playerid, 24);
		if(AGunAmmo[playerid][weaponid] < 1) return OnPlayerCheat(playerid, 25);
		else AGunAmmo[playerid][weaponid]--;
	}
	return 1;
}

publics: CheckCallback(playerid,i)
{
	if(!PlayerInfo[i][pLogin]) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок не авторизирован");
	if(!IsPlayerConnected(i) || i == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "Игрок не найден");
	if(PlayerInfo[i][bAdmin] < 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок не администратор");
	new nicks[24], DataPostavlen[30], LastVhod[30];
	new q = kicks[i], w = bans[i], e = warns[i], r = pms[i], t = jails[i];
	cache_get_field_content(0, "Postavil", nicks, connects, 24);
	cache_get_field_content(0, "Data", DataPostavlen, connects, 30);
	cache_get_field_content(0, "LastCon", LastVhod, connects, 30);
	format(stringer, 500, "{FFFFFF}Статистика администратора: {"#cINFO"}%s{FFFFFF}\n\nКикнул: {"#cINFO"}%d{FFFFFF} раз\nЗабанил: {"#cINFO"}%d{FFFFFF} раз\nЗаварнил: {"#cINFO"}%d{FFFFFF} раз\nОтветил игроку: {"#cINFO"}%d{FFFFFF} раз\nПосадил в тюрьму: {"#cINFO"}%d{FFFFFF} раз\n\nПоставлен администратором: {"#cINFO"}%s{FFFFFF}\nДата выдачи: {"#cINFO"}%s{FFFFFF}\nПоследняя авторизация: {"#cINFO"}%s{FFFFFF}\nДолжность: {"#cINFO"}%s",
	PlayerInfo[i][pNames],q,w,e,r,t,nicks,DataPostavlen,LastVhod,GetAdmin[PlayerInfo[i][bAdmin]-1]);
	SPD(playerid, 339, DIALOG_STYLE_MSGBOX, "{"#cBLUE"}Информация о данном администраторе", stringer, "Принять","");
	return 1;
}

stock PlayerSpects(playerid,i)
{
	if(!PlayerInfo[i][pLogin]) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок не авторизирован");
	if(!IsPlayerConnected(i) || i == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "Игрок не найден");
	if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
	{
		GetPlayerPos(playerid, RINFO[playerid][sPos][0], RINFO[playerid][sPos][1], RINFO[playerid][sPos][2]);
		GetPlayerFacingAngle(playerid, RINFO[playerid][sPos][3]);
		RINFO[playerid][sInt] = GetPlayerInterior(playerid);
		RINFO[playerid][sVirt] = GetPlayerVirtualWorld(playerid);
	}
	SCM(playerid, COLOR_GREY, "Для того что бы включить мышку, нажмите на клавишу F");
	TogglePlayerSpectating(playerid, true);
	SetPlayerInterior(playerid,GetPlayerInterior(i));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(i));
	if(IsPlayerInAnyVehicle(i)) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(i));
	else PlayerSpectatePlayer(playerid, i);
	RINFO[playerid][sID] = i;
	for(new x; x < 15; x++) TextDrawShowForPlayer(playerid, ReconText[x]);
	for(new x; x < 2; x ++) PlayerTextDrawShow(playerid, ReconPlayerText[playerid][x]);
	return 1;
}
stock NextRecon(i)
{
	for(new x = 15; x < 32; x++) TextDrawHideForPlayer(i, ReconText[x]);
	if(RINFO[i][sSer] == true)
	{
		RINFO[i][sSer] = false;
		return 0;
	}
	new h,y;
	switch(RINFO[i][Schoice])
	{
		case 1:h = 15,y = 19;
		case 2:h = 19,y = 24;
		case 3:h = 24,y = 26;
		case 4:h = 26,y = 29;
		case 5:h = 29,y = 32;
	}
	for(new x = h; x < y; x++) TextDrawShowForPlayer(i, ReconText[x]);
	RINFO[i][sSer] = true;
	return 1;
}
stock ResetTDRecon(playerid)
{
	if(RINFO[playerid][Schoice] == 0) return 0;
	for(new x = 15; x < 32; x++) TextDrawHideForPlayer(playerid, ReconText[x]);
	return 1;
}

stock GivePlayerWeaponAC(player,weapid,ammo,bool:write=true)
{
	new slot = GetWeaponSlotEx(weapid);
	PlayerInfo[player][pAmmo][slot] += ammo;
	PlayerInfo[player][pGun][slot] = weapid;

	if(write == false) return GivePlayerWeapon(player,weapid,ammo);

	switch(weapid)
	{
	case 23:
		{
			AGun[player][24] = false;
			if(AGunAmmo[player][24]>0)
			{
				AGunAmmo[player][weapid] = AGunAmmo[player][24] + ammo;
				AGunAmmo[player][24] = 0;
			}
			else AGunAmmo[player][weapid] += ammo;
		}
	case 24:
		{
			AGun[player][23] = false;
			if(AGunAmmo[player][23]>0)
			{
				AGunAmmo[player][weapid] = AGunAmmo[player][23] + ammo;
				AGunAmmo[player][23] = 0;
			}
			else AGunAmmo[player][weapid] += ammo;

		}
	case 30:
		{
			AGun[player][31] = false;
			if(AGunAmmo[player][31]>0)
			{
				AGunAmmo[player][weapid] = AGunAmmo[player][31] + ammo;
				AGunAmmo[player][31] = 0;
			}
			else AGunAmmo[player][weapid] += ammo;
		}
	case 31:
		{
			AGun[player][30] = false;
			if(AGunAmmo[player][30]>0)
			{
				AGunAmmo[player][weapid] = AGunAmmo[player][30] + ammo;
				AGunAmmo[player][30] = 0;
			}
			else AGunAmmo[player][weapid] += ammo;
		}
	default: AGunAmmo[player][weapid] += ammo;
	}
	AGun[player][weapid] = true;
	GivePlayerWeapon(player,weapid,ammo);
	return 1;
}
#define GivePlayerWeapon GivePlayerWeaponAC
stock SetPlayerHealthAC(playerid, Float:health)
{
	if(health<0.0) health=0.0;
	if(health>100.0) health = 100.0;
	PlayerInfo[playerid][pHealthPlayer] = health;
    SetPlayerHealth(playerid,health);
	return 1;
}

stock SetPlayerArmourAC(playerid, Float: Arm)
{
	if(IsPlayerConnected(playerid)) Armour[playerid] = Arm,SetPlayerArmour(playerid, Arm);
	return 1;
}
stock SetPlayerSkills(playerid)
{
	if(PlayerInfo[playerid][pSkills][0] >= 100) SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 1000); else SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 0);
	if(PlayerInfo[playerid][pSkills][1] >= 100) SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 1000); else SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 0);
	if(PlayerInfo[playerid][pSkills][2] >= 100) SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 1000); else SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 0);
	if(PlayerInfo[playerid][pSkills][3] >= 100) SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 1000); else SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 0);
	if(PlayerInfo[playerid][pSkills][4] >= 100) SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 1000); else SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 0);
	if(PlayerInfo[playerid][pSkills][5] >= 100) SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 1000); else SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 0);
	return 1;
}
stock GetPlayerID(string[])
{
	foreach(new i: Player)
	{
		if(strcmp(PlayerInfo[i][pNames], string, true, strlen(string)) == 0) { return i; }
	}
	return INVALID_PLAYER_ID;
}
stock SendHelperMessage(color, string[])
{
	foreach(new i: Player)
	{
		if(PlayerInfo[i][pHelper] > 0) SCM(i, color, string);
	}
}

stock IsAnyPlayerInVehicle(vehicleid,seat)
{
	foreach(new i: Player)
	{
		if (IsPlayerInVehicle(i, vehicleid) && GetPlayerVehicleSeat(i) == seat) return 1;
	}
	return 0;
}

stock KickEx(playerid,nomer) return SetTimerEx("PlayerKick",25,false,"dd", playerid,nomer);

publics: PlayerKick(playerid,nomerkick)
{
	if(!IsPlayerConnected(playerid)) return 1;
	printf("Player ID: %d, Player Name: %s, Kick Reason: %d",playerid,PlayerInfo[playerid][pNames],nomerkick);
	Kick(playerid);
	return 1;
}
stock RemoveFromVehicle(playerid)
{
	SetPVarInt(playerid, "RemoveCar", GetPlayerVehicleID(playerid));
	RemovePlayerFromVehicle(playerid);
	SetTimerEx("CheckCar",3000,false,"d", playerid);
	return 1;
}
publics: CheckCar(playerid)
{
	if(IsPlayerInVehicle(playerid, GetPVarInt(playerid, "RemoveCar"))) return OnPlayerCheat(playerid, 26);
	return 1;
}
forward GETHP(playerid);
public GETHP(playerid)
{
	GetPlayerHealth(playerid,GMHP[playerid][1]);
	GetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][1]);
	if(!IsPlayerInAnyVehicle(playerid))
	{
		if(GMHP[playerid][1] >= 100.0)
		{
			format(stringer, MAX_STR, "%s[%d] был проверен на GM. {FF6F00}Ответ: GM выявлено. - Если у игрока броня - ложный показ 'ГМ'", PlayerInfo[playerid][pNames],playerid);
			ABroadCast(COLOR_GREEN,stringer,2);
			SetPlayerHealthAC(playerid, GMHP[playerid][0]);
			SetPlayerArmourAC(playerid, GMARMOUR[playerid][0]);
			return 1;
		}
		else
		{
			format(stringer, MAX_STR, "%s[%d] был проверен на GM. {FFFFFF}Ответ: GM не выявлено.", PlayerInfo[playerid][pNames],playerid);
			ABroadCast(COLOR_GREEN,stringer,2);
			SetPlayerHealthAC(playerid, GMHP[playerid][0]);
			SetPlayerArmourAC(playerid, GMARMOUR[playerid][0]);
			return 1;
		}
	}
	else
	{
		if(VEHHP[playerid][1] >= 9999.0)
		{
			format(stringer, MAX_STR, "%s[%d] был проверен на GM car. {FF6F00}Ответ: GM car выявлено.", PlayerInfo[playerid][pNames],playerid);
			ABroadCast(COLOR_GREEN,stringer,2);
			SetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][0]);
			return 1;
		}
		else
		{
			format(stringer, MAX_STR, "%s[%d] был проверен на GM car. {FFFFFF}Ответ: GM car не выявлено.", PlayerInfo[playerid][pNames],playerid);
			ABroadCast(COLOR_GREEN,stringer,2);
			SetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][0]);
			return 1;
		}
	}
}
public OnVehicleSpawn(vehicleid)
{
	VehInfo[vehicleid][vFuel] = 50;
	if(Taxi_Duty[vehicleid]) Taxi_Duty[vehicleid] = 0;
	if(Start{vehicleid} == true)
	{
		DestroyDynamic3DTextLabel(mats3Dtxt[vehicleid]);
		DestroyPickup(autopick_mats[vehicleid]);
		Start{vehicleid} = false;
	}
	foreach(new i: Player)
	{
	    if(vehicleid == caridhouse[i]) LoadCarPlayer(i, 1);
	    else if(vehicleid == GetPVarInt(i, #vehicle_id_two)) LoadCarPlayer(i, 2);
		if(GetPVarInt(i, #arenda_took) == vehicleid && GetPVarInt(i, #arenda_took) && GetPVarInt(i, #check_arenda_moped))
		{
			DestroyVehicleEx(vehicleid);
			DeletePVar(i, #arenda_took);
			DeletePVar(i, #check_arenda_moped);
			SendClientMessage(i,COLOR_GREY,"Ваш арендованый мопед был удален!");
		}
		if(GetPVarInt(i, #busID) == vehicleid)
		{
		    DeletePVar(i, #busID);
			DeletePVar(i, #busRoute);
			DeletePVar(i, #busMoney);
			DeletePVar(i, #busPos);
			SCM(i, COLOR_GREY, "Ваше рабочее транспортое средство было отбуксировано!");
			break;
		}
	}
	if(vehicleid == fbicar[2])
	{
		police[fbicar[2]] = CreateObject(19419,0,0,0,0,0,0,100.0);
		AttachObjectToVehicle(police[fbicar[2]], fbicar[2], 0.0, 0.0, 0.85, 0.0, 0.0, 0.0);
		AddVehicleComponent(fbicar[2], 1010);
		AddVehicleComponent(fbicar[2], 1170);
		AddVehicleComponent(fbicar[2], 1029);
		AddVehicleComponent(fbicar[2], 1030);
		AddVehicleComponent(fbicar[2], 1031);
		AddVehicleComponent(fbicar[2], 1033);
		AddVehicleComponent(fbicar[2], 1139);
		AddVehicleComponent(fbicar[2], 1140);
	}
	else if(vehicleid == fbicar[3])
	{
		police[fbicar[3]] = CreateObject(19419,0,0,0,0,0,0,100.0);
		AttachObjectToVehicle(police[fbicar[3]], fbicar[3], 0.0, 0.0, 0.85, 0.0, 0.0, 0.0);
		AddVehicleComponent(fbicar[3], 1010);
		AddVehicleComponent(fbicar[3], 1170);
		AddVehicleComponent(fbicar[3], 1029);
		AddVehicleComponent(fbicar[3], 1030);
		AddVehicleComponent(fbicar[3], 1031);
		AddVehicleComponent(fbicar[3], 1033);
		AddVehicleComponent(fbicar[3], 1139);
		AddVehicleComponent(fbicar[3], 1140);
	}
	else if(vehicleid == fbicar[4])
	{
		police[fbicar[4]] = CreateObject(19419,0,0,0,0,0,0,100.0);
		AttachObjectToVehicle(police[fbicar[4]], fbicar[4], 0.0, 0.0, 0.85, 0.0, 0.0, 0.0);
		AddVehicleComponent(fbicar[4], 1010);
		AddVehicleComponent(fbicar[4], 1170);
		AddVehicleComponent(fbicar[4], 1029);
		AddVehicleComponent(fbicar[4], 1030);
		AddVehicleComponent(fbicar[4], 1031);
		AddVehicleComponent(fbicar[4], 1033);
		AddVehicleComponent(fbicar[4], 1139);
		AddVehicleComponent(fbicar[4], 1140);
	}
	return 1;
}

publics: FindPlayerInTable(playerid, race_check)
{
	if(race_check != g_MysqlRaceCheck[playerid]) return KickEx(playerid, 293);
	SetPlayerPos(playerid, 327.2961,1362.7694,501.9839), SetPlayerFacingAngle(playerid, 358.6395);
	SetPlayerSkin(playerid, 22), ApplyAnimation(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
	SetPlayerVirtualWorld(playerid, playerid);
	InterpolateCameraPos(playerid, 310.478637, 1365.831420, 503.723358, 329.308654, 1365.550415, 503.236999, 15000);
	InterpolateCameraLookAt(playerid, 315.300384, 1364.896118, 502.787506, 326.966979, 1361.284912, 502.087219, 15000);
	if(!cache_get_row_count(connects)) Show_TextRegister(playerid);
	else
	{
		Show_TextLogin(playerid);
		PlayerInfo[playerid][pID] = cache_get_field_content_int(0, "id", connects);
		printf("FindPlayerInTable | %s[%i] - %i",PlayerInfo[playerid][pNames], playerid, PlayerInfo[playerid][pID]);
	}
	return 1;
}
stock Show_TextLogin(playerid)
{
	TextDraw_Login_2[playerid][0] = CreatePlayerTextDraw(playerid, 215.699981, 153.999969, PlayerInfo[playerid][pNames]);
	PlayerTextDrawLetterSize(playerid, TextDraw_Login_2[playerid][0], 0.194499, 0.890375);
	PlayerTextDrawAlignment(playerid, TextDraw_Login_2[playerid][0], 1);
	PlayerTextDrawColor(playerid, TextDraw_Login_2[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, TextDraw_Login_2[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, TextDraw_Login_2[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, TextDraw_Login_2[playerid][0], 0x00000000);
	PlayerTextDrawFont(playerid, TextDraw_Login_2[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, TextDraw_Login_2[playerid][0], 1);
	PlayerTextDrawShow(playerid, TextDraw_Login_2[playerid][0]);

	TextDraw_Login_2[playerid][1] = CreatePlayerTextDraw(playerid, 267.200134, 197.518554, "query");
	PlayerTextDrawLetterSize(playerid, TextDraw_Login_2[playerid][1], 0.213499, 0.799375);
	PlayerTextDrawAlignment(playerid, TextDraw_Login_2[playerid][1], 2);
	PlayerTextDrawColor(playerid, TextDraw_Login_2[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, TextDraw_Login_2[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, TextDraw_Login_2[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, TextDraw_Login_2[playerid][1], 0x00000000);
	PlayerTextDrawFont(playerid, TextDraw_Login_2[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, TextDraw_Login_2[playerid][1], 1);
	PlayerTextDrawShow(playerid, TextDraw_Login_2[playerid][1]);

	for(new i;i<sizeof(TextDraw_Login);i++) TextDrawShowForPlayer(playerid,TextDraw_Login[i]);
	SetPVarInt(playerid,"Show_TextLogin",true);
	SelectTextDraw(playerid, COLOR_LIGHTBLUE);
}
stock Hide_TextLogin(playerid)
{
	for(new i;i<2;i++) PlayerTextDrawDestroy(playerid, TextDraw_Login_2[playerid][i]);
	for(new i;i<sizeof(TextDraw_Login);i++) TextDrawHideForPlayer(playerid,TextDraw_Login[i]);
	DeletePVar(playerid,"Show_TextLogin");
	CancelSelectTextDraw(playerid);
}
stock Hide_TextRegister(playerid)
{
	for(new i;i<3;i++) PlayerTextDrawDestroy(playerid, TextDraw_Register_2[playerid][i]);
	for(new i;i<sizeof(TextDraw_Register);i++) TextDrawHideForPlayer(playerid,TextDraw_Register[i]);
	DeletePVar(playerid,"Show_TextRegister");
}

stock Show_TextRegister(playerid)
{
	TextDraw_Register_2[playerid][0] = CreatePlayerTextDraw(playerid, 215.699981, 153.999969, PlayerInfo[playerid][pNames]);
	PlayerTextDrawLetterSize(playerid, TextDraw_Register_2[playerid][0], 0.194499, 0.890375);
	PlayerTextDrawAlignment(playerid, TextDraw_Register_2[playerid][0], 1);
	PlayerTextDrawColor(playerid, TextDraw_Register_2[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, TextDraw_Register_2[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, TextDraw_Register_2[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, TextDraw_Register_2[playerid][0], 0x00000000);
	PlayerTextDrawFont(playerid, TextDraw_Register_2[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, TextDraw_Register_2[playerid][0], 1);
	PlayerTextDrawShow(playerid,TextDraw_Register_2[playerid][0]);

	TextDraw_Register_2[playerid][1] = CreatePlayerTextDraw(playerid, 246.600036, 199.587509, "qwerty");
	PlayerTextDrawLetterSize(playerid, TextDraw_Register_2[playerid][1], 0.211500, 0.733749);
	PlayerTextDrawAlignment(playerid, TextDraw_Register_2[playerid][1], 1);
	PlayerTextDrawColor(playerid, TextDraw_Register_2[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, TextDraw_Register_2[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, TextDraw_Register_2[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, TextDraw_Register_2[playerid][1], 0x00000000);
	PlayerTextDrawFont(playerid, TextDraw_Register_2[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, TextDraw_Register_2[playerid][1], 1);
	PlayerTextDrawShow(playerid,TextDraw_Register_2[playerid][1]);

	TextDraw_Register_2[playerid][2] = CreatePlayerTextDraw(playerid, 248.050003, 243.506271, "qwerty");
	PlayerTextDrawLetterSize(playerid, TextDraw_Register_2[playerid][2], 0.211500, 0.733749);
	PlayerTextDrawAlignment(playerid, TextDraw_Register_2[playerid][2], 1);
	PlayerTextDrawColor(playerid, TextDraw_Register_2[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, TextDraw_Register_2[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, TextDraw_Register_2[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, TextDraw_Register_2[playerid][2], 0x00000000);
	PlayerTextDrawFont(playerid, TextDraw_Register_2[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, TextDraw_Register_2[playerid][2], 1);
	PlayerTextDrawShow(playerid,TextDraw_Register_2[playerid][2]);

	for(new i;i<sizeof(TextDraw_Register)-2;i++) TextDrawShowForPlayer(playerid, TextDraw_Register[i]);
	SetPVarInt(playerid,"Show_TextRegister",true);
	SelectTextDraw(playerid, COLOR_LIGHTBLUE);
}
/*stock RegisterDialog(playerid)
{
	format(stringer, BIG_SIZE,"{FFFFFF}Добро пожаловать на сервер {FF6F00}Inspire Role Play{FFFFFF}.\nВаш логин: %s\nВведите пароль для вашего аккаунта\nОн будет запрашиваться каждый раз при входе на сервер\n\nПримечание:\n- Пароль должен состоять из цифр\n- Также используйте дополнительные символы\n- Используйте от 5 до 16 цифр / букв / символов \n",PlayerInfo[playerid][pNames]);
	SPD(playerid,1,DIALOG_STYLE_INPUT,"{FF6F00}Регистрация аккаунта",stringer,"Далее","Отмена");
	return 1;
}
stock LoginDialog(playerid)
{
	new years, months, days,data[32],hour1, minute1, second1;
	getdate(years, months, days);
	gettime(hour1, minute1, second1);
	format(data, 32, "%02d.%02d.%04d", days, months, years);
	format(stringer,BIG_SIZE,"{FFFFFF}Добро пожаловать на сервер {FF6F00}Inspire Role Play{FFFFFF}\nВаш ник: {FF6F00}%s{FFFFFF}\nДата и время последнего входа: {FF6F00}%s %d:%d:%d\n", PlayerInfo[playerid][pNames], data, hour1, minute1, second1);
	SPD(playerid,2,DIALOG_STYLE_PASSWORD,"{FF6F00}Авторизация аккаунта",stringer,"Войти","Отмена");
	return 1;
}*/
stock OnPlayerSaveAccount(playerid)
{
	if(PlayerInfo[playerid][pLogin] != true) return print("Ошибка сохранения | Игрок не авторизован");
	stringer="";
	format(stringer,sizeof(stringer),"UPDATE `accounts` SET `pLevel` = '%d',`pPhousekey` = '%d',`pPbiskey` = '%d',`pFuelcar` = '%f',`pContract` = '%d',`pCar` = '%d',`pCar2` = '%d',`pDMInections` = '%d',`pDRInections` = '%d',`pSex` = '%d',`pMuted` = '%d',`pExp` = '%d',`pCash` = '%d',`pJailed` = '%d',`pJailTime` = '%d',`pMats` = '%d',`pDrugs` = '%d',`pLRInections` = '%d',`pMRInections` = '%d',",
	PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pHouse],PlayerInfo[playerid][pBusiness],
	PlayerInfo[playerid][pFuelcar],PlayerInfo[playerid][pContract],
	PlayerInfo[playerid][pCar][0],PlayerInfo[playerid][pCar][1],
	PlayerInfo[playerid][pDMInections],PlayerInfo[playerid][pDRInections],PlayerInfo[playerid][pSex],
	PlayerInfo[playerid][pMuted],PlayerInfo[playerid][pExp],
	PlayerInfo[playerid][pCash],PlayerInfo[playerid][pJailed],PlayerInfo[playerid][pJailTime],
	PlayerInfo[playerid][pMats],PlayerInfo[playerid][pDrugs],
	PlayerInfo[playerid][pLRInections],PlayerInfo[playerid][pMRInections]);

	format(stringer,sizeof(stringer),"%s `pSDPistol` = '%d',`pDesertEagle` = '%d',`pShotGun` = '%d',`pMP5` = '%d',`pAK47` = '%d',`pM4` = '%d',`pChar` = '%d',`pModel` = '%d',`pRKInections` = '%d',`pJob` = '%d',`pPnumber` = '%d',`pPayDayHad` = '%d',`pWarns` = '%d',`punWarns` = '%d',`punWarnstime` = '%d',`pFuel` = '%d',`pTut` = '%d',`pNumbercar` = '%s',`pIpReg` = '%s',`family` = '%d',`pIP` = '%s',",stringer,
	PlayerInfo[playerid][pSkills][0],PlayerInfo[playerid][pSkills][1],PlayerInfo[playerid][pSkills][2],
	PlayerInfo[playerid][pSkills][3],PlayerInfo[playerid][pSkills][4],
	PlayerInfo[playerid][pSkills][5],PlayerInfo[playerid][pChar],
	PlayerInfo[playerid][pModel],PlayerInfo[playerid][pRKInections],PlayerInfo[playerid][pJob],
	PlayerInfo[playerid][pPnumber],PlayerInfo[playerid][pPayDayHad],
	PlayerInfo[playerid][pWarns],PlayerInfo[playerid][punWarns],
	PlayerInfo[playerid][punWarnstime],PlayerInfo[playerid][pFuel],PlayerInfo[playerid][pTut],
	PlayerInfo[playerid][pNumbercar],PlayerInfo[playerid][pIpReg],player_family[playerid],PlayerInfo[playerid][pIP]);

	format(stringer,sizeof(stringer),"%s `pMarried` = '%d',`pMuteTime` = '%d',`pBank` = '%d',`pBoxSkill` = '%d',`pKongfuSkill` = '%d',`pKickboxSkill` = '%d',`pHospital` = '%d',`pZakonp` = '%d',`pHotel` = '%d', `pPrison` = '%d', `pPrisonTime` = '%d', `WarnAdmin` = '%s', `WarnReason` = '%s', `WarnOffline` = '%d', `pVipTime` = '%d',`pVipData` = '%d' WHERE `id` = '%i' LIMIT 1", stringer,
	PlayerInfo[playerid][pMarried],PlayerInfo[playerid][pMuteTime],
	PlayerInfo[playerid][pBank],PlayerInfo[playerid][pBoxSkill],PlayerInfo[playerid][pKongfuSkill],
	PlayerInfo[playerid][pKickboxSkill],PlayerInfo[playerid][pHospital],PlayerInfo[playerid][pZakonp],
	PlayerInfo[playerid][pHotel],PlayerInfo[playerid][pPrison][0], PlayerInfo[playerid][pPrison][1],
	PlayerInfo[playerid][WarnAdmin],PlayerInfo[playerid][WarnReason],
	PlayerInfo[playerid][WarnOffline],PlayerInfo[playerid][pVipTime],PlayerInfo[playerid][pVipData],PlayerInfo[playerid][pID]);

	mysql_empty(connects, stringer);
	printf("Name: %s [%d] | pID: [%d] - сохранен",PlayerInfo[playerid][pNames],playerid,PlayerInfo[playerid][pID]);
	return 1;
}
publics: OffWarn(playerid,tmp[],reason[])
{
	new rows = cache_get_row_count(connects);
	if(!rows) return SCMF(playerid, COLOR_GREY, "[ MySql ] Аккаунт %s не найден в базе данных.",tmp);
	if(!strcmp(tmp, FD1, true) || !strcmp(tmp, FD2, true) || !strcmp(tmp, FD3, true)) return SCM(playerid, COLOR_WHITE, "Основателей запрещено варнить");
	mysql_format(connects, stringer, 230, "UPDATE `accounts` SET `pWarns` = '1', `pLRInections` = '0', `pMRInections` = '0', `pRKInections` = '0', `punWarns` = '1', `WarnAdmin` = '%s', `WarnReason` = '%s', `WarnOffline` = '1' WHERE `id` = '%d'",PlayerInfo[playerid][pNames],reason,tmp);
	mysql_empty(connects, stringer);
	SCMF(playerid, COLOR_GREY, "[ MySql ] Аккаунт %s успешно был предупреждён(warn).",tmp);
	format(stringer,MAX_STR+15, "%s получил оффлайн предупреждение от администратора: %s. Причина: %s",tmp,PlayerInfo[playerid][pNames], reason);
	SendClientMessageToAll(COLOR_LIGHTRED, stringer);
	return 1;
}

publics: Delete(playerid,tmp[])
{
	new rows = cache_get_row_count(connects);
	if(!rows) return SCMF(playerid, COLOR_GREY, "[ MySql ] Аккаунт %s не найден в базе данных.",tmp);
	mysql_format(connects, stringer,MAX_STR,"DELETE FROM `accounts` WHERE `Name` = '%s'",tmp);
	mysql_empty(connects, stringer);
	SCMF(playerid,COLOR_YELLOW,"Аккаунт с именем %s был успешно удален!",tmp);
	return 1;
}

publics: OffLeader(playerid,tmp[])
{
	new rows = cache_get_row_count(connects);
	if(!rows) return SCMF(playerid, COLOR_GREY, "[ MySql ] Аккаунт %s не найден в базе данных.",tmp);
	mysql_format(connects, stringer, MAX_STR, "UPDATE `accounts` SET `pLRInections` = '0',`pMRInections` = '0',`pRKInections` = '0' WHERE `Name` = '%s'", tmp);
	mysql_empty(connects, stringer);
	SCMF(playerid, COLOR_GREY, "[ MySql ] Аккаунт %s был снят с поста лидера", tmp);
	return 1;
}

publics: OffHelper(playerid,tmp[])
{
	new rows = cache_get_row_count(connects);
	if(!rows) return SCMF(playerid, COLOR_GREY, "[ MySql ] Аккаунт %s не найден в базе данных.",tmp);
	mysql_format(connects, stringer, MAX_STR, "UPDATE `accounts` SET `pHelper` = '0' WHERE `Name` = '%s'", tmp);
	mysql_empty(connects, stringer);
	SCMF(playerid, COLOR_GREY, "[ MySql ] Аккаунт %s был снят с поста хелпера", tmp);
	return 1;
}

publics: OFFUNINVITE(playerid,params[])
{
	new giveplayerid;
	sscanf(params[0],"u",giveplayerid);
	if(IsPlayerConnected(giveplayerid)) return SCM(playerid, COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Игрок в сети.");
	mysql_format(connects, stringer, MAX_STR, "SELECT `Name` FROM `accounts` WHERE `Name` = '%s'", params[0]);
	mysql_tquery(connects, stringer, "OffUninvite", "ds", playerid, params[0]);
	return 1;
}
publics: OFFMM(playerid)
{
	new rows = cache_get_row_count(connects),nicks[24],lastvhod[30],rank;
	if(!rows) return SCM(playerid,COLOR_GREY,"В Вашей фракции никого нет.");
	SCM(playerid,COLOR_BLUE,"Состав фракции:");
	for(new i; i < rows; i++)
	{
		cache_get_field_content(i, "Name", nicks, connects, sizeof ( nicks ));
		rank = cache_get_field_content_int(i, "pRKInections", connects);
		cache_get_field_content(i, "pGetonDate", lastvhod, connects, sizeof ( lastvhod ));
		SCMF(playerid,COLOR_BLUE,"%s [Ранг: %d] [Последний вход: %s]",nicks,rank,lastvhod);
	}
	return 1;
}

publics: getonDate(playerid, name[])
{
	if(!cache_get_row_count(connects)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Такого аккаунта не существует.");
	new GetonDate[30];
	cache_get_field_content(0, "pGetonDate", GetonDate, connects, 30);
	SCMF(playerid, COLOR_GREY, "Name: %s | Последний раз авторизовался: %s", name, GetonDate);
	return 1;
}

publics: LoginCallback(playerid)
{
	new rows = cache_get_row_count(connects);
	if(!rows)
	{
		if(GetPVarInt(playerid, "wrongPass") == 2) return SCM(playerid,COLOR_GREY,"Вы кикнуты с сервера за неверный ввод пароля. Пожалуйста попробуйте позже!"), KickEx(playerid,32);
		SetPVarInt(playerid, "wrongPass", GetPVarInt(playerid, "wrongPass")+1);
		format(stringer,MAX_STR, "{FFFFFF}Внимание! Вы ввели неправильный пароль. У Вас осталось {FF6F00}%d попыток.{FFFFFF}", 3 - GetPVarInt(playerid, "wrongPass"));
		SCM(playerid, CORANGE, stringer);
		return 1;
	}
	if(PlayerInfo[playerid][pLoadNames] != PlayerInfo[playerid][pNames])
	{
	    SCM(playerid, COLOR_REDD, "Уважаемый игрок! В данный момент некие проблемы с сервером!");
	    SCM(playerid, COLOR_REDD, "База данных перегружена и не может обработать Ваш аккаунт!");
	    SCM(playerid, COLOR_REDD, "Зайдите через некоторое время (через 2-5 минут).");
	    SCM(playerid, COLOR_REDD, "Мы делаем все, чтобы защитить Ваш аккаунт от слета!");
	    SCM(playerid, COLOR_REDD, "По возможности отправьте скриншот с этой записью в раздел Баги/Ошибки.");
	    SCMF(playerid, COLOR_GREEN, "Connect Name: %s | Load Name: %s | ID: %i", PlayerInfo[playerid][pNames], PlayerInfo[playerid][pLoadNames], PlayerInfo[playerid][pID]);
	    return KickEx(playerid, 2259);
	}
	printf("[RegCheck] %s > %s", PlayerInfo[playerid][pNames], PlayerInfo[playerid][pLoadNames]);
	check_block_account(playerid);
	PlayerInfo[playerid][pLogin] = true;
	if(GetPVarInt(playerid,"status_registration")) PlayerInfo[playerid][pID] = cache_get_field_content_int(0, "id", connects), SpawnPlayer(playerid);
	else SCMF(playerid, -1, "Авторизация аккаунта прошла успешно. Ваш номер аккаунта: %i", PlayerInfo[playerid][pID]), TogglePlayerSpectating(playerid, false);
	new query[256];
	cache_get_field_content(0, "pKey", PlayerInfo[playerid][pKey], connects, 30);
	PlayerInfo[playerid][pLevel] = cache_get_field_content_int(0, "pLevel", connects);
	PlayerInfo[playerid][pHouse] = cache_get_field_content_int(0, "pPhousekey", connects);
	PlayerInfo[playerid][pHotel] = cache_get_field_content_int(0, "pHotel", connects);
	PlayerInfo[playerid][pBusiness] = cache_get_field_content_int(0, "pPbiskey", connects);
	PlayerInfo[playerid][pFuelBiz] = cache_get_field_content_int(0, "pPsbiskey", connects);
	PlayerInfo[playerid][bAdmin] = cache_get_field_content_int(0, "bAdmin", connects);
	PlayerInfo[playerid][pFuelcar] = cache_get_field_content_float(0, "pFuelcar", connects);
	PlayerInfo[playerid][pContract] = cache_get_field_content_int(0, "pContract", connects);
	PlayerInfo[playerid][pCar][0] = cache_get_field_content_int(0, "pCar", connects);
	PlayerInfo[playerid][pCar][1] = cache_get_field_content_int(0, "pCar2", connects);
	PlayerInfo[playerid][pHelper] = cache_get_field_content_int(0, "pHelper", connects);
	PlayerInfo[playerid][pDMInections] = cache_get_field_content_int(0, "pDMInections", connects);
	PlayerInfo[playerid][pDRInections] = cache_get_field_content_int(0, "pDRInections", connects);
	PlayerInfo[playerid][pSex] = cache_get_field_content_int(0, "pSex", connects);
	PlayerInfo[playerid][pMuted] = cache_get_field_content_int(0, "pMuted", connects);
	PlayerInfo[playerid][pExp] = cache_get_field_content_int(0, "pExp", connects);
	PlayerInfo[playerid][pCash] = cache_get_field_content_int(0, "pCash", connects);
	PlayerInfo[playerid][pJailed] = cache_get_field_content_int(0, "pJailed", connects);
	PlayerInfo[playerid][pJailTime] = cache_get_field_content_int(0, "pJailTime", connects);
	PlayerInfo[playerid][pDrugs] = cache_get_field_content_int(0, "pDrugs", connects);
	PlayerInfo[playerid][pLRInections] = cache_get_field_content_int(0, "pLRInections", connects);
	PlayerInfo[playerid][pMRInections] = cache_get_field_content_int(0, "pMRInections", connects);
	PlayerInfo[playerid][pRKInections] = cache_get_field_content_int(0, "pRKInections", connects);
	PlayerInfo[playerid][pJob] = cache_get_field_content_int(0, "pJob", connects);
	PlayerInfo[playerid][pSkills][0] = cache_get_field_content_int(0, "pSDPistol", connects);
	PlayerInfo[playerid][pSkills][1] = cache_get_field_content_int(0, "pDesertEagle", connects);
	PlayerInfo[playerid][pSkills][2] = cache_get_field_content_int(0, "pShotGun", connects);
	PlayerInfo[playerid][pSkills][3] = cache_get_field_content_int(0, "pMP5", connects);
	PlayerInfo[playerid][pSkills][4] = cache_get_field_content_int(0, "pAK47", connects);
	PlayerInfo[playerid][pSkills][5] = cache_get_field_content_int(0, "pM4", connects);
 	cache_get_field_content(0,"pLics",PlayerInfo[playerid][pLicense], connects, 16);
    sscanf(PlayerInfo[playerid][pLicense], "p<,>a<i>[4]",PlayerInfo[playerid][pLicenses]);
    cache_get_field_content(0,"cVehcom",c_vehicle_components_add[playerid][0], connects, 74);
    cache_get_field_content(0,"cVehcom2",c_vehicle_components_add[playerid][1], connects, 74);
   	sscanf(c_vehicle_components_add[playerid][0], "p<,>a<i>[14]",vehicle_components_add[playerid][0]);
	sscanf(c_vehicle_components_add[playerid][1], "p<,>a<i>[14]",vehicle_components_add[playerid][1]);
	PlayerInfo[playerid][pChar] = cache_get_field_content_int(0, "pChar", connects);
	PlayerInfo[playerid][pModel] = cache_get_field_content_int(0, "pModel", connects);
	PlayerInfo[playerid][pPnumber] = cache_get_field_content_int(0, "pPnumber", connects);
	PlayerInfo[playerid][pPayDayHad] = cache_get_field_content_int(0, "pPayDayHad", connects);
	PlayerInfo[playerid][pWarns] = cache_get_field_content_int(0, "pWarns", connects);
	PlayerInfo[playerid][punWarns] = cache_get_field_content_int(0, "punWarns", connects);
	PlayerInfo[playerid][punWarnstime] = cache_get_field_content_int(0, "punWarnstime", connects);
	PlayerInfo[playerid][pFuel] = cache_get_field_content_int(0, "pFuel", connects);
	PlayerInfo[playerid][pMarried] = cache_get_field_content_int(0, "pMarried", connects);
	PlayerInfo[playerid][pMuteTime] = cache_get_field_content_int(0, "pMuteTime", connects);
	PlayerInfo[playerid][pBank] = cache_get_field_content_int(0, "pBank", connects);
	PlayerInfo[playerid][pBoxSkill] = cache_get_field_content_int(0, "pBoxSkill", connects);
	PlayerInfo[playerid][pKongfuSkill] = cache_get_field_content_int(0, "pKongfuSkill", connects);
	PlayerInfo[playerid][pKickboxSkill] = cache_get_field_content_int(0, "pKickboxSkill", connects);
	PlayerInfo[playerid][pHospital] = cache_get_field_content_int(0, "pHospital", connects);
	PlayerInfo[playerid][pZakonp] = cache_get_field_content_int(0, "pZakonp", connects);
	PlayerInfo[playerid][pVipTime] = cache_get_field_content_int(0, "pVipTime", connects);
	PlayerInfo[playerid][pVipData] = cache_get_field_content_int(0, "pVipData", connects);
	PlayerInfo[playerid][pMestoJail] = cache_get_field_content_int(0, "pMestoJail", connects);
	PlayerInfo[playerid][pWanted] = cache_get_field_content_int(0, "pWanted", connects);
	PlayerInfo[playerid][pHousecash] = cache_get_field_content_int(0, "pHousecash", connects);
	PlayerInfo[playerid][pTut] = cache_get_field_content_int(0, "pTut", connects);
	cache_get_field_content(0, "pNumbercar", PlayerInfo[playerid][pNumbercar], connects, strlen(PlayerInfo[playerid][pNumbercar]));
	cache_get_field_content(0, "pIpReg", PlayerInfo[playerid][pIpReg], connects, strlen(PlayerInfo[playerid][pIpReg]));
	cache_get_field_content(0, "pIP", PlayerInfo[playerid][pIP], connects, strlen(PlayerInfo[playerid][pIP]));
	PlayerInfo[playerid][pAvig] = cache_get_field_content_int(0, "pAvig", connects);
	PlayerInfo[playerid][vig] = cache_get_field_content_int(0, "vig", connects);
	PlayerInfo[playerid][pSpawn] = cache_get_field_content_int(0, "pSpawn", connects);
	PlayerInfo[playerid][CarPos][0] = cache_get_field_content_float(0, "CarX", connects);
	PlayerInfo[playerid][CarPos][1] = cache_get_field_content_float(0, "CarY", connects);
	PlayerInfo[playerid][CarPos][2] = cache_get_field_content_float(0, "CarZ", connects);
	PlayerInfo[playerid][CarPos][3] = cache_get_field_content_float(0, "CarC", connects);
	player_family [ playerid ] = cache_get_field_content_int(0, "family", connects);
	PlayerInfo[playerid][pRubInfo][0] = cache_get_field_content_int(0, "pRub", connects);
	PlayerInfo[playerid][pRubInfo][1] = cache_get_field_content_int(0, "pRubPlus", connects);
	PlayerInfo[playerid][pRubInfo][2] = cache_get_field_content_int(0, "pRubTimePlus", connects);
	PlayerInfo[playerid][pMedCard] = cache_get_field_content_int(0, "pMedCard", connects);
	PlayerInfo[playerid][pVoted] = cache_get_field_content_int(0, "pVoted", connects);
	PlayerInfo[playerid][pAccessories][0] = cache_get_field_content_int(0, "pAcessories1", connects);
	PlayerInfo[playerid][pAccessories][1] = cache_get_field_content_int(0, "pAcessories2", connects);
	PlayerInfo[playerid][PositionAcc][0] = cache_get_field_content_float(0, "ACfOffsetX", connects);
	PlayerInfo[playerid][PositionAcc][1] = cache_get_field_content_float(0, "ACfOffsetY", connects);
	PlayerInfo[playerid][PositionAcc][2] = cache_get_field_content_float(0, "ACfOffsetZ", connects);
	PlayerInfo[playerid][PositionAcc][3] = cache_get_field_content_float(0, "ACfRotX", connects);
	PlayerInfo[playerid][PositionAcc][4] = cache_get_field_content_float(0, "ACfRotY", connects);
	PlayerInfo[playerid][PositionAcc][5] = cache_get_field_content_float(0, "ACfRotZ", connects);
	PlayerInfo[playerid][PositionAcc][6] = cache_get_field_content_float(0, "ACfScaleX", connects);
	PlayerInfo[playerid][PositionAcc][7] = cache_get_field_content_float(0, "ACfScaleY", connects);
	PlayerInfo[playerid][PositionAcc][8] = cache_get_field_content_float(0, "ACfScaleZ", connects);
	PlayerInfo[playerid][pSettings] = cache_get_field_content_int(0, "pSettings", connects);
	PlayerInfo[playerid][pPrison][0] = cache_get_field_content_int(0, "pPrison", connects);
	PlayerInfo[playerid][pPrison][1] = cache_get_field_content_int(0, "pPrisonTime", connects);
	PlayerInfo[playerid][pAdmDonate] = cache_get_field_content_int(0, "donateadm", connects);
	PlayerInfo[playerid][pBonus] = cache_get_field_content_int(0, "bonus", connects);
	
	PlayerInfo[playerid][pBankCard] = cache_get_field_content_int(0, "bankcard", connects);
	PlayerInfo[playerid][pBankCode] = cache_get_field_content_int(0, "bankcode", connects);
	PlayerInfo[playerid][pCardMoney] = cache_get_field_content_int(0, "cardmoney", connects);
	
	PlayerInfo[playerid][pSiga]  = cache_get_field_content_int(0, "sigar");
    PlayerInfo[playerid][pSpal]  = cache_get_field_content_int(0, "spal");
	PlayerInfo[playerid][pSgf] = cache_get_field_content_int(0, "sgf");
	
	cache_get_field_content(0, "WarnAdmin",PlayerInfo[playerid][WarnAdmin],connects,24);
	cache_get_field_content(0, "WarnReason",PlayerInfo[playerid][WarnReason],connects,64);
	PlayerInfo[playerid][WarnOffline] = cache_get_field_content_int(0, "WarnOffline", connects);
	PlayerInfo[playerid][pCarCash][0] = cache_get_field_content_int(0, "pCarCash", connects);
	PlayerInfo[playerid][pCarCash][1] = cache_get_field_content_int(0, "pCarCash2", connects);
	cache_get_field_content(0, "gun", query, connects);
	SetPVarString(playerid,"mysqlgun", query);
	ResetPlayerMoney(playerid);
	SetPlayerSkills(playerid);
	cheaters{playerid} = true;
	PlayerInfo[playerid][pHospital] = 0;
	mytimer[playerid] = SetTimerEx ( "Updating" , 1000 , true , "d" , playerid ) ;
	if(player_family [ playerid ]) family_info [ player_family [ playerid ] ] [ f_online ]++;
	SetPlayerVirtualWorld(playerid, 0);
	myti[playerid] = true;
	if(PlayerInfo[playerid][pCash] <= 0) PlayerInfo[playerid][pCash] = 0;
	if(PlayerInfo[playerid][pFuelcar] <= 0) PlayerInfo[playerid][pFuelcar] = 0;
	if(PlayerInfo[playerid][pHotel] != -1 && HotelInfo[PlayerInfo[playerid][pHotel]][mCar] == 462) HotelInfo[PlayerInfo[playerid][pHotel]][mCar] = 405, SaveHotel(PlayerInfo[playerid][pHotel]);
	if(PlayerInfo[playerid][pCar][0] == 0) PlayerInfo[playerid][pCar][0] = 462;
	if(PlayerInfo[playerid][pCar][1] == 0) PlayerInfo[playerid][pCar][1] = 462;
	if(PlayerInfo[playerid][pChar] == 0) PlayerInfo[playerid][pChar] = 230;
	if(PlayerInfo[playerid][pHouse] != -1)
	{
		if(!strcmp(PlayerInfo[playerid][pNames], HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true)) { }
		else PlayerInfo[playerid][pHouse] = -1;
	}
	if(PlayerInfo[playerid][pBusiness] != -1)
	{
		if(!strcmp(BizInfo[PlayerInfo[playerid][pBusiness]][bOwner], PlayerInfo[playerid][pNames], true)) SCMF(playerid,0x269BB8FF,"Вы являетесь владельцем бизнеса: {FFFFFF}%s", BizInfo[PlayerInfo[playerid][pBusiness]][bName]);
		else PlayerInfo[playerid][pBusiness] = -1;
	}
	if(PlayerInfo[playerid][pFuelBiz] != -1)
	{
		if(!strcmp(SBizzInfo[PlayerInfo[playerid][pFuelBiz]][sOwner], PlayerInfo[playerid][pNames], true)) SCMF(playerid, 0x269BB8FF, "Вы являетесь владельцем заправки номер: {FFFFFF}%d",SBizzInfo[PlayerInfo[playerid][pFuelBiz]][sID]);
		else PlayerInfo[playerid][pFuelBiz] = -1, UpdatePlayerData(playerid, "pPsbiskey", PlayerInfo[playerid][pFuelBiz]);
	}
	if(PlayerInfo[playerid][pHotel] != -1)
	{
		if(!strcmp(HotelInfo[PlayerInfo[playerid][pHotel]][mOwned], PlayerInfo[playerid][pNames], true)) SCMF(playerid, 0x269BB8FF, "Вы проживаете в комнате в отеле под номером: {FFFFFF}%d", HotelInfo[PlayerInfo[playerid][pHotel]][mID]);
		else PlayerInfo[playerid][pHotel] = -1;
	}
	if(player_family[playerid] != 0) SCMF(playerid, 0x269BB8FF, "Вы состоите в семье: {FFFFFF}%s.",family_info [ player_family [ playerid ] ] [ f_name ]);
	if(PlayerInfo[playerid][punWarns] == 1 && PlayerInfo[playerid][pWarns] > 0)
	{
		SCMF(playerid,COLOR_GREY,"Внимание! У вас %d предупреждение", PlayerInfo[playerid][pWarns]);
		SCMF(playerid,COLOR_GREY,"Осталось %d часов до снятия варна", 10 - PlayerInfo[playerid][punWarnstime]);
	}
	if(PlayerInfo[playerid][pHousecash] != 0) SCM(playerid, 0x269BB8FF, "Ваш дом был продан государству за неуплату, заберите деньги за Ваш дом в банке!");
	new year,month,day;
	if(PlayerInfo[playerid][pRubInfo][2] > 0 && PlayerInfo[playerid][pRubInfo][1] > 0)
	{
		new timeRub = getdate(year,month,day);
		new timeRUB = PlayerInfo[playerid][pRubInfo][2]-timeRub;
		if(timeRUB <= 0)
		{
		    SCM(playerid, 0x269BB8FF, "Срок Вашего инвестирования истек.");
		    PlayerInfo[playerid][pRubInfo][2] = 0;
		    PlayerInfo[playerid][pRubInfo][1] = 0;
		}
	}
	if(PlayerInfo[playerid][pCardDate] > 0 && PlayerInfo[playerid][pCardMoney] > 0)
	{
	    new timeCard = getdate(year,month,day);
	    new timeDate = PlayerInfo[playerid][pCardDate]-timeCard;
	    if(timeDate <= 0)
	    {
	        SCM(playerid, COLOR_REDD, "Внимание! Вы не погасили свою задолжность банку вовремя!");
	        SCM(playerid, COLOR_REDD, "Теперь, Вы становитесь задолжником банка!");
	        PlayerInfo[playerid][pCardMoney] -= 250000;
	        SCMF(playerid, COLOR_REDD, "С Вашего счёта на карте снято 250.000$ | Остаток: %i", PlayerInfo[playerid][pCardMoney]);
	    }
	    else if(timeDate > 0)
		{
		    SCM(playerid, COLOR_GREEN, "Внимание! У Вас имеется не погашенная задолжность банку, в размере 250.000$!");
		    SCMF(playerid, -1, "У Вас есть {FF6F00}%d{FFFFFF} дней на погашение задолжности! Иначе Вы становитесь задолжником банку!", PlayerInfo[playerid][pCardMoney]);
		}
	}

	if(PlayerInfo[playerid][pVipTime] > 0 && PlayerInfo[playerid][pDRInections] > 0)
	{
		new curdate11 = getdate(year,month,day);
		new ostalos=PlayerInfo[playerid][pVipTime]-curdate11;
		if(ostalos <= 0)
		{
			SCM(playerid, 0x00b953ff, "Срок действия вашего VIP аккаунта истек.");
			PlayerInfo[playerid][pDRInections] = 0;
			PlayerInfo[playerid][pVipTime] = 0;
			PlayerInfo[playerid][pVipData] = 0;
		}
	}
	if(PlayerInfo[playerid][pDRInections] > 0)
	{
		new tmp2[24+13];
		SCM(playerid, 0xeac700aa,"Здравствуйте VIP игрок!");
		format(tmp2, sizeof(tmp2), "~w~welcome~n~~b~%s", PlayerInfo[playerid][pNames]);
		GameTextForPlayer(playerid, tmp2, 5000, 1);
	}
	else GameTextForPlayer(playerid, "~w~welcome", 5000, 1);
	if(PlayerInfo[playerid][pHotel] != -1)
	{
		new house = PlayerInfo[playerid][pHotel];
		caridhouse[playerid] = CreateVehicleEx(HotelInfo[house][mCar], 1165.4279,-1078.2888,1002.5661,0.3323, vehicle_components_add[playerid][0][0],vehicle_components_add[playerid][0][1],7200);
		VehInfo[caridhouse[playerid]-1][vDrived] = HotelInfo[house][mCarDrived];
		LockCar(caridhouse[playerid]);
		LinkVehicleToInterior(caridhouse[playerid], 1);
		SetVehicleVirtualWorld(caridhouse[playerid], house+50);
		VehInfo[caridhouse[playerid]][vFuel] = PlayerInfo[playerid][pFuelcar]+20;
		SetVehicleNumberPlate(caridhouse[playerid], PlayerInfo[playerid][pNumbercar]);
		AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][2]);
		AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][12]);
		AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][13]);
		if(PJ(caridhouse[playerid]))
		{
			ChangeVehiclePaintjob(caridhouse[playerid], vehicle_components_add[playerid][0][3]);
			AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][4]);
			AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][5]);
			AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][6]);
			AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][7]);
			AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][8]);
			AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][9]);
			AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][10]);
			AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][11]);
		}
	}

	if(PlayerInfo[playerid][pCar][0] == 508)
	{
		caridhouse[playerid] = CreateVehicleEx(PlayerInfo[playerid][pCar][0], PlayerInfo[playerid][CarPos][0],PlayerInfo[playerid][CarPos][1],PlayerInfo[playerid][CarPos][2],PlayerInfo[playerid][CarPos][3], vehicle_components_add[playerid][0][0],vehicle_components_add[playerid][0][1],36000);
  		LockCar(caridhouse[playerid]);
  		VehInfo[caridhouse[playerid]][vFuel] = PlayerInfo[playerid][pFuelcar]+20;
		SetVehicleNumberPlate(caridhouse[playerid], PlayerInfo[playerid][pNumbercar]);
	}

	InitLockDoors(playerid);
	GangZoneShowForPlayer(playerid, ArmyZone, COLOR_YELLOW2);

	if(PlayerInfo[playerid][bAdmin] > 0 && PlayerInfo[playerid][pMRInections] > 0)
	{
		PlayerInfo[playerid][pLRInections] = 0;
		PlayerInfo[playerid][pMRInections] = 0;
		PlayerInfo[playerid][pRKInections] = 0;
	}

	new playersip[16], MySQL[156];
	getdate(year, month, day);
	GetPlayerIp(playerid,playersip,sizeof(playersip));
	format(MySQL, sizeof(MySQL), "UPDATE `accounts` SET `pGetonDate` = '%d/%d/%d', `pGetonIP` = '%s' WHERE `id` = '%d' LIMIT 1",day,month,year,playersip,PlayerInfo[playerid][pID]);
	mysql_empty(connects, MySQL);
	if(PlayerInfo[playerid][bAdmin] > 0 && !GetPVarInt(playerid, "dostup"))
	{
		TogglePlayerControllable(playerid, false);
		SCMF(playerid, COLOR_WHITE, "Уважаемый {FF7800}%s{FFFFFF} вы вошли как {FF7800}%s{FFFFFF} пожалуйста авторизуйтесь: {FF7800}/alogin.",PlayerInfo[playerid][pNames],GetAdmin[PlayerInfo[playerid][bAdmin]-1]);
		mysql_format(connects, stringer, MAX_SQL, "UPDATE `admin` SET  `LastCon` = '%d/%d/%d' WHERE `name` = '%s' LIMIT 1", day,month,year,PlayerInfo[playerid][pNames]);
		mysql_empty(connects, stringer);
		SCMF(playerid, COLOR_WHITE, "[БД]: Активизация Вашего последнего входа прошла успешно. {FF6F00}%d/%d/%d",day,month,year);
	}
	if(PlayerInfo[playerid][WarnOffline])
	{
		format(stringer, 24+124, "{FFFFFF}\tВнимание! Вы получили предупреждение в оффлайне!\n\t\t\tИнформация:\n\n- Имя администратора: {FF6F00}%s{FFFFFF}\n- Причина варна: {FF6F00}%s{FFFFFF}\n\nЕсли Вы считаете, что варн выдан без причины, напишите об этом на форуме.",
		PlayerInfo[playerid][WarnAdmin], PlayerInfo[playerid][WarnReason]);
		ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FF6F00}Ваш аккаунт заварнен!", stringer, "Закрыть","");
	}
	SetPVarInt(playerid,"game_time",1);
	printf("Name: %s [%d] | pID: [%d]",PlayerInfo[playerid][pNames],playerid,PlayerInfo[playerid][pID]);
	return SpawnPlayer(playerid);
}
IsIpFound(const string[])
{
	if(!reklamka) reklamka= regex_build("([0-9]{1,3})[^[:digit:]^[:cntrl:]]{1,3}([0-9]{1,3})[^[:digit:]^[:cntrl:]]{1,3}([0-9]{1,3})[^[:digit:]^[:cntrl:]]{1,3}([0-9]{1,3})");
	return regex_search_exid(string, reklamka);
}

public OnQueryError(errorid, error[], callback[], query[], connectionHandle)
{
	printf("%d, %s, %s, %s, %d", errorid, error, callback, query, connectionHandle);
	switch(errorid)
	{
		case CR_SERVER_GONE_ERROR:
		{
			printf("[R39-2] Потеря соединения с MySQL, перезагрузка...");
			mysql_reconnect(connects);
			new stats[100];
			mysql_stat(stats);
		}
		case ER_SYNTAX_ERROR: printf("Ошибка в синтакте: %s",query);
	}
	printf("%d, %s, %s, %s, %d", errorid, error, callback, query, connectionHandle);
	return 1;
}
public OnRconLoginAttempt(ip[], password[], success)
{
	foreach(new i: Player)
	{
		if(!strcmp(ip, PlayerInfo[i][pIP], true))
		{
			printf("%s пытался войти в RCON используя пароль %s", PlayerInfo[i][pIP], password);
			return Kick(i);
		}
	}
	return 1;
}
publics: UpdateSpeedometr(playerid,speedonly)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return KillTimer(STimer[playerid]);
	new Float:Health,ktext[20],btext[20],ltext[20],Float:X2, Float:Y2, Float:Z2,stext[20],Float:X,Float:Y,Float:Z;
	GetVehicleHealth(GetPlayerVehicleID(playerid),Health);
	if(!speedonly)
	{
		X2 = VehInfo[GetPlayerVehicleID(playerid)-1][vehicleX];
		Y2 = VehInfo[GetPlayerVehicleID(playerid)-1][vehicleY];
		Z2 = VehInfo[GetPlayerVehicleID(playerid)-1][vehicleZ];
		GetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z);
		if(X > 10000.0 || Y > 10000.0 || Z > 10000.0 || X < -10000.0 || Y < -10000.0 || Z < -10000.0)
		{
		    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			OnPlayerCheat(playerid, 27);
			return KillTimer(STimer[playerid]);
		}
		new Float:veloc;
		veloc = PointToPoint3D(X2,Y2,Z2,X,Y,Z)/1000;
		VehInfo[GetPlayerVehicleID(playerid)-1][vDrived] += veloc;
		if(PlayerInfo[playerid][pHouse] != -1 && caridhouse[playerid] == GetPlayerVehicleID(playerid) && GetPlayerVehicleID(playerid) != 462) HouseInfo[PlayerInfo[playerid][pHouse]][CarDrived][0] = VehInfo[GetPlayerVehicleID(playerid)-1][vDrived];
		if(PlayerInfo[playerid][pHouse] != -1 && GetPVarInt(playerid, #vehicle_id_two) == GetPlayerVehicleID(playerid) && GetPlayerVehicleID(playerid) != 462) HouseInfo[PlayerInfo[playerid][pHouse]][CarDrived][1] = VehInfo[GetPlayerVehicleID(playerid)-1][vDrived];
		if(PlayerInfo[playerid][pHotel] != -1 && caridhouse[playerid] == GetPlayerVehicleID(playerid)) HotelInfo[PlayerInfo[playerid][pHotel]][mCarDrived] = VehInfo[GetPlayerVehicleID(playerid)-1][vDrived];
		if(VehInfo[GetPlayerVehicleID(playerid)][vFuel] <= 0)
		{
			GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
			DeletePVar(playerid, "engine_on_off");
			VehInfo[GetPlayerVehicleID(playerid)][vFuel] = 0;
			Engines{GetPlayerVehicleID(playerid)} = false;
		}
		VehInfo[GetPlayerVehicleID(playerid)-1][vehicleX] = X;
		VehInfo[GetPlayerVehicleID(playerid)-1][vehicleY] = Y;
		VehInfo[GetPlayerVehicleID(playerid)-1][vehicleZ] = Z;
	}
	if(gCarLock[GetPlayerVehicleID(playerid)] == true) PlayerTextDrawSetString(playerid, DartProjectTD[18][playerid]," ~r~lock");
	else PlayerTextDrawSetString(playerid, DartProjectTD[18][playerid]," ~g~lock");
	if(Engines{GetPlayerVehicleID(playerid)} == false) PlayerTextDrawSetString(playerid, DartProjectTD[20][playerid]," ~r~off");
	else PlayerTextDrawSetString(playerid, DartProjectTD[20][playerid]," ~g~on");
	format(ktext, 20, "%.0f",VehInfo[GetPlayerVehicleID(playerid)][vFuel]);
	PlayerTextDrawSetString(playerid,DartProjectTD[3][playerid],ktext);
	format(btext, 20, "%d",GetVehicleSpeed(GetPlayerVehicleID(playerid)));
	PlayerTextDrawSetString(playerid,DartProjectTD[1][playerid],btext);
	format(stext,20, "%.1fKM", VehInfo[GetPlayerVehicleID(playerid)-1][vDrived]);
	PlayerTextDrawSetString(playerid, DartProjectTD[14][playerid], stext);
	format(ltext, 20, " %d %", floatround(Health / 10));
	PlayerTextDrawSetString(playerid,DartProjectTD[17][playerid],ltext);
	if(GetVehicleSpeed(GetPlayerVehicleID(playerid)) <= 0) PlayerTextDrawSetString(playerid, DartProjectTD[12][playerid], "~g~N");
	else PlayerTextDrawSetString(playerid, DartProjectTD[12][playerid], "~w~N");
	if(GetVehicleSpeed(GetPlayerVehicleID(playerid)) >= 1 && GetVehicleSpeed(GetPlayerVehicleID(playerid)) < 35)
	{
		PlayerTextDrawSetString(playerid, DartProjectTD[8][playerid], "~g~1"), VehInfo[GetPlayerVehicleID(playerid)][vFuel] -= 0.05;
		if((caridhouse[playerid] == GetPlayerVehicleID(playerid) || GetPVarInt(playerid, #vehicle_id_two) == GetPlayerVehicleID(playerid))) PlayerInfo[playerid][pFuelcar] -= 0.05;
	}
	else PlayerTextDrawSetString(playerid, DartProjectTD[8][playerid], "~w~1");
	if(GetVehicleSpeed(GetPlayerVehicleID(playerid)) > 35 && GetVehicleSpeed(GetPlayerVehicleID(playerid)) < 60)
	{
		PlayerTextDrawSetString(playerid, DartProjectTD[9][playerid], "~g~2"), VehInfo[GetPlayerVehicleID(playerid)][vFuel] -= 0.010;
		if((caridhouse[playerid] == GetPlayerVehicleID(playerid) || GetPVarInt(playerid, #vehicle_id_two) == GetPlayerVehicleID(playerid))) PlayerInfo[playerid][pFuelcar] -= 0.010;
	}
	else PlayerTextDrawSetString(playerid, DartProjectTD[9][playerid], "~w~2");
 	if(GetVehicleSpeed(GetPlayerVehicleID(playerid)) > 60 && GetVehicleSpeed(GetPlayerVehicleID(playerid)) < 90)
 	{
 		PlayerTextDrawSetString(playerid, DartProjectTD[10][playerid], "~g~3"), VehInfo[GetPlayerVehicleID(playerid)][vFuel] -= 0.015;
	 	if((caridhouse[playerid] == GetPlayerVehicleID(playerid) || GetPVarInt(playerid, #vehicle_id_two) == GetPlayerVehicleID(playerid))) PlayerInfo[playerid][pFuelcar] -= 0.015;
	}
  	else PlayerTextDrawSetString(playerid, DartProjectTD[10][playerid], "~w~3");
 	if(GetVehicleSpeed(GetPlayerVehicleID(playerid)) > 90 && GetVehicleSpeed(GetPlayerVehicleID(playerid)) < 350)
 	{
 		PlayerTextDrawSetString(playerid, DartProjectTD[11][playerid], "~g~4"), VehInfo[GetPlayerVehicleID(playerid)][vFuel] -= 0.020;
	 	if((caridhouse[playerid] == GetPlayerVehicleID(playerid) || GetPVarInt(playerid, #vehicle_id_two) == GetPlayerVehicleID(playerid))) PlayerInfo[playerid][pFuelcar] -= 0.020;
	}
	else PlayerTextDrawSetString(playerid, DartProjectTD[11][playerid], "~w~4");
	return 1;
}

publics:OnLoadMaterialsCallback()
{
	if (cache_get_row_count(connects) > 0) {
		armmatbi = cache_get_field_content_int(0, "armmatbi", connects);
		armmatsf = cache_get_field_content_int(0, "armmatsf", connects);
		armyvmf = cache_get_field_content_int(0, "armyvmf", connects);
		rifamatbi = cache_get_field_content_int(0, "rifamatbi", connects);
		ballasmatbi = cache_get_field_content_int(0, "ballasmatbi", connects);
		aztekmatbi = cache_get_field_content_int(0, "aztekmatbi", connects);
		vagosmatbi = cache_get_field_content_int(0, "vagosmatbi", connects);
		groovmatbi = cache_get_field_content_int(0, "groovmatbi", connects);
		lspdmatbi = cache_get_field_content_int(0, "lspdmatbi", connects);
		fbimats = cache_get_field_content_int(0, "fbimats", connects);
		yakuzamats = cache_get_field_content_int(0, "yakuzamats", connects);
		rmmats = cache_get_field_content_int(0, "rmmats", connects);
		lcnmats = cache_get_field_content_int(0, "lcnmats", connects);
		sfpdmats = cache_get_field_content_int(0, "sfpdmats", connects);
		lvpdmats = cache_get_field_content_int(0, "lvpdmats", connects);
	}
	Update3DTextsArmy();
	return 1;
}
stock SaveMaterials()
{
	mysql_format(connects, stringer, BIG_SIZE, "UPDATE `materials` SET `armmatbi` = '%d', `armmatsf` = '%d', `rifamatbi` = '%d', `ballasmatbi` = '%d', `aztekmatbi` = '%d', `vagosmatbi` = '%d', `groovmatbi` = '%d', `lspdmatbi` = '%d', `fbimats` = '%d', `yakuzamats` = '%d', `rmmats` = '%d', `lcnmats` = '%d', `sfpdmats` = '%d', `lvpdmats` = '%d', `armyvmf` = '%d'", armmatbi,armmatsf,rifamatbi,ballasmatbi,aztekmatbi,vagosmatbi,groovmatbi,lspdmatbi,fbimats,yakuzamats,rmmats,lcnmats,sfpdmats,lvpdmats,armyvmf);
	mysql_empty(connects, stringer);
	return 1;
}
publics:OnLoadBankMafiaCallback()
{
	if (cache_get_row_count(connects) > 0) {
		MafiaBank[0][nLcn] = cache_get_field_content_int(0, "MafiaBank[0][nLcn]", connects);
		MafiaBank[0][nYakuza] = cache_get_field_content_int(0, "MafiaBank[0][nYakuza]", connects);
		MafiaBank[0][nRm] = cache_get_field_content_int(0, "MafiaBank[0][nRm]", connects);
	}
	return 1;
}
stock SaveBankMafia()
{
	mysql_format(connects, stringer, MAX_SQL, "UPDATE `mafiabalance` SET `MafiaBank[0][nLcn]` = '%d', `MafiaBank[0][nYakuza]` = '%d', `MafiaBank[0][nRm]` = '%d'", MafiaBank[0][nLcn], MafiaBank[0][nYakuza], MafiaBank[0][nRm]);
	mysql_empty(connects, stringer);
	return 1;
}
publics: OnLoadMaxOnline()
{
	if (cache_get_row_count(connects) > 0) {
		onlinee = cache_get_field_content_int(0, "MaxOnline", connects);
		onlineeM = cache_get_field_content_int(0, "Month", connects);
		onlineeD = cache_get_field_content_int(0, "Day", connects);
		onlineeH = cache_get_field_content_int(0, "Hour", connects);
		onlineeMi = cache_get_field_content_int(0, "Minute", connects);
		printf("[Загрузка]: MAX ONLINE успешно загружена | MAX-ONLINE %d человек",onlinee);
	}
	return 1;
}

stock SaveMaxOnline()
{
	mysql_format(connects, stringer, MAX_SQL, "UPDATE `online` SET `MaxOnline` = '%d', `Month` = '%d', `Day` = '%d', `Hour` = '%d', `Minute` = '%d'", onlinee, onlineeM, onlineeD, onlineeH, onlineeMi);
	mysql_empty(connects, stringer);
	return 1;
}
stock ShowPlayerMembers(playerid)
{
    if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	new teamnumber;
	if (PlayerInfo[playerid][pLRInections] != 0) teamnumber = PlayerInfo[playerid][pLRInections];
	else if (PlayerInfo[playerid][pMRInections] != 0) teamnumber = PlayerInfo[playerid][pMRInections];
	else return SCM(playerid, COLOR_GRAD1, "Вы ни где не состоите!");
	SCM(playerid, 0x00B464AA, "Члены организации Online:");
	new countmember = 0;
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][pMRInections] != teamnumber || !IsPlayerConnected(i)) continue;
	    if(StartRabWork(i))
	    {
	        stringer = "";
			if (PlayerInfo[i][pLRInections] == teamnumber) format(stringer, 210, "{00B464}%s{FFFFFF}[{00B464}%d{FFFFFF}] ранг: {00B464}Лидер | %s", PlayerInfo[i][pNames],i, (GetPVarInt(i, "StartRabWork") ? ("{00B464}На работе") : ("{FF0000}Не на работе")));
			else if (PlayerInfo[i][pMRInections] == teamnumber) format(stringer, 210, "{00B464}%s{FFFFFF}[{00B464}%d{FFFFFF}] ранг: {00B464}%d | %s", PlayerInfo[i][pNames],i, PlayerInfo[i][pRKInections], (GetPVarInt(i, "StartRabWork") ? ("{00B464}На работе") : ("{FF0000}Не на работе")));
			if (strlen(stringer) > 1) SCM(playerid, 0x00B464FF, stringer), countmember++;
		}
		else
		{
			stringer = "";
			if (PlayerInfo[i][pLRInections] == teamnumber) format(stringer, MAX_STR, "[{00B464}%d{FFFFFF}] {00B464}%s{FFFFFF} ранг: {00B464}Лидер", i,PlayerInfo[i][pNames]);
			else if (PlayerInfo[i][pMRInections] == teamnumber) format(stringer, MAX_STR, "[{00B464}%d{FFFFFF}] {00B464}%s{FFFFFF} ранг: {00B464}%d", i,PlayerInfo[i][pNames], PlayerInfo[i][pRKInections]);
			if (strlen(stringer) > 1) SCM(playerid, COLOR_WHITE, stringer), countmember++;
		}
	}
	format(stringer, SMALL_SIZE, "Всего: {00B464}%i{FFFFFF} человек.",countmember);
	SCM(playerid, COLOR_WHITE, stringer);
	return 1;
}
publics: UnFreez(playerid) return TogglePlayerControllable(playerid, true);
stock Converts(number)
{
	new hours = 0, mins = 0, secs = 0, string[30];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(string, 30, "%d:%02d:%02d", hours, mins, secs);
	else format(string, 30, "%d:%02d", mins, secs);
	return string;
}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
    if(ServerRestart[0]) return 0;
	if(!PlayerInfo[playerid][pLogin] || !IsPlayerConnected(playerid))
	{
		SCM(playerid,COLOR_GREY,"Вы не авторизованы.");
		return 0;
	}
	if(PlayerInfo[playerid][bAdmin] > 0 && GetPVarInt(playerid, "dostup") == 0)
	{
		format(stringer, MAX_STR, "SELECT * FROM `admin` WHERE `name` = '%s'", PlayerInfo[playerid][pNames]);
		mysql_tquery(connects, stringer, "alogin1", "ds",playerid,PlayerInfo[playerid][pNames]);
		return 0;
	}
	if(GetPVarInt(playerid,"AntiFlood") > gettime())
	{
		SCM(playerid, -1, "Пожалуйста, не флудите.");
		return 0;
	}
	SetPVarInt(playerid,"AntiFlood",gettime() + 1);
	return 1;
}
CMD:mm(playerid) return SPD(playerid, 9623, DIALOG_STYLE_LIST, "{FF6F00}Панель управления игровым персонажем", "{FF6F00}» {FFFFFF}Статистика персонажа\n{FF6F00}» {FFFFFF}Настройки\n{FF6F00}» {FFFFFF}Безопасность игрового аккаунта\n{FF6F00}» {FFFFFF}Команды сервера\n{FF6F00}» {FFFFFF}Связь с администрацией\n{FF6F00}» {FFFFFF}Донат\n{FF6F00}» {FFFFFF}Инвентарь\n{FF6F00}» {FFFFFF}Сменить пол персонажа", "Выбрать", "Отмена");
CMD:members(playerid) return ShowPlayerMembers(playerid);
CMD:filling(playerid)
{
	if(PlayerInfo[playerid][pFuelBiz] == -1) return SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}У вас нету заправки.");
	return SPD(playerid,1523,DIALOG_STYLE_LIST,"{FF6F00}Управление заправкой","» {32CD32}Открыть{FFFFFF}/{FF0000}Закрыть{FFFFFF} заправку\n[2] Поменять название заправки\n[3] Управление счетом заправки\n[4] Информация о заправке\n\n[5] Изменить цену за единицу продукта\n[6] Изменить цену за единицу бензина\n» {FF6F00}Продать заправку","Выбрать","Отмена");
}
CMD:fpanel(playerid) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте - '/filling'");
CMD:sellfuel(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pFuelBiz] == -1) return SendClientMessage(playerid,-1,"• {AC0000}[Ошибка] {ffffff}У вас нету заправки.");
		for(new b = 0; b < sizeof(SBizzInfo); b++)
		{
			if(PlayerToPoint(10.0, playerid, SBizzInfo[b][sEntranceX], SBizzInfo[b][sEntranceY], SBizzInfo[b][sEntranceZ]))
			{
				if(PlayerInfo[playerid][pFuelBiz] != b) return SendClientMessage(playerid,COLOR_GREY,"Вы не владелец этой заправки.");
				new nalogs = SBizzInfo[b][sBuyPrice]/10;
				PlayerInfo[playerid][pBank] += (SBizzInfo[b][sBuyPrice]-nalogs);
				PlayerInfo[playerid][pFuelBiz] = -1;
				UpdatePlayerData(playerid, "pPsbiskey", PlayerInfo[playerid][pFuelBiz]);
				SBizzInfo[b][sOwned] = 0;
				SBizzInfo[b][sLocked] = 1;
				strmid(SBizzInfo[b][sOwner], "The State", 0, strlen("The State"), 255);
				mysql_format(connects,stringer1, MAX_STR, "UPDATE `sbizz` SET `sOwner` = 'No-one' WHERE sID = %i",b);
				mysql_empty(connects, stringer1);
				UpdatePlayerData(playerid, "pBank", PlayerInfo[playerid][pBank]);
				SaveSBizz(b);
				UpdateSBizz();
				return 1;
			}
		}
	}
	return 1;
}

CMD:giverank(playerid, params[])
{
	if(!CanRangPlayer(playerid)) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вам недоступна эта команда.");
	if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"dd",params[0],params[1])) return    SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /giverank [id] [ранг]");
	if(PlayerInfo[playerid][bAdmin] > 0) return SCM(playerid, COLOR_GREY, "Ты что , сдурел ? Тебя Болт покарает за блат");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return 1;
	if(!IsValidRank(playerid,params[1])) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Неправильный номер ранга.");
	if(PlayerInfo[params[0]][pLRInections] >= 1) return SCM(playerid, COLOR_WHITE, "Неверный ID");
	if(PlayerInfo[playerid][pMRInections] != PlayerInfo[params[0]][pMRInections]) return SCM(playerid, COLOR_WHITE, "Данный игрок не в вашей фракции!");
	if(PlayerInfo[playerid][pMRInections] > 0 && PlayerInfo[playerid][pRKInections] <= params[1]) return SCM(playerid,COLOR_WHITE,"Ошибка");
	if(PlayerInfo[playerid][pLRInections] <= 0 && PlayerInfo[playerid][pRKInections] <=  PlayerInfo[params[0]][pRKInections]) return SCM(playerid, COLOR_WHITE, "Ошибка");
	format(stringer, MAX_STR, "Вас повысил/понизил до %d ранга %s",params[1], PlayerInfo[playerid][pNames]);
	SCM(params[0], 0x6BB3FFAA, stringer);
	format(stringer, MAX_STR, "Вы повысили %s до %d ранга.", PlayerInfo[params[0]][pNames],params[1]);
	SCM(playerid, 0x6BB3FFAA, stringer);
	PlayerInfo[params[0]][pRKInections] = params[1];
	return 1;
}
CMD:changeskin(playerid, params[])
{
    if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	switch(PlayerInfo[playerid][pMRInections])
	{
	case 1,3,19,10,21: if(PlayerInfo[playerid][pRKInections] < 14) return SCM(playerid,COLOR_WHITE,"Вам не доступна данная команда");
	case 2: if(PlayerInfo[playerid][pRKInections] < 9) return SCM(playerid,COLOR_WHITE, "Вам недоступна данная команда");
	case 4,5,6,11,12,13,14,15,17,18,24,25,26: if(PlayerInfo[playerid][pRKInections] < 9) return SCM(playerid,COLOR_WHITE,"Вам не доступна данная команда");
	case 7: if(PlayerInfo[playerid][pRKInections] < 5) return SCM(playerid,COLOR_WHITE,"Вам не доступна данная команда");
	case 16: if(PlayerInfo[playerid][pRKInections] < 12) return SCM(playerid,COLOR_WHITE,"Вам не доступна данная команда");
	case 27: if(PlayerInfo[playerid][pRKInections] < 10) return SCM(playerid,COLOR_WHITE,"Вам не доступна данная команда");
	default: return SCM(playerid,COLOR_WHITE,"Вам не доступна данная команда");
	}
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /changeskin [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_WHITE, "Игрок оффлайн!");
	if(PlayerInfo[playerid][pMRInections] != PlayerInfo[params[0]][pMRInections]) return SCM(playerid, COLOR_WHITE, "Данный игрок не в вашей фракции!");
	new fractionid = PlayerInfo[playerid][pMRInections]-1;
	new mes[256];
	for(new i;i<20;i++)
	{
		new skinid = ChangeSkin[fractionid][i];
		if(!skinid) break;
		if(!i) format(mes,sizeof(mes),"Скин %d [%d]",i+1,skinid);
		else format(mes,sizeof(mes),"%s\nСкин %d [%d]",mes,i+1,skinid);
	}
	SetPVarInt(playerid,"actinplayerid",params[0]);
	SetPVarInt(params[0], "pOfferFractionid", PlayerInfo[playerid][pMRInections]);
	ShowPlayerDialog(playerid,1145,2,PlayerInfo[params[0]][pNames],mes,"Принять","");
	return 1;
}
CMD:invite(playerid, params[])
{
	if(!CanInvitePlayer(playerid)) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вам недоступна эта команда.");
	if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"d",params[0])) return	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /invite [id]");
	if(PlayerInfo[playerid][bAdmin] > 0 ) return 1;
	if(PlayerInfo[params[0]][bAdmin] > 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Запрещено принимать администратора!");
	if(IsPlayerInAnyVehicle(params[0])) return  SCM(playerid, COLOR_WHITE, "Игрок в машине!");
	if (PlayerInfo[params[0]][pMRInections] > 0 || PlayerInfo[params[0]][pLRInections] > 0) return SCM(playerid, COLOR_WHITE, "Игрок уже где то состоит");
	if(PlayerInfo[params[0]][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1,"У игрока Warn.");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return 1;
	if(!ProxDetectorS(10.0, playerid, params[0])) return SCM(playerid, COLOR_WHITE, "Игрок, не рядом с вами !");
	new invite_string[200];
	format(invite_string,sizeof(invite_string),"{FFFFFF}%s предлагает Вам вступить в организацию: {FF6F00}%s{FFFFFF}\n\nНажмите Да для согласия.\nНажмите Нет для отказа!",PlayerInfo[playerid][pNames],GetMember[PlayerInfo[playerid][pMRInections]-1]);
	SPD(params[0], 1147, DIALOG_STYLE_MSGBOX, "{FF6F00}Предложение",invite_string,"Да","Нет");
	SCMF(playerid, -1, "Вы предложили {FF6F00}%s{FFFFFF} вступить в организацию {FF6F00}%s",PlayerInfo[params[0]][pNames],GetMember[PlayerInfo[playerid][pMRInections]-1]);
	SetPVarInt(params[0], "pOfferFractionid", PlayerInfo[playerid][pMRInections]);
	SetPVarInt(params[0],"Player",playerid);
	SetPVarInt(playerid,"actinplayerid",params[0]);
	return 1;
}
CMD:uninvite(playerid, params[])
{
	if(!IsUninviteRank(playerid)) return 1;
	if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params, "ds[100]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /uninvite [playerid] [причина]");
	if(params[0] == playerid) return SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Себя невозможно уволить");
	if(PlayerInfo[params[0]][pLRInections] >= 1)  SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Неверный ID");
	if(PlayerInfo[playerid][pLRInections] <= 0 && PlayerInfo[playerid][pRKInections] <=  PlayerInfo[params[0]][pRKInections]) return SCM(playerid, COLOR_WHITE, "Ошибка");
	if(PlayerInfo[params[0]][pMRInections] == 0) return SCM(playerid, COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Этот человек гражданский");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return 1;
	if(PlayerInfo[params[0]][pMRInections] == PlayerInfo[playerid][pLRInections] ||PlayerInfo[params[0]][pMRInections] == PlayerInfo[playerid][pMRInections])
	{
		if(PlayerInfo[params[0]][pMRInections] > 0)
		{
			SCMF(params[0], 0xFF182DFF, "%s уволил Вас из организации. Причина: %s", PlayerInfo[playerid][pNames],params[1]);
			SCMF(playerid, 0x269BD8FF, "%s был уволен из организации. Причина: %s", PlayerInfo[params[0]][pNames],params[1]);
			if(StartRabWork(params[0]))
			{
				SCM(params[0],COLOR_BLUE,"Ваш рабочий день окончен!");
				SetPVarInt(params[0], "StartRabWork", 0);
			}
			PlayerInfo[params[0]][pMRInections] = 0;
			PlayerInfo[params[0]][pRKInections] = 0;
			PlayerInfo[params[0]][pLRInections] = 0;
			PlayerInfo[params[0]][pJob] = 0;
			SetPlayerToTeamColor(params[0]);
			SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar]);
		}
	}
	return 1;
}
CMD:buycar(playerid, params[])
{
	if(PlayerInfo[playerid][pHouse] == -1) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}У вас нету дома.");
	if(PlayerInfo[playerid][pLicenses][0] == 0) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы не имеете водительское удостоверение. Польчить можно в Авто Школе, либо используя /donate");
	if(IsPlayerInRangeOfPoint(playerid,5.0, 556.5716,-1292.6392,17.2482))
	{
		SetPVarInt(playerid,"AutoShop",1);
		return ShowBuyCar(playerid);
	}
	else if(IsPlayerInRangeOfPoint(playerid,5.0, -1951.2544,293.6375,35.4688))
	{
		SetPVarInt(playerid,"AutoShop",2);
		return SPD(playerid,2323,0," ","{FFFFFF}Выберите класс машин","C","D");
	}
	else if(IsPlayerInRangeOfPoint(playerid,5.0,-1657.7015,1210.2267,7.2500))
	{
		SetPVarInt(playerid,"AutoShop",3);
		return SPD(playerid,2323,0," ","{FFFFFF}Выберите класс машин","A","B");
	}
	else if(IsPlayerInRangeOfPoint(playerid,5.0, 2200.8857,1394.2892,11.0625))
	{
		SetPVarInt(playerid,"AutoShop",4);
		return SPD(playerid,2323,0," ","{FFFFFF}Выберите класс машин","A","B");
	}
	else SCM(playerid,COLOR_WHITE,"Вы не в месте продажи автомобилей!");
	return 1;
}
ALTX:bandchat("/bc");
CMD:bandchat(playerid, params[])
{
	if(!IsAGang(playerid)) return  SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не бандит!");
	if(GetPVarInt(playerid,"anti_flood_bc") > gettime()) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Подождите 10 секунд.");
	if(sscanf(params,"s[100]",params[0])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /bandchat [текст]");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У вас бан чата!");
	if(PlayerInfo[playerid][pMRInections] == 12 || PlayerInfo[playerid][pMRInections] == 13 || PlayerInfo[playerid][pMRInections] == 15
			|| PlayerInfo[playerid][pMRInections] ==17 || PlayerInfo[playerid][pMRInections] == 18)
	{
		if(!GetPVarInt(playerid, "ReklamaYES"))
		{
			Reklama(playerid, params[0]);
			if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
		}
		new text[144];
		strmid(text,params[0],0,100);
		for(new s; s < sizeof(ArchiNeMateritsa); s++)
		{
			new pos;
			while((pos = strfind(text,ArchiNeMateritsa[s],true)) != -1) for(new i = pos, j = pos + strlen(ArchiNeMateritsa[s]); i < j; i++)
			{
				text[i] = '*';
			}
		}
		new ttext[50];
		switch(PlayerInfo[playerid][pMRInections]) { case 12: ttext = "{8813E7}[Ballas]"; case 13: ttext = "{DBD604}[Vagos]"; case 15: ttext = "{009F00}[Grove Street]"; case 17: ttext = "{01FCFF}[Aztec]"; case 18: ttext = "{83BFBF}[Rifa]"; }
		format(stringer, MAX_STR, "{"#cORANGE"}[Гетто чат] %s {FFFFFF}%s[%d]: %s", ttext,PlayerInfo[playerid][pNames],playerid, text);
		GangersChat(0xFFFFFFFF, stringer);
		SetPVarInt(playerid,"anti_flood_bc",gettime()+10);
	}
	return 1;
}
ALTX:mafiachat("/mc");
CMD:mafiachat(playerid, params[])
{
	if(!ISAMAFIA(playerid)) return  SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не бандит!");
	if(GetPVarInt(playerid,"anti_flood_mc") > gettime()) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Подождите 10 секунд.");
	if(sscanf(params,"s[100]",params[0])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /mafiachat [текст]");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У вас бан чата!");
	if(PlayerInfo[playerid][pMRInections] == 5 || PlayerInfo[playerid][pMRInections] == 6 || PlayerInfo[playerid][pMRInections] == 14)
	{
		if(!GetPVarInt(playerid, "ReklamaYES"))
		{
			Reklama(playerid, params[0]);
			if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
		}
		new text[144];
		strmid(text,params[0],0,100);
		for(new s; s < sizeof(ArchiNeMateritsa); s++)
		{
			new pos;
			while((pos = strfind(text,ArchiNeMateritsa[s],true)) != -1) for(new i = pos, j = pos + strlen(ArchiNeMateritsa[s]); i < j; i++)
			{
				text[i] = '*';
			}
		}
		new ttext[50];
		switch(PlayerInfo[playerid][pMRInections]) { case 5: ttext = "{DBD604}[LCN]"; case 6: ttext = "{FF1300}[Yakuza]"; case 14: ttext = "{B4B5B7}[Russian Mafia]";}
		format(stringer, MAX_STR, "{"#cORANGE"}[MAFIA CHAT] %s {FFFFFF}%s[%d]: %s", ttext,PlayerInfo[playerid][pNames],playerid, text);
		MafiaChat(0xFFFFFFFF, stringer);
		SetPVarInt(playerid,"anti_flood_mc",gettime()+10);
	}
	return 1;
}
ALTX:apanel("/ap");
CMD:apanel(playerid)
{
	if(PlayerInfo[playerid][bAdmin] < 1) return 1;
	format(stringer1,BIG_SIZE,"{FF6F00}» {FFFFFF}Команды Администратора{FFFFFF}\n{FF6F00}» {FFFFFF}Телепорт меню{FFFFFF}\n{FF6F00}» {FFFFFF}Меню Домов/Бизнесов{FFFFFF}\n{FF6F00}» {FFFFFF}Дополнительно{FFFFFF}\n{FF6F00}» {FFFFFF}Меню Гл. Администратора{FFFFFF}\n{FF6F00}» {FF6F00}OFFLINE: {FFFFFF}Уволить игрока\n{FF6F00}» {FF6F00}OFFLINE: {FFFFFF}Снять лидера\n{FF6F00}» {FF6F00}OFFLINE: {FFFFFF}Снять админа\nОбновить банлог [1 lvl]");
	SPD(playerid,1001,DIALOG_STYLE_LIST,"{FF6F00}Панель Администратора",stringer1,"Выбрать","Отмена");
	return 1;
}
CMD:eng(playerid)
{
	if(GetPlayerVehicleID(playerid) == INVALID_VEHICLE_ID) return 1;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	if(GetPVarInt(playerid, "TIME_ZAVEL") > gettime()) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Пожалуйста, не флудите.");
	if(GetPVarInt(playerid, "engine_on_off") == 0)
	{
		new id = GetPlayerVehicleID(playerid);
		if(VehInfo[id][vFuel] <= 0) return SCM(playerid,COLOR_RED,"В машине нет бензина");
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
		MeAction(playerid, "завел(а) двигатель");
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~ENGINE STARTING...", 2000, 3);
		SetPVarInt(playerid, "TIME_ZAVEL", gettime()+3);
		SetPVarInt(playerid, "engine_on_off",1);
		Engines{GetPlayerVehicleID(playerid)} = true;
		Light{GetPlayerVehicleID(playerid)} = true;
	}
	else if(GetPVarInt(playerid, "engine_on_off") == 1)
	{
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
		MeAction(playerid, "заглушил(а) двигатель");
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ENGINE OFF", 3000, 3);
		SetPVarInt(playerid, "TIME_ZAVEL", gettime()+3);
		DeletePVar(playerid, "engine_on_off");
		Engines{GetPlayerVehicleID(playerid)} = false;
		Light{GetPlayerVehicleID(playerid)} = false;
	}
	return 1;
}
CMD:gps(playerid)
{
	SPD(playerid, 9624, DIALOG_STYLE_LIST, "{FF6F00}GPS - Навигатор", "{FF6F00}» {FFFFFF}Общественные места\n{FF6F00}» {FFFFFF}Клубы\n{FF6F00}» {FFFFFF}Автосалоны/Бизнесы\n{FF6F00}» {FFFFFF}Развлечения\n{FF6F00}» {FFFFFF}Нелегальные организации\n{FF6F00}» {FFFFFF}Покупка дома на колесах\n{FF6F00}» {FFFFFF}Автомастерские\n{FF6F00}» {FFFFFF}Центральный отель\n{FF6F00}» {FFFFFF}Магазины Акессуаров\n{FF6F00}» {FFFFFF}Военкоматы\n{FF6F00}» {FFFFFF}Работы", "Выбрать", "Отмена");
	DisablePlayerCheckpoint(playerid);
	DeletePVar(playerid, "playerisGPS");
	return 1;
}
CMD:giverub(playerid, params[])
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3,true) || !strcmp(PlayerInfo[playerid][pNames], "No",true))
	{
		if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /giverub [ID][КОЛ-ВО]");
		if(params[1] == 0)
		{
			PlayerInfo[params[0]][pRubInfo][0] = 0;
			SCMF(params[0], COLOR_GREY, "Администратор: %s отобрал у Вас все рубли",PlayerInfo[playerid][pNames]);
			SCMF(playerid, COLOR_GREY, "Вы отобрали у: %s все рубли", PlayerInfo[params[0]][pNames]);
			UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRubInfo][0]);
		}
		PlayerInfo[params[0]][pRubInfo][0] += params[1];
		SCMF(params[0], COLOR_BLUE, "Администратор: %s выдал Вам %i донат рублей.", PlayerInfo[playerid][pNames], params[1]);
		SCMF(playerid, COLOR_BLUE, "Вы успешно выдали донат рубли %s", PlayerInfo[params[0]][pNames]);
		new day,month,year,hour,minuite,second;
		getdate(year, month, day);
		gettime(hour,minuite,second);
		FixHour(hour);
		hour = shifthour;
		new data2[64];
		format(data2, 16, "%02d.%02d.%d в %02d:%d",day,month,year,hour,minuite);
		mysql_format(connects, stringer, MAX_SQL, "INSERT INTO `logs` (`Text`, `Date`) VALUES ('%s выдал донат %s кол-во выданого доната: %d','%s')",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1],data2);
		mysql_empty(connects, stringer);
		UpdatePlayerData(playerid, "pRub", PlayerInfo[playerid][pRubInfo][0]);
	}
	return 1;
}
CMD:donat(playerid) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Введите: /donate");
CMD:donate(playerid) return SPD(playerid, 2233, DIALOG_STYLE_MSGBOX, "{FF6F00}Донат услуги", "{FFFFFF}\tВыберите:", "Donate", "Рубли");
ALTX:diskjokey("/dj");
CMD:diskjokey(playerid)
{
	if(PlayerInfo[playerid][pJob] != 15) return SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Вы не работаете Диджеем.");
	if(!PlayerToPoint(2, playerid,1056.5503,-13.5629,979.3359)) return SCM(playerid,COLOR_GREY,"Вы не у стойки для DJ.");
	if(AlhambraDJID == INVALID_PLAYER_ID) AlhambraDJ = true, AlhambraDJID = playerid;
	else if(AlhambraDJID != playerid) return SCM(playerid,COLOR_GREY,"DJ уже работает и он находиться в клубе.");
	SPD(playerid, 5350, DIALOG_STYLE_LIST, "{FF6F00}Панель управления DJ.", "{FFFFFF}Включить свой трек\nВыключить музыку\nОставить пульт", "Выбрать", "Отмена");
	return 1;
}
stock GetEngineStat(vehicleid)
{
	//new engine, lights, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}
stock ToggleLock(playerid,vehicleid)
{
	if(gCarLock[vehicleid])
	{
		GameTextForPlayer(playerid, "~w~CAR ~g~UNLOCK", 5000, 3);
		UnLockCar(vehicleid), gCarLock[vehicleid] = false;
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		return 0;
	}
	else
	{
		GameTextForPlayer(playerid, "~w~CAR ~r~LOCK", 5000, 3);
		LockCar(vehicleid), gCarLock[vehicleid] = true;
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		return 1;
	}
}
CMD:lock(playerid, params[])
{
	if(!PlayerInfo[playerid][pLogin]) return 1;
	new param[32], Float:X, Float:Y, Float:Z,Float:XX,Float:YY,Float:ZZ;
	if(sscanf(params, "s[32]", param))
	{
		SCM(playerid,COLOR_GREY," Введите: /lock [1 / 2 / 3]");
		SCM(playerid, COLOR_GREY, "Доступные названия:");
		SCM(playerid, COLOR_GREY, "  1 - Домашнее авто.");
		SCM(playerid, COLOR_GREY, "  2 - Отельное авто.");
		SCM(playerid, COLOR_GREY, "  3 - Фракционное/Рабочее/Арендованое авто.");
		return 1;
	}
	new carids = PlayerInfo[playerid][pHouse]+1;
	if(caridhouse[playerid] != 299) carids = caridhouse[playerid];
	if(GetPVarInt(playerid,#vehicle_id_two)) GetVehiclePos(GetPVarInt(playerid,#vehicle_id_two), XX, YY, ZZ);
	GetVehiclePos(carids, X, Y, Z);
	if(strcmp(param, "1",true) == 0)
	{
	   	if(PlayerToPoint(4.0, playerid, X, Y, Z))
		{
	       	if(caridhouse[playerid] == 0 && PlayerInfo[playerid][pHouse] == -1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У вас нет машины / Дома.");
			if(caridhouse[playerid] == carids) ToggleLock(playerid, caridhouse[playerid]);
		}
		else if(PlayerToPoint(4.0, playerid, XX, YY, ZZ)) ToggleLock(playerid,GetPVarInt(playerid,#vehicle_id_two));
	}
	if(strcmp(param, "2",true) == 0)
	{
	   	if(PlayerToPoint(4.0, playerid, X, Y, Z))
		{
			if(PlayerInfo[playerid][pHotel] == -1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У вас нет машины / Комнаты в отеле.");
			if(caridhouse[playerid] != 0 && caridhouse[playerid] == carids) ToggleLock(playerid, caridhouse[playerid]);
		}
	}
	if(strcmp(param, "3",true) == 0)
	{
		new i = GetNearestVehicle(playerid);
		GetVehiclePos(i, X, Y, Z);
		if(PlayerToPoint(4.0, playerid, X, Y, Z))
		{
			if(GetVehicleKey(playerid, i)) ToggleLock(playerid, i);
			else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от этого транспорта.");
		}
	}
	return 1;
}
CMD:fillcar(playerid)
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!PlayerInfo[playerid][pFuel]) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет канистры!");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Вы не в машине");
	if(VehInfo[vehicleid][vFuel] >= 100) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Ваш бак полон!");
	SCM(playerid, 0x6ab1ffaa, "Вы заправили Ваш автомобиль 20 литрами бензина");
	VehInfo[vehicleid][vFuel] += 20;
	PlayerInfo[playerid][pFuel]--;
	PlayerInfo[playerid][pFuelcar] += 20;
	return 1;
}
CMD:service(playerid)
{
	format(stringer1,SMALL_SIZE, "%s достаёт мобильник", PlayerInfo[playerid][pNames]);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	if(!GetPVarInt(playerid, "PlayerCuffed") ) {    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE); }
	SPD(playerid, 9956, 2, "{FF6F00}Выберите сервис", "{FFFFFF}[1] Вызвать Медицинскую помощь \n[2] Вызвать Механика\n[3] Вызвать Полицию", "Далее", "Выход");
	return 1;
}
ALTX:directory("/dir");
CMD:directory(playerid) return SPD(playerid,5454,DIALOG_STYLE_LIST,"{FF6F00}Справочник","{FFFFFF}[0] Адвокаты\n[1] Крупье\n[2] Лидеры организаций\n[3] Инструкторы\n[4] Механики\n[5] Медики\n[6] Развозчики продуктов\n[7] Развозчик строй-материалов","Выбрать","Отмена");
CMD:togphone(playerid)
{
	if(PlayerInfo[playerid][pDRInections] > 1 || PlayerInfo[playerid][bAdmin] > 1 || PlayerInfo[playerid][pLRInections] > 1)
	{
		if (!PhoneOnline{playerid}) PhoneOnline{playerid} = true,SCM(playerid, COLOR_WHITE, "Вы выключили телефон");
		else if (PhoneOnline{playerid}) PhoneOnline{playerid} = false,SCM(playerid, COLOR_WHITE, "Вы включили телефон");
	}
	return 1;
}
CMD:time(playerid)
{
	new string[220];
	if(!IsPlayerConnected(playerid)) return 1;
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_watch",4.1,0,0,0,0,0);
 	new year, month, day, hour, minuite, second, mtext[11];
  	getdate(year, month, day);
   	gettime(hour,minuite,second);
    FixHour(hour);
    hour = shifthour;
 	switch(month)
  	{
   		case 1: mtext = "Января";
     	case 2: mtext = "Февраля";
        case 3: mtext = "Марта";
        case 4: mtext = "Апреля";
        case 5: mtext = "Мая";
        case 6: mtext = "Июня";
        case 7: mtext = "Июля";
        case 8: mtext = "Августа";
        case 9: mtext = "Сентября";
        case 10: mtext = "Октября";
        case 11: mtext = "Ноября";
        case 12: mtext = "Декабря";
   	}
 	if(minuite < 10)
	{
	    if(PlayerInfo[playerid][pJailTime] > 0) { format(string, 90, "Jail Time Left: %d sec",PlayerInfo[playerid][pJailTime]); GameTextForPlayer(playerid, string, 5000, 1); }
	    if(PlayerInfo[playerid][pPrison][1] > 0) { format(string, 90, "Prison Time Left: %d sec",PlayerInfo[playerid][pPrison][1]); GameTextForPlayer(playerid, string, 5000, 1); }
		format(string, sizeof(string), "{ffffff}Здравствуйте!\nВы позвонили в службу точного времени!\n\n{ffffff}Сегодняшняя дата:\t\t{34c924}%d %s 2015 г.\n{ffffff}Текущее время:\t\t{1e90ff}%d:%d\n{ffffff}Время в игре(за час):\t\t{ff8800}Около %d минут",day,mtext,hour,minuite,GetPVarInt(playerid,"game_time"));
	}
  	else
  	{
  	    if(PlayerInfo[playerid][pJailTime] > 0) { format(string, 90, "Jail Time Left: %d sec",PlayerInfo[playerid][pJailTime]); GameTextForPlayer(playerid, string, 5000, 1); }
        if(PlayerInfo[playerid][pPrison][1] > 0) { format(string, 90, "Prison Time Left: %d sec",PlayerInfo[playerid][pPrison][1]); GameTextForPlayer(playerid, string, 5000, 1); }
	  	format(string, sizeof(string), "{ffffff}Здравствуйте!\nВы позвонили в службу точного времени!\n\n{ffffff}Сегодняшняя дата:\t\t{34c924}%d %s 2015 г.\n{ffffff}Точное время:\t\t\t{1e90ff}%d:%d\n{ffffff}Время в игре(за час):\t\t{ff8800}Около %d минут",day,mtext,hour,minuite,GetPVarInt(playerid,"game_time"));
	}
	if(PlayerInfo[playerid][pMuteTime] > 0) SCMF(playerid, COLOR_ORANGE, "Время до снятия: %i секунд", PlayerInfo[playerid][pMuteTime]);
   	ShowPlayerDialog(playerid,0000, DIALOG_STYLE_MSGBOX, "{ffff00}Точное время:", string, "Закрыть", "");
	MeAction(playerid,"позвонил(а) в службу точного времени");
	return 1;
}
CMD:sban(playerid,params[])
{
	if(PlayerInfo[playerid][bAdmin] < 8) return 1;
	if(sscanf(params,"ds[100]",params[0],params[1])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /sban [id] [причина]");
	if(anti{playerid} == true) return SCM(playerid, COLOR_LIGHTRED, "[Анти-Наказание] Вы были сняты с поста администратора (Если произошло по ошибке сделайте скриншот)"),DeleteAdministration(playerid,PlayerInfo[playerid][pNames]);
	if(AntiBan[playerid] >= 200) return SCM(playerid,COLOR_WHITE,"[Анти-перебан] Вы были сняты с поста администратора (Если произошло по ошибке сделайте скриншот)"),DeleteAdministration(playerid,PlayerInfo[playerid][pNames]);
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, params[1]);
		if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
	}
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if(PlayerInfo[params[0]][bAdmin] > 0 && PlayerInfo[playerid][bAdmin] != 13) return SCM(playerid, COLOR_GRAD2, "Администратор не может быть забанен!");
	antiwarn[playerid] += 8;
	if(antiwarn[playerid] >= 30 && anti{playerid} == false) anti{playerid} = true, antiwarn[playerid] = 300;
	AntiBan[playerid] += 30;
	format(stringer1,MAX_STR, "Sban[забанил: %s][забанен: %s][причина: %s]",PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames], params[1]);
	ABroadCast(COLOR_LIGHTRED,stringer1,1);
	format(stringer1,MAX_STR, "    Nik  [%s]    R-IP [%s]    L-IP  [%s]    IP  [%s]",PlayerInfo[params[0]][pNames],PlayerInfo[params[0]][pIpReg],PlayerInfo[params[0]][pIpReg],PlayerInfo[params[0]][pIP]);
	ABroadCast(COLOR_LIGHTRED,stringer1,1);
	KickEx(params[0],34);
	return 1;
}
CMD:capture(playerid)
{
	if (!IsAGang(playerid)) return SCM(playerid,COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вам не доступна эта функция");
	if(PlayerInfo[playerid][pRKInections] < 7) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вам нужен 7 ранг");
	if(FrakCD[PlayerInfo[playerid][pMRInections]] > 0) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Ваша банда уже воевала за территорию.");
	if(PlayerInfo[playerid][pMRInections] == 15 && b_Ghetto[0] == true) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Администрация запретила Вашей банде воевать за территории");
	if(PlayerInfo[playerid][pMRInections] == 13 && b_Ghetto[1] == true) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Администрация запретила Вашей банде воевать за территории");
	if(PlayerInfo[playerid][pMRInections] == 12 && b_Ghetto[2] == true) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Администрация запретила Вашей банде воевать за территории");
	if(PlayerInfo[playerid][pMRInections] == 18 && b_Ghetto[3] == true) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Администрация запретила Вашей банде воевать за территории");
	if(PlayerInfo[playerid][pMRInections] == 17 && b_Ghetto[4] == true) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Администрация запретила Вашей банде воевать за территории");
	new bool:captureghetto = false;
	new t; gettime(t);
	if(t < 12 || t > 22 ) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Использовать команду можно только с 12:00 до 23:00");
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && GZInfo[i][ZoneOnBattle] == 0)
		{
		    if(GZInfo[i][gID] == 78 || GZInfo[i][gID] == 71 || GZInfo[i][gID] == 93 || GZInfo[i][gID] == 17 || GZInfo[i][gID] == 21) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Данная территория прилегает к респавну, захват запрещен!");
		    if(FrakCD[GZInfo[i][gFrakVlad]] > 0) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Банда на которую вы хотите напасать уже воевала в этом часу");
			if(PlayerInfo[playerid][pMRInections] == GZInfo[i][gFrakVlad]) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Необходимо находится на территори которую хотите завоевать");
			if(!IsPlayerInBandOnline(GZInfo[i][gFrakVlad])) return SCM(playerid,COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Банда на которую вы собираетесь напасть нет в сети!");
			captureghetto=true;
			GZInfo[i][gTime] = 600;
			GetPlayer2DZone(playerid,GZInfo[i][GZName],30);
			GZInfo[i][gNapad] = PlayerInfo[playerid][pMRInections];
			format(stringer1,140,"%s начали захват территории банды %s в районе %s | Захват начал: %s",GFrac(PlayerInfo[playerid][pMRInections]),GFrac(GZInfo[i][gFrakVlad]),GZInfo[i][GZName], PlayerInfo[playerid][pNames]);
			SendBand(PlayerInfo[playerid][pMRInections],GZInfo[i][gFrakVlad],COLOR_ORANGE,stringer1);
			format(stringer,144,"{"#cGRAY"}[A]{"#cORANGE"} Банда %s начала захват территории %s {"#cGRAY"}(Захват начал: %s)",GetGangName(PlayerInfo[playerid][pMRInections]),GetGangName(GZInfo[i][gFrakVlad]),PlayerInfo[playerid][pNames]);
			ABroadCast(COLOR_ORANGE,stringer,1);
			GangZoneFlashForAll(GZInfo[i][gID],GetGangColor(GZInfo[i][gNapad]));
			GZInfo[i][ZoneOnBattle] = 1;
			FracCD(PlayerInfo[playerid][pMRInections],GZInfo[i][gFrakVlad],1);
			GZInfo[i][gzTimer] = SetTimerEx("GzCheck",1000,1,"iii",i,PlayerInfo[playerid][pMRInections],GZInfo[i][gFrakVlad]);
			break;
		}
	}
	if(!captureghetto) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Необходимо находится на территори которую хотите завоевать");
	return 1;
}
CMD:addbiz(playerid)
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3,true) || !strcmp(PlayerInfo[playerid][pNames], "No",true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
	{
		SPD(playerid, 62 , 1, "{FF6F00}Название бизнеса", "{FFFFFF}Введите название бизнеса для дальнейшего создания.", "Далее", "Выход");
	}
	return 1;
}
CMD:iban(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 10) return 1;
	if(sscanf(params,"ds[100]",params[0],params[1])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /iban [id] [причина]");
	if(AntiBan[playerid] >= 200) return SCM(playerid,COLOR_WHITE,"[Анти-перебан] Вы были сняты с поста администратора (Если произошло по ошибке сделайте скриншот)"),DeleteAdministration(playerid,PlayerInfo[playerid][pNames]);
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if(PlayerInfo[params[0]][bAdmin] > 0 && PlayerInfo[playerid][bAdmin] != 13) return SCM(playerid, COLOR_GRAD2, "Администратор не может быть забанен!");
	format(stringer1,200, "Администратор: %s забанил %s. Причина: %s",PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames], params[1]);
	SendAdminMessage(COLOR_LIGHTRED, stringer1);
	AntiBan[playerid] += 30;
	format(stringer1,MAX_STR, "    Nik  [%s]    R-IP [%s]    L-IP  [%s]    IP  [%s]",PlayerInfo[params[0]][pNames],PlayerInfo[params[0]][pIpReg],PlayerInfo[params[0]][pIpReg],PlayerInfo[params[0]][pIP]);
	ABroadCast(COLOR_LIGHTRED,stringer1,1);
	format(stringer1,244,"\t\t\t{ff5000}Ваш аккаунт заблокирован.\n{ff8800}Заблокирован: {ffffff}%s\n{ff8800}Заблокировал: {ffffff}%s\n{ff8800}Причина бана: {ffffff}%s\n{ff5000}Если вы считаете что бан выдан ложно, сообщите это главному администратору",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1]);
	SPD(params[0],228,DIALOG_STYLE_MSGBOX,"{"#cGREEN"}Блокировка аккаунта",stringer1,"Да","");
	KickEx(params[0],35);
	return 1;
}
CMD:warn(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 3) return 1;
	if(sscanf(params,"ds[100]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /warn [id] [причина]");
	if(anti{playerid} == true) return SCM(playerid, COLOR_LIGHTRED, "[Анти-Наказание] Вы были сняты с поста администратора (Если произошло по ошибке сделайте скриншот)"),DeleteAdministration(playerid,PlayerInfo[playerid][pNames]);
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if(PlayerInfo[params[0]][bAdmin] > PlayerInfo[playerid][bAdmin]) return SCM(playerid, COLOR_GREY, "Администратора нельзя заварнить.");
	if(PlayerInfo[params[0]][bAdmin] > 11) return SCM(playerid, COLOR_GRAD2, "Администратор 12 лвл не может быть заваранен!");
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, params[1]);
		if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
	}
	antiwarn[playerid] += 8;
	if(antiwarn[playerid] >= 30 && anti{playerid} == false) anti{playerid} = true, antiwarn[playerid] = 300;
	PlayerInfo[params[0]][pWarns] += 1;
	PlayerInfo[params[0]][punWarns] = 1;
	if(PlayerInfo[params[0]][pWarns] >= 3)
	{
		format(stringer1,MAX_STR, "%s: %s забанил %s [3 предупреждения]. Причина: %s ",GetAdmin[PlayerInfo[playerid][bAdmin]-1], PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames], params[1]);
		SendAdminMessage(COLOR_LIGHTRED, stringer1);
		format(stringer1,MAX_STR, "- Ник: [%s] IP: [%s]",PlayerInfo[params[0]][pNames],PlayerInfo[params[0]][pIP]);
		ABroadCast(COLOR_LIGHTRED,stringer1,1);
		PlayerInfo[params[0]][pJob] = 0;
		KickEx(params[0],36);
		return 1;
	}
	format(stringer1,200, "%s: %s выдал Warn %s [%d/3]. Причина: %s",GetAdmin[PlayerInfo[playerid][bAdmin]-1], PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames],PlayerInfo[params[0]][pWarns], params[1]);
	SendAdminMessage(COLOR_LIGHTRED, stringer1);
	format(stringer1,140, "- Если вы считаете что предупреждение выдано ложно, то опровергните это предупреждение на форуме, написав на администратора жалобу. forum.inspire-rp.ru");
	SCM(params[0], COLOR_LIGHTRED, stringer1);
	format(stringer1,SMALL_SIZE, "- Одно предупреждение снимается автоматически после 10 отыгранных часов");
	SCM(params[0], COLOR_LIGHTRED, stringer1);
	PlayerInfo[params[0]][pMRInections] = 0;
	PlayerInfo[params[0]][pLRInections] = 0;
	PlayerInfo[params[0]][pJob] = 0;
	format(stringer1,244,"\t\t\t{ff5000}Ваш аккаунт заварнен.\n{ff8800}Заварнил: {ffffff}%s\n{ff8800}Заварнен: {ffffff}%s\n{ff8800}Причина варна: {ffffff}%s\n{ff5000}Если вы считаете что варн выдан ложно, сообщите это главному администратору",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1]);
	SPD(params[0],228,DIALOG_STYLE_MSGBOX,"{"#cGREEN"}Варн аккаунта",stringer1,"Да","");
	KickEx(params[0],37);

	warns[playerid] ++;
	return 1;
}
CMD:kick(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 2) return 1;
	if(sscanf(params,"ds[100]",params[0],params[1])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /kick [id игрока] [причина]");
	if(anti{playerid} == true) return SCM(playerid, COLOR_LIGHTRED, "[Анти-Наказание] Вы были сняты с поста администратора (Если произошло по ошибке сделайте скриншот)"),DeleteAdministration(playerid,PlayerInfo[playerid][pNames]);
	if(AntiBan[playerid] >= 200) return SCM(playerid,COLOR_WHITE,"[Анти-перебан] Вы были сняты с поста администратора (Если произошло по ошибке сделайте скриншот)"),DeleteAdministration(playerid,PlayerInfo[playerid][pNames]);
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, params[1]);
		if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
	}
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if(PlayerInfo[params[0]][bAdmin] > 0) return SCM(playerid, COLOR_GRAD2, "Администратор не может быть кикнут!");
	format(stringer1,MAX_STR, "%s: %s кикнул %s. Причина: %s",GetAdmin[PlayerInfo[playerid][bAdmin]-1], PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames], params[1]);
	SendAdminMessage(COLOR_LIGHTRED, stringer1);
	antiwarn[playerid] += 8;
	AntiBan[playerid] += 30;
	if(antiwarn[playerid] >= 30 && anti{playerid} == false) anti{playerid} = true, antiwarn[playerid] = 300;
	format(stringer1,MAX_STR, "{ff8800}Кикнул(а) Администратор: {FFFFFF}%s\n\t{ff8800}Причина: {FFFFFF}%s", PlayerInfo[playerid][pNames],params[1]);
	SPD(params[0],82,DIALOG_STYLE_MSGBOX,"Вас кикнули с сервера:",stringer1,"Выход","");
	KickEx(params[0],38);
	kicks[playerid] ++;
	return 1;
}
CMD:aad(playerid, params[])
{
	if(anti{playerid} == true) return SCM(playerid, COLOR_LIGHTRED, "[Анти-Наказание] Вы были сняты с поста администратора (Если произошло по ошибке сделайте скриншот)"),DeleteAdministration(playerid,PlayerInfo[playerid][pNames]);
	if ((noooc) && PlayerInfo[playerid][bAdmin] < 6) return 1;
	if(sscanf(params,"s[100]",params[0])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /aad [сообщение]");
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, params[0]);
		if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
	}
	antiwarn[playerid] += 8;
	if(antiwarn[playerid] >= 30 && anti{playerid} == false) anti{playerid} = true, antiwarn[playerid] = 300;
	format(stringer1,200, "Администратор %s: %s", PlayerInfo[playerid][pNames], params[0]);
	OOCOff(0xFFCC00AA,stringer1);
	return 1;
}
CMD:try(playerid, params[])
{
	if(PlayerInfo[playerid][pMuted] == 1) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}У Вас бан чата!");
	if(GetPVarInt(playerid, "gag")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас кляп, вы не можете говорить!");
	if(sscanf(params,"s[100]",params[0])) return 	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /try [действие]");
	new dice = 1 + random(2);
	if(dice == 1) format(stringer1,MAX_STR, " %s %s [{B22222}Неудачно{C2A2DA}]", PlayerInfo[playerid][pNames], params[0]);
	else if(dice == 2) format(stringer1,MAX_STR, " %s %s [{09B000}Удачно{C2A2DA}]", PlayerInfo[playerid][pNames], params[0]);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	return 1;
}
ALTX:b("/и");
CMD:b(playerid, params[])
{
	if(GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
	if(PlayerInfo[playerid][pMuted] == 1) return	SCM(playerid, COLOR_LIGHTRED,"У Вас бан чата");
	if(sscanf(params,"s[100]",params[0])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /b [сообщение]");
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, params[0]);
		if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
	}
	format(stringer1,200, "(( %s: %s ))", PlayerInfo[playerid][pNames], params[0]);
	ProxDetector(20.0, playerid, stringer1,0xB5A642FF,0xB5A642FF,0xB5A642FF,0xB5A642FF,0xB5A642FF);
	return 1;
}
CMD:mute(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 1/* && PlayerInfo[playerid][pHelper] < 5*/) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не доступно!");
	if(sscanf(params, "dds[100]",params[0],params[1],params[2])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /mute [ид] [минуты] [причина]");
	if(params[0] == playerid) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Нельзя выдать наказание самому себе.");
	if(params[1] < 1 || params[1] > 30) return SCM(playerid, COLOR_WHITE, "Время от 1 минуты до 30");
	if(PlayerInfo[params[0]][bAdmin] > 0 && params[0] != playerid) return SCM(playerid, COLOR_WHITE, "Ощибка. Игрок администратор");
	if(PlayerInfo[params[0]][pMuteTime] > 0) return SCM(playerid, COLOR_WHITE, "Ошибка. У игрока уже есть затычка");
	if(anti{playerid} == true) return SCM(playerid, COLOR_LIGHTRED, "[Анти-Наказание] Вы были сняты с поста администратора (Если произошло по ошибке сделайте скриншот)"),DeleteAdministration(playerid,PlayerInfo[playerid][pNames]);
	PlayerInfo[params[0]][pMuted] = 1;
	PlayerInfo[params[0]][pMuteTime] = params[1]*60;
	if(PlayerInfo[playerid][bAdmin] > 0)
	{
		format(stringer, MAX_STR, "%s %s дал бан чата игроку %s на %d минут. Причина: %s",GetAdmin[PlayerInfo[playerid][bAdmin]-1],PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1], params[2]);
		SendAdminMessage(COLOR_LIGHTRED, stringer);
	}
	if(!PlayerInfo[playerid][bAdmin] && PlayerInfo[playerid][pHelper] >= 5)
	{
		format(stringer, MAX_STR, "Агент поддержки: %s дал бан чата игроку %s на %d минут. Причина: %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1], params[2]);
		SendAdminMessage(COLOR_LIGHTRED, stringer);
	}
	new string[176];
	format(string,sizeof(string), "{"#cGREEN"}\tВы получили бан-чата!\nВыдал:{FFFFFF} %s\n{"#cGREEN"}Получил: {FFFFFF}%s\n{"#cGREEN"}На {FFFFFF}%d{"#cGREEN"} минут.\nПричина: {FFFFFF}%s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1],params[2]);
	SPD(params[0], 0000, DIALOG_STYLE_MSGBOX, "{"#cGREEN"}Информация",string,"Принять","Выход");
	antiwarn[playerid] += 8;
	if(antiwarn[playerid] >= 30 && anti{playerid} == false) anti{playerid} = true, antiwarn[playerid] = 300;
	return 1;
}
CMD:unmute(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нет доступа");
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /unmute [ид]");
	if(PlayerInfo[params[0]][pMuteTime] <= 0) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}У игрока нет затычки");
	PlayerInfo[params[0]][pMuted] = 0;
	PlayerInfo[params[0]][pMuteTime] = 0;
	format(stringer, MAX_STR, "%s %s снял бан чата у игрока %s",GetAdmin[PlayerInfo[playerid][bAdmin]-1],PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
	SendAdminMessage(COLOR_LIGHTRED, stringer);
	return 1;
}
CMD:amusic(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 11) return 1;
	new Float:X, Float:Y, Float:Z;
	new Float:Distance,reska[101];
	if(sscanf(params,"fs[100]",Distance,reska)) return SCM(playerid,COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /amusic [радиус] [ссылка]");
	GetPlayerPos(playerid, X, Y, Z);
	MusicU[4] = Distance; MusicU[1] = X; MusicU[2] = Y; MusicU[3] = Z; UMusic = reska; Music2 = true;
	return 1;
}
CMD:vad(playerid, params[])
{
	if(sscanf(params,"s[144]",params[0])) return SCM(playerid, COLOR_WHITE,"• {FFC800}[Подсказка] {ffffff}Используйте /vad [текст]");
	if(PlayerInfo[playerid][bAdmin] > 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Администрации запрещено посылать объявления");
	if(PlayerInfo[playerid][pMuted] > 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У вас бан чата!");
	if(PlayerInfo[playerid][pDRInections] != 3) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы не имеете статуса VIP GOLD.");
	if(gVip[playerid][adTime] > 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы уже подали объявление на публикацию. Ожидайте...");
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, params[0]);
		if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
	}
	strmid(gVip[playerid][adSender], PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), 255);
	gVip[playerid][adID] = playerid;
	strmid(gVip[playerid][adText], params[0], 0, strlen(params[0]), 255);
	gVip[playerid][adTime] = gVipTime;
	gVipTime += 30;
	if(gVip[playerid][adTime] >= 0) gVip[playerid][adTime] += 30;
	gVip[playerid][adNumber] = PlayerInfo[playerid][pPnumber];
	SCMF(playerid, COLOR_GREY, "Ваше объявление успешно доставлено в службу проверки персональных объявлений. Примерное время ожидания публикования: %i секунд.",gVip[playerid][adTime]);
	return 1;
}
CMD:prison(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 1/* && PlayerInfo[playerid][pHelper] < 8*/) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нет доступа");
	if(sscanf(params, "dds[100]",params[0],params[1],params[2])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /prison [ид] [минуты] [причина]");
	if(params[1] < 1 || params[1] > 30) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Время от 1 минуты до 30");
	if(anti{playerid} == true) return SCM(playerid, COLOR_LIGHTRED, "[Анти-Наказание] Вы были сняты с поста администратора (Если произошло по ошибке сделайте скриншот)"),DeleteAdministration(playerid,PlayerInfo[playerid][pNames]);
	if(PlayerInfo[params[0]][bAdmin] > 0 && params[0] != playerid) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Игрок администратор");
	if(PlayerInfo[params[0]][pJailed] == 1) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Игрок в тюрьме");
	ResetPlayerWeapons(params[0]);
	antiwarn[playerid] += 8;
	if(antiwarn[playerid] >= 30 && anti{playerid} == false) anti{playerid} = true, antiwarn[playerid] = 300;
	SetPlayerVirtualWorld(params[0],1);
	SetPlayerInterior(params[0], 0);
	SetPlayerPosEx(params[0],5512.0884,1243.8398,23.1886);
	SetPlayerFacingAngle(params[0], 179.7971);
	PlayerInfo[params[0]][pPrison][0] = 1;
	PlayerInfo[params[0]][pPrison][1] = params[1]*60;
	GameTextForPlayer(params[0], "~w~YOU IN ~R~PRISON", 5000, 4);
	format(stringer, MAX_STR, "%s[%d] посадил в тюрьму игрока %s[%d] на %d минут. Причина: %s",PlayerInfo[playerid][pNames],playerid, PlayerInfo[params[0]][pNames],params[0],params[1],params[2]);
	ABroadCast(COLOR_GREY, stringer,1);
	format(stringer, MAX_STR, "Вы помещены в форт ДеМорган администратором %s на %d минут. Причина: %s.",PlayerInfo[playerid][pNames], params[1],params[2]);
	SCM(params[0], COLOR_LIGHTRED, stringer);
	format(stringer, MAX_STR, "UPDATE `accounts` SET `pPrison` = '%d', `pPrisonTime` = '%d' WHERE `Name` = '%s'", PlayerInfo[params[0]][pPrison][0], PlayerInfo[params[0]][pPrison][1], PlayerInfo[playerid][pNames]);
	mysql_empty(connects, stringer);
	new string[176];
	format(string,sizeof(string), "{"#cGREEN"}\tВы посажены в De-Morgan!\nПосадил: {FFFFFF}%s\n{"#cGREEN"}Посажен:{FFFFFF} %s\n{"#cGREEN"}На {FFFFFF}%d{"#cGREEN"} минут(-ы).\nПричина:{FFFFFF} %s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames],params[1],params[2]);
	SPD(params[0], 0000, DIALOG_STYLE_MSGBOX, "{"#cGREEN"}Информация",string,"Принять","Выход");
	jails[playerid] ++;
	return 1;
}
CMD:tazer(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вам недоступна данная команда");
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Невозможно использовать в машине!");
	if(GetPVarInt(playerid, "Tazer")) return  SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Перезарядка тайзера ещё не прошла!");
	new suspect = GetClosestPlayer(playerid);
	if(!IsPlayerConnected(params[0])) return 1;
	if(PlayerTied{playerid} > false)  return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы связаны!");
	if(GetPVarInt(params[0], "PlayerCuffed") >= 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок уже оглушён!");
	if(GetDistanceBetweenPlayers(playerid,suspect) > 4) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Рядом с вами никого нет!");
	params[0] = GetClosestPlayer(playerid);
	if(IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_RED, "Человек в машине!");
	if(IsACop(params[0]) || IsAArm(params[0]) || PlayerInfo[params[0]][pMRInections] == 4 || PlayerInfo[params[0]][pMRInections] == 7 || PlayerInfo[params[0]][pMRInections] == 28) return SCM(playerid, COLOR_RED, "Вы не можете ударить электрошокером Государственного работника!");
	if(IsACop(playerid))
	{
		SCMF(params[0], 0x6ab1ffaa, "%s оглушил вас на 15 секунд.", PlayerInfo[playerid][pNames]);
		SCMF(playerid, 0x6ab1ffaa, "Вы оглушили %s на 15 секунд.", PlayerInfo[suspect][pNames]);
		format(stringer1,MAX_STR, "%s оглушил вас на 15 секунд",PlayerInfo[playerid][pNames]);
		SPD(suspect,885,DIALOG_STYLE_MSGBOX,"         ",stringer1,"  ","");
		format(stringer1, MAX_STR, "%s проводит задержание %s", PlayerInfo[playerid][pNames] ,PlayerInfo[suspect][pNames]);
		ProxDetector(10.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	}
	if((PlayerInfo[playerid][pMRInections] == 7 || PlayerInfo[playerid][pMRInections] == 28) && PlayerInfo[playerid][pRKInections] == 3 || PlayerInfo[playerid][pMRInections] == 11 || PlayerInfo[playerid][pMRInections] == 8 && PlayerInfo[playerid][pRKInections] == 2 || PlayerInfo[playerid][pMRInections] == 2)
	{
		SCMF(params[0], 0x6ab1ffaa, "%s оглушил вас на 15 секунд.", PlayerInfo[playerid][pNames]);
		SCMF(playerid, 0x6ab1ffaa, "Вы оглушили %s на 15 секунд.", PlayerInfo[suspect][pNames]);
		format(stringer1, MAX_STR, "%s оглушил %s", PlayerInfo[playerid][pNames] ,PlayerInfo[suspect][pNames]);
		ProxDetector(10.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	}
	ApplyAnimation(suspect,"PED","handsup",4.1,0,1,1,1,0,0); SetPVarInt(suspect, "PlayerCuffed", 1); PlayerCuffedTime[suspect] = 15; SetPVarInt(playerid, "Tazer", 1); TazerTime[playerid] = 15;
	return 1;
}
CMD:get(playerid, params[])
{
	if(sscanf(params,"s[30]",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /get guns");
	if(strcmp(params[0],"guns",true) == 0)
	{
		if(!IsARespa (playerid)) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не на своей базе!");
		if(PlayerInfo[playerid][pMRInections] == 13 && PlayerInfo[playerid][pRKInections] >= 4 || PlayerInfo[playerid][pMRInections] == 12 && PlayerInfo[playerid][pRKInections] >= 4 || PlayerInfo[playerid][pMRInections] == 15 && PlayerInfo[playerid][pRKInections] >= 4 || PlayerInfo[playerid][pMRInections] == 17 && PlayerInfo[playerid][pRKInections] >= 4 || PlayerInfo[playerid][pMRInections] == 18 && PlayerInfo[playerid][pRKInections] >= 4)
		SPD(playerid, 9599, 2, "{FF6F00}Склад оружия","{6495ED}Оружие\tПатроны\tМатериалы\nSd Pistol\t100\t\t100\nDeagle\t\t100\t\t300\nShotgun\t100\t\t300\nSMG\t\t100\t\t200\nAK-47\t\t100\t\t300\nM4\t\t100\t\t300\nRifle\t\t100\t\t500", "Выбрать", "Отмена");
	}
	return 1;
}
CMD:loadmaterials(playerid)
{
    if(!IsAGang(playerid)) return SendClientMessage(playerid,COLOR_WHITE,"Вы не бандит!");
    new veh = GetPlayerVehicleID(playerid);
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "Вы должны быть в машине!");
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_WHITE,"Вы не водитель!");
    if(!(veh == matsfuraballas[0] || veh == matsfurarifa[0] || veh == matsfuravagos[0] || veh == matsfuraactek[0] || veh == matsfuragrove[0])) return SendClientMessage(playerid,COLOR_WHITE,"Вы не в фургоне для развозки материалов.");
  	switch(PlayerInfo[playerid][pMRInections])
	{
		case 12: if(Furi[veh-matsfuraballas[0]][gBallas] >= 15000) return SendClientMessage(playerid, COLOR_RED, "Фургон заполнен!");
		case 13: if(Furi[veh-matsfuravagos[0]][gVagos] >= 15000) return SendClientMessage(playerid, COLOR_RED, "Фургон заполнен!");
		case 15: if(Furi[veh-matsfuragrove[0]][gGrove] >= 15000) return SendClientMessage(playerid, COLOR_RED, "Фургон заполнен!");
		case 17: if(Furi[veh-matsfuraactek[0]][gAztek] >= 15000) return SendClientMessage(playerid, COLOR_RED, "Фургон заполнен!");
		case 18: if(Furi[veh-matsfurarifa[0]][gRifa] >= 15000) return SendClientMessage(playerid, COLOR_RED, "Фургон заполнен!");
	}
	if(Start{veh} == true)
	{
	    DestroyPickup(autopick_mats[veh]);
	    DestroyDynamic3DTextLabel(mats3Dtxt[veh]);
	    Start{veh} = false;
		SendClientMessage(playerid,COLOR_WHITE,"Вы отменили загрузку материалов.");
	    return 1;
	}
	new tmpcar = GetPlayerVehicleID(playerid);
	new Float:X,Float:Y,Float:Z;
	GetVehiclePos(tmpcar, X, Y, Z);
	GetXYInFrontOfPlayer(playerid, X, Y, -4.5);
	SetVehicleParamsEx(tmpcar,VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
	autopick_mats[tmpcar] = CreatePickupAC(2358,23,X,Y,Z+0.5);
	new string[10];
	switch(PlayerInfo[playerid][pMRInections])
	{
		case 12:
		{
 			format(string, sizeof(string), "%d/15000",Furi[tmpcar-matsfuraballas[0]][gBallas]);
			mats3Dtxt[tmpcar] = CreateDynamic3DTextLabel(string,COLOR_YELLOW,X,Y,Z+0.3,40.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
		}
		case 13:
		{
 			format(string, sizeof(string), "%d/15000",Furi[tmpcar-matsfuravagos[0]][gVagos]);
			mats3Dtxt[tmpcar] = CreateDynamic3DTextLabel(string,COLOR_YELLOW,X,Y,Z+0.3,40.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
		}
		case 15:
		{
 			format(string, sizeof(string), "%d/15000",Furi[tmpcar-matsfuragrove[0]][gGrove]);
			mats3Dtxt[tmpcar] = CreateDynamic3DTextLabel(string,COLOR_YELLOW,X,Y,Z+0.3,40.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
		}
		case 17:
		{
 			format(string, sizeof(string), "%d/15000",Furi[tmpcar-matsfuraactek[0]][gAztek]);
			mats3Dtxt[tmpcar] = CreateDynamic3DTextLabel(string,COLOR_YELLOW,X,Y,Z+0.3,40.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
		}
		case 18:
		{
 			format(string, sizeof(string), "%d/15000",Furi[tmpcar-matsfurarifa[0]][gRifa]);
			mats3Dtxt[tmpcar] = CreateDynamic3DTextLabel(string,COLOR_YELLOW,X,Y,Z+0.3,40.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,0);
		}
	}
	SendClientMessage(playerid, COLOR_WHITE, "Заполните фургон материалами...");
	RemovePlayerFromVehicle(playerid);
	Start{tmpcar} = true;
   	return 1;
}
CMD:ftazer(playerid, params[])
{
	if(PlayerInfo[playerid][pMRInections] != 2) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"s[30]",params[0])) return SCM(playerid,-1,"• {FFC800}[Подсказка] {ffffff}Введите: /ftazer [1/2/3]");
	if(strcmp(params[0],"1", true) == 0)
	{
		format(stringer1,MAX_STR, " Агент ФБР %s оглушил всех", PlayerInfo[playerid][pNames]);
		ProxDetector(20.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
		new Float:X,Float:Y,Float:Z;
		foreach(new i: Player)
		{
			GetPlayerPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				SCM(i,-1,"Вы заморожены на 15 секунд");
				format(stringer1,MAX_STR,"Агент ФБР %s оглушил всех на 15 секунд ", PlayerInfo[playerid][pNames]);
				SPD(i,886,DIALOG_STYLE_MSGBOX,"      ",stringer1,"  ","");
				ApplyAnimation(i,"PED","handsup",4.1,0,1,1,1,0,0);
				SetPVarInt(i, "PlayerCuffed", 1);
				PlayerCuffedTime[i] = 15;
			}
		}
	}
	if(strcmp(params[0],"2", true) == 0)
	{
		format(stringer1,MAX_STR, " Агент ФБР %s оглушил всех рядомстоящих законников", PlayerInfo[playerid][pNames]);
		ProxDetector(20.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
		new Float:X,Float:Y,Float:Z;
		foreach(new i: Player)
		{
			GetPlayerPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				if(IsAArm(i) || IsACop(i) || IsAMedic(i))
				{
					SCM(i,-1,"Вы заморожены на 15 секунд");
					format(stringer1,MAX_STR,"Агент ФБР %s оглушил всех на 15 секунд ", PlayerInfo[playerid][pNames]);
					SPD(i,887,DIALOG_STYLE_MSGBOX,"      ",stringer1,"  ","");
					ApplyAnimation(i,"PED","handsup",4.1,0,1,1,1,0,0);
					SetPVarInt(i, "PlayerCuffed", 1);
					PlayerCuffedTime[i] = 15;
				}
			}
		}
	}
	if(strcmp(params[0],"3", true) == 0)
	{
		format(stringer1,MAX_STR, " Агент ФБР %s оглушил всех рядомстоящих жителей", PlayerInfo[playerid][pNames]);
		ProxDetector(20.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
		new Float:X,Float:Y,Float:Z;
		foreach(new i: Player)
		{
			GetPlayerPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				if(PlayerInfo[i][pMRInections] == 0 || IsAGang(i) || ISAMAFIA(i))
				{
					SCM(i,-1,"Вы заморожены на 15 секунд");
					format(stringer1,MAX_STR,"Агент ФБР %s оглушил всех на 15 секунд ", PlayerInfo[playerid][pNames]);
					SPD(i,888,DIALOG_STYLE_MSGBOX,"      ",stringer1,"  ","");
					ApplyAnimation(i,"PED","handsup",4.1,0,1,1,1,0,0);
					SetPVarInt(i, "PlayerCuffed", 1);
					PlayerCuffedTime[i] = 15;
				}
			}
		}
	}
	return 1;
}
CMD:accept(playerid, params[])
{
	if(sscanf(params,"s[30]",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /accept [name]");
	if(strcmp(params[0],"witness",true) == 0)
	{
		if(GetPVarInt(playerid, "MarryWitnessOffer") == 999) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вам не предлагали быть свидетелем!");
		if(!ProxDetectorS(10.0, playerid, GetPVarInt(playerid, "MarryWitnessOffer"))) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок, который просил, чтобы вы были свидетелем не рядом с вами !");
		format(stringer1,MAX_STR, "Вы приняли предложение  %s's быть свидетелем на свадьбе", PlayerInfo[GetPVarInt(playerid, "MarryWitnessOffer")][pNames]);
		SCM(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1,MAX_STR, "%s согласился быть вашим свидетелем на свадьбе.", PlayerInfo[playerid][pNames]);
		SCM(GetPVarInt(playerid, "MarryWitnessOffer"), 0x6ab1ffaa, stringer1);
		SetPVarInt(GetPVarInt(playerid, "MarryWitnessOffer"), "MarryWitness", playerid);
		SetPVarInt(playerid, "MarryWitnessOffer", 999);
		return 1;
	}
	else if(strcmp(params[0],"marriage",true) == 0)
	{
		if(PlayerToPoint(10.0, playerid, 2238.2517,-36.0515,606.8203) || PlayerToPoint(10.0,playerid, -1988.6638,1117.8837,54.4726))
		{
			if(GetPVarInt(playerid, "ProposeOffer") == 999) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вам ни кто не предлагал!");
			if(!ProxDetectorS(10.0, playerid, GetPVarInt(playerid, "ProposeOffer"))) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Жених/Невеста не рядом с Вам!");
			if(GetPVarInt(GetPVarInt(playerid, "ProposeOffer"), "MarryWitness") == 999) return      SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У него/неё нет свидетеля!");
			if(ProxDetectorS(12.0, GetPVarInt(playerid, "ProposeOffer"), GetPVarInt(GetPVarInt(playerid, "ProposeOffer"), "MarryWitness")))
			{
				format(stringer1,MAX_STR, "Вы приняли предложение от %s's", PlayerInfo[GetPVarInt(playerid, "ProposeOffer")][pNames]);
				SCM(playerid, 0x6ab1ffaa, stringer1);
				format(stringer1,MAX_STR, "%s приняла Ваш запрос быть Вашей Женой.", PlayerInfo[playerid][pNames]);
				SCM(GetPVarInt(playerid, "ProposeOffer"), 0x6ab1ffaa, stringer1);
				format(stringer1,MAX_STR, "{FC6DEC}[Зарегистрирован новый брак] %s с %s", PlayerInfo[playerid][pNames], PlayerInfo[GetPVarInt(playerid, "ProposeOffer")][pNames]);
				SendClientMessageToAll(COLOR_WHITE,stringer1);
				PlayerInfo[GetPVarInt(playerid, "ProposeOffer")][pCash] -= 100000;
				PlayerInfo[playerid][pMarried] = 1;
				PlayerInfo[GetPVarInt(playerid, "ProposeOffer")][pMarried] = 1;
				SetPVarInt(playerid, "ProposeOffer", 999);
				SetPVarInt(playerid, "MarryWitness", 999);
			}
		}
		else SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не у церкви!");
	}
	else if(strcmp(params[0],"ticket",true) == 0)
	{
		if(GetPVarInt(playerid, "TicketOffer") == 999) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вам не выписывали штраф!");
		if (!ProxDetectorS(5.0, playerid, GetPVarInt(playerid, "TicketOffer"))) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Полицейскйи не рядом с вами!");
		format(stringer1,MAX_STR, "Вы оплатили штраф в размере %d вирт офицеру %s.", GetPVarInt(playerid, "TicketMoney"), PlayerInfo[GetPVarInt(playerid, "TicketOffer")][pNames]);
		SCM(playerid, COLOR_BLUE, stringer1);
		format(stringer1,MAX_STR, "%s оплатил штраф в размере %d вирт.", PlayerInfo[playerid][pNames], GetPVarInt(playerid, "TicketMoney"));
		SCM(GetPVarInt(playerid, "TicketOffer"), COLOR_BLUE, stringer1);
		PlayerInfo[playerid][pCash] -=GetPVarInt(playerid, "TicketMoney");
		PlayerInfo[GetPVarInt(playerid, "TicketOffer")][pCash] +=GetPVarInt(playerid, "TicketMoney");
		SetPVarInt(playerid,"TicketOffer",999);
		DeletePVar(params[0],"TicketMoney");
		return 1;
	}
	else if(strcmp(params[0],"drugs",true) == 0)
	{
		if(GetPVarInt(playerid, "DrugOffer") == 999) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вам никто не предлагал купить наркотики!");
		if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid, "DrugPrice")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У вас нет столько денег!");
		if(PlayerInfo[playerid][pDrugs] > 7) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас и так достаточно наркотиков!");
		format(stringer1,MAX_STR, "Вы купили %d грамм наркотиков за %d вирт у %s.",GetPVarInt(playerid, "DrugGram"),GetPVarInt(playerid, "DrugPrice"),PlayerInfo[GetPVarInt(playerid, "DrugOffer")][pNames]);
		SCM(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1,MAX_STR, "%s купил у вас %d грамм наркотиков за %d вирт",PlayerInfo[playerid][pNames],GetPVarInt(playerid, "DrugGram"),GetPVarInt(playerid, "DrugPrice"));
		SCM(GetPVarInt(playerid, "DrugOffer"), 0x6ab1ffaa, stringer1);
		PlayerInfo[playerid][pCash] -=GetPVarInt(playerid, "DrugPrice");
		GivePlayerMoney(GetPVarInt(playerid, "DrugOffer"), GetPVarInt(playerid, "DrugPrice"));
		PlayerInfo[playerid][pDrugs] += GetPVarInt(playerid, "DrugGram");
		PlayerInfo[GetPVarInt(playerid, "DrugOffer")][pDrugs] -= GetPVarInt(playerid, "DrugGram");
		SetPVarInt(playerid,"DrugOffer",999);
		DeletePVar(playerid,"DrugGram");
		DeletePVar(playerid,"DrugPrice");
		return 1;
	}
	else if(strcmp(params[0],"vehicle",true) == 0)
	{
		if(GetPVarInt(playerid, "CarOffer") == 999) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вам никто не предлагал купить машину!");
		if(!ProxDetectorS(8.0, playerid, GetPVarInt(playerid, "CarOffer"))) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок слишком далеко от вас!");
		if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid, "CarPrice")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У вас нет столько денег на руках!");
		PlayerInfo[playerid][pCar][0] = PlayerInfo[GetPVarInt(playerid, "CarOffer")][pCar][0];
		PlayerInfo[GetPVarInt(playerid, "CarOffer")][pCar][0] = 462;
		PlayerInfo[playerid][pCash] -=GetPVarInt(playerid, "CarPrice");
		PlayerInfo[GetPVarInt(playerid, "CarOffer")][pCash] +=GetPVarInt(playerid, "CarPrice");
		format(stringer1,MAX_STR, "Вы продали машину %s за %d вирт!", PlayerInfo[playerid][pNames], GetPVarInt(playerid, "CarPrice"));
		SCM(GetPVarInt(playerid, "CarOffer"), 0x6ab1ffaa, stringer1);
		format(stringer1,MAX_STR, "Вы купили машину у %s за %d вирт!", PlayerInfo[GetPVarInt(playerid, "CarOffer")][pNames], GetPVarInt(playerid, "CarPrice"));
		SCM(playerid, 0x6ab1ffaa, stringer1);
		if(caridhouse[playerid] != 0)
		{
			DestroyVehicleEx(caridhouse[playerid]);
			caridhouse[playerid] = 0;
		}
		DestroyVehicleEx(caridhouse[GetPVarInt(playerid, "CarOffer")]);
		SetPVarInt(playerid, "CarOffer", 999);
		DeletePVar(playerid, "CarPrice");
	}
	else if(strcmp(params[0],"medic",true) == 0)
	{
		if(PlayerInfo[playerid][pMRInections] != 4 || PlayerInfo[playerid][pLRInections] != 4) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не медик!");
		if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
		if(MedicCall == INVALID_PLAYER_ID) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вызовов нет!");
		format(stringer1,SMALL_SIZE, "Вы приняли запрос от %s.",PlayerInfo[MedicCall][pNames]);
		SCM(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1,SMALL_SIZE, "Медик %s принял ваш вызов!",PlayerInfo[playerid][pNames]);
		SCM(MedicCall, COLOR_GREEN, stringer1);
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(MedicCall, X, Y, Z);
		SetPlayerCheckpoint(playerid, X, Y, Z, 5);
		MedicCall = INVALID_PLAYER_ID;
		return 1;
	}
	else if(strcmp(params[0],"police",true) == 0)
	{
		if(!IsACop(playerid)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не полицейский!");
		if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
		if(PoliceCall == INVALID_PLAYER_ID) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вызовов нет!");
		format(stringer1,SMALL_SIZE, "Вы приняли вызов от %s",PlayerInfo[PoliceCall][pNames]);
		SCM(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1,SMALL_SIZE, "Патрульный %s принял Ваш вызов!",PlayerInfo[playerid][pNames]);
		SCM(PoliceCall, COLOR_GREEN, stringer1);
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(PoliceCall, X, Y, Z);
		SetPlayerCheckpoint(playerid, X, Y, Z, 5);
		PoliceCall = INVALID_PLAYER_ID;
		return 1;
	}
	else if(strcmp(params[0],"mechanic",true) == 0)
	{
		if(PlayerInfo[playerid][pJob] != 2) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не механик!");
		if(MechanicCall == INVALID_PLAYER_ID) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вызовов нет!");
		format(stringer1,SMALL_SIZE, "Вы приняли вызов от %s",PlayerInfo[MechanicCall][pNames]);
		SCM(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1,SMALL_SIZE, "Механик %s принял Ваш вызов!",PlayerInfo[playerid][pNames]);
		SCM(MechanicCall, COLOR_GREEN, stringer1);
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(MechanicCall, X, Y, Z);
		SetPlayerCheckpoint(playerid, X, Y, Z, 5);
		MechanicCall = INVALID_PLAYER_ID;
		return 1;
	}
	else if(strcmp(params[0],"livels",true) == 0)
	{
		if(GetPVarInt(playerid, "LiveOfferls") == 999) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вам никто не предлагал дать интервью");
		if(!ProxDetectorS(5.0, playerid, GetPVarInt(playerid, "LiveOfferls"))) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы далеко от репортёра");
		SetPVarInt(GetPVarInt(playerid, "LiveOfferls"), "TalkingLivels", 2);
		SCM(GetPVarInt(playerid, "LiveOfferls"), -1, "• {FFC800}[Подсказка] {ffffff}Используйте /live чтобы закончить интервью");
		lNews[playerid] = false;
		lNews[GetPVarInt(playerid, "LiveOfferls")] = false;
		SetPVarInt(playerid, "LiveOfferls", 999);
		SetPVarInt(playerid, "TalkingLivels", 2);
		SCM(playerid, COLOR_YELLOW, "Вы даёте интервью в прямом эфире радио Los Santos");
		return 1;
	}
	else if(strcmp(params[0],"refill",true) == 0)
	{
		if(GetPVarInt(playerid, "RefillOffer") == 999) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вам не предлагали заправиться!");
		if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid, "RefillPrice")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не достаточно денег!");
		new car = GetPlayerVehicleID(GetPVarInt(playerid, "RefillOffer"));
		format(stringer1,MAX_STR, "Механик %s заправил вашу машину на 100 литров за %d вирт.",PlayerInfo[GetPVarInt(playerid, "RefillOffer")][pNames],GetPVarInt(playerid, "RefillPrice"));
		SCM(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1,MAX_STR, "Вы заправили машину  %s за %d вирт.",PlayerInfo[playerid][pNames],GetPVarInt(playerid, "RefillPrice"));
		SCM(GetPVarInt(playerid, "RefillOffer"), 0x6ab1ffaa, stringer1);
		PlayerInfo[playerid][pCash] -=GetPVarInt(playerid, "RefillPrice");
		PlayerInfo[GetPVarInt(playerid, "RefillOffer")][pCash] +=GetPVarInt(playerid, "RefillPrice");
		if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetVehicleModel(car) == 481 || GetVehicleModel(car) == 509 || GetVehicleModel(car) == 510) return SCM(playerid,COLOR_YELLOW,".: Вы не в машине, или машина не требует бензина :.");
		if(VehInfo[car][vFuel] >= 100) SCM(playerid,COLOR_GRAD1,"Ваш бак полон");
		else
		{
			VehInfo[car][vFuel] = 100;
			PlayerInfo[playerid][pFuelcar] = 100;
		}
		return 1;
	}
	else if(strcmp(params[0],"zone",true) == 0)
	{
		if(GetPVarInt(playerid, "ZoneOffer") == 999) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вам ни кто не предлагал территорию!");
		if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid, "ZonePrice")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У вас недостаточно денег!");
		for(new i = 0; i < sizeof(GZInfo); i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
			{
				if(GZInfo[i][gFrakVlad] != GetPVarInt(playerid, "sellzone")) return 	SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вам не предлагали купить эту территорию");
				GZInfo[i][gFrakVlad] = PlayerInfo[playerid][pMRInections];
				GangZoneStopFlashForAll(GZInfo[i][gID]);
				GangZoneHideForAll(GZInfo[i][gID]);
				GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
	            SaveGZ(i);
			}
		}
		format(stringer1,MAX_STR, "Вы купили территорию у %s за %d вирт.",PlayerInfo[GetPVarInt(playerid, "ZoneOffer")], GetPVarInt(playerid, "ZonePrice"));
		SCM(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1,MAX_STR, "Вы продали территорию %s за %d вирт.",PlayerInfo[playerid][pNames],GetPVarInt(playerid, "ZonePrice"));
		SCM(GetPVarInt(playerid, "ZoneOffer"), 0x6ab1ffaa, stringer1);
		PlayerInfo[playerid][pCash] -=GetPVarInt(playerid, "ZonePrice");
		PlayerInfo[GetPVarInt(playerid, "ZoneOffer")][pCash]+= GetPVarInt(playerid, "ZonePrice");
		SetPVarInt(playerid, "ZoneOffer", 999);
		DeletePVar(playerid, "ZonePrice");
		DeletePVar(playerid, "sellzone");
	}
	else if(strcmp(params[0],"free",true) == 0)
	{
		if(GetPVarInt(playerid, "FreeOffer") == 999) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вам ни кто не предлагал услуши адвоката!");
		if(GetPVarInt(playerid, "SposobOffer") == 0)
		{
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid, "FreePrice")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У вас недостаточно денег!");
			format(stringer1,MAX_STR, "Вы приняли услуги адвоката %s за %d вирт.",PlayerInfo[GetPVarInt(playerid, "FreeOffer")][pNames], GetPVarInt(playerid, "FreePrice"));
			SCM(playerid, 0x6ab1ffaa, stringer1);
			format(stringer1,MAX_STR, " Вы выпустили %s из тюрьмы за %d вирт.",PlayerInfo[playerid][pNames],GetPVarInt(playerid, "FreePrice"));
			SCM(GetPVarInt(playerid, "FreeOffer"), 0x6ab1ffaa, stringer1);
			PlayerInfo[playerid][pCash] -=GetPVarInt(playerid, "FreePrice");
			PlayerInfo[GetPVarInt(playerid, "FreeOffer")][pCash]+= GetPVarInt(playerid, "FreePrice");
			SetPVarInt(playerid, "FreeOffer", 999);
			DeletePVar(playerid, "FreePrice");
			DeletePVar(playerid, "SposobOffer");
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPosEx(playerid,1553.4962,-1675.2714,16.1953);//Тюрьма
			SetPlayerFacingAngle(playerid, 95.0636);
			PlayerInfo[playerid][pJailTime] = 0;
			PlayerInfo[playerid][pJailed] = 0;
			PlayerInfo[playerid][pWanted] = 0;
			UpdatePlayerData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
			SCM(playerid, COLOR_ISPOLZUY,"Вы заплатили свой долг обществу, теперь вы свободны!");
			format(stringer1,11, "~g~Freedom");
			WantedLevel[playerid] = 0;
			WantedPoints[playerid] = 0;
			SetPlayerWantedLevel(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			return 1;
		}
		if(GetPVarInt(playerid, "SposobOffer") == 1)
		{
			if(PlayerInfo[playerid][pBank] < GetPVarInt(playerid, "FreePrice")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У вас недостаточно денег!");
			format(stringer1,MAX_STR, "Вы приняли услуги адвоката %s за %d вирт.",PlayerInfo[GetPVarInt(playerid, "FreeOffer")][pNames], GetPVarInt(playerid, "FreePrice"));
			SCM(playerid, 0x6ab1ffaa, stringer1);
			format(stringer1,MAX_STR, " Вы выпустили %s из тюрьмы за %d вирт.",PlayerInfo[playerid][pNames],GetPVarInt(playerid, "FreePrice"));
			SCM(GetPVarInt(playerid, "FreeOffer"), 0x6ab1ffaa, stringer1);
			PlayerInfo[playerid][pBank] -=GetPVarInt(playerid, "FreePrice");
			PlayerInfo[GetPVarInt(playerid, "FreeOffer")][pCash]+= GetPVarInt(playerid, "FreePrice");
			SetPVarInt(playerid, "FreeOffer", 999);
			DeletePVar(playerid, "FreePrice");
			DeletePVar(playerid, "SposobOffer");
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPosEx(playerid,1553.4962,-1675.2714,16.1953);//Тюрьма
			SetPlayerFacingAngle(playerid, 95.0636);
			PlayerInfo[playerid][pJailTime] = 0;
			PlayerInfo[playerid][pJailed] = 0;
			PlayerInfo[playerid][pWanted] = 0;
			UpdatePlayerData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);
			SCM(playerid, COLOR_ISPOLZUY,"Вы заплатили свой долг обществу, теперь вы свободны!");
			format(stringer1,11, "~g~Freedom");
			WantedLevel[playerid] = 0;
			WantedPoints[playerid] = 0;
			SetPlayerWantedLevel(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			return 1;
		}
		return 1;
	}
	else if(strcmp(params[0],"repair",true) == 0)
	{
		if(GetPVarInt(playerid, "RepairOffer") == 999) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вам не предлагали чинить машину!");
		if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid, "RepairPrice")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У вас не хватает денег!");
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
		RepairVehicle(GetPlayerVehicleID(playerid));
		format(stringer1,MAX_STR, "Механик %s починил вашу машину за %d вирт",PlayerInfo[GetPVarInt(playerid, "RepairOffer")][pNames], GetPVarInt(playerid, "RepairPrice"));
		SCM(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1,MAX_STR, "Вы починили атомобиль %s за %d вирт",PlayerInfo[playerid][pNames],GetPVarInt(playerid, "RepairPrice"));
		SCM(GetPVarInt(playerid, "RepairOffer"), 0x6ab1ffaa, stringer1);
		PlayerInfo[playerid][pCash] -=GetPVarInt(playerid, "RepairPrice");
		PlayerInfo[GetPVarInt(playerid, "RepairOffer")][pCash] +=GetPVarInt(playerid, "RepairPrice");
		SetPVarInt(playerid, "RepairOffer", 999);
		DeletePVar(playerid, "RepairPrice");
		return 1;
	}
	return 1;
}
ALTX:admin("/a");
CMD:admin(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 1) return 1;
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, COLOR_GREEN, "Вводите: (/a)dmin [чат]");
	format(stringer1,BIG_SIZE, "[A] %s[%d]: %s",PlayerInfo[playerid][pNames], playerid, params[0]);
	ABroadCast(0x96B62EFF, stringer1, 1);
	return 1;
}
CMD:pm(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 1) return 1;
	if(sscanf(params,"ds[100]",params[0],params[1])) return	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /pm [id] [текст]");
	if (!IsPlayerConnected(params[0])) return 1;
	SCMF(params[0],0xFFCC00AA,"%s: %s[%d] для %s[%d]: %s",GetAdmin[PlayerInfo[playerid][bAdmin]-1],PlayerInfo[playerid][pNames],playerid,PlayerInfo[params[0]][pNames],params[0], params[1]);
	format(stringer1,144, "%s: %s[%d] для %s[%d]: %s",GetAdmin[PlayerInfo[playerid][bAdmin]-1], PlayerInfo[playerid][pNames], playerid,PlayerInfo[params[0]][pNames],params[0],params[1]);
	ABroadCast(0xFFCC00AA,stringer1,1);
	PlayerPlaySound(params[0], 4203, 0.0, 0.0, 0.0);
	pms[playerid] ++;
	return 1;
}
CMD:gg(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] <= 0 ) return 1;
	if(sscanf(params, "d",params[0])) return SCM(playerid , -1, "• {FFC800}[Подсказка] {ffffff}Используйте /gg [id]");
	if(!IsPlayerConnected(params[0])) return 1;
	SCMF(params[0], 0xFFCC00AA, "%s: %s[%d] для %s[%d]: Приятной Вам игры на сервере Inspire Role Play.",GetAdmin[PlayerInfo[playerid][bAdmin]-1],PlayerInfo[playerid][pNames],playerid,PlayerInfo[params[0]][pNames],params[0]);
	new good_game[126];
	format(good_game, sizeof(good_game), "%s: %s[%d] пожелал приятной игры %s[%d]",GetAdmin[PlayerInfo[playerid][bAdmin]-1], PlayerInfo[playerid][pNames], playerid, PlayerInfo[params[0]][pNames], params[0]);
	ABroadCast(COLOR_GREY, good_game, 1);
	PlayerPlaySound(params[0], 4203, 0.0, 0.0, 0.0);
	return 1;
}
CMD:piss(playerid)
{
	if(!PlayerInfo[playerid][pLogin]) return 1;
	if(GetPVarInt(playerid, "AntiFloodPiss") > gettime()) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Попробуйте снова через 7 секунд.");
    SetPlayerSpecialAction(playerid, 68);
    MeAction(playerid, "справляет нужду");
    SetPVarInt(playerid, "AntiFloodPiss", gettime() + 7);
    return 1;
}
CMD:do(playerid, params[])
{
	if(sscanf(params, "s[126]", params[0])) return SCM(playerid, -1 , "• {FFC800}[Подсказка] {ffffff}Используйте /do [действие]");
	if(PlayerInfo[playerid][pMuted] == 1) return SCM(playerid, -1,"• {AC0000}[Ошибка] {ffffff}У Вас бан чата.");
	new mesbolt [ 126 ] ;
	format(mesbolt , sizeof mesbolt , "%s(%s)", params[0], PlayerInfo[playerid][pNames]);
	ProxDetector(30.0, playerid, mesbolt, 0xDD90FFFF, 0xDD90FFFF, 0xDD90FFFF, 0xDD90FFFF, 0xDD90FFFF);
	SetPlayerChatBubble(playerid,params[0],0xDD90FFFF,30.0,10000);
	return 1;
}
CMD:me(playerid, params[])
{
	if(GetPVarInt(playerid, "gag")) return   SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
	if(!PlayerInfo[playerid][pLogin]) return SCM(playerid, COLOR_GREY, "Вы не вошли!");
	if(PlayerInfo[playerid][pMuted] == 1) return format(stringer1,MAX_STR, "У Вас бан чата! До снятия: %d секунд(ы)",PlayerInfo[playerid][pMuteTime]);
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /me [действие]");
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, params[0]);
		if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
	}
	format(stringer1,MAX_STR, "%s %s", PlayerInfo[playerid][pNames], params[0]);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	SetPlayerChatBubble(playerid,params[0],0xDD90FFFF,30.0,10000);
	return 1;
}
ALTX:sms("/text");
CMD:sms(playerid, params[])
{
	if(PlayerInfo[playerid][pPayDayHad] < 1) return SCM(playerid,COLOR_GREY,"Вы должны отыграть на сервере как минимум 1 час.");
	if(GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
	if(PlayerInfo[playerid][pMuted] == 1) return SCM(playerid, COLOR_LIGHTRED, "У вас бан чата!");
	if(GetPVarInt(playerid, "takephone") == 1) return SCM(playerid, COLOR_LIGHTRED, "У Вас нет телефона");
	if(GetPVarInt(playerid, "AntiFloodSMS") > gettime()) return SCM(playerid, COLOR_LIGHTRED, "Следущее SMS можно отправить через 10 секунд");
	if(sscanf(params,"ds[100]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /sms [id] [текст]");
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, params[1]);
		if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
	}
	if (!IsPlayerConnected(params[0])) return 1;
	if(PhoneOnline{params[0]} > false)
	{
		SCM(playerid, COLOR_GREY, "Телефон абонента выключен...");
		format(stringer1,SMALL_SIZE, "%s достаёт мобильник", PlayerInfo[playerid][pNames]);
		ProxDetector(5.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
		return 1;
	}
	PlayerInfo[playerid][pBank] -=20;
	format(stringer1,200, "SMS | %s. Отправитель: %s[%d]",params[1],PlayerInfo[playerid][pNames], playerid);
	SCM(params[0], COLOR_YELLOW, stringer1);
	foreach(new i: Player)
	{
		if(BigEarSms[i] != false)
		{
			format(stringer1, 200, "[A][SMS]: %s. | Отправил(-а) %s[%d] для %s[%d]", params[1],PlayerInfo[playerid][pNames],playerid,PlayerInfo[params[0]][pNames],params[0]);
			SCM(i, COLOR_YELLOW, stringer1);
		}
	}
	PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	format(stringer1,200, "» Исходящее: %s. Для: %s[%d]",params[1], PlayerInfo[params[0]][pNames], params[0]);
	SCM(playerid,  COLOR_YELLOW, stringer1);
	SCM(playerid,  COLOR_WHITE, "- Сообщение доставлено");
	format(stringer1,SMALL_SIZE, "%s отправил(-а) смс сообщение", PlayerInfo[playerid][pNames]);
	ProxDetector(5.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	SetPVarInt(playerid, "AntiFloodSMS",gettime() + 10);
	return 1;
}
ALTX:m("/megaphone");
CMD:m(playerid, params[])
{
	if (!IsACop(playerid)) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте (/m)egaphone [текст]");
	new vehicleid = GetPlayerVehicleID(playerid);
	switch(PlayerInfo[playerid][pMRInections])
	{
	case 1:
		{
			if(!Megaphone(vehicleid)) return SCM(playerid, COLOR_GRAD2, "{FF6F00}x {AFAFAF}Вы не в служебной машине!");
			format(stringer1,MAX_STR, "{{ Офицер %s: %s }}", PlayerInfo[playerid][pNames], params[0]);
			ProxDetector(80.0, playerid, stringer1,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		}
	case 2:
		{
			if(!Megaphone(vehicleid)) return SCM(playerid, COLOR_GRAD2, "{FF6F00}x {AFAFAF}Вы не в служебной машине!");
			format(stringer1,MAX_STR, "{{ Агент FBI %s: %s }}", PlayerInfo[playerid][pNames], params[0]);
			ProxDetector(80.0, playerid, stringer1,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		}
	case 10:
		{
			if(!Megaphone(vehicleid)) return SCM(playerid, COLOR_GRAD2, "{FF6F00}x {AFAFAF}Вы не в служебной машине!");
			format(stringer1,MAX_STR, "{{ Офицер %s: %s }}", PlayerInfo[playerid][pNames], params[0]);
			ProxDetector(80.0, playerid, stringer1,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		}
	case 19,27,3:
		{
			if(!Megaphone(vehicleid)) return SCM(playerid, COLOR_GRAD2, "{FF6F00}x {AFAFAF}Вы не в служебной машине!");
			format(stringer1,MAX_STR, "{{ Солдат %s: %s }}", PlayerInfo[playerid][pNames], params[0]);
			ProxDetector(80.0, playerid, stringer1,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		}
	case 21:
		{
			if(!Megaphone(vehicleid)) return SCM(playerid, COLOR_GRAD2, "{FF6F00}x {AFAFAF}Вы не в служебной машине!");
			format(stringer1,MAX_STR, "{{ Офицер %s: %s }}", PlayerInfo[playerid][pNames], params[0]);
			ProxDetector(80.0, playerid, stringer1,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		}
	case 25:
		{
			if(!Megaphone(vehicleid)) return SCM(playerid, COLOR_GRAD2, "{FF6F00}x {AFAFAF}Вы не в служебной машине!");
			format(stringer1,MAX_STR, "{{ Спецподразделение SWAT %s: %s }}", PlayerInfo[playerid][pNames], params[0]);
			ProxDetector(80.0, playerid, stringer1,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		}
	}
	return 1;
}
ALTX:radio("/r");
CMD:radio(playerid, params[])
{
	if(!IsACop(playerid) && !IsAArm(playerid) && !IsAMayor(playerid) && !IsAMedic(playerid) && PlayerInfo[playerid][pMRInections] != 26) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вам недоступен этот чат.");
	if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"s[100]",params[0])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: (/r)adio [текст]");
	if(!(PlayerInfo[playerid][pSettings] & sFractionChat)) return SendClientMessage(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Включите чат фракции в личных настройках");
	if(PlayerInfo[playerid][pMuted] > 0) return   SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У вас бан чата!");
	if(GetPVarInt(playerid, "gag")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас кляп, вы не можете говорить!");
	format(stringer, MAX_STR, "[R] %s %s: %s", PlayerRank[PlayerInfo[playerid][pMRInections]-1][PlayerInfo[playerid][pRKInections]-1],PlayerInfo[playerid][pNames], params[0]);
	SendFamilyMessage(PlayerInfo[playerid][pMRInections], 0x5da130FF, stringer);
	SetPlayerChatBubble(playerid, "Сказал(а) что-то в рацию", 0xDD90FFFF, 10.0, 3000);
	return 1;
}
CMD:lmenu(playerid)
{
	if(PlayerInfo[playerid][pLRInections] == 12 || PlayerInfo[playerid][pLRInections] == 15 || PlayerInfo[playerid][pLRInections] == 17 || PlayerInfo[playerid][pLRInections] == 18 || PlayerInfo[playerid][pLRInections] == 13) return SPD(playerid, 8383, DIALOG_STYLE_LIST, "{FF6F00}Меню лидера","{FFFFFF}Смена названия рангов\nЧлены Организации OffLine","Принять","Выход");
	return 1;
}
CMD:priton(playerid)
{
	if(PlayerInfo[playerid][pLRInections] == 5 || PlayerInfo[playerid][pLRInections] == 6 || PlayerInfo[playerid][pLRInections] == 14) return ShowPlayerDialog(playerid,5873,2,"{FF6F00}Меню притона","{FFFFFF}1. Нанять нового работника\n2. Уволить работника\n3. Информация о притоне", "Далее","Отмена");
	return 1;
}
ALTX:family("/f");
CMD:family(playerid, params[])
{
	if(!IsAGang(playerid) && !ISAMAFIA(playerid) && PlayerInfo[playerid][pMRInections] != 24 && PlayerInfo[playerid][pMRInections] != 9 && PlayerInfo[playerid][pMRInections] != 16 && PlayerInfo[playerid][pMRInections] != 20 && PlayerInfo[playerid][pMRInections] != 23 && PlayerInfo[playerid][pMRInections] != 8 && PlayerInfo[playerid][pMRInections] != 11) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вам недоступен этот чат.");
	if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(PlayerInfo[playerid][pMuted] > 0) return SCM(playerid, COLOR_LIGHTRED, "У Вас бан чата!");
	if(GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: (/f)amily [текст]");
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, params[0]);
		if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
	}
	format(stringer, 150, "[F] %s %s[%d]: %s", PlayerRank[PlayerInfo[playerid][pMRInections]-1][PlayerInfo[playerid][pRKInections]-1], PlayerInfo[playerid][pNames],playerid, params[0]);
	SendFamilyMessage(PlayerInfo[playerid][pMRInections], 0x4682B4AA, stringer);
	SetPlayerChatBubble(playerid, "Сказал(а) что-то в семейный чат", 0xDD90FFFF, 10.0, 3000);
	return 1;
}
ALTX:departments("/d");
CMD:departments(playerid, params[])
{
    if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(PlayerInfo[playerid][pMuted] == 1) return SCMF(playerid, COLOR_LIGHTRED, "У Вас бан чата! До снятия: %d секунд(ы)",PlayerInfo[playerid][pMuteTime]);
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте (/d)epartments [текст]");
	if(GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, params[0]);
		if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
	}
	switch(PlayerInfo[playerid][pMRInections])
	{
	case 12,13,15,14,24:return 1;
	case 17,18,0,5,6,9,16,20,23:return 1;
	}
	if(PlayerInfo[playerid][pRKInections] < 2) return SCM(playerid, COLOR_GRAD1, "Вы не уполномочены писать в департамент!");
	format(stringer1, 250, "[%s] %s %s[%d]: %s", GetMember[PlayerInfo[playerid][pMRInections]-1],PlayerRank[PlayerInfo[playerid][pMRInections]-1][PlayerInfo[playerid][pRKInections]-1],PlayerInfo[playerid][pNames], playerid, params[0]);
	foreach(new i: Player)
	{
	    if(IsADepartament(i)) SendClientMessage(i, COLOR_ALLDEPT, stringer1);
	}
	return 1;
}
ALTX:o("/ooc");
CMD:o(playerid,params[])
{
	if(anti{playerid} == true) return SCM(playerid, COLOR_LIGHTRED, "[Анти-Наказание] Вы были сняты с поста администратора (Если произошло по ошибке сделайте скриншот)"),DeleteAdministration(playerid,PlayerInfo[playerid][pNames]);
	if(GetPVarInt(playerid, "gag")) return	SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
	if ((noooc) && PlayerInfo[playerid][bAdmin] < 3) return 	SCM(playerid, COLOR_GRAD1, "Общий чат выключен администратором!");
	if(PlayerInfo[playerid][pMuted] == 1) return SCMF(playerid, COLOR_LIGHTRED, "У Вас бан чата! До снятия: %d секунд(ы)",PlayerInfo[playerid][pMuteTime]);
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: (/o)oc [текст]");
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, params[0]);
		if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
	}
	antiwarn[playerid] += 8;
	if(antiwarn[playerid] >= 30 && anti{playerid} == false) anti{playerid} = true, antiwarn[playerid] = 300;
	format(stringer1,250, "[OOC] %s[%d]: %s", PlayerInfo[playerid][pNames], playerid, params[0]);
	OOCOff(COLOR_OOC,stringer1);
	return 1;
}
CMD:offuninvite(playerid,params[])
{
	if(PlayerInfo[playerid][pLRInections] == 0) return  SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Доступно только лидеру организации.");
	if(GetPVarInt(playerid, "AntiFloodOFFUNINVITE") > gettime()) return SCM(playerid, COLOR_GREY, "Не флуди");
	if(sscanf(params,"s[124]",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /offuninvite [Имя]");
 	mysql_format(connects, stringer, MAX_STR, "SELECT `Name` FROM `accounts` WHERE `Name` = '%s'", params[0]);
	mysql_tquery(connects, stringer,"OFFUNINVITE", "ds",playerid,params[0]);
	SetPVarInt(playerid, "AntiFloodOFFUNINVITE",gettime()+5);
	return 1;
}
CMD:offmembers(playerid)
{
	if(PlayerInfo[playerid][pMRInections] == 0) return 1;
	if(GetPVarInt(playerid, "AntiFloodOFFMM") > gettime()) return SCM(playerid, COLOR_GREY, "Не флуди");
	mysql_format(connects,stringer, MAX_STR,"SELECT `pMRInections`,pRKInections,`Name`,pGetonDate FROM `accounts` WHERE `pMRInections` = '%d'",PlayerInfo[playerid][pMRInections]);
	mysql_tquery(connects, stringer, "OFFMM", "d",playerid);
	SetPVarInt(playerid, "AntiFloodOFFMM",gettime()+5);
	return 1;
}
CMD:ticket(playerid, params[])
{
	if(!IsACop(playerid)) return   SCM(playerid, COLOR_GREY, "Вы не полицейский!");
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"dds[100]",params[0],params[1],params[2])) return	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /ticket [id] [цена] [причина]");
	if(params[1] < 1 || params[1] > 10000) return SCM(playerid, COLOR_GREY, "Штраф не должен привышать 10000 и не должен быть меньше 0 вирт!");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if (!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "Этот Человек далеко от вас!");
	if(PlayerInfo[params[0]][pCash] < params[1]) return SCM(playerid, COLOR_GRAD1, "У этого  нет столько денег!");
	if(params[0] == playerid) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы указали свой ID");
	format(stringer1,MAX_STR, "Вы выписали штраф в размере %d вирт %s. Причина: %s",params[1], PlayerInfo[params[0]][pNames], params[2]);
	SCM(playerid, COLOR_BLUE, stringer1);
	format(stringer1,MAX_STR, "Офицер %s выписал вам штраф в размере %d вирт. Причина: %s", PlayerInfo[playerid][pNames], params[1], params[2]);
	SCM(params[0], COLOR_BLUE, stringer1);
	SCM(params[0], COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /accept ticket, чтобы оплатить штраф");
	SetPVarInt(params[0],"TicketOffer",playerid);
	SetPVarInt(params[0],"TicketMoney",params[1]);
	return 1;
}

CMD:setstat(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] >= 13)
	{
		if(sscanf(params,"ddd",params[0],params[1],params[2]))
		{
			SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /setstat [id] [номер] [количество]");
			SCM(playerid, COLOR_GRAD4, "[1] Уровень | [2] Законка |[3] Маты | [4] Скин");
			SCM(playerid, COLOR_GRAD3, "[6] Номер телефона | [7] Exp | [8] Ключ от дома | [9] Номер бизнеса");
			SCM(playerid, COLOR_GRAD2, "[10] VIP [1-3] | [11] Работа игрока | [12] Аптечки | [13] Деньги в банке ");
			SCM(playerid, COLOR_GRAD2, "[15] Деньги | [16] Варны | 17] Наркотики");
			SCM(playerid, COLOR_GRAD2, "[18] Член орг.");
			SCM(playerid, COLOR_GRAD2, "[21] Бокс | [22] конг Фу | [23] КикБокс | [24] Уважение | [25] Бег");
			SCM(playerid, COLOR_GRAD2, "[26] Машина");
			SCM(playerid, COLOR_GRAD2, "[30] Piss | [31] pModel | [32] Муж/Жена");
			SCM(playerid, COLOR_GRAD2, "[34] Бизнес игрока");
			return 1;
		}
		if(IsPlayerConnected(params[0]))
		{
			if (PlayerInfo[playerid][bAdmin] >= 13)
			{
				switch (params[1])
				{
				case 1: { PlayerInfo[params[0]][pLevel] = params[2]; SCMF(playerid,COLOR_GRAD1, "LVL игрока изменён на: %d", params[2]); }
				case 2: { PlayerInfo[params[0]][pZakonp] = params[2]; SCMF(playerid,COLOR_GRAD1, "Законка: %d ", params[2]); }
				case 3: { PlayerInfo[params[0]][pMats] = params[2]; SCMF(playerid,COLOR_GRAD1, "Маты: %d ", params[2]); }
				case 4: { PlayerInfo[params[0]][pChar] = params[2]; SCMF(playerid,COLOR_GRAD1, "Скин игрока установлен на: %d", params[2]); }
				case 6: { PlayerInfo[params[0]][pPnumber] = params[2]; SCMF(playerid,COLOR_GRAD1, "Номер телефона игрока изменён на: %d", params[2]); }
				case 7: { PlayerInfo[params[0]][pExp] = params[2]; SCMF(playerid,COLOR_GRAD1, "EXP игрока изменены на: %d", params[2]); }
				case 8: { PlayerInfo[params[0]][pHouse] = params[2]; SCMF(playerid,COLOR_GRAD1, "квартира: %d", params[2]); }
				case 9: { PlayerInfo[params[0]][pBusiness] = params[2]; SCMF(playerid,COLOR_GRAD1, "Биз: %d", params[2]); }
				case 10: { PlayerInfo[params[0]][pDRInections] = params[2]; SCMF(playerid,COLOR_GRAD1, "VIP аккаунт уровня: %d", params[2]); }
				case 11: { PlayerInfo[params[0]][pJob] = params[2]; SCMF(playerid,COLOR_GRAD1, "Работа %d", params[2]); }
				case 13: { PlayerInfo[params[0]][pBank] = params[2]; SCMF(playerid,COLOR_GRAD1, "Деньги в банке изменены  на %d вирт", params[2]); }
				case 15: { PlayerInfo[params[0]][pCash] = params[2]; SCMF(playerid,COLOR_GRAD1, "Деньги изменены на %d вирт", params[2]); }
				case 16: { PlayerInfo[params[0]][pWarns] = params[2]; SCMF(playerid,COLOR_GRAD1, "Количество Варном изменено на %d ", params[2]); }
				case 17: { PlayerInfo[params[0]][pDrugs] = params[2]; SCMF(playerid,COLOR_GRAD1, "Количество наркотиков изменено на %d ", params[2]); }
				case 18: { PlayerInfo[params[0]][pMRInections] = params[2]; PlayerInfo[params[0]][pRKInections] = 1; SCMF(playerid,COLOR_GRAD1, "pMRInections %d. ", params[2]); }
				case 21: { PlayerInfo[params[0]][pBoxSkill] = params[2]; SCMF(playerid,COLOR_GRAD1, "Уровень боевых искусств БОКС %d ", params[2]); }
				case 22: { PlayerInfo[params[0]][pKongfuSkill] = params[2]; SCMF(playerid,COLOR_GRAD1, "Уровень боевых искусств  КОНГ ФУ%d ", params[2]); }
				case 23: { PlayerInfo[params[0]][pKickboxSkill] = params[2]; SCMF(playerid,COLOR_GRAD1, "Уровень боевых искусств  Кик Бокс %d ", params[2]); }
				case 26: { PlayerInfo[params[0]][pCar][0] = params[2]; SCMF(playerid,COLOR_GRAD1, "Машина %d ", params[2]); }
				case 31: { PlayerInfo[params[0]][pModel] = params[2]; SCMF(playerid,COLOR_GRAD1, "pModel %d ", params[2]); }
				case 32: { PlayerInfo[params[0]][pMarried] = 0; SCMF(playerid,COLOR_GRAD1, "pMarriedTo %d ", params[2]); }
				case 34: { PlayerInfo[params[0]][pBusiness] = params[2]; SCMF(playerid,COLOR_GRAD1, "Бизнес игрока %d ", params[2]); }
				default: { SCMF(playerid,COLOR_GRAD1, "Ошибка", params[2]); }
				}
			}
			else SCM(playerid, COLOR_GRAD1, "Нет прав доступа!");
		}
		format(stringer, MAX_STR, "Администратор: %s использовал SetStat на игроке %s", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames]);
		ABroadCast(COLOR_GREY, stringer, 1);
	}
	return 1;

}
CMD:setklass(playerid, params[])
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true))
	{
		if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /setklass [квартира] [класс]");
		HouseInfo[params[0]][hKlass] = params[1];
		SCM(playerid, COLOR_WHITE, "Класс установлен");
	}
	return 1;
}
CMD:getschet(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] >= 8)
	{
		if(sscanf(params,"d",params[0])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /getschet [квартира]");
		format(stringer1,SMALL_SIZE, "Счёт домашний: %d",HouseInfo[params[0]][hTakings]);
		SCM(playerid, COLOR_WHITE, stringer1);
	}
	return 1;
}
CMD:setcena(playerid, params[])
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true))
	{
		if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /setcena [квартира] [цена]");
		HouseInfo[params[0]][hValue] = params[1];
		SCM(playerid, COLOR_WHITE, "Цена установлена");
	}
	return 1;
}
CMD:asetpos(playerid, params[])
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true))
	{
		if(sscanf(params,"d",params[0])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /asetpos [ House ID ]");
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		HouseInfo[params[0]][hEnter][0] = lwx;
		HouseInfo[params[0]][hEnter][1]= lwy;
		HouseInfo[params[0]][hEnter][2] = lwz;
		mysql_format(connects, stringer1, 160, "UPDATE `house` SET `hEntrancex` = '%f', `hEntrancey` = '%f', `hEntrancez` = '%f' WHERE hID = '%i'",lwx,lwy,lwz,params[0]);
		mysql_empty(connects, stringer1);
		UpdateIconHouse(params[0]);
	}
	return 1;
}
CMD:adelpos(playerid, params[])
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true))
	{
		if(sscanf(params,"d",params[0])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /adelpos [ Дом ]");
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		HouseInfo[params[0]][hEnter][0] = 0;
		HouseInfo[params[0]][hEnter][1]= 0;
		HouseInfo[params[0]][hEnter][2] = 0;
		mysql_format(connects, stringer1, 100, "UPDATE `house` SET `hEntrancex` = '0', `hEntrancey` = '0', `hEntrancez` = '0' WHERE hID = '%i'",params[0]);
		mysql_empty(connects, stringer1);
		BuyHouse(params[0]);
	}
	return 1;
}
CMD:setposcar(playerid, params[])
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true))
	{
		if(sscanf(params,"d",params[0])) return		SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /setposcar [ дом ]");
		new Float:X,Float:Y,Float:Z,Float:Angle; GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
		HouseInfo[params[0]][hCar][0] = X;
		HouseInfo[params[0]][hCar][1]= Y;
		HouseInfo[params[0]][hCar][2] = Z;
		HouseInfo[params[0]][hCar][3] = Angle;
		SCM(playerid, COLOR_GREY, "Координаты машины установлены");
		mysql_format(connects, stringer1, 150, "UPDATE `house` SET `hCarx` = '%f', `hCary` = '%f', `hCarz` = '%f', `hCarc` = '%f' WHERE hID = '%i'",X,Y,Z,Angle,params[0]);
		mysql_empty(connects, stringer1);
	}
	return 1;
}
CMD:getip(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 4) return 1;
	if(sscanf(params,"d",params[0])) return SCM(playerid,COLOR_WHITE,"• {FFC800}[Подсказка] {ffffff}Введите: /getip [id]");
	format(stringer1,SMALL_SIZE, "[%s] IP: %s",PlayerInfo[params[0]][pNames],PlayerInfo[params[0]][pIP]);
	SCM(playerid,0x6495EDFF,stringer1);
	return 1;
}
CMD:iwep(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 5) return 1;
	if(sscanf(params,"d",params[0])) return	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /iwep [playerid]");
	if(IsPlayerConnected(params[0]))
	{
		new Gun[13], Ammo[13], wep[350];
		GetPlayerWeaponData(params[0],0,Gun[0],Ammo[0]);
		GetPlayerWeaponData(params[0],1,Gun[1],Ammo[1]);
		GetPlayerWeaponData(params[0],2,Gun[2],Ammo[2]);
		GetPlayerWeaponData(params[0],3,Gun[3],Ammo[3]);
		GetPlayerWeaponData(params[0],4,Gun[4],Ammo[4]);
		GetPlayerWeaponData(params[0],5,Gun[5],Ammo[5]);
		GetPlayerWeaponData(params[0],6,Gun[6],Ammo[6]);
		GetPlayerWeaponData(params[0],7,Gun[7],Ammo[7]);
		GetPlayerWeaponData(params[0],8,Gun[8],Ammo[8]);
		GetPlayerWeaponData(params[0],9,Gun[9],Ammo[9]);
		GetPlayerWeaponData(params[0],10,Gun[10],Ammo[10]);
		GetPlayerWeaponData(params[0],11,Gun[11],Ammo[11]);
		GetPlayerWeaponData(params[0],12,Gun[12],Ammo[12]);
		format(wep,sizeof(wep),
		"Игрок:   %s\n\n\
				0\tWeapon: %d     Ammo: %d\
				\n1\tWeapon: %d     Ammo: %d\
				\n2\tWeapon: %d     Ammo: %d\
				\n3\tWeapon: %d     Ammo: %d\
				\n4\tWeapon: %d     Ammo: %d\
				\n5\tWeapon: %d     Ammo: %d\
				\n6\tWeapon: %d     Ammo: %d\
				\n7\tWeapon: %d     Ammo: %d\
				\n8\tWeapon: %d     Ammo: %d\
				\n9\tWeapon: %d     Ammo: %d\
				\n10\tWeapon: %d     Ammo: %d\
				\n11\tWeapon: %d     Ammo: %d\
				\n12\tWeapon: %d     Ammo: %d"
		, PlayerInfo[params[0]][pNames], Gun[0], Ammo[0], Gun[1], Ammo[1], Gun[2], Ammo[2], Gun[3], Ammo[3], Gun[4], Ammo[4], Gun[5], Ammo[5], Gun[6], Ammo[6], Gun[7], Ammo[7], Gun[8], Ammo[8], Gun[9], Ammo[9], Gun[10], Ammo[10], Gun[11], Ammo[11], Gun[12], Ammo[12]);
		SPD(playerid,0000,DIALOG_STYLE_MSGBOX,"{FF6F00}Информация оружия",wep,"Готово","");
	}
	else return SCM(playerid, COLOR_GREY, "Игрок не найден!");
	return 1;
}
CMD:getstats(playerid, params[])
{
	if (PlayerInfo[playerid][bAdmin] < 2) return 1;
	if(sscanf(params,"d",params[0])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /getstats [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	ShowStats(playerid,params[0]);
	return 1;
}
CMD:number(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /number [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	format(stringer1,70, "Владелец: %s. Телефон: %d",PlayerInfo[params[0]][pNames],PlayerInfo[params[0]][pPnumber]);
	SCM(playerid, COLOR_WHITE, stringer1);
	return 1;
}
CMD:fstyle(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] >= 2 || PlayerInfo[playerid][pDRInections] >= 3)
	{
		if(sscanf(params,"d",params[0])) return SCM(playerid,COLOR_WHITE,"• {FFC800}[Подсказка] {ffffff}Используйте /fstyle [style 1-4]");
		if(params[0] < 1 || params[0] > 4) return  SCM(playerid,COLOR_WHITE,"• {FFC800}[Подсказка] {ffffff}Используйте /fstyle [style 1-4]");
		switch(params[0])
		{
			case 1: { SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL); SCM(playerid, COLOR_WHITE, "Обычный стиль"); }
			case 2: { SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING); SCM(playerid, COLOR_WHITE, "Стиль RM"); }
			case 3: { SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU); SCM(playerid, COLOR_WHITE, "Стиль Yakuza"); }
			case 4: { SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD); SCM(playerid, COLOR_WHITE, "Стиль LCN"); }
		}
		return 1;
	}
	return 1;
}
CMD:buydrugs(playerid, params[])
{
	if (!IsAGang(playerid)) return SCM(playerid,COLOR_GRAD1,"Вы не бандит!");
	if(sscanf(params,"d",params[0]))  return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /buydrugs [количество]");
	if(PlayerToPoint(3.0,playerid,322.1280,1118.8314,1083.8828))
	{
		if(params[0] < 1 || params[0] > 500) return SCM(playerid, COLOR_GREY, "Нельзя закупить меньше 1 и больше 500 грамм!");
		if(PlayerInfo[playerid][pCash] < params[0]*55) return SCM(playerid, COLOR_GREY, "У вас нет столько денег!");
		if(PlayerInfo[playerid][pDrugs]+params[0] > 500) return SCM(playerid, COLOR_GREY, "Нельзя унести с собой более 500 грамм!");
		PlayerInfo[playerid][pCash] -= params[0]*55;
		PlayerInfo[playerid][pDrugs] += params[0];
		SCMF(playerid,COLOR_GREY, "{FFFFFF}Вы купили %d грамм наркотиков за %d вирт [С собой %d из 500 грамм]", params[0],params[0]*35,PlayerInfo[playerid][pDrugs]);
	}
	return 1;
}
CMD:mmenu(playerid)
{
	if(PlayerInfo[playerid][pMRInections] == 6 || PlayerInfo[playerid][pMRInections] == 14 || PlayerInfo[playerid][pMRInections] == 5)
	SPD(playerid,9596,DIALOG_STYLE_LIST,"{FF6F00}Mafia Menu","[1] Проверить банк мафии\n[2] Пополнить банк мафии \n[3] Снять деньги с банка мафии\n[4] Проверить склад мафии", "Далее", "Выход");
	return 1;
}
CMD:usedrugs(playerid, params[])
{
	if(PlayerInfo[playerid][pHospital] > 0 && pTemp[playerid][pInHospital] == true) return SCM(playerid, -1,"• {AC0000}[Ошибка] {ffffff}Во время лечения, нельзя употреблять наркотик");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /usedrugs [количество]");
	new Float:health;
	if(PlayerInfo[playerid][pDrugtime] > 0) return  SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Нельзя слишком часто употреблять наркотик!");
	if(params[0] > 3 || params[0] < 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя меньше 1 грамма и больше 3 грамм!");
	if(params[0] > 12 || params[0] < 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя меньше 1 грамма и больше 12 грамм!");
	if(params[0] > 15 || params[0] < 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя меньше 1 грамма и больше 15 грамм!");
	if(PlayerInfo[playerid][pDrugs] <= 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Недостаточно наркотиков");
	PlayerInfo[playerid][pDrugtime] = 10;
	if(PlayerInfo[playerid][pDrugs] >= params[0])
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			if(!GetPVarInt(playerid, "PlayerCuffed")) {
				ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1); }}
		if(params[0] == 1) { GetPlayerHealth(playerid, health); SetPlayerHealthAC(playerid, health + 10.0); }
		if(params[0] == 2) { GetPlayerHealth(playerid, health); SetPlayerHealthAC(playerid, health + 20.0); }
		if(params[0] == 3) { GetPlayerHealth(playerid, health); SetPlayerHealthAC(playerid, health + 30.0); }
		if(params[0] == 4) { GetPlayerHealth(playerid, health); SetPlayerHealthAC(playerid, health + 40.0); }
		if(params[0] == 5) { GetPlayerHealth(playerid, health); SetPlayerHealthAC(playerid, health + 50.0); }
		if(params[0] == 6) { GetPlayerHealth(playerid, health); SetPlayerHealthAC(playerid, health + 60.0); }
		if(params[0] == 7) { GetPlayerHealth(playerid, health); SetPlayerHealthAC(playerid, health + 70.0); }
		if(params[0] == 8) { GetPlayerHealth(playerid, health); SetPlayerHealthAC(playerid, health + 80.0); }
		if(params[0] == 9) { GetPlayerHealth(playerid, health); SetPlayerHealthAC(playerid, health + 90.0); }
		if(params[0] == 10) { GetPlayerHealth(playerid, health); SetPlayerHealthAC(playerid, health + 100.0); }
		if(params[0] == 11) { GetPlayerHealth(playerid, health); SetPlayerHealthAC(playerid, health + 110.0); }
		if(params[0] == 12) { GetPlayerHealth(playerid, health); SetPlayerHealthAC(playerid, health + 120.0); }
		if(params[0] == 13) { GetPlayerHealth(playerid, health); SetPlayerHealthAC(playerid, health + 130.0); }
		if(params[0] == 14) { GetPlayerHealth(playerid, health); SetPlayerHealthAC(playerid, health + 140.0); }
		if(params[0] == 15) { GetPlayerHealth(playerid, health); SetPlayerHealthAC(playerid, health + 150.0); }
		PlayerInfo[playerid][pDrugs] -= params[0];
		SCMF(playerid,COLOR_WHITE,"Здоровье пополнено до: %0.0f", PlayerInfo[playerid][pHealthPlayer]);
		format(stringer1,SMALL_SIZE, "%s употребил(а) наркотик", PlayerInfo[playerid][pNames]);
		ProxDetector(10.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
		SetTimerEx("Narkotik", 10*1000, 0, "d", playerid);
	}
	return 1;
}
publics: Narkotik(playerid) return SetPlayerWeather(playerid, 1);
CMD:gunlist(playerid)
{
	if (IsAGang(playerid)) return SPD(playerid,8321,DIALOG_STYLE_MSGBOX,"{FF6F00}Список оружия","{FFFFFF}\tИмя\t\tМатов за 1 патрон\t\tМатов за 1 обойму\n________________________________________________________________________\n\n\tDeagle\t\t\t2м\t\t\t\t42м\n\tSdpistol\t\t2м\t\t\t\t102м\n\tRifle\t\t\t2м\t\t\t\t-\n\tShotgun\t\t2м\t\t\t\t-\n\tSMG\t\t\t2м\t\t\t\t180м\n\tAK47\t\t\t2м\t\t\t\t180м\n\tM4\t\t\t2м\t\t\t\t300м","Закрыть","");
	return 1;
}
CMD:sellgun(playerid, params[])
{
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(PlayerInfo[playerid][pMRInections] == GZInfo[i][gFrakVlad])
		{
			if (IsAGang(playerid))
			{
				if(!IsARespa(playerid)) return SCM(playerid,-1, "• {AC0000}[Ошибка] {ffffff}Вы не на своей базе.");
				if(sscanf(params,"dddd",params[0],params[1],params[2],params[3]))
				{
					SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /sellgun [id] [ID оружие] [патроны] [цена]");
					SCM(playerid, COLOR_GREY, "Что бы узнать ID оружия посмотрите /gunlist");
					SCM(playerid, COLOR_GREY, "Цена должна быть не меньше 5 вирт!");
					return 1;
				}
				if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "Не правильный id");
				if(params[1] == 24 || params[1] == 25 || params[1] == 29 || params[1] == 23 || params[1] == 30 || params[1] == 31 || params[1] == 33)
				{
					if(params[2] > 100||params[2] < 0) { SCM(playerid, COLOR_GREY, "От 1 до 100 патронов!"); return 1; }
					if (!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GRAD2, "Человек должен быть рядом с вами");
					if(params[3] < 4) { SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /sellgun [id] [ID оружие] [патроны] [цена]");SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Не меньше 4 вирт!"); return 1; }
					if(PlayerInfo[playerid][pMats] < (2*params[2])) return SCM(playerid, COLOR_GRAD2, "У вас недостаточно материалов");
					SellGun[4] = playerid;
					SellGun[0] = params[0];
					SellGun[1] = params[1];
					SellGun[2] = params[2];
					SellGun[3] = params[3];
					new dialogexx[80];
					if(params[1] == 24) format(dialogexx,sizeof(dialogexx),"{FFFFFF}Вам предложили купить оружие:\n- Deagle\n- Стоимость %d\n- Патроны %d",params[3],params[2]);
					if(params[1] == 25) format(dialogexx,sizeof(dialogexx),"{FFFFFF}Вам предложили купить оружие:\n- ShotGun\n- Стоимость %d\n- Патроны %d",params[3],params[2]);
					if(params[1] == 29) format(dialogexx,sizeof(dialogexx),"{FFFFFF}Вам предложили купить оружие:\n- nSMG\n- Стоимость %d\n- Патроны %d",params[3],params[2]);
					if(params[1] == 23) format(dialogexx,sizeof(dialogexx),"{FFFFFF}Вам предложили купить оружие:\n- Sdpistol\n- Стоимость %d\n- Патроны %d",params[3],params[2]);
					if(params[1] == 30) format(dialogexx,sizeof(dialogexx),"{FFFFFF}Вам предложили купить оружие:\n- Ak47\n- Стоимость %d\n- Патроны %d",params[3],params[2]);
					if(params[1] == 31) format(dialogexx,sizeof(dialogexx),"{FFFFFF}Вам предложили купить оружие:\n- M4A1\n- Стоимость %d\n- Патроны %d",params[3],params[2]);
					if(params[1] == 33) format(dialogexx,sizeof(dialogexx),"{FFFFFF}Вам предложили купить оружие:\n- Rifle\n- Стоимость %d\n- Патроны %d",params[3],params[2]);
					SPD(params[0], 22572, DIALOG_STYLE_MSGBOX,"{FF6F00}Покупка оружия",dialogexx,"Купить","Отмена");
					SCM(playerid, 0x6ab1ffaa, "Вы предложили купить оружие!");
				}
			}
		}
	}
	return 1;
}
CMD:unloading(playerid)
{
	new tmpcar = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return   SCM(playerid,COLOR_GREY,"Вы не в фургоне!");
	if(PlayerInfo[playerid][pMRInections] == 12 && PlayerInfo[playerid][pRKInections] >= 3)
	{
		if(Furi[tmpcar-matsfuraballas[0]][gBallas] <= 0) return SCM(playerid,COLOR_GREY,"Не достаточно материалов, для разгрузки");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats += Furi[tmpcar-matsfuraballas[0]][gBallas];
			Furi[tmpcar-matsfuraballas[0]][gBallas] = 0;//
			SCMF(playerid,TEAM_GROVE_COLOR,"Материалы разргружены! В фургоне: %d/15000 матов", Furi[tmpcar-matsfuraballas[0]][gBallas]);
			SCMF(playerid,COLOR_WHITE,"Склад мафии LCN: %d/50000", lcnmats);
			SaveMaterials();
			return 1;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfuraballas[0]][gBallas];
			Furi[tmpcar-matsfuraballas[0]][gBallas] = 0;//
			SCMF(playerid,TEAM_GROVE_COLOR,"Материалы разргружены! В фургоне: %d/15000 матов", Furi[tmpcar-matsfuraballas[0]][gBallas]);
			SCMF(playerid,COLOR_WHITE,"Склад Русской мафии: %d/50000", rmmats);
			SaveMaterials();
			return 1;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfuraballas[0]][gBallas];
			Furi[tmpcar-matsfuraballas[0]][gBallas] = 0;//
			SCMF(playerid,TEAM_GROVE_COLOR,"Материалы разргружены! В фургоне: %d/15000 матов",Furi[tmpcar-matsfuraballas[0]][gBallas]);
			SCMF(playerid,COLOR_WHITE,"Склад Якудза: %d/50000", yakuzamats);
			SaveMaterials();
			return 1;
		}
		if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
		if(ballasmatbi > 50000) return  SCM(playerid,COLOR_GREY,"Склад заполнен");
		ballasmatbi += Furi[tmpcar-matsfuraballas[0]][gBallas];
		Furi[tmpcar-matsfuraballas[0]][gBallas] = 0;//
		SCM(playerid,COLOR_GREEN,"Материалы разгружены");
	}
	else if(PlayerInfo[playerid][pMRInections] == 13 && PlayerInfo[playerid][pRKInections] >= 3)
	{
		if(Furi[tmpcar-matsfuravagos[0]][gVagos] <= 0) return SCM(playerid,COLOR_GREY,"Не достаточно материалов, для разгрузки");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats += Furi[tmpcar-matsfuravagos[0]][gVagos];
			Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;//
			SCMF(playerid,TEAM_GROVE_COLOR,"Материалы разргружены! В фургоне: %d/15000 матов", Furi[tmpcar-matsfuravagos[0]][gVagos]);
			SCMF(playerid,COLOR_WHITE,"Склад мафии LCN: %d/50000", lcnmats);
			SaveMaterials();
			return 1;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfuravagos[0]][gVagos];
			Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;//
			SCMF(playerid,TEAM_GROVE_COLOR,"Материалы разргружены! В фургоне: %d/15000 матов", Furi[tmpcar-matsfuravagos[0]][gVagos]);
			SCMF(playerid,COLOR_WHITE,"Склад Русской мафии: %d/50000", rmmats);
			SaveMaterials();
			return 1;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfuravagos[0]][gVagos];
			Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;//
			SCMF(playerid,TEAM_GROVE_COLOR,"Материалы разргружены! В фургоне: %d/15000 матов", Furi[tmpcar-matsfuravagos[0]][gVagos]);
			SCMF(playerid,COLOR_WHITE,"Склад Якудза: %d/50000", yakuzamats);
			SaveMaterials();
			return 1;
		}
		if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
		if(vagosmatbi > 50000) return   SCM(playerid,COLOR_GREY,"Склад заполнен");
		vagosmatbi += Furi[tmpcar-matsfuravagos[0]][gVagos];
		Furi[tmpcar-matsfuravagos[0]][gVagos] = 0;//
		SCM(playerid,COLOR_GREEN,"Материалы разгружены");
	}
	else if(PlayerInfo[playerid][pMRInections] == 15 && PlayerInfo[playerid][pRKInections] >= 3)
	{

		if(Furi[tmpcar-matsfuragrove[0]][gGrove] <= 0) return   SCM(playerid,COLOR_GREY,"Не достаточно материалов, для разгрузки");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats +=  Furi[tmpcar-matsfuragrove[0]][gGrove];
			Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;//
			SCMF(playerid,TEAM_GROVE_COLOR,"Материалы разргружены! В фургоне: %d/15000 матов", Furi[tmpcar-matsfuragrove[0]][gGrove]);
			SCMF(playerid,COLOR_WHITE,"Склад мафии LCN: %d/50000", lcnmats);
			SaveMaterials();
			return 1;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfuragrove[0]][gGrove];
			Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;//
			SCMF(playerid,TEAM_GROVE_COLOR,"Материалы разргружены! В фургоне: %d/15000 матов", Furi[tmpcar-matsfuragrove[0]][gGrove]);
			SCMF(playerid,COLOR_WHITE,"Склад Русской мафии: %d/50000", rmmats);
			SaveMaterials();
			return 1;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfuragrove[0]][gGrove];
			Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;//
			SCMF(playerid,TEAM_GROVE_COLOR,"Материалы разргружены! В фургоне: %d/15000 матов", Furi[tmpcar-matsfuragrove[0]][gGrove]);
			SCMF(playerid,COLOR_WHITE,"Склад Якудза: %d/50000", yakuzamats);
			SaveMaterials();
			return 1;
		}
		if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
		if(groovmatbi > 50000) return   SCM(playerid,COLOR_GREY,"Склад заполнен");
		groovmatbi += Furi[tmpcar-matsfuragrove[0]][gGrove];
		Furi[tmpcar-matsfuragrove[0]][gGrove] = 0;//
		SCM(playerid,COLOR_GREEN,"Материалы разгружены");
	}
	else if(PlayerInfo[playerid][pMRInections] == 17 && PlayerInfo[playerid][pRKInections] >= 3)
	{
		if(Furi[tmpcar-matsfuraactek[0]][gAztek] <= 0) return  SCM(playerid,COLOR_GREY,"Не достаточно материалов, для разгрузки");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats +=  Furi[tmpcar-matsfuraactek[0]][gAztek];
			Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;//
			SCMF(playerid,TEAM_GROVE_COLOR,"Материалы разргружены! В фургоне: %d/15000 матов", Furi[tmpcar-matsfuraactek[0]][gAztek]);
			SCMF(playerid,COLOR_WHITE,"Склад мафии LCN: %d/50000", lcnmats);
			SaveMaterials();
			return 1;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfuraactek[0]][gAztek];
			Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;//
			SCMF(playerid,TEAM_GROVE_COLOR,"Материалы разргружены! В фургоне: %d/15000 матов", Furi[tmpcar-matsfuraactek[0]][gAztek]);
			SCMF(playerid,COLOR_WHITE,"Склад Русской мафии: %d/50000", rmmats);
			SaveMaterials();
			return 1;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfuraactek[0]][gAztek];
			Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;//
			SCMF(playerid,TEAM_GROVE_COLOR,"Материалы разргружены! В фургоне: %d/15000 матов", Furi[tmpcar-matsfuraactek[0]][gAztek]);
			SCMF(playerid,COLOR_WHITE,"Склад Якудза: %d/50000", yakuzamats);
			SaveMaterials();
			return 1;
		}
		if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
		if(aztekmatbi > 50000) return SCM(playerid,COLOR_GREY,"Склад заполнен");
		aztekmatbi += Furi[tmpcar-matsfuraactek[0]][gAztek];
		Furi[tmpcar-matsfuraactek[0]][gAztek] = 0;//
		SCM(playerid,COLOR_GREEN,"Материалы разгружены");
	}
	//-----------
	else if(PlayerInfo[playerid][pMRInections] == 18 && PlayerInfo[playerid][pRKInections] >= 3)
	{
		if(Furi[tmpcar-matsfurarifa[0]][gRifa] <= 0) return  SCM(playerid,COLOR_GREY,"Не достаточно материалов, для разгрузки");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats +=  Furi[tmpcar-matsfurarifa[0]][gRifa];
			Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;//
			SCMF(playerid,TEAM_GROVE_COLOR,"Материалы разргружены! В фургоне: %d/15000 матов", Furi[tmpcar-matsfurarifa[0]][gRifa]);
			SCMF(playerid,COLOR_WHITE,"Склад мафии LCN: %d/50000", lcnmats);
			SaveMaterials();
			return 1;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += Furi[tmpcar-matsfurarifa[0]][gRifa];
			Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;//
			SCMF(playerid,TEAM_GROVE_COLOR,"Материалы разргружены! В фургоне: %d/15000 матов", Furi[tmpcar-matsfurarifa[0]][gRifa]);
			SCMF(playerid,COLOR_WHITE,"Склад Русской мафии: %d/50000", rmmats);
			SaveMaterials();
			return 1;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += Furi[tmpcar-matsfurarifa[0]][gRifa];
			Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;//
			SCMF(playerid,TEAM_GROVE_COLOR,"Материалы разргружены! В фургоне: %d/15000 матов", Furi[tmpcar-matsfurarifa[0]][gRifa]);
			SCMF(playerid,COLOR_WHITE,"Склад Якудза: %d/50000", yakuzamats);
			SaveMaterials();
			return 1;
		}
		if(!IsARespa (playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
		if(rifamatbi > 50000) return   SCM(playerid,COLOR_GREY,"Склад заполнен");
		rifamatbi += Furi[tmpcar-matsfurarifa[0]][gRifa];
		Furi[tmpcar-matsfurarifa[0]][gRifa] = 0;//
		SCM(playerid,COLOR_GREEN,"Материалы разгружены");
	}
	ObshiakGang();
	SaveMaterials();
	return 1;
}
CMD:maskb(playerid)
{
	if(IsAGang(playerid))
	{
		if(GetPVarInt(playerid, "mask") == 0)
		{
			switch(PlayerInfo[playerid][pMRInections])
			{
			case 12:
				{
					SetPlayerAttachedObject(playerid, 0, 18915, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
					SetPVarInt(playerid, "mask",1);
					SetPlayerToTeamColor(playerid);
					format(stringer1,SMALL_SIZE, "Надел(а) бандану");
					SetPlayerChatBubble(playerid,stringer1,0xDD90FFFF,30.0,10000);
					return 1;
				}
			case 13:
				{
					SetPlayerAttachedObject(playerid, 0, 18916, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
					SetPVarInt(playerid, "mask",1);
					SetPlayerToTeamColor(playerid);
					format(stringer1,SMALL_SIZE, "Надел(а) бандану");
					SetPlayerChatBubble(playerid,stringer1,0xDD90FFFF,30.0,10000);
					return 1;
				}
			case 18:
				{
					SetPlayerAttachedObject(playerid, 0, 18917, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
					SetPVarInt(playerid, "mask",1);
					SetPlayerToTeamColor(playerid);
					format(stringer1,SMALL_SIZE, "Надел(а) бандану");
					SetPlayerChatBubble(playerid,stringer1,0xDD90FFFF,30.0,10000);
					return 1;
				}
			case 15:
				{
					SetPlayerAttachedObject(playerid, 0, 18918, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
					SetPVarInt(playerid, "mask",1);
					SetPlayerToTeamColor(playerid);
					format(stringer1,SMALL_SIZE, "Надел(а) бандану");
					SetPlayerChatBubble(playerid,stringer1,0xDD90FFFF,30.0,10000);
					return 1;
				}
			}
			SetPlayerAttachedObject(playerid, 0, 18912, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
			SetPVarInt(playerid, "mask",1);
			SetPlayerToTeamColor(playerid);
			format(stringer1,SMALL_SIZE, "Надел(а) бандану");
			SetPlayerChatBubble(playerid,stringer1,0xDD90FFFF,30.0,10000);
		}
		else
		{
			RemovePlayerAttachedObject(playerid, 0);
			DeletePVar(playerid, "mask");
			SetPlayerColor(playerid, 0xFFFFFF20);
			format(stringer1,SMALL_SIZE, "Снял(а) бандану");
			SetPlayerChatBubble(playerid,stringer1,0xDD90FFFF,30.0,10000);
		}
	}
	return 1;
}
CMD:gbank(playerid)
{
	switch(PlayerInfo[playerid][pMRInections])
	{
	case 15: { SCMF(playerid, 0x6ab1ffaa, "В банке Grove: %d вирт", FracBank[0][fGrove]); }
	case 12: { SCMF(playerid, 0x6ab1ffaa, "В банке Ballas: %d вирт", FracBank[0][fBallas]); }
	case 13: { SCMF(playerid, 0x6ab1ffaa, "В банке Vagos: %d вирт", FracBank[0][fVagos]); }
	case 17: { SCMF(playerid, 0x6ab1ffaa, "В банке Aztec: %d вирт", FracBank[0][fAztek]); }
	case 18: { SCMF(playerid, 0x6ab1ffaa, "В банке Rifa: %d вирт", FracBank[0][fRifa]); }
	}
	return 1;
}
CMD:shield(playerid)
{
	if(IsACop(playerid) || IsAArm(playerid))
	{
	    if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
		if(GetPVarInt(playerid, "shield") == 0)
		{
			SetPlayerAttachedObject(playerid, 1, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
			SetPlayerHealthAC(playerid, 999);
			SetPVarInt(playerid, "shield",1);
		}
		else
		{
			RemovePlayerAttachedObject(playerid, 1);
			SetPlayerHealthAC(playerid, 50);
			DeletePVar(playerid, "shield");
		}
	}
	else return SCM(playerid, COLOR_GREY, "Вы не Полицейский/Военный/ФБР");
	return 1;
}
CMD:alldonate(playerid)
{
	if(PlayerInfo[playerid][bAdmin] <  13) return 1;
	foreach(new i: Player)
	{
		PlayerInfo[i][pDMInections] += 5000;
	}
	SendClientMessageToAll(COLOR_ORANGE, "Вы получили 5000 donate money от администрации сервера. Мы желаем Вам приятной игры ;)");
	SCM(playerid, COLOR_GREY, "Успешно");
	return 1;
}
CMD:givedonate(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] == 13)
	{
		if(sscanf(params,"dd",params[0],params[1])) return	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /givedonate [playerid] [кол-во]");
		if(IsPlayerConnected(params[1]))
		{
			if(strcmp(params[1],"0",true) == 0)
			{
				SCM(playerid,COLOR_LIGHTRED, "Вы забрали у игрока все DonatMoney");
				PlayerInfo[params[0]][pDMInections] = 0;
				SCMF(playerid,COLOR_LIGHTRED, "Администратор %s забрал у вас DonatMoney", PlayerInfo[playerid][pNames]);
				return 1;
			}
			SCMF(playerid,COLOR_YELLOW,"Вы дали игроку %s %d DonatMoney", PlayerInfo[params[0]][pNames], params[1]);
			PlayerInfo[params[0]][pDMInections] += params[1];
			SCMF(params[0],COLOR_REDD, "Администратор %s дал вам: %d DonatMoney", PlayerInfo[playerid][pNames], params[1]);
			SCMF(params[0],COLOR_REDD, "Ваш донатный счёт: %d DonatMoney {FFFFFF}(( Используйте /donate ))", PlayerInfo[params[0]][pDMInections]);
		}
	}
	return 1;
}
CMD:ceject(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /ceject [id игрока]");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "Игрок не рядом с вами!");
	if(PlayerInfo[playerid][pMRInections] == 1 || PlayerInfo[playerid][pMRInections] == 2 || PlayerInfo[playerid][pMRInections] == 10 || PlayerInfo[playerid][pMRInections] == 21 || PlayerInfo[playerid][pMRInections] == 25)
	{
	    if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
		if(PlayerToPoint(10,playerid,1568.2023,-1694.1594,5.8906))
		{
			SetPlayerInterior(params[0],6);
			PlayerInfo[params[0]][pInt] = 6;
			SetPlayerPosEx(params[0],253.9933,86.9706,1002.4453);
			SetPlayerFacingAngle(params[0], 278.0311);
		}
		if(PlayerToPoint(10,playerid,-1590.8289,716.0479,-5.2422))
		{
			SetPlayerInterior(params[0],10);
			PlayerInfo[params[0]][pInt] = 10;
			SetPlayerPosEx(params[0],217.3147,121.3382,999.0156);
			SetPlayerFacingAngle(params[0], 272.8898);
		}
		if(PlayerToPoint(10,playerid,2295.1934,2451.8459,10.8203))
		{
			SetPlayerInterior(params[0],3);
			PlayerInfo[params[0]][pInt] = 3;
			SetPlayerVirtualWorld(params[0], 122);
			SetPlayerPosEx(params[0],238.5033,141.1578,1003.0234);
			SetPlayerFacingAngle(params[0], 359.1617);
		}
		else return SCM(playerid, 0x6ab1ffaa, "Вы затолкали приступника в участок.");
	}
	return 1;
}
CMD:withdraw(playerid, params[])
{
	if(PlayerToPoint(10.0,playerid,1296.6184,-1352.8342,19.0469))
	{
		if(sscanf(params,"d",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /withdraw [Сумма]");
		if(PlayerInfo[playerid][pMRInections] >= 0)
		{
			if(params[0] < 1 || params[0] > 10000000000) { SCM(playerid, COLOR_GREY, "Нельзя снять 1 вирта и более 10000000000!"); return 1; }
			if(PlayerInfo[playerid][pBank] < params[0]) return SCM(playerid, COLOR_GRAD1, "У вас нет столько денег!");
			PlayerInfo[playerid][pCash] += params[0];
			PlayerInfo[playerid][pBank] -= params[0];
			SCMF(playerid,COLOR_YELLOW,"Вы сняли %d вирт. Остаток: %d вирт", params[0], PlayerInfo[playerid][pBank]);
		}
	}
	return 1;
}
ALTX:live("/l");
CMD:live(playerid, params[])
{
	new newcar = GetPlayerVehicleID(playerid);
	switch(PlayerInfo[playerid][pMRInections])
	{
	case 16:
		{
		    if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
			if(GetPVarInt(playerid, "gag")) return	SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
			if(PlayerInfo[playerid][pMuted] == 1) { SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}У Вас бан чата!"); return 1; }
			if(newcar >= lsnewscar[0] && newcar <= lsnewscar[1] || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) { } else { SCM(playerid, COLOR_GREY, "Вы не в репортёрской машине / вертолёте / офисе!"); return 1;}
			if(GetPVarInt(playerid, "TalkingLivels") != 999)
			{
				SCM(playerid, 0x6ab1ffaa, "Прямой эфир завершён");
				SCM(GetPVarInt(playerid, "TalkingLivels"), 0x6ab1ffaa, "Прямой эфир завершён");
				TogglePlayerControllable(playerid, 1);
				TogglePlayerControllable(GetPVarInt(playerid, "TalkingLivels"), 1);
				SetPVarInt(GetPVarInt(playerid, "TalkingLivels"), "TalkingLives", 999);
				SetPVarInt(playerid, "TalkingLivels", 999);
				return 1;
			}
			if(sscanf(params,"d",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /live [id]");
			if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете брать интервью у себя!");
			if (ProxDetectorS(5.0, playerid, params[0])){} else return SCM(playerid, COLOR_GREY, "Человек далеко от вас!");
			if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
			SCMF(playerid,0x6ab1ffaa,"Вы предложили %s снять интервью", PlayerInfo[params[0]][pNames]);
			SCMF(params[0],0x6ab1ffaa,"%s предлагает вам снять интервью", PlayerInfo[playerid][pNames]);
			SCM(params[0], COLOR_GREY, "Введите /accept livels, чтобы согласиться");
			SetPVarInt(params[0], "LiveOfferls", playerid);
		}
	}
	return 1;
}
CMD:n(playerid)
{
	new model = GetVehicleModel(GetPlayerVehicleID(playerid));
	if(model == 582 || model == 488 || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999))
	if(PlayerInfo[playerid][pMRInections] == 16) SPD(playerid,2224, DIALOG_STYLE_LIST, "{FF6F00}[ NEWS MENU ]", "{FFFFFF}[1] Прямой эфир ( Войти )\n [2] Прямой эфир ( Выйти )\n [3] Прием звонков ( Начать )\n [4] Прием звонков ( Завершить )\n [5] Установить цену за Звонки и SMS", "Скрыть", "Отмена");
	else return SCM(playerid, COLOR_GREY, "Вы не в служебном транспорте/офисе!");
	return 1;
}
CMD:selldrugs(playerid, params[])
{
	if(sscanf(params,"ddd",params[0],params[1],params[2])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /selldrugs [id] [Число] [Цена]");
	if(params[1] < 1 || params[1] > 50) return SCM(playerid, COLOR_GREY, "Вес не может быть меньше 1 и больше 50!");
	if(params[2] < 1 || params[2] > 5000) return SCM(playerid, COLOR_GREY, "Цена не может быть меньше 1 и больше $5000!");
	if(params[1] > PlayerInfo[playerid][pDrugs]) return SCM(playerid, COLOR_GREY, "У вас нету столько наркотиков!");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if (!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "Этот Человек далеко от вас!");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете продать себе наркотики!");
	SCMF(playerid,0x6ab1ffaa,"Вы предложили %s купить %d грамм наркоты за %d вирт", PlayerInfo[params[0]][pNames], params[1], params[2]);
	SCMF(params[0],0x6ab1ffaa,"Бандит %s предлагает вам купить %d грам наркоты за %d вирт. (( Введите /accept drugs для покупки ))", PlayerInfo[playerid][pNames], params[1], params[2]);
	SetPVarInt(params[0], "DrugOffer", playerid);
	SetPVarInt(params[0], "DrugPrice", params[2]);
	SetPVarInt(params[0], "DrugGram", params[1]);
	return 1;
}
CMD:fuelcars(playerid)
{
	if(PlayerInfo[playerid][bAdmin] >=3)
	{
		forveh(i) { VehInfo[i][vFuel] = 300; }
		format(stringer1,80,"*Администратор %s заправил весь транспорт!",PlayerInfo[playerid][pNames]);
		SendClientMessageToAll(COLOR_LIGHTBLUE,stringer1);
	}
	return 1;
}
CMD:spawncars(playerid)
{
	if(PlayerInfo[playerid][bAdmin] < 12) return SCM(playerid, COLOR_GRAD1, "Вы не можете использовать эту команду!");
	format(stringer,MAX_STR,"{FF0000}Внимание! {FFFFFF}Администратор: {FF0000}%s{FFFFFF} заспавнит незанятыми людьми транспорт через 15 секунд",PlayerInfo[playerid][pNames]);
	SendClientMessageToAll(0xFF0000FF, stringer);
	SetTimerEx("SpawnCars",15000,false,"d", playerid);
	return 1;
}
CMD:bizwar(playerid, params[])
{
	new t; gettime(t);
	if(t < 13 || t > 22 ) return SCM(playerid, 0xAFAFAFAA, "Использовать команду можно только с 13:00 до 23:00");
	if(!ISAMAFIA(playerid)) return SCM(playerid,COLOR_WHITE,"Вам не доступна данная команда.");
	if(BizWarTime != 0) return SCM(playerid,COLOR_WHITE,"Война за бизнес уже идет.");
	if(BizHourTime>0) return SCM(playerid,COLOR_WHITE,"Стрелы за бизнес проходят раз в два часа");
	if(PlayerInfo[playerid][pMRInections] == 5 && PlayerInfo[playerid][pRKInections] < 7 || PlayerInfo[playerid][pMRInections] == 6 && PlayerInfo[playerid][pRKInections] < 7 || PlayerInfo[playerid][pMRInections] == 14 && PlayerInfo[playerid][pRKInections] < 7) return SCM(playerid,COLOR_WHITE,"Вам не доступна данная команда.");
	if(sscanf(params,"i",params[0])) return SCM(playerid,COLOR_WHITE,"Введите /bizwar [1-3]");
	if(params[0] < 1 || params[0] > 3) return SCM(playerid,COLOR_WHITE,"Введите /bizwar [1-3]");
	for(new h = 1; h <= BIZES; h++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5,BizInfo[h][EnterX], BizInfo[h][EnterY], BizInfo[h][EnterZ]))
		{
			if(BizInfo[h][bKrisha] == PlayerInfo[playerid][pMRInections] && BizInfo[h][bKrisha] != 0) return SCM(playerid,COLOR_GREY,"Нельзя напасть на бизнес, который уже под вашим контролем.");
			if(!IsPlayerInBandOnline(BizInfo[h][bKrisha])) return SCM(playerid,COLOR_WHITE, "Нельзя напасть на бизнес, т.к. мафии, которая им владеет, нет в онлайне");
			if(BizInfo[h][bKrisha] <= 0)
			{
				BizInfo[h][bKrisha] = PlayerInfo[playerid][pMRInections];
				SCM(playerid, COLOR_WHITE, "Бизнес взят под контроль");
				return 1;
			}
			new mestoz[21];
			switch(params[0])
			{
			case 1: mestoz = "Заброшенный аэропорт";
			case 2: mestoz = "Дамба";
			case 3: mestoz = "Карьер";
			}
			GangZoneFlashForAll(ZonsWar[params[0]-1],GetColor(MZInfo[bNapad]));
			format(stringer1,200, "%s{FFFFFF} забила вам стрелу, цена которой является бизнес {4169E1}%s{FFFFFF}. Место встречи: %s.", GetMN(PlayerInfo[playerid][pMRInections]),BizInfo[h][bName],mestoz);
			SendFamilyMessage(BizInfo[h][bKrisha],COLOR_WHITE,stringer1);
			format(stringer1,200, "Вы забили стрелу мафии {4169E1}%s{FFFFFF} за бизнес {4169E1}%s{FFFFFF}. Место встречи: %s.", GetMN(BizInfo[h][bKrisha]),BizInfo[h][bName],mestoz);
			SendFamilyMessage(PlayerInfo[playerid][pMRInections],COLOR_WHITE,stringer1);
			BizWarTime = 600;
			MZInfo[bNapad] = PlayerInfo[playerid][pMRInections];
			MZInfo[bFrakVlad] = BizInfo[h][bKrisha];
			MZInfo[bBiz] = h;
			MZInfo[bType] = 1;
			MZInfo[bMesto] = params[0];
			MZInfo[bCountDead][MZInfo[bNapad]] = 0;
			MZInfo[bCountDead][MZInfo[bFrakVlad]] = 0;
			return 1;
		}
	}
	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3,SBizzInfo[h][sEntranceX], SBizzInfo[h][sEntranceY], SBizzInfo[h][sEntranceZ]) || SBizzInfo[h][sbMafia] == PlayerInfo[playerid][pMRInections]) continue;
		if(SBizzInfo[h][sbMafia] <= 0)
		{
			SBizzInfo[h][sbMafia] = PlayerInfo[playerid][pMRInections];
			SCM(playerid, COLOR_WHITE, "Бизнес взят под контроль");
			return 1;
		}
		new mestoz[21];
		switch(params[0])
		{
		case 1: mestoz = "Заброшенный аэропорт";
		case 2: mestoz = "Дамба";
		case 3: mestoz = "Карьер";
		}
		GangZoneFlashForAll(ZonsWar[params[0]-1],GetColor(MZInfo[bNapad]));
		format(stringer1,200, "%s{FFFFFF} забила вам стрелу, цена которой является бизнес {4169E1}%s{FFFFFF}. Место встречи: %s.", GetMN(PlayerInfo[playerid][pMRInections]),SBizzInfo[h][sMessage],mestoz);
		SendFamilyMessage(SBizzInfo[h][sbMafia],COLOR_WHITE,stringer1);
		format(stringer1,200, "Вы забили стрелу мафии {4169E1}%s{FFFFFF} за бизнес {4169E1}%s{FFFFFF}. Место встречи: %s.", GetMN(SBizzInfo[h][sbMafia]),SBizzInfo[h][sMessage],mestoz);
		SendFamilyMessage(PlayerInfo[playerid][pMRInections],COLOR_WHITE,stringer1);
		BizWarTime = 600;
		MZInfo[bNapad] = PlayerInfo[playerid][pMRInections];
		MZInfo[bFrakVlad] = SBizzInfo[h][sbMafia];
		MZInfo[bBiz] = h;
		MZInfo[bType] = 2;
		MZInfo[bMesto] = params[0];
		MZInfo[bCountDead][MZInfo[bNapad]] = 0;
		MZInfo[bCountDead][MZInfo[bFrakVlad]] = 0;
		return 1;
	}
	SCM(playerid, COLOR_GREY, "Вы должны находится возле бизнеса или заправки.");
	return 1;
}

CMD:bizlist(playerid, params[])
{
	if(!ISAMAFIA(playerid)) return SCM(playerid,COLOR_WHITE,"Вам не доступна данная команда.");
	stringer="";
	new str [ 100 ]; stringer[1024] = 1024;
	for(new i = 1; i <= BIZES; i++)
	{
		if(BizInfo[i][bKrisha] != PlayerInfo[playerid][pMRInections]) continue;
		format(str, 100, "{FFFFFF}%i. %s\n", i, BizInfo[i][bName]); strcat(stringer,str);
	}
	SPD(playerid, 1019, DIALOG_STYLE_MSGBOX, "{FF6F00}Бизнесы под контролем", stringer, "Выход", "");
	return 1;
}
CMD:tune(playerid)
{
	if(!IsATune(playerid)) return SCM(playerid, COLOR_GREY, "{F70000}x {ADAEAD}Вы не в автомастерской!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, -1,"• {AC0000}[Ошибка] {ffffff}Вы не в автомобиле");
	if(GetPlayerVehicleID(playerid) != caridhouse[playerid] && GetPlayerVehicleID(playerid) != GetPVarInt(playerid, #vehicle_id_two)) return SCM(playerid, COLOR_GREY, "{F70000}x {ADAEAD}Вы не за рулём своего транспортного средства!");
	TuneDialog(playerid);
	return 1;
}
CMD:setskill(playerid, params[])
{
	if(sscanf(params,"ddd",params[0],params[1],params[2]))
	{
		SCM(playerid, COLOR_GRAD1, "Подсказка: /setskill [playerid/PartOfName] [statcode] [amount]");
		SCM(playerid, COLOR_GRAD4, "|1 pSDPistol |2 pDesert |3 pSmg |4 pAk |5 pM4 |6 pShot");
		return 1;
	}
	if(IsPlayerConnected(params[0]))
	{
		if (PlayerInfo[playerid][bAdmin] >= 11)
		{
			switch (params[1])
			{
			case 1: { SCMF(playerid,COLOR_GRAD1," Скилл оружия SDPistol у него теперь равен %d.", params[2]); }
			case 2: { SCMF(playerid,COLOR_GRAD1," Скилл оружия Desert Eagle у него теперь равен %d.", params[2]);}
			case 3: { SCMF(playerid,COLOR_GRAD1," Скилл оружия SMG у него теперь равен %d.", params[2]);}
			case 4: { SCMF(playerid,COLOR_GRAD1," Скилл оружия AK-47 у него теперь равен %d.", params[2]);}
			case 5: { SCMF(playerid,COLOR_GRAD1," Скилл оружия M-4 у него теперь равен %d.", params[2]);}
			case 6: { SCMF(playerid,COLOR_GRAD1," Скилл оружия ShotGun у него теперь равен %d.", params[2]);}
			case 7:
				{
					PlayerInfo[params[0]][pSkills][0] = params[2];
					PlayerInfo[params[0]][pSkills][1] = params[2];
					PlayerInfo[params[0]][pSkills][4] = params[2];
					PlayerInfo[params[0]][pSkills][3] = params[2];
					PlayerInfo[params[0]][pSkills][5] = params[2];
					PlayerInfo[params[0]][pSkills][2] = params[2];
					SCMF(playerid,COLOR_GRAD1," Скилл оружия ShotGun у него теперь равен %d.", params[2]);
					SCM(params[0], COLOR_YELLOW, "Администратор выдал вам скилы");
				}
			default: SCM(playerid, COLOR_GRAD1, " Неизвестное значение!");
			}
		}
		else SCM(playerid, COLOR_GRAD1, " У вас нет прав на использование этой команды!");
	}
	return 1;
}
CMD:slap(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 3) return 1;
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /slap [id]");
	new Float:shealth;
	new Float:slx, Float:sly, Float:slz;
	if(!IsPlayerConnected(params[0])) return 1;
	GetPlayerHealth(params[0], shealth);
	SetPlayerHealthAC(params[0], shealth-5);
	GetPlayerPos(params[0], slx, sly, slz);
	SetPlayerPosEx(params[0], slx, sly, slz+5);
	PlayerPlaySound(params[0], 1130, slx, sly, slz+5);
	format(stringer1,MAX_STR, "Админ %s дал пинка %s",PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames]);
	ABroadCast(COLOR_GRAD1,stringer1,1);
	return 1;
}
CMD:trailer(playerid)
{
	if(PlayerInfo[playerid][pMRInections] != 1 && PlayerInfo[playerid][pJob] != 2) return SCM(playerid,COLOR_GREY,"Вам не доступна данная функция.");
 	if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "Вам нужно быть в автомобиле!");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SCM(playerid, COLOR_GREY, "Вам нужно быть в эвакуаторе!");
	if(GetPlayerState(playerid)!=2)return SCM(playerid, COLOR_GREY, "Вам нужно быть за рулём!");
	new Float:pX,Float:pY,Float:pZ;
	GetPlayerPos(playerid,pX,pY,pZ);
	new Float:vX,Float:vY,Float:vZ,bool:Found = false, vid = 0;
	while((vid<MAX_VEHICLES)&&(!Found))
	{
		vid++;
		GetVehiclePos(vid,vX,vY,vZ);
		if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
		{
			Found=true;
			if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
			else AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
		}
	}
	if(!Found) SCM(playerid,0xFFFF00AA,"Рядом нет автомобиля");
	return 1;
}
CMD:hhelp(playerid)
{
	if(PlayerInfo[playerid][pHelper] < 1) return 1;
	if(PlayerInfo[playerid][pHelper] >= 1) SCM(playerid,COLOR_YELLOW,"<1>: /ans, /hc");
	if(PlayerInfo[playerid][pHelper] >= 2) SCM(playerid,COLOR_YELLOW,"<2>: /ans, /hc, /skin");
	if(PlayerInfo[playerid][pHelper] >= 3) SCM(playerid,COLOR_YELLOW,"<3>: /ans, /hc, /skin, /hp");
	if(PlayerInfo[playerid][pHelper] >= 4) SCM(playerid,COLOR_YELLOW,"<4>: /ans, /hc, /skin, /teleport (/tp), /hp");
	if(PlayerInfo[playerid][pHelper] >= 5) SCM(playerid,COLOR_YELLOW,"<5>: /ans, /hc, /skin, /teleport (/tp), /hp");
	if(PlayerInfo[playerid][pHelper] >= 6) SCM(playerid,COLOR_YELLOW,"<6>: /ans, /hc, /skin, /teleport (/tp), /hp");
	if(PlayerInfo[playerid][pHelper] >= 7) SCM(playerid,COLOR_YELLOW,"<7>: /ans, /hc, /skin, /teleport (/tp), /hp");
	if(PlayerInfo[playerid][pHelper] >= 8) SCM(playerid,COLOR_YELLOW,"<8>: /ans, /hc, /skin, /teleport (/tp), /hp");
	return 1;
}
CMD:makehelper(playerid, params[])
{
	if(!IsPlayerConnected(playerid) || !PlayerInfo[playerid][pLogin]) return 1;
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3,true) || !strcmp(PlayerInfo[playerid][pNames], "No",true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
	{
		if(sscanf(params,"dd", params[0], params[1])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /makehelper [ID] [1-8]");
		if(!IsPlayerConnected(params[0])) return 1;
		if(params[1] < 0 || params[1] > 8) return SCM(playerid, COLOR_GREY, "Не меньше '0' и не больше '8'.");
		PlayerInfo[params[0]][pHelper] = params[1];
		UpdatePlayerData(params[0], "pHelper", PlayerInfo[params[0]][pHelper]);
		SCMF(params[0],0x6495EDFF,"Вы были назначены помощником уровня %d Администратором %s.", params[1], PlayerInfo[playerid][pNames]);
		SCMF(playerid,COLOR_WHITE,"Вы назначили %s помощником %d уровня", PlayerInfo[params[0]][pNames],params[1]);
		SCM(params[0], COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Чтобы посмотреть команды, введите /hhelp");
	}
	return 1;
}
CMD:untrailer(playerid)
{
    if(PlayerInfo[playerid][pMRInections] == 1 && !GetPVarInt(playerid,"StartRabWork") && StartRabWork(playerid)) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	new vehplid=GetPlayerVehicleID(playerid);
	DetachTrailerFromVehicle(vehplid);
	SCM(playerid, 0x6ab1ffaa, "Вы отцепили автомобиль");
	return 1;
}
CMD:skin(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 1 && PlayerInfo[playerid][pHelper] < 2) return 1;
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /skin [id скина]");
	if(params[0] > 311 || params[0] < 1) return SCM(playerid, COLOR_GREY, "Неправильный ID скина!");
	if(params[0] == 74 || params[0] == 0) return 1;
	PlayerInfo[playerid][pModel] = params[0];
	PlayerInfo[playerid][pChar] = params[0];
	SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
	return 1;
}

ALTX:suspect("/su");
CMD:suspect(playerid, params[])
{
	if(sscanf(params,"dds[100]",params[0],params[1],params[2])) return SCM(playerid, -1, "/su [ID игрока] [Уровень розыска] [Причина]");
	if(GetPVarInt(playerid, "suspectflood") > gettime()) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Повторно выдать розыск можно через 5 секунд");
	if(!IsACop(playerid)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Недоступно");

	if(params[1] < 1 || params[1] > 6) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя меньше 1 и больше 6");

	#define idx params[0]//

    if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(!IsPlayerConnected(idx)) return SCM(playerid, COLOR_WHITE, "Игрок оффлайн!");
	if(PlayerInfo[idx][pJailed] != 0) return SCM(playerid, COLOR_GRAD2, "Этот Человек в тюрьме!");
	if(PlayerInfo[idx][pWanted] >= 6) return SCM(playerid, COLOR_WHITE, "У данного игрока уже 6 уровней розыска!");
	if(IsACop(idx)) return SCM(playerid, COLOR_GRAD2, "Вы не можете давать розыск законникам!");
	if(PlayerTied{playerid} > false) return SCM(playerid, COLOR_WHITE, "Вы связаны!");
	SCMF(idx,0xFF182DFF,"%s объявил вас в розыск. Причина: %s. Уровень: %d",PlayerInfo[playerid][pNames],params[2],params[1]);
	format(stringer,MAX_STR,"[Внимание] %s объявлен в розыск +%d[{FFFFFF}%d{"#cDEPARTMENT"}]. Обвинитель: %s. Причина: %s.",PlayerInfo[idx][pNames],params[1],PlayerInfo[idx][pWanted],PlayerInfo[playerid][pNames],params[2]);
	foreach(new i: Player)
	{
	    if(IsADepartament(i)) SendClientMessage(i, 0x007FFFFF, stringer);
	}

	WantedPoints[idx] = params[1];
	PlayerInfo[idx][pWanted] = params[1];
	SetPlayerWantedLevel(idx, PlayerInfo[idx][pWanted]);

	UpdatePlayerData(playerid, "pWanted", PlayerInfo[playerid][pWanted]);

	#undef idx

	SetPVarInt(playerid, "suspectflood",gettime() + 5);

	return 1;
}
ALTX:wi("/w");
CMD:wi(playerid, params[])
{
    if(PlayerInfo[playerid][pMuteTime] > 0) return SCM(playerid, COLOR_LIGHTRED, "У Вас бан чата");
	if(sscanf(params, "s[100]", params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /w [текст]");
	format(stringer,MAX_STR, "%s шепчет: %s", PlayerInfo[playerid][pNames], params[0]);
	ProxDetector(4.0, playerid, stringer, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
	SetPlayerChatBubble(playerid,params[0],COLOR_YELLOW,4.0,10000);
	return 1;
}
ALTX:shout("/s");
CMD:shout(playerid, params[])
{
	if(GetPVarInt(playerid, "gag")) return	SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
	if(PlayerInfo[playerid][pMuted] == 1) return SCM(playerid, COLOR_LIGHTRED, "У Вас бан чата");
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: (/s)hout [текст]");
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, params[0]);
		if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
	}
	format(stringer1, 200, "[S] %s[%d]: %s", PlayerInfo[playerid][pNames], playerid, params[0]);
	ProxDetector(60.0, playerid, stringer1,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) { if(!GetPVarInt(playerid, "PlayerCuffed") ) {   ApplyAnimation(playerid,"ON_LOOKERS","shout_in",9000.999,0,0,0,0,0,1); } }
	SetPlayerChatBubble(playerid,params[0],COLOR_YELLOW,60.0,10000);
	return 1;
}
ALT:gnews:gov;
CMD:gnews(playerid, params[])
{
	if(PlayerInfo[playerid][pMRInections] == 24) return 1;
	if(IsAGang(playerid) || ISAMAFIA(playerid)) return 1;
	if(!CanGiverankPlayer(playerid)) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вам недоступна эта команда.");
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
	if(GetPVarInt(playerid, "AntiFloodGOV") > gettime()) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Попробуйте снова через 2 секунды");
	if(PlayerInfo[playerid][pMuted] > 0) return SCMF(playerid, COLOR_LIGHTRED, "У Вас бан чата! До снятия: %d секунд(ы)",PlayerInfo[playerid][pMuteTime]);
	if(sscanf(params,"s[100]",params[0])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /gnews [текст]");
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, params[1]);
		if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
	}
	format(stringer,MAX_STR,"Гос. Новости: %s[%d]: %s", PlayerInfo[playerid][pNames],playerid,params[0]);
	SendClientMessageToAll(0x4466ccff,stringer);
	SetPVarInt(playerid, "AntiFloodGOV",gettime() + 2);
	return 1;
}
CMD:ans(playerid, params[])
{
	if(PlayerInfo[playerid][pHelper] < 1) return 1;
	if(sscanf(params,"ds[100]",params[0],params[1])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /ans [id] [текст]");
	if (!IsPlayerConnected(params[0])) return 1;
	SCMF(params[0],COLOR_LIGHTGREEN,"* Помощник сервера %s[%d]: %s | Приятной игры на Inspire Role Play.", PlayerInfo[playerid][pNames],playerid, params[1]);
	format(stringer1,200, "Помощник сервера %s[%d] ответил %s[%d]: %s | Приятной игры на Inspire Role Play.", PlayerInfo[playerid][pNames],playerid, PlayerInfo[params[0]][pNames], params[0],params[1]);
	SendHelperMessage(COLOR_LIGHTRED, stringer1);
	PlayerPlaySound(params[0], 4203, 0.0, 0.0, 0.0);
	return 1;
}
CMD:hc(playerid, params[])
{
	if (PlayerInfo[playerid][pHelper] < 1) return 1;
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте (/hc) [helpers chat]");
	new hrank[50];
	switch(PlayerInfo[playerid][pHelper])
	{
		case 1: hrank = "{FFD700}[1](Агент Поддержки)";
		case 2: hrank = "{FFD700}[2](Практикант)";
		case 3: hrank = "{FFD700}[3](Ст.Практикант)";
		case 4: hrank = "{FFD700}[4](Мл.Хелпер)";
		case 5: hrank = "{FFD700}[5](Хелпер)";
		case 6: hrank = "{FFD700}[6](Ст.Хелпер)";
		case 7: hrank = "{FF5000}[7](Зам.Гл.Хелпера)";
		case 8: hrank = "{FF0000}[8](Главный хелпер)";
		default: hrank = "{FFD700}[1](Агент Поддержки)";
	}
	format(stringer1,200, "*%s {FFFFFF}%s[%d]: %s", hrank, PlayerInfo[playerid][pNames],playerid, params[0]);
	SendHelperMessage(COLOR_GREEN, stringer1);
	return 1;
}
CMD:news(playerid, params[])
{
	if(PlayerInfo[playerid][pMRInections] != 16) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	new newcar = GetPlayerVehicleID(playerid);
	if(GetPVarInt(playerid, "gag")) return	SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
	if(PlayerInfo[playerid][pMuted] == 1) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}У Вас бан чата!");
	if(newcar >= lsnewscar[0] && newcar <= lsnewscar[1] || PlayerToPoint(30.0,playerid,998.2922,999.8779,1999.7999)) { } else { SCM(playerid, COLOR_GREY, "Вы не в офисе / репортёрской машине / вертолёте!"); return 1;}
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /news [текст]");
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, params[0]);
		if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
	}
	format(stringer1,150, "{1F7C65}[Новости штата] {FFFFFF}%s[%d]: %s", PlayerInfo[playerid][pNames],playerid, params[0]);
	LSNews(0x1F7C65FF,stringer1);
	lNews[playerid] = false;
	return 1;
}
CMD:hostname(playerid, params[])
{
	if (PlayerInfo[playerid][bAdmin] != 13) return 1;
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, COLOR_WHITE, " /hostname [text]");
	format(stringer1, 100, "hostname %s", params[0]);
	SendRconCommand(stringer1);
	return 1;
}
CMD:sethpprice(playerid, params[])
{
	if(PlayerInfo[playerid][pLRInections] != 4) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"d",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /sethpprice [сумма]");
	if(params[0] < 1 || params[0] > 1000) return SCM(playerid, COLOR_GREY, "Вы не можете поставить меньше 0 и больше 1000");
	healpric = params[0];
	SendClientMessageToAll(COLOR_WHITE, "---========== Государственные Новости ==========---");
	format(stringer1,200, "Цена лечения, в размере %d вирт. установлена Глав. Врачом: %s.", healpric, PlayerInfo[playerid][pNames]);
	SendClientMessageToAll(0xA52A2AFF, stringer1);
	SendClientMessageToAll(COLOR_WHITE, "---========== Государственные Новости ==========---");
	return 1;
}
CMD:pay(playerid, params[])
{
	if(sscanf(params,"dd",params[0],params[1])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /pay [id] [сумма]");
	if(params[1] > 100000 && PlayerInfo[playerid][pLevel] < 3) return SCM(playerid, COLOR_GRAD1, "Вы должны быть 3 уровня, чтобы передать 100000 вирт!");
	if(params[1] < 1 || params[1] > 100000) return   SCM(playerid, COLOR_GRAD1, "Нельзя передать меньше $1 и больше $99999.");
	if (!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if (!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GRAD1, "Вы слишком далеко.");
	if (params[1] < 0 && PlayerInfo[playerid][pCash] < params[1]) return SCM(playerid, COLOR_GRAD1, "У вас нет столько денег");
	PlayerInfo[params[0]][pCash] += params[1];
	PlayerInfo[playerid][pCash] -= params[1];
	format(stringer1,MAX_STR, "Вы передали %s[%d], %d вирт.", PlayerInfo[params[0]][pNames],params[0], params[1]);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SCM(playerid, COLOR_GRAD1, stringer1);
	format(stringer1,MAX_STR, "Вы получили %d вирт от %s[%d].", params[1], PlayerInfo[playerid][pNames], playerid);
	SCM(params[0], COLOR_GRAD1, stringer1);
	PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
	format(stringer1,SMALL_SIZE, "достал бумажник и передал деньги %s",PlayerInfo[params[0]][pNames]);
	SetPlayerChatBubble(playerid,stringer1,0xDD90FFFF,30.0,10000);
	return 1;
}
ALTX:teleport("/tp");
CMD:teleport(playerid)
{
	if(PlayerInfo[playerid][bAdmin] < 1 && PlayerInfo[playerid][pHelper] < 3) return 1;
	SPD(playerid, 9000, DIALOG_STYLE_LIST, "{FF6F00}Teleport Menu", "{FF6F00}> {FFFFFF}Общественные места\n{FF6F00}> {FFFFFF}Развлечения\n{FF6F00}> {FFFFFF}Города\n{FF6F00}> {FFFFFF}Нелегальные организации\n{FF6F00}> {FFFFFF}Государственные организации\n{FF6F00}> {FFFFFF}Работы", "Выбрать", "Отмена");
	return 1;
}
CMD:help(playerid) return cmd::mm(playerid);
CMD:fuel(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 8) return 1;
	if(sscanf(params,"d",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /fuel [biznumber]");
	SetPlayerPosEx(playerid,SBizzInfo[params[0]][sEntranceX],SBizzInfo[params[0]][sEntranceY],SBizzInfo[params[0]][sEntranceZ]);
	return 1;
}
CMD:smoke(playerid, params[])
{
	if(PlayerInfo[playerid][pSiga] < 1 || PlayerInfo[playerid][pSpal] < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет зажигалки или сигарет. Купить их можно в 24/7");
	new marka[15], string[100];
	PlayerInfo[playerid][pSiga]--,PlayerInfo[playerid][pSpal]--;
	SetPVarInt(playerid, "SMOKE", gettime()+75);
	SetPlayerAttachedObject(playerid, 3, 19625, 6, 0.103999,0.022999,0.018999,-37.600025,24.899974,55.599994,1.000000,1.000000,1.000000);
	SendClientMessage(playerid, CORANGE, "Чтобы сделать затяжку, нажмите {FFCC00}ALT");
	switch(PlayerInfo[playerid][pSgf])
	{
	    case 1: marka = "Parlament";
	    case 2: marka = "Kent";
	    case 3: marka = "Winston";
	    case 4: marka = "Lucky Strike";
	    case 5: marka = "Marlboro";
	}
	format(string, sizeof(string), "%s закурил(а) сигарету марки %s", PlayerInfo[playerid][pNames], marka);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
	return 1;
}
CMD:smokes(playerid, params[])
{
	new string[150], marka[15];
    switch(PlayerInfo[playerid][pSgf])
	{
	    case 1: marka = "Parlament";
	    case 2: marka = "Kent";
	    case 3: marka = "Winston";
	    case 4: marka = "Lucky Strike";
	    case 5: marka = "Marlboro";
		default: return SendClientMessage(playerid, COLOR_GREY, "У Вас нет сигарет");
	}
	format(string, sizeof(string), "{FFFFFF}У Вас осталось: {FF6F00}%i {FFFFFF}сигарет\nМарка: {FF6F00}%s\n{FFFFFF}Зажигалка: на {FF6F00}%i {FFFFFF}раз.", PlayerInfo[playerid][pSiga], marka, PlayerInfo[playerid][pSpal]);
	ShowPlayerDialog(playerid, 0000, 0, "{FF6F00}Пачка сигарет",string, "Закрыть","");
    format(string, sizeof(string), "%s заглянул(а) в пачку сигарет марки %s", PlayerInfo[playerid][pNames], marka);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
	return 1;
}
CMD:exitcs(playerid, params[])
{
    if(GetPVarInt(playerid,"PlayerInfo_MP") == MP_DeathMatch && PlayerInfo_MP_START{playerid})
    {
        for(new i; i < 13; i++) TextDrawHideForPlayer(playerid, CounterSText[i]);
        DeletePVar(playerid,"PlayerInfo_MP");
        PlayerInfo_MP_START{playerid} = false;
	    SetPlayerPos(playerid, GetPVarFloat(playerid,"Pos_X_MP"), GetPVarFloat(playerid,"Pos_Y_MP"), GetPVarFloat(playerid,"Pos_Z_MP"));
	    SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"Pos_A_MP"));
	    SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"Pos_VW_MP"));
	    SetPlayerInterior(playerid, GetPVarInt(playerid,"Pos_INT_MP"));
        DeletePVar(playerid,"Pos_X_MP");
        DeletePVar(playerid,"Pos_Y_MP");
        DeletePVar(playerid,"Pos_Z_MP");
        DeletePVar(playerid,"Pos_A_MP");
        DeletePVar(playerid,"Pos_VW_MP");
        DeletePVar(playerid,"Pos_INT_MP");
        DeletePVar(playerid,"PlayerInfo_MP_Staus");
        ResetPlayerWeapons(playerid);
        SetPlayerToTeamColor(playerid);
        SendClientMessage(playerid, -1, "Вы покинули МП 'Counter Strike'");
    }
    return 1;
}
CMD:gomp(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 13) return 1;
	if(DeathMatch_Time) DeathMatch_Time = 10, SendClientMessage(playerid, -1, "До старта КС осталось 10 секунд");
	else
	{
		DeathMatch_Time = 300; SendClientMessage(playerid, -1, "Регистрация на КС открыта");
		SendClientMessageToAll(COLOR_YELLOW,"Внимание! Через 5 минут пройдет соревнование по {FFFFFF}Counter Strike.");
		SendClientMessageToAll(COLOR_YELLOW,"Внимание! Желающим прибыть на место регистрации в {FFFFFF}г.San-Fierro \"/gps -> Развлечения -> Counter Strike\"");
		new mes[52];
		format(mes, sizeof(mes),"Организатор: {FFFFFF}%s",PlayerInfo[playerid][pNames]);
		SendClientMessageToAll(COLOR_YELLOW,mes);
	}
	return true;
}
stock CheckMP(playerid)
{
	if(PlayerInfo_MP_START{playerid}) return SendClientMessage(playerid, -1, "Использовать во время мероприятия запрещено.");
	new str_dm[250], string[200];
	if(DeathMatch_Time) format(str_dm, 200, " (%s)\t{ffffff}Игроков [%s%i/%i{ffffff}]",TimeConverter(DeathMatch_Time),(DeathMatch_Player < MAX_DMPLAYER ? ("{32cd32}") : ("{cd3232}")),DeathMatch_Player,MAX_DMPLAYER);
	else format(str_dm, 200, "\t - ");
	format(string, 135, "{FFFFFF}Название\t{FFFFFF}Регистрация\t{FFFFFF}Информация\n\
	{ffffff}Counter Strike\t%s{ffffff}%s",(DeathMatch_Time ? ("{32cd32}Открыта") : ("{cd3232}Закрыта")),str_dm);
	ShowPlayerDialog(playerid, 9954, DIALOG_STYLE_TABLIST_HEADERS, "{FF6F00}Counter Strike",string,"Выбрать", "Отменить");
	return true;
}
stock CheckMP_Dis(playerid)
{
    switch(GetPVarInt(playerid,"PlayerInfo_MP"))
	{
		case MP_DeathMatch: DeathMatch_Player--;
	}
    DeletePVar(playerid,"PlayerInfo_MP");
}
stock Start_MP_DM()
{
    new bool:TvTCommand;
    if(DeathMatch_Player < MIN_DMPLAYER) OOCOff(0xFFCC00AA,"[CS] Мероприятие отменено из-за нехватки количества участников.");
    else OOCOff(0xFFCC00AA,"[CS] Мероприятие началось, продолжительность 10 минут.");
    foreach(new playerid: Player)
	{
		if(GetPVarInt(playerid,"PlayerInfo_MP") != MP_DeathMatch) continue;
        if(DeathMatch_Player < MIN_DMPLAYER)
        {
			SendClientMessage(playerid, -1, "[CS] Недостаточное количество участников.");
	    	DeletePVar(playerid,"PlayerInfo_MP");
	    	PlayerInfo_MP_START{playerid} = false;
        }
        else
		{
		    for(new i; i < 13; i++) TextDrawShowForPlayer(playerid, CounterSText[i]);
		    new Float:Pos_X,Float:Pos_Y,Float:Pos_Z,Float:Pos_A;
		    GetPlayerPos(playerid,Pos_X,Pos_Y,Pos_Z);
            GetPlayerFacingAngle(playerid,Pos_A);
            SetPVarFloat(playerid,"Pos_X_MP",Pos_X);
            SetPVarFloat(playerid,"Pos_Y_MP",Pos_Y);
            SetPVarFloat(playerid,"Pos_Z_MP",Pos_Z);
            SetPVarFloat(playerid,"Pos_A_MP",Pos_A);
            SetPVarInt(playerid,"Pos_VW_MP", GetPlayerVirtualWorld(playerid));
            SetPVarInt(playerid,"Pos_INT_MP",GetPlayerInterior(playerid));
		    if(!TvTCommand) SetPVarInt(playerid,"PlayerInfo_MP_Staus",1), TvTCommand = true;
		    else SetPVarInt(playerid,"PlayerInfo_MP_Staus",2), TvTCommand = false;
			ResetPlayerWeapons(playerid);
			SetPlayerArmourAC(playerid,0);
			GiveStatus_MP(playerid, GetPVarInt(playerid,"PlayerInfo_MP_Staus"));
		    PlayerInfo_MP_START{playerid} = true;
		    SendClientMessage(playerid, CORANGE, "Чтобы покинуть КС раньше времени, введите команду /exitcs");
		    SendClientMessage(playerid, CORANGE, "Внимание! Если Вы выйдите с МП до его окончания, Вы не получите приз!");
		}
	}
	DeathMatch_Time_Start = 600;
	DeathMatch_Player = 0;
	DeathMatch_Score[0] = 0;
	DeathMatch_Score[1] = 0;
}
stock GiveStatus_MP(playerid, status)
{
	switch(status)
	{
	    case 2:
		{
			SetPlayerColor(playerid, 0xFF0000FF);
			if(PlayerInfo[playerid][pSex] == 1) SetPlayerSkin(playerid, 241);
			else SetPlayerSkin(playerid, 215);
		}
	    case 1:
		{
			SetPlayerColor(playerid, 0x0000FFFF);
			if(PlayerInfo[playerid][pSex] == 1) SetPlayerSkin(playerid, 242);
			else SetPlayerSkin(playerid, 131);
		}
	}
	GivePlayerWeaponAC(playerid, 24, 500);
	GivePlayerWeaponAC(playerid, 31, 500);
	SetPlayerPos(playerid, DM_Position[status-1][0], DM_Position[status-1][1], DM_Position[status-1][2]);
    SetPlayerFacingAngle(playerid, DM_Position[status-1][3]);
	SetPlayerInterior(playerid, 1);
	SetPlayerVirtualWorld(playerid, 1);
	return true;
}
stock End_MP_DM()
{
	if(DeathMatch_Score[0] == DeathMatch_Score[1] && !DeathMatch_Score[0]) DeathMatch_Time_Start = 150, OOCOff(0xFFCC00AA,"[CS] Мероприятие было продлено из-за равного счета команд.");
	new win_command;
	if(DeathMatch_Score[0] > DeathMatch_Score[1]) win_command = 2, OOCOff(0xFFCC00AA,"[CS] Мероприятие успешно завершено. Победила красная команда.");
	else win_command = 1, OOCOff(0xFFCC00AA,"[CS] Мероприятие успешно завершено. Победила синяя команда.");
    foreach(new playerid: Player)
	{
	    if(GetPVarInt(playerid,"PlayerInfo_MP") == MP_DeathMatch && PlayerInfo_MP_START{playerid})
	    {
	        for(new i; i < 13; i++) TextDrawHideForPlayer(playerid, CounterSText[i]);
	        if(GetPVarInt(playerid,"PlayerInfo_MP_Staus") == win_command) PlayerInfo[playerid][pDMInections] += 1000, SendClientMessage(playerid, -1, "Поздравляем Вас с победой. Ваш приз выдан! [1000 Donate]");
	        DeletePVar(playerid,"PlayerInfo_MP");
	        PlayerInfo_MP_START{playerid} = false;
		    SetPlayerPos(playerid, GetPVarFloat(playerid,"Pos_X_MP"), GetPVarFloat(playerid,"Pos_Y_MP"), GetPVarFloat(playerid,"Pos_Z_MP"));
		    SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"Pos_A_MP"));
		    SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"Pos_VW_MP"));
		    SetPlayerInterior(playerid, GetPVarInt(playerid,"Pos_INT_MP"));
            DeletePVar(playerid,"Pos_X_MP");
            DeletePVar(playerid,"Pos_Y_MP");
            DeletePVar(playerid,"Pos_Z_MP");
            DeletePVar(playerid,"Pos_A_MP");
            DeletePVar(playerid,"Pos_VW_MP");
            DeletePVar(playerid,"Pos_INT_MP");
            DeletePVar(playerid,"PlayerInfo_MP_Staus");
            if(GetPVarInt(playerid, "StartRabWork")) SetPlayerSkinEx(playerid,PlayerInfo[playerid][pModel]);
            else SetPlayerSkinEx(playerid,PlayerInfo[playerid][pChar]);
            ResetPlayerWeapons(playerid);
            SetPlayerToTeamColor(playerid);
	    }
	}
	TextDrawSetString(CounterSText[8], "C.TERRORIST: ~w~0");
	TextDrawSetString(CounterSText[9], "TERRORIST: ~w~0");
	TextDrawSetString(CounterSText[10], "_");
	DeathMatch_Player = 0;
	DeathMatch_Score[0] = 0;
	DeathMatch_Score[1] = 0;
	return true;
}
CMD:tuning(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(!IsPlayerInRangeOfPoint(playerid, 1.0, 2154.3062,-2173.1570,14.3018)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится возле автомастерской!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится за рулем т/с!");
	if(tuninguse == true) return SendClientMessage(playerid, COLOR_GREY, "Место занято, ожидайте!");
	if(GetPlayerVehicleID(playerid) != caridhouse[playerid] && GetPlayerVehicleID(playerid) != GetPVarInt(playerid, #vehicle_id_two)) return SCM(playerid, COLOR_GREY, "Нужно находится за рулем своего т/с");
    SelectTextDraw(playerid,0x708090FF);
	new veh = GetPlayerVehicleID(playerid);
	SetVehiclePos(veh, 2154.3062,-2173.1570,14.3018);
	SetVehicleZAngle(veh,224.5881);
    for(new i = 0; i != 14; i++) TextDrawShowForPlayer(playerid, Tuning[i]);
    for(new i = 0; i != 9; i++) PlayerTextDrawShow(playerid, Tune[i]), PlayerTextDrawSetString(playerid, Tune[i], TColor[i][Named]);
    SetPVarInt(playerid, "TuneType",2),SetPVarInt(playerid, "TuninG",true);
    SetPlayerCameraPos(playerid,2158.826171, -2174.988281, 16.196464);
	SetPlayerCameraLookAt(playerid,2154.407470, -2174.056640, 14.049816);
	tuninguse = true;
	if(caridhouse[playerid]==GetPlayerVehicleID(playerid)) SetPVarInt(playerid, "carid_1", 1);
	if(GetPVarInt(playerid, #vehicle_id_two) == GetPlayerVehicleID(playerid)) SetPVarInt(playerid, "carid_1", 2);
    return 1;
}
CMD:fill(playerid)
{
	if(GetPVarInt(playerid, #pFilling)) return 1;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,CGRAY,"Вы должны быть в т/с");
	new vehicleid = GetPlayerVehicleID(playerid);
    if(GetEngineStat(vehicleid) == 1) return SendClientMessage(playerid,CGRAY,"Заправляться можно только с заглушенными двигателем");
    if(VehInfo[vehicleid][vFuel] > 299) return SCM(playerid,COLOR_GREY,"Вашему автомобилю не требуется заправка.");
    new fillingid = -1;
	for(new b = 0; b < sizeof(SBizzInfo); b++)
	{
		if(!PlayerToPoint(10.0, playerid, SBizzInfo[b][sEntranceX], SBizzInfo[b][sEntranceY], SBizzInfo[b][sEntranceZ])) continue;
		if(SBizzInfo[b][sLocked]) return SCM(playerid,COLOR_GREY,"Заправка не работает.");
		fillingid = b;
	}
	SCM(playerid, COLOR_LIGHTBLUE, "Нажмите клавишу ''W'' для того чтобы начать заправку автомобиля.");
	SetPVarInt(playerid, #pFilling, 1);
	SetPVarInt(playerid, #pFillingID, fillingid);
	return 1;
}
CMD:sellbiz(playerid,params[])
{
	if(PlayerInfo[playerid][pBusiness] == -1) return SCM(playerid,COLOR_GREY,"У Вас нет бизнеса.");
	if(sscanf(params,"ui",params[0],params[1])) return SCM(playerid,COLOR_WHITE,"/sellbiz [ID] [Цена]");
	if(params[0] == INVALID_PLAYER_ID || params[0] == playerid) return 1;
	if(PlayerInfo[params[0]][pBusiness] != -1) return SCM(playerid,COLOR_GREY,"У него есть бизнес");
	if(PlayerInfo[params[0]][bAdmin] > 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Администрации запрещено продавать бизнес.");
	if(!IsPlayerInRangeOfPoint( playerid, 10.0, BizInfo[PlayerInfo[playerid][pBusiness]][ EnterX ], BizInfo[PlayerInfo[playerid][pBusiness]][ EnterY ], BizInfo[PlayerInfo[playerid][pBusiness]][ EnterZ ] ) ) return SCM(playerid,COLOR_GREY,"Надо находится около бизнеса.");
	if(params[1] < 0) return SCM(playerid,COLOR_GREY,"Неверная цена.");
	if(PlayerInfo[params[0]][pCash] < params[1]) return SCM(playerid,COLOR_GREY,"У него нет столько денег");
	if(GetPVarInt(params[0], "sellerbiz") != 999) return SCM(playerid,COLOR_GREY,"Ему уже кто-то предлагает бизнес.");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid,COLOR_GREY,"Вы находитесь далеко друг от друга");
	new stringger[200];
	format(stringger,sizeof(stringger),"{FFFFFF}Здравствуйте!\nМеня зовут %s и Я хочу продать Вам свой бизнес %s\nЦена: %d $\n\nЖду Вашего ответа!",PlayerInfo[playerid][pNames],BizInfo[PlayerInfo[playerid][pBusiness]][bName],params[1]);
	SPD(params[0], 82, DIALOG_STYLE_MSGBOX, "{FF6F00}Покупка бизнеса", stringger, "Купить", "Отказаться");
	SetPVarInt(params[0], "sellerbiz", playerid);
	SetPVarInt(params[0], "bizcost", params[1]);
	SCMF(playerid,COLOR_BLUE,"Вы предложили купить %s Ваш бизнес %s за %d",PlayerInfo[params[0]][pNames],BizInfo[PlayerInfo[playerid][pBusiness]][bName],params[1]);
	return 1;
}
CMD:buyfuel(playerid)
{
	if(PlayerInfo[playerid][bAdmin] > 0) return SCM(playerid, -1 , "Администрации запрещено иметь заправки");
	if(PlayerInfo[playerid][pBusiness] != -1 || PlayerInfo[playerid][pFuelBiz] != -1)  return SCM(playerid, COLOR_WHITE, "У вас уже есть бизнес, введите /sellbiz или /business чтобы его продать.");
	for(new b = 0; b < sizeof(SBizzInfo); b++)
	{
		if(PlayerToPoint(10.0, playerid, SBizzInfo[b][sEntranceX], SBizzInfo[b][sEntranceY], SBizzInfo[b][sEntranceZ]) && SBizzInfo[b][sOwned] == 0)
		{
			if(PlayerInfo[playerid][pBank] < SBizzInfo[b][sBuyPrice]) return SCM(playerid,COLOR_WHITE,"У вас недостаточно денег в банке.");
			PlayerInfo[playerid][pFuelBiz] = b;
			PlayerInfo[playerid][pJob] = 0;
			PlayerInfo[playerid][pBank] -= SBizzInfo[b][sBuyPrice];
			SBizzInfo[b][sOwned] = 1;
			SBizzInfo[b][sTill] = 100;
			SBizzInfo[b][sLocked] = 0;
			SBizzInfo[b][sPriceBenz] = 100;
			strmid(SBizzInfo[b][sOwner], PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), 255);
			SCM(playerid, COLOR_GREEN, "Поздравляем, вы купили заправку.");
			SCM(playerid, COLOR_GREEN, "Для уравления заправкой используйте команду /filling");
			mysql_format(connects, stringer1, 126, "UPDATE `sbizz` SET `sOwner` = '%s', `sOwned` = '1' WHERE sID = '%i'",PlayerInfo[playerid][pNames],b);
			mysql_empty(connects, stringer1);
			SaveSBizz(b);
			UpdateSBizz();
			return 1;
		}
	}
	UpdatePlayerData(playerid, "pPsbiskey", PlayerInfo[playerid][pFuelBiz]);
	return 1;
}
CMD:asellfuel(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /asellfuel [bizid]");
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
	{
		mysql_format(connects, stringer1, 100, "UPDATE `accounts` SET `pPsbiskey` = '-1' WHERE `Name` = '%s'", SBizzInfo[params[0]][sOwner]);
		mysql_empty(connects, stringer1);
		//
		SBizzInfo[params[0]][sBuyPrice] = 1000000;
		SBizzInfo[params[0]][sOwned] = 0;
		SBizzInfo[params[0]][sLocked] = 1;
		SBizzInfo[params[0]][sPrice] = 1000;
		SBizzInfo[params[0]][sBenz] = 999999999;
		SBizzInfo[params[0]][sPriceBenz] = 2500;
		SBizzInfo[params[0]][sTill] = 100000;
		strmid(SBizzInfo[params[0]][sOwner], "No-one", 0, strlen("No-one"), 255);
		mysql_format(connects, stringer1, 90, "UPDATE `sbizz` SET `sOwner` = 'No-one' WHERE sID = %i",params[0]);
		mysql_empty(connects, stringer1);
		SaveSBizz(params[0]);
		UpdateSBizz();
		return 1;
	}
	return 1;
}
CMD:fuelpos(playerid, params[])
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
	{
		if(sscanf(params,"d",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /fuelpos [biznumber]");
		new Float:PosX,Float:PosY,Float:PosZ;
		GetPlayerPos(playerid,PosX,PosY,PosZ);
		SBizzInfo[params[0]][sEntranceX] = PosX;
		SBizzInfo[params[0]][sEntranceY] = PosY;
		SBizzInfo[params[0]][sEntranceZ] = PosZ;
		mysql_format(connects, stringer1, 200, "UPDATE `sbizz` SET `sEntranceX` = '%f',`sEntranceY` = '%f',`sEntranceZ` = '%f' WHERE sID = %i",PosX,PosY,PosZ,params[0]);
		mysql_empty(connects, stringer1);
		UpdateSBizz();
	}
	return 1;
}
CMD:enter(playerid)
{
	for(new i = 0; i < sizeof(HouseInfo); i++)
	{
		if(PlayerToPoint(2, playerid, HouseInfo[i][hEnter][0], HouseInfo[i][hEnter][1], HouseInfo[i][hEnter][2]))
		{
			if(PlayerInfo[playerid][pHouse] == i || HouseInfo[i][hLock] == 0)
			{
				SetPlayerInterior(playerid, HouseInfo[i][hInt]);
				SetPlayerVirtualWorld(playerid, i+50);
				SetPlayerPosEx(playerid, HouseInfo[i][hExit][0], HouseInfo[i][hExit][1], HouseInfo[i][hExit][2]);
				PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
				return 1;
			}
			else return GameTextForPlayer(playerid, "~r~Closed", 5000, 1);
		}
	}
	return 1;
}
CMD:exit(playerid)
{
	if(BizEnter{playerid} != 255 && IsPlayerInRangeOfPoint(playerid, 4.0, BizInfo[BizEnter{playerid}][ExitX], BizInfo[BizEnter{playerid}][ExitY], BizInfo[BizEnter{playerid}][ExitZ])) return SPD(playerid,66,0,"{FF6F00}Выход","{FFFFFF}Хотите выйти из бизнеса?", "Да", "Нет");
	else
	{
		for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if (!PlayerToPoint(3, playerid,HouseInfo[i][hExit][0], HouseInfo[i][hExit][1], HouseInfo[i][hExit][2])) continue;
			if (GetPlayerVirtualWorld(playerid) == i+50)
			{
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				SetPlayerPosEx(playerid,HouseInfo[i][hEnter][0],HouseInfo[i][hEnter][1],HouseInfo[i][hEnter][2]);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
			}
		}
	}
	return 1;
}
CMD:switchskin(playerid)
{
	if(!IsAGang(playerid)) return 1;
	if(forma{playerid} !=true) return  SCM(playerid, COLOR_GRAD1, "У вас нет формы армейца");
	SetPlayerSkin(playerid,287);
	SetPlayerColor(playerid, COLOR_GREEN);
	forma{playerid} = false;
	proverkaforma{playerid} = true;
	return 1;
}
CMD:carm(playerid)
{
	if(PlayerInfo[playerid][pMRInections] != 19 && proverkaforma{playerid} != true) return 1;
	if(IsAMatsCar(GetPlayerVehicleID(playerid))) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Вы должны находится в машине для перевоза материалов, она находится в первом ангаре!");
	if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	SPD(playerid, 9653, DIALOG_STYLE_LIST, "{FF6F00}Развозка Оружия", "- Загрузиться\n- Разгрузиться\n- Разгрузить на склад Армии SF\n- Разгрузка в LSPD\n- Разгрузка в FBI\n- Разгрузка в SFPD\n- Разгрузка Бандам\n- Разгрузка в LVPD\n- Разрузка на складе ВМФ", "Выбрать", "Отмена");
	return 1;
}
CMD:givephone(playerid, params[])
{
	if(!ISAMAFIA(playerid)) return SCM(playerid, COLOR_GREY, "Вы не член мафии!");
	if(PlayerInfo[playerid][pRKInections] < 3)return SCM(playerid, COLOR_GREY,"Вам недоступна эта функция!");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /givephone [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if (!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Человек не рядом с вами!");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Нельзя вернуть телефон самому себе!");
	format(stringer1,SMALL_SIZE, "%s вернул вам телефон", PlayerInfo[playerid][pNames]);
	SCM(params[0], 0x6ab1ffaa, stringer1);
	DeletePVar(params[0], "takephone");
	format(stringer1,100, "%s вернул телефон %s 'y", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	return 1;
}
CMD:takephone(playerid, params[])
{
	if(!ISAMAFIA(playerid)) return SCM(playerid, COLOR_GREY, "Вам недоступна данная команда!");
	if(PlayerInfo[playerid][pRKInections] < 3)return SCM(playerid, COLOR_GREY,"Вы должны быть 3 рангом");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /takephone [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if(GetPVarInt(params[0], "takephone") > 0) return SCM(playerid, COLOR_GREY, "У него нет телефона");
	if (!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Человек не рядом с вами!");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Нельзя забрать телефон у самого себя!");
	format(stringer1,SMALL_SIZE, "%s забрал у Вас мобильный", PlayerInfo[playerid][pNames]);
	SCM(params[0], 0x6ab1ffaa, stringer1);
	SetPVarInt(params[0], "takephone",1);
	format(stringer1,80, "%s забрал мобильный у %s", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	return 1;
}
CMD:showpass(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return  	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /showpass [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if (!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_RED, "Человек слишком далеко!");
	new text[155],Member[100];
	if(PlayerInfo[playerid][pHouse] != -1) {
	    new Float: x,  Float: y;
	    new h = PlayerInfo[playerid][pHouse];
	    x = HouseInfo[h][hEnter][0];
	    y = HouseInfo[h][hEnter][1];
	    new ids = GetCityName ( x, y );
	    new id = GetZonaName ( x, y );
	    format(text, 155, "{FFFFFF}Город/Деревня: {"#cBLUE"}%s{FFFFFF}\nРайон: {"#cBLUE"}%s{FFFFFF}\nДом: {"#cBLUE"}%d{FFFFFF}", gSAZonesCity[ids][SAZONE_NAME],  gSAZones[id][SAZONE_NAME],  PlayerInfo[playerid][pHouse]);
	}
	else format(text, 115, "{FFFFFF}Город: {"#cBLUE"}Отсутствует{FFFFFF}\nРайон: {"#cBLUE"}Отсутствует{FFFFFF}\nДом: {"#cBLUE"}Отсутствует{FFFFFF}");
	if(PlayerInfo[playerid][pMRInections] != 0) format(Member,sizeof(Member),"{FFFFFF}Место работы: {"#cBLUE"}%s{FFFFFF}\nДолжность: {"#cBLUE"}%s{FFFFFF}",GetMember[PlayerInfo[playerid][pMRInections]-1], PlayerRank[PlayerInfo[playerid][pMRInections]-1][PlayerInfo[playerid][pRKInections]-1]);
	else format(Member,100,"{FFFFFF}Место работы: {"#cBLUE"}Отсутствует{FFFFFF}\nДолжность: {"#cBLUE"}Отсутствует{FFFFFF}");
	format(stringer, 600, "{FFFFFF}\tПАСПОРТНЫЕ ДАННЫЕ\nИмя: {"#cBLUE"}%s{FFFFFF}\nЛет в штате: {"#cBLUE"}%d{FFFFFF}\nЗаконопослушность: {"#cBLUE"}%d{FFFFFF}\n\
	Уровень розыска: {"#cBLUE"}%d{FFFFFF}\n\n\tМЕСТО ЖИТЕЛЬСТВА\n%s\n\n\tТРУДОВОЕ УСТРОЙСТВО\n%s",
	PlayerInfo[playerid][pNames], PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pZakonp], PlayerInfo[playerid][pWanted], text, Member);
	SPD(params[0], 000, DIALOG_STYLE_MSGBOX, "{"#cBLUE"}Паспорт", stringer,"Принять","");
	format(stringer1,MAX_STR, "%s показал(-а) свой паспорт %s'у", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames]);
	SetPlayerChatBubble(playerid,stringer1,0xDD90FFFF,30.0,10000);
	format(stringer1,SMALL_SIZE, "%s показал(-a) свой паспорт", PlayerInfo[playerid][pNames]);
	ProxDetector(10.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	return 1;
}
CMD:showudost(playerid, params[])
{
	if(!IsACop(playerid)) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"d",params[0])) return		   	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /showudost [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if (!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "Вы слишком далеко!");
	new ttext[32];
	if(PlayerInfo[playerid][pMRInections] == 0) { ttext = "Гражданин"; }
	else if(PlayerInfo[playerid][pMRInections] == 1) { ttext = "LSPD"; }
	else if(PlayerInfo[playerid][pMRInections] == 2) { ttext = "FBI"; }
	else if(PlayerInfo[playerid][pMRInections] == 10) { ttext = "SFPD"; }
	else if(PlayerInfo[playerid][pMRInections] == 21) { ttext = "LVPD"; }
	else if(PlayerInfo[playerid][pMRInections] == 25) { ttext = "SAPD SWAT"; }
	format(stringer1,150, "Имя: %s\nТелефон: %d\nВозвраст: %d\nПодразделение: %s\nРанг: %s", PlayerInfo[playerid][pNames],PlayerInfo[playerid][pPnumber],PlayerInfo[playerid][pLevel],ttext,PlayerRank[PlayerInfo[playerid][pMRInections]-1][PlayerInfo[playerid][pRKInections]-1]);
	SPD(params[0], 10036, DIALOG_STYLE_MSGBOX, "{FF6F00}Удостоверение",stringer1,"Закрыть","");
	format(stringer1,80, "%s показал(-а) своё удостоверение %s'у", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames]);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	format(stringer1,SMALL_SIZE, "показал(-а) своё удостоверение %s'у",PlayerInfo[params[0]][pNames]);
	SetPlayerChatBubble(playerid,stringer1,0xDD90FFFF,30.0,10000);
	return 1;
}
CMD:openswat(playerid)
{
	if(!PlayerToPoint(10.0,playerid,2852.82348633,2186.05371094,5.02263880)) return 1;
	if(PlayerInfo[playerid][pMRInections] != 25 || PlayerInfo[playerid][pLRInections] != 25) return SCM(playerid,COLOR_GREY,"У вас нету пропуска!");
	if(SwatDoor[playerid] > 0) return SCM(playerid,COLOR_GREY,"Ворота уже открыты.");
	MoveObject(gatevorota,2852.82348633,2186.05371094,5.02263880, 3.0);
	SwatDoor[playerid] = 10;
	SCM(playerid,COLOR_GREY,"Ворота закроются в течение 10 секунд!");
	return 1;
}
CMD:gzcolor(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid,-1, "• {FFC800}[Подсказка] {ffffff}Введите: /gzcolor [банда]");
	if(PlayerInfo[playerid][bAdmin] < 11) return 1;
	for(new i = 0 ; i < sizeof(GZInfo); i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
			GZInfo[i][gFrakVlad] = params[0];
			GangZoneStopFlashForAll(GZInfo[i][gID]);
			GangZoneHideForAll(GZInfo[i][gID]);
			GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
			format(stringer1, 100, "%s[%d] перекрасил ганг зону %d.",PlayerInfo[playerid][pNames],playerid, GZInfo[i][gID]);
			ABroadCast(COLOR_GREY, stringer1,1);
			SaveGZ(i);
			break;
		}
	}
	return 1;
}
CMD:cuff(playerid, params[])
{
	if(!IsACop(playerid)) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /cuff [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_WHITE, "Игрок оффлайн");
	if(PlayerTied{playerid} > false)  return SCM(playerid, COLOR_WHITE, "Вы связаны!");
	if(IsACop(params[0])) return    SCM(playerid, COLOR_WHITE, "Вы не можете надеть наручники на законника");
	if(GetPVarInt(params[0], "PlayerCuffed") == 2) return    SCM(playerid, COLOR_WHITE, "На этого человека уже одеты наручники");
	if(PlayerInfo[params[0]][pWanted] == 0) return    SCM(playerid, COLOR_WHITE, "Вы не можете надеть наручники на этого человека (он не в розыске)");
	if(!ProxDetectorS(2.0, playerid, params[0])) return SCM(playerid, COLOR_WHITE, "Рядом с вами никого нет !");
	if(GetPVarInt(params[0], "PlayerCuffed") != 1) return SCM(playerid, COLOR_WHITE, "Игрок не оглушен, используйте тазер.");
	if(params[0] == playerid) { SCM(playerid, COLOR_WHITE, "Вы не можете надеть наручники на самого себя!"); return 1; }
	format(stringer1, SMALL_SIZE, "На Вас надел наручники %s.", PlayerInfo[playerid][pNames]);
	SCM(params[0], 0x6ab1ffaa, stringer1);
	format(stringer1, SMALL_SIZE, "Вы надели наручники на %s.", PlayerInfo[params[0]][pNames]);
	SCM(playerid, 0x6ab1ffaa, stringer1);
	format(stringer1, 100, "%s надел(а) на %s наручники.", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
	SetPlayerAttachedObject(params[0], 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	GameTextForPlayer(params[0], "~r~Cuffed", 2500, 3);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_CUFFED);
	SetPVarInt(params[0], "PlayerCuffed", 2);
	PlayerCuffedTime[params[0]] = 3600;
	return 1;
}
CMD:uncuff(playerid, params[])
{
	if(!IsACop(playerid)) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /uncuff [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_WHITE, "Игрок оффлайн!");
	if(PlayerTied{playerid} > false)  return SCM(playerid, COLOR_WHITE, "Вы связаны!");
	if (!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_WHITE, "Рядом с вами никого нет !");
	if(params[0] == playerid) return SCM(playerid, COLOR_WHITE, "Вы не можете снять наручники с самого себя!");
	if(GetPVarInt(params[0], "PlayerCuffed") != 2) return SCM(playerid, COLOR_WHITE, "Этот игрок не в наручниках !");
	format(stringer1, SMALL_SIZE, "С Вас снял наручники %s.", PlayerInfo[playerid][pNames]);
	SCM(params[0], 0x6ab1ffaa, stringer1);
	GameTextForPlayer(params[0], "~g~Uncuffed", 2500, 3);
	format(stringer1, SMALL_SIZE, "Вы сняли наручники с %s.", PlayerInfo[params[0]][pNames]);
	SCM(playerid, 0x6ab1ffaa, stringer1);
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE); RemovePlayerAttachedObject(params[0],0); TogglePlayerControllable(params[0], true); DeletePVar(params[0], "PlayerCuffed");
	return 1;
}
CMD:find(playerid, params[])
{
	if(!IsACop(playerid) && PlayerInfo[playerid][pMRInections] != 23) return 1;
	if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"d",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /find [id]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(PlayerInfo[params[0]][pInt] > 0) SCM(playerid,COLOR_GREY,"Человек возможно находиться в интерьере.");
	if(params[0] == playerid) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы указали свой ID");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(params[0], X,Y,Z);
	SetPlayerCheckpoint(playerid, X,Y,Z, 3);
	return 1;
}
CMD:refill(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 2) return SCM(playerid, COLOR_GREY, "Вы не механик!");
	if(gcontract{playerid} != true) return SCM(playerid, COLOR_GREY, "У Вас не подписан контракт с заправкой!");
	if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /refill [id] [цена]");
	if(params[1] < 1 || params[1] > 5000) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1, и больше 5000!");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return    SCM(playerid, COLOR_GREY, "Вы не на эвакуаторе!");
	if(!ProxDetectorS(8.0, playerid, params[0]) && !IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_GREY, "Он не в машине!");
	if(params[0] == playerid) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы указали свой ID!");
	format(stringer1,MAX_STR, "Вы предложили %s заправить его машину за %d вирт.",PlayerInfo[params[0]][pNames],params[1]);
	SCM(playerid, 0x6ab1ffaa, stringer1);
	format(stringer1,MAX_STR, "Механик %s предлагает заправить вашу машину за %d вирт.(Введите /accept refill), чтобы потвердить заправку.",PlayerInfo[playerid][pNames],params[1]);
	SCM(params[0], 0x6ab1ffaa, stringer1);
	SetPVarInt(params[0], "RefillOffer", playerid);
	SetPVarInt(params[0], "RefillPrice", params[1]);
	return 1;
}
CMD:changehouse(playerid, params[])
{
	if(sscanf(params,"dd",params[0],params[1]))  return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/changehouse [id] [цена]");
	if(PlayerInfo[playerid][pHouse] == -1) return SCM(playerid,COLOR_GREY,"У вас нету дома.");
	if(params[1] < 90000 || params[1] > 25000000) return SCM(playerid,COLOR_GREY,"Цена не может быть меньше 90000 и больше 25000000.");
	if(!IsPlayerConnected(params[0])) return 1;
	if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid,COLOR_GREY,"Вы далеко от покупателя.");
	if(PlayerInfo[params[0]][pHouse] != -1) return SCM(playerid,COLOR_GREY,"У игрока есть дом.");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете продать дом самому себе.");
	SCMF(params[0],COLOR_WHITE,"Игрок %s предлагает вам купить его дом за %d вирт. Введите /accept house.", PlayerInfo[playerid][pNames], params[1]);
	SCMF(playerid,COLOR_WHITE,"Вы предложили %s купить ваш дом за %d вирт.", PlayerInfo[params[0]][pNames], params[1]);
	ChangeHouse[params[0]][hProdaet] = playerid;
	ChangeHouse[playerid][hPokypaet] = params[0];
	ChangeHouse[params[0]][hCena] = params[1];
	return 1;
}
CMD:changecar(playerid, params[])
{
	new caren = GetVehicleModel(caridhouse[playerid]);
	if(caren == 462) return SCM(playerid, COLOR_GREY, "У Вас мопед");
	if(PlayerInfo[playerid][pHouse] == -1) return SCM(playerid,COLOR_RED,"У вас нет дома");
	if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/changecar [id] [цена]");
	if(params[1] < 1 || params[1] > 1000000000) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1, и больше 100000000!");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "Игрок не рядом с вами!");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете продать самому себе машину!");
	format(stringer1,MAX_STR, "Вы предложили %s купить вашу машину за %d вирт.",PlayerInfo[params[0]][pNames],params[1]);
	SCM(playerid, 0x6ab1ffaa, stringer1);
	format(stringer1,MAX_STR, "%s предлагает вам купить его машину за %d вирт.(( Введите /accept vehicle,чтобы совершить сделку )).",PlayerInfo[playerid][pNames],params[1]);
	SCM(params[0], 0x6ab1ffaa, stringer1);
	format(stringer1,MAX_STR, "%s предложил(а) %s купить его машину", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	SetPVarInt(params[0], "CarOffer", playerid);
	SetPVarInt(params[0], "CarPrice", params[1]);
	return 1;
}
CMD:repair(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 2) return SCM(playerid, COLOR_GREY, "Вы не механик!");
	if(sscanf(params,"dd",params[0],params[1])) return	SCM(playerid, COLOR_GRAD2, " Введите: /repair [id] [цена]");
	if(params[1] < 1 || params[1] > 1000) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1, и больше 1000!");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return   SCM(playerid, COLOR_GREY, "Вы не на эвакуаторе!");
	if(!ProxDetectorS(8.0, playerid, params[0]) && !IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_GREY, "Он не в машине!");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете чинить машину самому себе!");
	format(stringer1,MAX_STR, "Вы предложили %s отремонтировать его машину за %d вирт.",PlayerInfo[params[0]][pNames],params[1]);
	SCM(playerid, 0x6ab1ffaa, stringer1);
	format(stringer1,MAX_STR, "Механик %s предлагает отремонтировать ваш автомобиль за %d вирт.(Введите /accept repair),чтобы совершить починку.",PlayerInfo[playerid][pNames],params[1]);
	SCM(params[0], 0x6ab1ffaa, stringer1);
	SetPVarInt(params[0], "RepairOffer", playerid);
	SetPVarInt(params[0], "RepairPrice", params[1]);
	return 1;
}
CMD:eject(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "Вы должны быть в машине!");
	if(GetPlayerState(playerid)!=PLAYER_STATE_DRIVER) return SCM(playerid,COLOR_GREY,"Вы не водитель!");
	if(sscanf(params,"d",params[0])) return	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /eject [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете выкинуть из машины себя!");
	if(!IsPlayerInVehicle(params[0],GetPlayerVehicleID(playerid))) return SCM(playerid, COLOR_GREY, "Не рядом с вами!");
	if(GetPVarInt(params[0], "PlayerCuffed") > 0)
	{
		RemoveFromVehicle(params[0]);
		format(stringer1,MAX_STR, "Вы выкинули из машины %s, наручники сломались!", PlayerInfo[params[0]][pNames]);
		SCM(playerid, 0x6495EDFF, stringer1);
		format(stringer1,MAX_STR, "Вас выкинул из машины %s, наручники сломались!!", PlayerInfo[playerid][pNames]);
		SCM(params[0], 0x6495EDFF, stringer1);
		TogglePlayerControllable(params[0], 1);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(params[0],0);
		DeletePVar(params[0], "PlayerCuffed");
	}
	else
	{
		format(stringer1,MAX_STR, "Вы выкинули из машины %s!", PlayerInfo[params[0]][pNames]);
		SCM(playerid, 0x6495EDFF, stringer1);
		format(stringer1,MAX_STR, "Вас выкинул из машины %s!", PlayerInfo[playerid][pNames]);
		SCM(params[0], 0x6495EDFF, stringer1);
		RemoveFromVehicle(params[0]);
		PlayerTied{params[0]} = false;
		TogglePlayerControllable(params[0], 1);
	}
	return 1;
}
CMD:delveh(playerid)
{
	if (PlayerInfo[playerid][bAdmin] < 4) return  SCM(playerid, COLOR_GRAD1, "Вам недоступна данная функция");
	new vehh = GetPlayerVehicleID(playerid);
	if(vehcreat[vehh] != true) return SCM(playerid, COLOR_GRAD1, "Эту машину удалять нельзя");
	RemoveFromVehicle(playerid);
	vehcreat[vehh] = false;
	DestroyVehicleEx(vehh);
	return 1;
}
CMD:money(playerid, params[])
{
	if(sscanf(params,"dd",params[0],params[1])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/money [ид] [сумма]");
	if (PlayerInfo[playerid][bAdmin] < 8) return 1;
	if(!IsPlayerConnected(params[0])) return 1;
	format(stringer1,80, " %d вирт переведены на счёт игроку %s", params[1],PlayerInfo[params[0]][pNames]);
	SCM(playerid, COLOR_WHITE, stringer1);
	PlayerInfo[params[0]][pBank] += params[1];
	format(stringer1,SMALL_SIZE, "- Пополнение счёта на сумму: %d вирт", params[1]);
	SCM(params[0], COLOR_WHITE, stringer1);
	format(stringer1,SMALL_SIZE, "- Новый баланс в банке: %d вирт", PlayerInfo[params[0]][pBank]);
	SCM(params[0], COLOR_WHITE, stringer1);
	return 1;
}
CMD:gm(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /gm [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок не найден!");
	if(PlayerInfo[playerid][bAdmin] < 2) return 1;
	GetPlayerHealth(params[0],GMHP[params[0]][0]);
	GetVehicleHealth(GetPlayerVehicleID(params[0]),VEHHP[params[0]][0]);
	GetPlayerArmour(params[0], GMARMOUR[params[0]][0]);
	SetPlayerHealthAC(params[0], 100.0);
	SetVehicleHealth(GetPlayerVehicleID(params[0]),10000.0);
	SetTimerEx("GETHP",1000,false,"i",params[0]);
	new Float:boomx, Float:boomy, Float:boomz;
	GetPlayerPos(params[0],boomx, boomy, boomz);
	CreateExplosion(boomx, boomy , boomz, 5, 2);
	format(stringer1,110,"Администратор %s проверил на GM %s.",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
	ABroadCast(COLOR_GREEN,stringer1, 1);
	return 1;
}
CMD:id(playerid, params[])
{
	new Name[24], ids = 0;
	if(sscanf(params, "s[24]",Name)) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /id [ name / id ]");
	SCM(playerid, COLOR_YELLOW, "Игроки онлайн:");
	if(IsNumeric(Name))
	if(IsPlayerConnected(strval(Name))) return SCMF(playerid,COLOR_WHITE, "%s id: %i", PlayerInfo[strval(Name)][pNames], strval(Name));
	foreach(new i : Player)
	{
		if(strfind(PlayerInfo[i][pNames],Name,true) == -1) continue;
		if(ids > 5) break;
		ids++;
		SCMF(playerid, COLOR_WHITE, "%i. %s [%i] | Ping: %i",ids,PlayerInfo[i][pNames],i,GetPlayerPing(i));
	}
	if(!ids) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не найдено");
	else if(ids > 0) SCMF(playerid, COLOR_GREY, "Найдено %i игроков", ids);
	return 1;
}
CMD:delete(playerid, params[])
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
	{
		if(sscanf(params,"s[30]",params[0])) return SCM(playerid,COLOR_WHITE," Введите: /delete [name_akkaunt]");
		if(!strcmp(params[0], FD1, true) || !strcmp(params[0], FD2, true) || !strcmp(params[0], FD3, true)) return 1;
		mysql_format(connects, stringer1, 100, "SELECT `Name` FROM `accounts` WHERE `Name` = '%s'", params[0]);
		mysql_tquery(connects, stringer1, "Delete", "ds",playerid,params[0]);
	}
	else SCM(playerid, COLOR_GREY, "Вам недоступна эта функция!");
	return 1;
}
CMD:offwarn(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 10) return SCM(playerid, COLOR_GREY, "Вам недоступна эта функция!");
	new reason[64], Name[24];
	if(sscanf(params,"s[24]s[64]",Name,reason))  return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /offwarn [Ник] [Причина]");
	if(strval(reason) > 64) return SCM(playerid, -1, "Много символов!");
	if(IsPlayerConnected(strval(Name))) return SCM(playerid, COLOR_GREY, "Игрок онлайн.");
	if(!strcmp(Name, FD1, true) || !strcmp(Name, FD2, true) || !strcmp(Name, FD3, true)) return 1;
	mysql_format(connects, stringer1, 100, "SELECT `Name` FROM `accounts` WHERE `Name` = '%s'", Name);
	mysql_tquery(connects, stringer1, "OffWarn", "dss",playerid,Name,reason);
	return 1;
}
CMD:carmat(playerid)
{
	switch(PlayerInfo[playerid][pMRInections])
	{
		case 3:
		{
		    if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return  SCM(playerid,COLOR_GREY,"Вы не в загрузочном вертолёте!");
			SetPlayerCheckpoint(playerid,-1420.4194,1485.6796,11.8084,14.0);
			SCM(playerid,COLOR_WHITE,"Отправляйтесь на корабль, для загрузки Оружия");
			VertMats[playerid]=1;
		}
	}
	return 1;
}
CMD:offleader(playerid, params[])
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], "No",true))
	{
		if(sscanf(params,"s[30]",params[0])) return SCM(playerid, COLOR_GRAD1, " Введите: /offleader [ник]");
		mysql_format(connects, stringer1, 100, "SELECT `Name` FROM `accounts` WHERE `Name` = '%s'", params[0]);
		mysql_tquery(connects, stringer1, "OffLeader", "ds",playerid,params[0]);
	}
	return 1;
}
CMD:offhelper(playerid, params[])
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
	{
		if(sscanf(params,"s[30]",params[0])) return SCM(playerid, COLOR_GRAD1, " Введите: /offhelper [ник]");
		mysql_format(connects, stringer1, 100, "SELECT `Name` FROM `accounts` WHERE `Name` = '%s'", params[0]);
		mysql_tquery(connects, stringer1, "OffHelper", "ds",playerid,params[0]);
	}
	return 1;
}
CMD:unwarn(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 6) return SCM(playerid, COLOR_GREY, "Вам недоступна эта функция!");
	if(sscanf(params,"d",params[0])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/unwarn [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if(PlayerInfo[params[0]][pWarns] <= 0) return SCM(playerid, COLOR_RED, "Варнов нет");
	PlayerInfo[params[0]][pWarns] --;
	PlayerInfo[params[0]][punWarnstime] = 0;
	PlayerInfo[params[0]][punWarns] = 0;
	PlayerInfo[params[0]][WarnOffline] = 0;
	PlayerInfo[params[0]][WarnAdmin] = 0;
	strmid(PlayerInfo[params[0]][WarnAdmin], "None", 0, strlen("None"), 255);
	PlayerInfo[params[0]][WarnReason] = 0;
	strmid(PlayerInfo[params[0]][WarnReason], "None", 0, strlen("None"), 255);
	format(stringer1,SMALL_SIZE, "Предупреждения с %s сняты", PlayerInfo[params[0]][pNames]);
	SCM(playerid, COLOR_RED, stringer1);
	format(stringer1,MAX_STR+32, "[UNWARN] {FFFFFF}Администратор {FF6347}%s {FFFFFF}снял Warn с {FF6347}%s",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
	ABroadCast(COLOR_LIGHTRED,stringer1,1);
	SCM(params[0], COLOR_GREEN, "С Вас снято предупреждение.");
	return 1;
}
ALTX:sp("/spawn");
CMD:sp(playerid)
{
	if (PlayerInfo[playerid][bAdmin] >= 2) return SpawnPlayer(playerid);
	return 1;
}
CMD:freeze(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/freeze [id]");
	if(anti{playerid} == true) return SCM(playerid, COLOR_LIGHTRED, "[Анти-Наказание] Вы были сняты с поста администратора (Если произошло по ошибке сделайте скриншот)"),DeleteAdministration(playerid,PlayerInfo[playerid][pNames]);
	if(PlayerInfo[params[0]][bAdmin] > 0) return SCM(playerid, COLOR_GRAD2, "Администратор не может быть заморожен!");
	if(PlayerInfo[playerid][bAdmin] < 2) return 1;
	if(!IsPlayerConnected(params[0])) return 1;
	TogglePlayerControllable(params[0], 0);
	antiwarn[playerid] += 8;
	if(antiwarn[playerid] >= 30 && anti{playerid} == false) anti{playerid} = true, antiwarn[playerid] = 300;
	format(stringer1,MAX_STR, "%s был заморожен администратором %s",PlayerInfo[params[0]][pNames] ,PlayerInfo[playerid][pNames]);
	ABroadCast(COLOR_LIGHTRED,stringer1,1);
	return 1;
}
CMD:unfreeze(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/unfreeze [id]");
	if (PlayerInfo[playerid][bAdmin] < 2) return 1;
	if(!IsPlayerConnected(params[0])) return 1;
	TogglePlayerControllable(params[0], 1);
	format(stringer1,80, "Администратор %s разморозил %s ",PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames]);
	ABroadCast(COLOR_LIGHTRED,stringer1,1);
	return 1;
}
CMD:wantedlist(playerid)
{
	if(IsACop(playerid) || (PlayerInfo[playerid][pMRInections] == 7 || PlayerInfo[playerid][pMRInections] == 28) && PlayerInfo[playerid][pRKInections] == 3 && PlayerInfo[playerid][pRKInections] == 4 || PlayerInfo[playerid][pMRInections] == 11 || PlayerInfo[playerid][pMRInections] == 8 && PlayerInfo[playerid][pRKInections] == 2)
	foreach(new i: Player)
	{
		if(PlayerInfo[i][pWanted] < 1) continue;
		format(stringer1,120, "%s [ID: %d] | Звезд: %d", PlayerInfo[i][pNames], i, PlayerInfo[i][pWanted]);
		SCM(playerid, COLOR_LIGHTGREEN, stringer1);
	}
	return 1;
}
CMD:unbanip(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 5) return 1;
	if(sscanf(params,"s[30]",params[0])) return SendClientMessage(playerid,COLOR_WHITE," Введите: /unbanip [IP адрес]");
	format(stringer,64,"unbanip %s",params[0]);
	SendRconCommand(stringer);
	SendRconCommand("reloadbans");
	format(stringer,100, "%s разбанил IP: %s", PlayerInfo[playerid][pNames], params[0]);
	ABroadCast(COLOR_GREY,stringer,1);
	return 1;
}
CMD:banip(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 11) return 1;
	if(sscanf(params, "s[30]", params[0])) return SendClientMessage(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /abanip [IP]");
	if(!strlen(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Использовать можно только цифры.");
	if(strfind(params[0], "*", true) != -1 && PlayerInfo[playerid][bAdmin] < 13) return SCM(playerid,COLOR_WHITE,"Нельзя звёздочки!");
	foreach(new i: Player)
	{
		if(PlayerInfo[i][bAdmin] > 0 && PlayerInfo[playerid][bAdmin] < 13)
		{
			if(!strcmp(params[0], PlayerInfo[i][pIP], true)) return SCM(playerid,COLOR_WHITE,"Данный IP Адрес нельзя забанить.");
		}
	}
	format(stringer, MAX_STR, "Администратор %s заблокировал IP адрес: %s",PlayerInfo[playerid][pNames], params[0]);
	ABroadCast(COLOR_GREY, stringer, 1);
	format(stringer,SMALL_SIZE,"banip %s",params[0]);
	SendRconCommand(stringer);
	SendRconCommand("reloadbans");
	return 1;
}
CMD:sellbenz(playerid)
{
	new tmpcar = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pJob] == 5 && PlayerInfo[playerid][pMRInections] == 0)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) return SCM(playerid,COLOR_GREY,"Вы не в машине!");
		if(PlayersHaul[tmpcar-benzovoz[0]][sLoad] == 0) return SCM(playerid,COLOR_GREY,"Нет бензина!");
		for(new i = 0; i < sizeof(SBizzInfo); i++)
		{
			if (PlayerToPoint(15, playerid,SBizzInfo[i][sEntranceX], SBizzInfo[i][sEntranceY], SBizzInfo[i][sEntranceZ]))
			{
				if(SBizzInfo[i][sLocked] == 1) return SCM(playerid,COLOR_GREY,"Заправка не работает.");
				if(SBizzInfo[i][sBenz] == 10000) return SCM(playerid,COLOR_GREY,"Заправка не требует пополнения скважены.");
				new benz = 10000 - SBizzInfo[i][sBenz];
				if(PlayersHaul[tmpcar-benzovoz[0]][sLoad] > benz)
				{
					SBizzInfo[i][sBenz] += benz;
					PlayerInfo[playerid][pCash] += SBizzInfo[i][sPrice]*benz;
					SCM(playerid, COLOR_YELLOW2, "Доставка бензина");
					SCMF(playerid, COLOR_WHITE, "- Бензин успешно залит в скважену. Зарплата: %d вирт",SBizzInfo[i][sPrice]*benz);
					SCM(playerid, COLOR_YELLOW2, "Доставка бензина");
					PlayersHaul[tmpcar-benzovoz[0]][sLoad] -= benz;
				}
				else
				{
					SBizzInfo[i][sBenz] += PlayersHaul[tmpcar-benzovoz[0]][sLoad];
					PlayerInfo[playerid][pCash] += SBizzInfo[i][sPrice]*PlayersHaul[tmpcar-benzovoz[0]][sLoad];
					SCM(playerid, COLOR_YELLOW2, "Доставка бензина");
					SCMF(playerid, COLOR_WHITE, "- Бензин успешно залит в скважену. Зарплата: %d вирт",SBizzInfo[i][sPrice]*PlayersHaul[tmpcar-benzovoz[0]][sLoad]);
					SCM(playerid, COLOR_YELLOW2, "Доставка бензина");
					PlayersHaul[tmpcar-benzovoz[0]][sLoad] = 0;
				}
				format(stringer1,300, "{FFFFFF}Заправочная станция: {FFC873}№%i{FFFFFF}\nНазвание заправки: {FFC873}%s{FFFFFF}\nВладелец: {00C90D}%s{FFFFFF}\nБензина в скважине: {FFC873}%i литров{FFFFFF}\nЦена за 1 литр: {FFC873}$%d{FFFFFF}\n\n{00C90D}Заправка работает{FFFFFF}",SBizzInfo[i][sID],SBizzInfo[i][sMessage],SBizzInfo[i][sOwner],SBizzInfo[i][sBenz],SBizzInfo[i][sPriceBenz]);
				Update3DTextLabelText(SBizzInfo[i][sLabel], TEAM_GROVE_COLOR, stringer1);
				SaveSBizz(i);
				return 1;
			}
		}
	}
	return 1;
}
CMD:alock(playerid)
{
	new nearveh = GetNearestVehicle(playerid);
	if (PlayerInfo[playerid][bAdmin] < 2) return 1;
	new carid = nearveh;
	new Float:cx,Float:cy,Float:cz;
	GetVehiclePos(carid, cx, cy, cz);
	if(!PlayerToPoint(4.0, playerid, cx, cy, cz)) return 1;
	if(gCarLock[carid] == true) SCM(playerid, COLOR_GRAD1, "Машина открыта!"),UnLockCar(carid),gCarLock[carid] = false;
	else SCM(playerid, COLOR_GRAD1, "Машина закрыта!"),LockCar(carid),gCarLock[carid] = true;
	return 1;
}
ALTX:anim("/animlist");
CMD:anim(playerid, params[])
{
	if(GetPVarInt(playerid, "PlayerCuffed")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы в наручниках");
	new id;
 	stringer[0] = 0;
	if(sscanf(params,"d",id))
	{
		new Animser[][] =
		{
			{"1. Танец - 1\n2. Танец - 2\n3. Танец - 3\n4. Танец - 4\n5. Стойка дилера\n6. Передал что-то\n7. Съел что-то\n8. Справить нужду\n9. Медитация\n10. Сидеть раненым\n11. Спать на боку\n12. Лечь на спину\n13. Шлепнуть рукой\n14. Наносить граффити 1\n15. Наносить граффити 2\n16. Курение\n17. Ограбление\n18. Одеть маску\n19. Руки в верх\n20. Позвать кого-то\n21. Поднять руки\n22. Болельщик 1\n23. Болельщик 2\n24. Болельщик 3\n"},
			{"25. Показать средний палец\n26. Выпить что-то\n27. Махать руками\n28. Мужское курение\n29. Прилечь 1\n30. Прилечь 2\n31. Прилечь 3\n32. Прилечь 4\n33. Присесть на пол\n34. Читать реп 1\n35. Читать реп 2\n36. Читать реп 3\n37. Читать реп 4\n38. Набивать мяч\n39. Кинуть мяч\n40. Поднять мяч\n41. Позвать\n42. Чинить авто\n43. Прислониться к авто\n44. Сложить руки вместе\n"},
			{"45. Держать биту 1\n46. Держать биту 2\n47. Гангстерский жест 1\n48. Гангстерский жест 2\n49. Гангстерский жест 3\n50. Гангстерский жест 4\n51. Гангстерский жест 5\n52. Гангстерский жест 6\n53. Гангстерский жест 7\n54. Гангстерский жест 8\n55. Плакать\n56. Присесть 1\n57. Присесть 2\n58. Присесть облокотившись\n59. Женское курение\n60. Искусственное дыхание\n61. Облокотится\n62. Облокотится 2\n63. Facepalm\n64. Чесаться"}
		};
		stringer = "";
		format(stringer, 1245, "%s%s%s", Animser[0], Animser[1], Animser[2]);
		ShowPlayerDialog(playerid,123,DIALOG_STYLE_LIST, "Список анимаций", stringer, "Выбрать", "Отмена");
	}
	switch(id)
	{
	       	case 0:
	        {
				new Animsser[][] = {
				{"1. Танец - 1\n2. Танец - 2\n3. Танец - 3\n4. Танец - 4\n5. Стойка дилера\n6. Передал что-то\n7. Съел что-то\n8. Справить нужду\n9. Медитация\n10. Сидеть раненым\n11. Спать на боку\n12. Лечь на спину\n13. Шлепнуть рукой\n14. Наносить граффити 1\n15. Наносить граффити 2\n16. Курение\n17. Ограбление\n18. Одеть маску\n19. Руки в верх\n20. Позвать кого-то\n21. Поднять руки\n22. Болельщик 1\n23. Болельщик 2\n24. Болельщик 3\n"},
				{"25. Показать средний палец\n26. Выпить что-то\n27. Махать руками\n28. Мужское курение\n29. Прилечь 1\n30. Прилечь 2\n31. Прилечь 3\n32. Прилечь 4\n33. Присесть на пол\n34. Читать реп 1\n35. Читать реп 2\n36. Читать реп 3\n37. Читать реп 4\n38. Набивать мяч\n39. Кинуть мяч\n40. Поднять мяч\n41. Позвать\n42. Чинить авто\n43. Прислониться к авто\n44. Сложить руки вместе\n"},
				{"45. Держать биту 1\n46. Держать биту 2\n47. Гангстерский жест 1\n48. Гангстерский жест 2\n49. Гангстерский жест 3\n50. Гангстерский жест 4\n51. Гангстерский жест 5\n52. Гангстерский жест 6\n53. Гангстерский жест 7\n54. Гангстерский жест 8\n55. Плакать\n56. Присесть 1\n57. Присесть 2\n58. Присесть облокотившись\n59. Женское курение\n60. Искусственное дыхание\n61. Облокотится\n62. Облокотится 2\n63. Facepalm\n64. Чесаться"}
				};
    			stringer = "";
				format(stringer,1245, "%s%s%s", Animsser[0], Animsser[1], Animsser[2]);
				ShowPlayerDialog(playerid,123,DIALOG_STYLE_LIST, "{FF6F00}Список анимаций", stringer, "Выбрать", "Отмена");
				return 1;
	        }
	        case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1);
	        case 2: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
	        case 3: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
	        case 4: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
	        case 5: GoAnim(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
	        case 6: ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
	        case 7: ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
			case 8: ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
			case 9: GoAnim(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
			case 10: GoAnim(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
			case 11: GoAnim(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
			case 12: GoAnim(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
			case 13: ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
			case 14: GoAnim(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
			case 15: GoAnim(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
			case 16: GoAnim(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
			case 17: GoAnim(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
			case 18: ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
			case 19: GoAnim(playerid,"SHOP","SHP_Rob_HandsUP",4.1,1,0,0,0,0,0);
			case 20: GoAnim(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
			case 21: ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
			case 22: GoAnim(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
			case 23: GoAnim(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
			case 24: GoAnim(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
			case 25: ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
	        case 26: ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
	        case 27: GoAnim(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
	        case 28: GoAnim(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
			case 29: GoAnim(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
			case 30: GoAnim(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
			case 31: GoAnim(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
			case 32: GoAnim(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
			case 33: GoAnim(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
			case 34: GoAnim(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
			case 35: GoAnim(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
			case 36: GoAnim(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
			case 37: GoAnim(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
			case 38: GoAnim(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
			case 39: ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
			case 40: ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
			case 41: ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
			case 42: GoAnim(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
			case 43: GoAnim(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
			case 44: GoAnim(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
			case 45: GoAnim(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
	        case 46: GoAnim(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
    		case 47: ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
	        case 48: ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
	        case 49: ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
			case 50: ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
			case 51: ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
			case 52: ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
			case 53: ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
			case 54: ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
			case 55: GoAnim(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
			case 56: GoAnim(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
			case 57: GoAnim(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
			case 58: GoAnim(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
			case 59: GoAnim(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
			case 60: ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
			case 61: GoAnim(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
			case 62: GoAnim(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
			case 63: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
			case 64: GoAnim(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
	}
	return 1;
}

CMD:alogin(playerid, params[])
{
	if(GetPVarInt(playerid, "check_alogin") > gettime()) return 1;
	format(stringer, MAX_STR, "SELECT * FROM `admin` WHERE `name` = '%s'", PlayerInfo[playerid][pNames]);
	mysql_tquery(connects, stringer, "alogin1", "ds",playerid,PlayerInfo[playerid][pNames]);
	SetPVarInt(playerid, "check_alogin", gettime()+5);
	return 1;
}
CMD:changekey(playerid, params[])
{
	if(!PlayerInfo[playerid][bAdmin]) return 1;
	format(stringer, MAX_STR, "SELECT * FROM `admin` WHERE `name` = '%s'", PlayerInfo[playerid][pNames]);
	mysql_tquery(connects, stringer, "changekey", "ds",playerid,PlayerInfo[playerid][pNames]);
	return 1;
}
CMD:sniat(playerid, params[])
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3,true) || !strcmp(PlayerInfo[playerid][pNames], "No",true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
	{
		if(sscanf(params, "d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /sniat [ID]");
		if(PlayerInfo[params[0]][bAdmin] < 1 ) return 1;
		DeleteAdministration(params[0],PlayerInfo[params[0]][pNames]);
	}
	return 1;
}
CMD:diamond(playerid, params[])
{
	if(!IsPlayerConnected(playerid) || !PlayerInfo[playerid][pLogin]) return 1;
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3,true) || !strcmp(PlayerInfo[playerid][pNames], "No",true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
	{
		new Name[24],Level,Type;
		if(sscanf(params, "s[24]d",Name,Level,Type)) return SendClientMessage(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /diamond [ИМЯ] [УРОВЕНЬ] [TYPE 1/2]");
		format(stringer, MAX_STR, "SELECT * FROM `admin` WHERE `name` = '%s'", Name);
		mysql_tquery(connects, stringer, "Moderator", "dsdd",playerid,Name,Level,Type);
	}
	return 1;
}
CMD:asellhouse(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return	SCM(playerid, COLOR_GRAD1, " Введите: /asellhouse [houseid]");
	if(params[0] > MAX_HOUSE) return 1;
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
	{
		mysql_format(connects, stringer1, 90, "UPDATE `accounts` SET `pPhousekey` = '-1' WHERE `Name` = '%s'",HouseInfo[params[0]][hOwner]);
		mysql_empty(connects, stringer1);
		HouseInfo[params[0]][hHel] = 0;
		HouseInfo[params[0]][hLock] = 1;
		HouseInfo[params[0]][hOwned] = 0;
		HouseInfo[params[0]][hBenz] = 0;
		HouseInfo[params[0]][hSafe] = 0;
		for(new i = 0; i != 4; i++) HouseInfo[params[0]][hBal][i] = 0;
		for(new i = 0; i != 5; i++) HouseInfo[params[0]][hGun][i] = 0, HouseInfo[params[0]][hGunAmmo][i] = 0;
		HouseInfo[params[0]][hKolesa] = 0;
		HouseInfo[params[0]][hGarage] = 0;
		HouseInfo[params[0]][CarDrived][0] = 0;
		HouseInfo[params[0]][CarDrived][1] = 0;
		SCM(playerid, COLOR_GREY, "Дом продан.");
		strmid(HouseInfo[params[0]][hOwner], "The State", 0, strlen("The State"), 255);
		GameTextForPlayer(playerid, stringer1, 10000, 3);
		UpdateIconHouse(params[0]);
		return 1;
	}
	else SCM(playerid, COLOR_GREY, "Вы не главный администратор!");
	return 1;
}
CMD:hotel(playerid)
{
	if(PlayerInfo[playerid][pHotel] == -1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет комнаты в отеле");
	SPD(playerid, 10003, DIALOG_STYLE_LIST, "{FF6F00}Панель управления комнатой в отеле", "{FFFFFF}Закрыть / Открыть комнату.\nПродать комнату.\nГараж (Автомобили).\nДоставить транспорт в гараж.", "Выбрать", "Выход");
	return 1;
}
ALTX:hm("/hmenu");
CMD:hm(playerid)
{
	if(PlayerInfo[playerid][pHouse] == -1) return SCM(playerid, -1, "Вы не владелец жилого дома");
	new Float: x,  Float: y;
	new house = PlayerInfo[playerid][pHouse];
	x = HouseInfo[house][hEnter][0];
	y = HouseInfo[house][hEnter][1];
	new ids = GetCityName ( x, y );
	if(!PlayerToPoint(50.0,playerid,HouseInfo[house][hExit][0], HouseInfo[house][hExit][1], HouseInfo[house][hExit][2]) && !PlayerToPoint(50.0,playerid,2485.8167,-2560.7986,2501.0859)) return SCM(playerid, -1, "Вы должны находится в доме / гараже");
	new KlassHouse[64];
	switch(HouseInfo[PlayerInfo[playerid][pHouse]][hKlass]) { case 0: KlassHouse = "Эконом класс";	case 1:KlassHouse = "Де-Люкс класс";	case 2:KlassHouse = "Люкс класс";	case 3:KlassHouse = "Премиум класс"; case 4: KlassHouse = "Бизнес класс"; case 5: KlassHouse = "Элитный класс";	default:KlassHouse = "Неизвестно"; }
	format(stringer1, sizeof(stringer1), "{FFFFFF}Тип / название:\t\t\t\t{FFE800}%s\n{FFFFFF}Номер дома:\t\t\t\t%d\nГород/Деревня\t\t\t%s\nСтоимость:\t\t\t\t%d\nСтатус:\t\t\t\t\t{FFB100}%s\n{FFFFFF}Модель домашнего авто #1:\t\t{ffffff}%s\n{FFFFFF}Счёт дома:\t\t\t\t{FFB100}%d\n{FFFFFF}Аптечки:\t\t\t\t{FFFFFF}%d\n\n{FFFFFF}Гараж:\t\t\t\t\t{FFFFFF}%s\n{FFFFFF}Сейф:\t\t\t\t\t{FFFFFF}%s\n\n{C6F500}Вы можете войти в панель управления дома,\n нажав кнопку ниже 'Изменить'",
	KlassHouse,house,gSAZonesCity[ids][SAZONE_NAME],HouseInfo[house][hValue], (HouseInfo[house][hLock] ? ("Открыты") : ("Закрыты")), VehicleNames[PlayerInfo[playerid][pCar][0]-400], HouseInfo[house][hTakings], HouseInfo[house][hHel],(HouseInfo[house][hGarage] ? ("Имеется") : ("Не имеется")),(HouseInfo[house][hSafe] ? ("Имеется") : ("Не имеется")));
	SPD(playerid, 5301, DIALOG_STYLE_MSGBOX, "{FF6F00}Панель управления домом", stringer1, "Изменить", "Выйти");
	return 1;
}

CMD:sellhouse(playerid)
{
	new bouse = PlayerInfo[playerid][pHouse];
	if(bouse != INVALID_PLAYER_ID && strcmp(PlayerInfo[playerid][pNames], HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
	{
		if(PlayerToPoint(5, playerid,HouseInfo[bouse][hExit][0], HouseInfo[bouse][hExit][1], HouseInfo[bouse][hExit][2])) SPD(playerid, 5033, DIALOG_STYLE_MSGBOX, "{FF6F00}Продажа имущества", "{FFFFFF}Вы действительно хотите продать дом государству?", "Да", "Нет");
		else return SCM(playerid, COLOR_GREY, "Вы не у себя дома");
	}
	else return SCM(playerid, COLOR_GREY, "Вы не владелец дома");
	return 1;
}
CMD:sellhotel(playerid)
{
	if(PlayerInfo[playerid][pHotel] == -1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет комнаты в отеле.");
	new i = PlayerInfo[playerid][pHotel];
	HotelInfo[i][mOwner] = 0;
	HotelInfo[i][mCar] = 405;
	HotelInfo[i][mLock] = 0;
	HotelInfo[i][mMoney] = 2000;
	HotelInfo[i][mCarDrived] = 0;
	strmid(HotelInfo[i][mOwned], "None", 0, strlen("None"), 255);
	format(stringer, 130, "{FFFFFF}Комната в отеле - {FF7800}№%d{FFFFFF}\nКомната свободна\nНажмите на клавишу {FF7800}L-ALT{FFFFFF} чтобы заселится", i);
	UpdateDynamic3DTextLabelText(HotelInfo[i][hLabelHot], 0xC4DAADFF, stringer);
	SaveHotel(i);
	SCM(playerid, COLOR_GREEN, "Вы успешно продали комнату за 100.000 $");
	PlayerInfo[playerid][pCash] += 100000;
	PlayerInfo[playerid][pHotel] = -1;
	UpdatePlayerData (playerid, "pHotel", PlayerInfo[playerid][pHotel]);
	return 1;
}
CMD:mask(playerid)
{
	if(mask{playerid} <= false) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У вас нет маски, купите ее в 24/7");
	SetPlayerColor(playerid, 0x7a766700);
	new stringex[100];
	format(stringex,sizeof(stringex),"~b~Invisible on");
	GameTextForPlayer(playerid, stringex, 5000, 3);
	ApplyAnimation(playerid, "shop","ROB_Shifty",4.0,0,0,0,0,0,1);
	format(stringex,sizeof(stringex), "надел(а) маску");
	SetPlayerChatBubble(playerid,stringex,0xDD90FFFF,30.0,10000);
	format(stringex, sizeof(stringex), "%s надел(а) маску", PlayerInfo[playerid][pNames]);
	SetPlayerChatBubble(playerid,stringex,0xDD90FFFF,20.0,10000);
	SetPVarInt(playerid, "mask_true", 1);
	mask{playerid} = false;
	return 1;
}
CMD:healme(playerid, params[])
{
	if(!GetPVarInt(playerid, "pHealing")) return SCM(playerid,CGRAY,"У вас нет аптечки");
	new Float:health;
	GetPlayerHealth(playerid,health);
	SetPlayerHealthAC(playerid,health+60);
	ClearAnimations(playerid);
	MeAction(playerid,"перебинтовал(а) рану");
	SetPlayerChatBubble(playerid,"+60 HP",COLOR_YELLOW,20.0,10000);
	ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
	SetPVarInt(playerid, "heal_me",GetPVarInt(playerid, "heal_me") + 1);
	if(GetPVarInt(playerid, "heal_me") >= 2) return DeletePVar(playerid, "pHealing"),DeletePVar(playerid, "heal_me");
	return 1;
}
CMD:healm(playerid)
{
	for(new i = 0; i < sizeof(HouseInfo); i++)
	{
		if(!PlayerToPoint(5, playerid,HouseInfo[i][hExit][0], HouseInfo[i][hExit][1], HouseInfo[i][hExit][2]) || GetPlayerVirtualWorld(playerid) != i+50) continue;
		if(!HouseInfo[i][hHel]) return SCM(playerid, COLOR_GREY, "В этом месте нет аптечек");
		SCM(playerid, COLOR_WHITE, "Вы были вылечены до 100 процентов");
		format(stringer1,25, "Осталось %d аптечек", HouseInfo[i][hHel]);
		SCM(playerid, 0x6495EDFF, stringer1);
		HouseInfo[i][hHel] --;
		SetPlayerHealthAC(playerid, 100);
		SetPlayerChatBubble(playerid, "использовал аптечку", 0xDD90FFFF, 30.0, 10000);
		return 1;
	}
	return 1;
}
CMD:fixcar(playerid)
{
	if(PlayerInfo[playerid][pCash] < 500) return SendClientMessage(playerid, COLOR_RED, "Не достаточно денег!");
	if(PlayerInfo[playerid][pHouse] == -1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не имеете дома");
	format(stringer, 200, "{"#cBLUE"}Выберите автомобиль для доставки!\n{FFFFFF}Транспортное средство {"#cBLUE"}[%s]\n{FFFFFF}Транспортое средство {"#cBLUE"}[%s]",VehicleNames[PlayerInfo[playerid][pCar][0]-400],VehicleNames[PlayerInfo[playerid][pCar][1]-400]);
	SPD(playerid, 8237, DIALOG_STYLE_LIST,"{FF6F00}Служба - доставки автомобилей",stringer,"Принять","Отмена");
	return 1;
}
CMD:showcarpass(playerid, params[])
{
	if(PlayerInfo[playerid][pHouse] == -1 ) return 1;
	if(GetPlayerVehicleID(playerid) != caridhouse[playerid] && GetPlayerVehicleID(playerid) != GetPVarInt(playerid, #vehicle_id_two)) return 1;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return   	SCM(playerid, COLOR_GRAD2, "Вы не в машине!");
	if(sscanf(params,"d",params[0])) return   	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/showcarpass [id]");
	if(!IsPlayerConnected(params[0])) return 1;
	if (!ProxDetectorS(8.0, playerid, params[0])) return 1;
	new house = PlayerInfo[playerid][pHouse];
	SCM(params[0],0x0AA8DAFF,"-------========[ Тех. Паспорт ]========-------");
	SCMF(params[0],0xC0E1EEFF, "Модель: %s",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid)) - 400]);
	SCMF(params[0],0xC0E1EEFF, "Владелец: %s",HouseInfo[house][hOwner]);
    SCMF(params[0],0xC0E1EEFF, "Пробег автомобиля #1: %.2fKM",HouseInfo[house][CarDrived][0]);
    SCMF(params[0],0xC0E1EEFF, "Пробег автомобиля #2: %.2fKM",HouseInfo[house][CarDrived][1]);
	SCM(params[0],0x0AA8DAFF,"-------========[ Тех. Паспорт ]========-------");
	format(stringer1,100, "%s достал(а) документы и показал(а) их %s", PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	return 1;
}
CMD:carpass(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return   SCM(playerid, COLOR_GRAD2, "Вы не в машине!");
	if(GetPlayerVehicleID(playerid) != caridhouse[playerid] && GetPlayerVehicleID(playerid) != GetPVarInt(playerid, #vehicle_id_two)) return 1;
	new house = PlayerInfo[playerid][pHouse];
	SCM(playerid,0x0AA8DAFF,"-------========[ Тех. Паспорт ]========-------");
	SCMF(playerid,0xC0E1EEFF, "Модель: %s",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid)) - 400]);
	SCMF(playerid,0xC0E1EEFF, "Владелец: %s",HouseInfo[house][hOwner]);
	SCMF(playerid,0xC0E1EEFF, "Пробег автомобиля #1: %.2fKM",HouseInfo[house][CarDrived][0]);
	SCMF(playerid,0xC0E1EEFF, "Пробег автомобиля #2: %.2fKM",HouseInfo[house][CarDrived][1]);
	SCM(playerid,0x0AA8DAFF,"-------========[ Тех. Паспорт ]========-------");
	format(stringer1,70, "%s достал(а) документы из бардачка",PlayerInfo[playerid][pNames]);
	SetPlayerChatBubble(playerid,stringer1,0xDD90FFFF,30.0,10000);
	return 1;
}

CMD:sellcar(playerid)
{
	new caren = PlayerInfo[playerid][pCar][0];
	if(caren == 508)
	{
		vehicle_components_add[playerid][0][0]=0; vehicle_components_add[playerid][0][1]=0;
		vehicle_components_add[playerid][0][2]=0;vehicle_components_add[playerid][0][3]=3;vehicle_components_add[playerid][0][4]=0;vehicle_components_add[playerid][0][5]=0;vehicle_components_add[playerid][0][6]=0;vehicle_components_add[playerid][0][13]=0;
		vehicle_components_add[playerid][0][7]=0;vehicle_components_add[playerid][0][8]=0;vehicle_components_add[playerid][0][9]=0;vehicle_components_add[playerid][0][10]=0;vehicle_components_add[playerid][0][11]=0;vehicle_components_add[playerid][0][12]=0;
		PlayerInfo[playerid][pCar][0] = 462;
		format(c_vehicle_components_add[playerid][0],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][0][0],vehicle_components_add[playerid][0][1],vehicle_components_add[playerid][0][2],vehicle_components_add[playerid][0][3],vehicle_components_add[playerid][0][4],
		vehicle_components_add[playerid][0][5],vehicle_components_add[playerid][0][6],vehicle_components_add[playerid][0][7],
		vehicle_components_add[playerid][0][8],vehicle_components_add[playerid][0][9],vehicle_components_add[playerid][0][10],vehicle_components_add[playerid][0][11],vehicle_components_add[playerid][0][12],vehicle_components_add[playerid][0][13]);
		UpdatePlayerData(playerid, "pCar", PlayerInfo[playerid][pCar][0]), UpdatePlayerDataEx(playerid, "cVehcom", c_vehicle_components_add[playerid][0]);
		LoadCarPlayer(playerid,1);
		SendClientMessage(playerid,COLOR_WHITE,"Вы продали свой Дом на колесах за 80.000$");
		return PlayerInfo[playerid][pCash] += 80000;
	}
	if(PlayerInfo[playerid][pHouse] == -1) return SendClientMessage(playerid,COLOR_RED,"У вас нет дома");
	new mes[256];
	format(mes,sizeof(mes),"{"#cBLUE"}Выберите автомобиль для продажи!\n{FFFFFF}Первое транспортное средство {"#cBLUE"}[%s]{FFFFFF}\nВторое транспортное средство {"#cBLUE"}[%s]",VehicleNames[PlayerInfo[playerid][pCar][0]-400],VehicleNames[PlayerInfo[playerid][pCar][1]-400]);
	SPD(playerid,dSellCar,DIALOG_STYLE_LIST,"{FF6F00}Продажа транспортого средства",mes,"Продать","Отмена");
	return 1;
}
CMD:pgetip(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 6) return 1;
	if(sscanf(params,"s[30]",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/pgetip [ip]");
	SCM(playerid, COLOR_REDD, "Игроки с данного IP адреса:");
	foreach(new i: Player)
	{
		if(!strcmp(PlayerInfo[i][pIP], params[0])) { SCMF(playerid,COLOR_WHITE,"[%d] %s | IP %s", i,PlayerInfo[i][pNames],PlayerInfo[i][pIP]); }
	}
	return 1;
}
CMD:sellzone(playerid, params[])
{
	if(PlayerInfo[playerid][pLRInections]==12 || PlayerInfo[playerid][pLRInections]==13 || PlayerInfo[playerid][pLRInections]==15 || PlayerInfo[playerid][pLRInections]==17 || PlayerInfo[playerid][pLRInections]==18)
	{
		for(new i = 0; i < sizeof(GZInfo); i++)
		{
			if(!PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) continue;
			if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/sellzone [id] [цена]");
			if(params[1] < 10000 || params[1] > 100000) return SCM(playerid, COLOR_GREY, "Цена должна быть: от 10000 до 100000!");
			if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
			if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "Игрок не рядом с вами");
			if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Себе  нельзя!");
			format(stringer1,126, "Вы предложили %s купить территорию за %d вирт",PlayerInfo[params[0]][pNames],params[1]);
			SCM(playerid, 0x6ab1ffaa, stringer1);
			format(stringer1,126, "%s предлагает Вам купить территорию за %d вирт. ((  Введите: /accept zone для покупки ))",PlayerInfo[playerid][pNames],params[1]);
			SCM(params[0], 0x6ab1ffaa, stringer1);
			SetPVarInt(params[0], "ZoneOffer", playerid);
			SetPVarInt(params[0], "sellzone", PlayerInfo[playerid][pMRInections]);
			SetPVarInt(params[0], "ZonePrice", params[1]);
		}
	}
	return 1;
}
CMD:agetipreg(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 6) return 1;
	if(sscanf(params,"s[30]",params[0])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/agetipreg [Ник]");
	SCMF(playerid,COLOR_GREY,"Ник: %s | IP: %s",params[0],PlayerInfo[GetPlayerID(params[0])][pIpReg]);
	return 1;
}
CMD:unjail(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 2) return SCM(playerid, COLOR_LIGHTRED, "Нет доступа");
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /unjail [ид]");
	if(!PlayerInfo[params[0]][pPrison][0] && !PlayerInfo[params[0]][pJailed]) return SCM(playerid, COLOR_WHITE, "Ошибка: Игрок не в деморгане");
	SCMF(playerid, 0x09B000AA, "Вы освободили %s", PlayerInfo[params[0]][pNames]);
	PlayerInfo[params[0]][pPrison][0] = 0;
	PlayerInfo[params[0]][pPrison][1] = 0;
	PlayerInfo[params[0]][pJailed] = 0;
	PlayerInfo[params[0]][pJailTime] = 0;
	SCM(params[0],0x09B000AA, "Вы освобождены администратором Inspire Role Play.");
	SpawnPlayer(params[0]);
	return 1;
}
CMD:uval(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 5 ) return 1;
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/uval [id игрока]");
	if(anti{playerid} == true) return SCM(playerid, COLOR_LIGHTRED, "[Анти-Наказание] Вы были сняты с поста администратора (Если произошло по ошибке сделайте скриншот)"),DeleteAdministration(playerid,PlayerInfo[playerid][pNames]);
	if(PlayerInfo[playerid][bAdmin] < 10 && PlayerInfo[params[0]][pLRInections] > 0) return 1;
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return 1;
	if (PlayerInfo[params[0]][pMRInections] < 1) return 1;
	SCMF(params[0], 0x6ab1ffaa, "Администратор %s выгнал вас из организации", PlayerInfo[playerid][pNames]);
	SCMF(playerid, 0x6ab1ffaa, "Вы выгнали %s из организации", PlayerInfo[params[0]][pNames]);
	SCM(params[0], COLOR_WHITE, "Теперь вы обычный гражданин...");
	SetPlayerArmourAC(params[0],0);
	ResetPlayerWeapons(params[0]);
	if(StartRabWork(params[0]))
	{
		SCM(params[0],COLOR_BLUE,"Ваш рабочий день окончен!");
		SetPVarInt(params[0], "StartRabWork", 0);
	}
	PlayerInfo[params[0]][pMRInections] = 0;
	PlayerInfo[params[0]][pLRInections] = 0;
	PlayerInfo[params[0]][pRKInections] = 0;
	PlayerInfo[params[0]][vig] = 0;
	UpdatePlayerData(playerid,"vig",PlayerInfo[playerid][vig]);
	SetPlayerInterior(params[0], 0);
	PlayerInfo[params[0]][pInt] = 0;
	SpawnPlayer(params[0]);
	antiwarn[playerid] += 8;
	if(antiwarn[playerid] >= 30 && anti{playerid} == false) anti{playerid} = true, antiwarn[playerid] = 300;
	return 1;
}

CMD:vig(playerid,params[])
{
	if(PlayerInfo[playerid][pLRInections] == 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Доступно только лидерам организации");
	if(sscanf(params,"dds[125]",params[0],params[1],params[2])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /vig [id] [кол-во] [причина]");
	if(PlayerInfo[params[0]][pMRInections] != PlayerInfo[playerid][pMRInections]) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок не в Вашей организации");
	if(GetPVarInt(playerid, "AFvig") > gettime()) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Использовать данную команду можно раз в 5 секунд");
	if(params[0] == playerid) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя выдать выговор самому себе");
	if(params[1] < 0 || params[1] > 3) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Нельзя больше 3 и меньше 0");
	if(!IsPlayerConnected(params[0])) return 1;
	if(PlayerInfo[params[0]][vig] > 2) return 1;
	if(params[1] == 0)
	{
		PlayerInfo[params[0]][vig] = 0;
		UpdatePlayerData(playerid,"vig",PlayerInfo[playerid][vig]);
		SCMF(playerid, COLOR_GREY, "Вы аннулировали выговоры игроку %s. Причина: %s",PlayerInfo[params[0]][pNames], params[2]);
		SCMF(params[0], COLOR_ORANGE, "Лидер организации %s аннулировал Вам все выговоры. Причина: %s",PlayerInfo[playerid][pNames], params[2]);
	}
	PlayerInfo[params[0]][vig] += params[1];
	UpdatePlayerData(playerid,"vig",PlayerInfo[playerid][vig]);
	SCMF(params[0], COLOR_ORANGE, "Лидер организации %s выдал Вам %d выговора. Причина: %s",PlayerInfo[playerid][pNames],params[1],params[2]);
	SCMF(playerid, COLOR_ORANGE, "Вы выдали %d выговора игроку %s. Причина: %s",params[1],PlayerInfo[params[0]][pNames],params[2]);
	SetPVarInt(playerid, "AFvig",gettime()+5);
	return 1;
}

CMD:avig(playerid,params[])
{
	if(!PlayerInfo[playerid][pLogin]) return 1;
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3,true) || !strcmp(PlayerInfo[playerid][pNames], "No",true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
	{
		if(sscanf(params,"dds[125]",params[0],params[1],params[2])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /avig [id] [кол-во] [причина]");
		if(GetPVarInt(playerid, "AFAvig") > gettime()) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Использовать данную команду можно раз в 5 секунд");
		if(PlayerInfo[params[0]][bAdmin] == 0) return 1;
		if(params[0] == playerid) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя выдать выговор самому себе");
		if(params[1] < 0 || params[1] > 3) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Нельзя больше 3 и меньше 0");
		if(!IsPlayerConnected(params[0])) return 1;
		if(params[1] == 0)
		{
			PlayerInfo[params[0]][pAvig] = 0;
			UpdatePlayerData(playerid,"pAvig",PlayerInfo[playerid][pAvig]);
			SCMF(playerid, COLOR_GREY, "Вы аннулировали выговоры администратору %s. Причина: %s",PlayerInfo[params[0]][pNames], params[2]);
			SCMF(params[0], COLOR_ORANGE, "Администратор %s аннулировал Вам все выговоры. Причина: %s",PlayerInfo[playerid][pNames], params[2]);
		}
		if(PlayerInfo[params[0]][pAvig] > 2) return 1;
		PlayerInfo[params[0]][pAvig] += params[1];
		UpdatePlayerData(playerid,"pAvig",PlayerInfo[playerid][pAvig]);
		SCMF(params[0], COLOR_ORANGE, "Администратор %s выдал Вам %d выговора. Причина: %s",PlayerInfo[playerid][pNames],params[1],params[2]);
		SCMF(playerid, COLOR_ORANGE, "Вы выдали %d выговора администратору %s. Причина: %s",params[1],PlayerInfo[params[0]][pNames],params[2]);
		SetPVarInt(playerid, "AFAvig",gettime()+5);
	}
	return 1;
}

CMD:salut(playerid)
{
	if !GetPVarInt(playerid, "salute_zariad") *then return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет салютов");
	if(GetPlayerInterior(playerid) != 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя использовать в интерьере");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя запускать салют в машине");
	if(GetPVarInt(playerid, "salut_check") == 2) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя поставить больше двух коробок салюта сразу");
	if GetPVarInt(playerid, "salute_zariad") == 50 *then
	{
		new Float:x, Float:y, Float:z,id;
		id = FindSalut();
		GetPlayerPos(playerid,x,y,z);
		SALUTEINFOS[id][SalutePos][0] = x+1.5;
		SALUTEINFOS[id][SalutePos][1] = y;
		SALUTEINFOS[id][SalutePos][2] = z;
		SALUTEINFOS[id][Salute] = 50;
		SALUTEINFOS[id][SaluteUse] = true;
		SALUTEINFOS[id][SaluteBox] = CreateDynamicObject(964,x+1.5,y,z-1,0.0,0.0,0.0);
		SALUTEINFOS[id][SaluteTimer] = SetTimerEx("SaluteMachineTimer",floatround((400 + random(300)) * 0.26),false,"ii",id,playerid);
		SCM(playerid, COLOR_GREY, "Успешно: Отойдите подальше, что бы Вас не задело");
		GivePVarInt(playerid, "salut_check", 1);
		DeletePVar(playerid, "salute_zariad");
	}
	if GetPVarInt(playerid, "salute_zariad") == 150 *then
	{
		new Float:x, Float:y, Float:z,id;
		id = FindSalut();
		GetPlayerPos(playerid,x,y,z);
		SALUTEINFOS[id][SalutePos][0] = x+1.5;
		SALUTEINFOS[id][SalutePos][1] = y;
		SALUTEINFOS[id][SalutePos][2] = z;
		SALUTEINFOS[id][Salute] = 150;
		SALUTEINFOS[id][SaluteUse] = true;
		SALUTEINFOS[id][SaluteBox] = CreateDynamicObject(964,x+1.5,y,z-1,0.0,0.0,0.0);
		SALUTEINFOS[id][SaluteTimer] = SetTimerEx("SaluteMachineTimer",floatround((400 + random(300)) * 0.26),false,"ii",id,playerid);
		SCM(playerid, COLOR_GREY, "Успешно: Отойдите подальше, что бы Вас не задело");
		GivePVarInt(playerid, "salut_check", 1);
		DeletePVar(playerid, "salute_zariad");
	}
	if GetPVarInt(playerid, "salute_zariad") == 350 *then
	{
		new Float:x, Float:y, Float:z,id;
		id = FindSalut();
		GetPlayerPos(playerid,x,y,z);
		SALUTEINFOS[id][SalutePos][0] = x+1.5;
		SALUTEINFOS[id][SalutePos][1] = y;
		SALUTEINFOS[id][SalutePos][2] = z;
		SALUTEINFOS[id][Salute] = 350;
		SALUTEINFOS[id][SaluteUse] = true;
		SALUTEINFOS[id][SaluteBox] = CreateDynamicObject(964,x+1.5,y,z-1,0.0,0.0,0.0);
		SALUTEINFOS[id][SaluteTimer] = SetTimerEx("SaluteMachineTimer",floatround((400 + random(300)) * 0.26),false,"ii",id,playerid);
		SCM(playerid, COLOR_GREY, "Успешно: Отойдите подальше, что бы Вас не задело");
		GivePVarInt(playerid, "salut_check", 1);
		DeletePVar(playerid, "salute_zariad");
	}
	return 1;
}

CMD:ban(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 3) return 1;
	if(sscanf(params, "dds[256]", params[0], params[1], params[2])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /ban [id] [дни] [причина]");
	if(AntiBan[playerid] >= 200) return SCM(playerid,COLOR_WHITE,"[Анти-перебан] Вы были сняты с поста администратора (Если произошло по ошибке сделайте скриншот)"),DeleteAdministration(playerid,PlayerInfo[playerid][pNames]);
	if(!strcmp(PlayerInfo[params[0]][pNames], FD1, true) || !strcmp(PlayerInfo[params[0]][pNames], FD2, true) || !strcmp(PlayerInfo[params[0]][pNames], FD3, true)) return SCM(playerid, COLOR_WHITE, "Основателей запрещено банить");
	if(PlayerInfo[params[0]][bAdmin] > PlayerInfo[playerid][bAdmin]) return SCM(playerid, COLOR_GRAD2, "Администратора нельзя забанить");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_WHITE, "Игрок оффлайн");
	if(params[1] < 1 || params[1] > 30) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}День бана должен быть не меньше 1 и не больше 30.");
	if(!GetPVarInt(playerid, "ReklamaYES"))
	{
		Reklama(playerid, params[2]);
		if(GetPVarInt(playerid, "ReklamaYES")) return DeletePVar(playerid, "ReklamaYES");
	}
	new ip[16];
	GetPlayerIp(params[0],ip,sizeof(ip));
	format(stringer, MAX_STR, "%s %s заблокировал игрока %s на %d дней. Причина: %s",GetAdmin[PlayerInfo[playerid][bAdmin]-1],PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames], params[1],params[2]);
 	SendAdminMessage(COLOR_LIGHTRED, stringer);
 	new query_mysql[200], data[16];
	SetPVarInt(playerid, "UnBanDate", gettime() + params[1]*86400), format(data,sizeof(data), "%s",date("%dd.%mm.%yyyy",gettime()));
	format(query_mysql,sizeof(query_mysql), "INSERT INTO `BanList` (`Nick`,`Admin`, `IP`, `Date` ,`Reason`,`Days`,`UnbanDate`) VALUES ('%s','%s','%s','%s','%s','%d','%d')", PlayerInfo[params[0]][pNames], PlayerInfo[playerid][pNames], ip, data, params[2], params[1], GetPVarInt(playerid, "UnBanDate"));
	mysql_empty(connects, query_mysql);
	antiwarn[playerid] += 8;
	if(antiwarn[playerid] >= 30 && anti{playerid} == false) anti{playerid} = true, antiwarn[playerid] = 300;
	AntiBan[playerid] += 30;
	format(stringer1,300,"\t\t\t{FF6F00}Ваш аккаунт заблокирован.\n{ff8800}Заблокирован: {ffffff}%s\n{ff8800}Заблокировал: {ffffff}%s\n{ff8800}Срок бана: {ffffff}%d дней{ff8800}\nПричина бана: {ffffff}%s\n{FF6F00}Если вы считаете что бан выдан ложно, сообщите это главному администратору",PlayerInfo[params[0]][pNames],PlayerInfo[playerid][pNames],params[1],params[2]);
	SPD(params[0],228,DIALOG_STYLE_MSGBOX,"{FF6F00}Блокировка аккаунта",stringer1,"Да","");
	format(stringer1,126, "    Nik  [%s]    R-IP [%s]    L-IP  [%s]    IP  [%s]",PlayerInfo[params[0]][pNames],PlayerInfo[params[0]][pIpReg],PlayerInfo[params[0]][pIpReg],PlayerInfo[params[0]][pIP]);
	ABroadCast(COLOR_LIGHTRED,stringer1,1);
	KickEx(params[0],39);
	bans[playerid] ++;
	return 1;
}
CMD:unban(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 5) return 1;
	if(sscanf(params, "s[24]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /unban [name]");
    new query_mysql[80];
 	format(query_mysql,sizeof(query_mysql), "SELECT * FROM `BanList` WHERE Nick = '%s'", params[0]), mysql_tquery(connects, query_mysql, "UnBan", "d", playerid);
	return 1;
}
CMD:templeader(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 5) return 1;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /templeader [ID fraction]");
	if(params[0] > 27 || params[0] < 1 || params[0] == 22 || params[0] == 20 || params[0] == 9 || params[0] == 8 || params[0] == 23) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1 или больше 27!");
	if(PlayerInfo[playerid][pMRInections] > 0 ) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы состоите в организации, увольтесь (/uval ID)");
	PlayerInfo[playerid][pMRInections] = params[0];
	PlayerInfo[playerid][pRKInections] = 15;
	format(stringer, SMALL_SIZE, "Вы временно вступили в фракцию: %s%s",GetFractionColor(params[0]),GetMember[params[0]-1]);
	SCM(playerid, COLOR_WHITE, stringer);
	SetPVarInt(playerid, "StartRabWork", 1);
	SCM(playerid, COLOR_BLUE, "Рабочий день успешно начат.");
	return 1;
}
CMD:makeleader(playerid, params[])
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3,true) || !strcmp(PlayerInfo[playerid][pNames], "Mario_Morris",true) || !strcmp(PlayerInfo[playerid][pNames], "John_Pool",true) || !strcmp(PlayerInfo[playerid][pNames], "No",true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
	{
		if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/makeleader [ID]");
		if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return 1;
		if(PlayerInfo[params[0]][pMRInections] > 0) return SCM(playerid, COLOR_WHITE, "Игрок во фракции");
		if(PlayerInfo[params[0]][bAdmin] > 0 && PlayerInfo[playerid][bAdmin] != 13) return SCM(playerid, COLOR_WHITE, "Администратор не может быть лидером только во фракции ( /templeader [id фракции] )");
		if(PlayerInfo[params[0]][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1,"У игрока Warn.");
		new mes[256+5];
 		for(new i;i!=sizeof(GetMember);i++) format(mes,sizeof(mes),"%s%s\n",mes,GetMember[i]);
 		ShowPlayerDialog(playerid,1146,2,PlayerInfo[params[0]][pNames],mes,"Далее","Отмена");
        SetPVarInt(playerid,"actplayerid",params[0]);
	}
	return 1;
}
CMD:demote(playerid, params[])
{
	new strings[0b100000000];
	if (PlayerInfo[playerid][pMRInections] != 2) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вам недоступна эта функция!");
	if (PlayerInfo[playerid][pRKInections] < 6) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вам недоступна эта функция!");
	if (sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /demote [id игрока]");
	if (!IsPlayerConnected(params[0])) return 1;
	if (params[0] == INVALID_PLAYER_ID) return 1;
	switch (PlayerInfo[params[0]][pMRInections])
	{
		case 2,4,5..9,11..18,22..27: return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Этот человек не состоит в армии/ПД!");
	}
	if (PlayerInfo[params[0]][pLRInections] != 0) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не можете уволить лидера!");
	if ((PlayerInfo[params[0]][pMRInections] == 1 || PlayerInfo[params[0]][pMRInections] == 10 || PlayerInfo[params[0]][pMRInections] == 21) && PlayerInfo[params[0]][pRKInections]-1 == 0)
	{
		PlayerInfo[params[0]][pMRInections] = 19;
		PlayerInfo[params[0]][pRKInections] = 3;
		ResetPlayerWeapons(params[0]);
		format(strings, sizeof(strings), "Агент FBI %s перевел вас обратно в армию", PlayerInfo[playerid][pNames]);
		SendClientMessage(params[0], COLOR_LIGHTBLUE, strings);
		format(strings, sizeof(strings), "Вы перевели %s обратно в армию.", PlayerInfo[params[0]][pNames]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
		PlayerInfo[params[0]][pJob]   = 0;
		PlayerInfo[params[0]][pChar] = 287;
		SetPlayerSkin(params[0], 287);
		return 1;
	}
	if (PlayerInfo[params[0]][pRKInections]-1 == 0 && (PlayerInfo[params[0]][pMRInections] == 3 || PlayerInfo[params[0]][pMRInections] == 19))
	{
		PlayerInfo[params[0]][pRKInections] = 0;
		PlayerInfo[params[0]][pMRInections] = 0;
		PlayerInfo[params[0]][pLRInections] = 0;
		SetPlayerArmourAC(params[0], 0);
		SpawnPlayer(params[0]);
		ResetPlayerWeapons(params[0]);
		format(strings, sizeof(strings), "Агент FBI %s уволил вас из армии", PlayerInfo[playerid][pNames]);
		SendClientMessage(params[0], COLOR_LIGHTBLUE, strings);
		format(strings, sizeof(strings), "Вы снова гражданский", PlayerInfo[playerid][pNames]);
		SendClientMessage(params[0], COLOR_LIGHTBLUE, strings);
		format(strings, sizeof(strings), "Вы уволили %s из армии.", PlayerInfo[params[0]][pNames]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
		SetPVarInt(params[0], "StartRabWork", 0);
		return 1;
	}
	PlayerInfo[params[0]][pRKInections] --;
	format(strings, sizeof(strings), "Агент FBI %s понизил вас до %d ранга", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pRKInections]);
	SendClientMessage(params[0], COLOR_LIGHTBLUE, strings);
	format(strings, sizeof(strings), "Вы понизили %s до %d ранга.", PlayerInfo[params[0]][pNames], PlayerInfo[params[0]][pRKInections]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, strings);
	return 1;
}
CMD:agiverank(playerid, params[])
{
	if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /agiverank [id игрока] [уровень (1 - 15)]");
	if(params[1] > 21 || params[1] < 0) return SCM(playerid, COLOR_GREY, "Не мене 0 и не более 21!");
	if(PlayerInfo[playerid][bAdmin] < 12 || !IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return 1;
	PlayerInfo[params[0]][pRKInections] = params[1];
	format(stringer1,126, "Вы были повышены в ранге администратором %s", PlayerInfo[playerid][pNames]);
	SCM(params[0], 0x6495EDFF, stringer1);
	format(stringer1,80, "Вы повысили %s до %d ранга.", PlayerInfo[params[0]][pNames],params[1]);
	SCM(playerid, 0x6495EDFF, stringer1);
	return 1;
}
CMD:mark(playerid)
{
	if (PlayerInfo[playerid][bAdmin] >=3 ) { GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]); SCM(playerid, COLOR_WHITE, "Точка телепортирования установлена!"); }
	return 1;
}
CMD:armour(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid,8.0,257.8165,77.0322,1003.6406)) return 1;
	if(PlayerInfo[playerid][pMRInections] != 1 && PlayerInfo[playerid][pLRInections] != 1) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	SetPlayerAttachedObject(playerid,2 , 19142, 1,0.08,0.04,0.00,0.0,0.0,-7.4);
	SCM(playerid, COLOR_WHITE, "Чтобы снят введите: /armouroff");
	return 1;
}
CMD:capoff(playerid)
{
	if(PlayerInfo[playerid][pMRInections] != 1 && PlayerInfo[playerid][pLRInections] != 1) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	RemovePlayerAttachedObject(playerid,3);
	return 1;
}
CMD:armouroff(playerid)
{
	if(PlayerInfo[playerid][pMRInections] != 1 && PlayerInfo[playerid][pLRInections] != 1) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	RemovePlayerAttachedObject(playerid,2);
	return 1;
}
CMD:cap(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid,8.0,257.8165,77.0322,1003.6406)) return 1;
	if(PlayerInfo[playerid][pMRInections] != 1 && PlayerInfo[playerid][pLRInections] != 1) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	SetPlayerAttachedObject(playerid,3 , 18636, 2,0.131,0.045,0.00,0.0,90.0,96.0);
	SCM(playerid, COLOR_WHITE, "Чтобы снят введите: /capoff");
	return 1;
}
CMD:mp(playerid)
{
	if(PlayerInfo[playerid][bAdmin] < 1) return 1;
	format(stringer1,300, "{FF6F00}1.{FFFFFF} Создать мероприятие\t\t{FF6F00}[12 LVL]\n{0080FF}2. Раздать оружие (50м)\t\t{FF6F00}[4 LVL]\n{0080FF}3. Раздать жизни (50м)\t\t\t{FF6F00}[1 LVL]\n{0080FF}4. Забрать оружие у всех (50м)\t\t{FF6F00}[1 LVL]\n{0080FF}5. Раздать красные каски (10м)\n{0080FF}6. Раздать зеленые каски (10м)");
	SPD(playerid, 5343, DIALOG_STYLE_LIST,"Раздел МП", stringer1, "Выбрать", "Отмена");
	return 1;
}
CMD:mpwin(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 2) return 1;
	if(sscanf(params,"dd",params[0],params[1])) return	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /mpwin [playerid] [кол-во]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(params[1] >= 5000) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя указать более 5к DonateMoney!");
	SCMF(playerid,COLOR_YELLOW,"Вы дали игроку %s %d DonatMoney", PlayerInfo[params[0]][pNames], params[1]);
	PlayerInfo[params[0]][pDMInections] += params[1];
	SCMF(params[0],COLOR_GREY, "Администратор %s дал вам: %d DonatMoney", PlayerInfo[playerid][pNames], params[1]);
	SCMF(params[0],COLOR_GREY, "Ваш донатный счёт: %d DonatMoney {FFFFFF}(( Используйте /donate ))", PlayerInfo[params[0]][pDMInections]);
	SCM(playerid, COLOR_GREY, "DonateMoney успешно выданы!");
	return 1;
}
CMD:gotomark(playerid)
{
	if (PlayerInfo[playerid][bAdmin] < 3) return 1;
	if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	}
	else { SetPlayerPosEx(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]); }
	SCM(playerid, COLOR_WHITE, "Вы были телепортированы!");
	SetPlayerInterior(playerid,0);
	PlayerInfo[playerid][pInt] = 0;
	return 1;
}
CMD:gotoderby(playerid)
{
	if(PlayerInfo[playerid][bAdmin] < 1) return 1;
	SetPlayerPosEx(playerid,-1406.2530517578,998.36901855469,1024.1569824219);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 15);
	PlayerInfo[playerid][pInt] = 15;
	SCM(playerid, COLOR_GREY, "Вы успешно телепортированы на стадион.");
	return 1;
}
ALTX:goto("/g");
CMD:goto(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/g(oto) [id игрока]");
	if (!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if(PlayerInfo[playerid][bAdmin] < 2) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не уполномочены");
	if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return SCM(playerid, COLOR_GRAD1, "Игрок не вступил в игру!");
	if(GetPlayerState(params[0]) == PLAYER_STATE_SPECTATING) return SCM(playerid, COLOR_GRAD1, "Админ в режиме наблюдения");
	new Float:plocx, Float:plocy, Float:plocz;
	GetPlayerPos(params[0], plocx, plocy, plocz);
	if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
	}
	else
	{
		SetPlayerPosEx(playerid,plocx,plocy+PLAYER_STATE_DRIVER, plocz);
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
		SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
		PlayerInfo[playerid][pInt] = GetPlayerInterior(params[0]);
	}
	SCM(playerid, COLOR_WHITE, "Вы были телепортированы!");
	return 1;
}
CMD:gethere(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/gethere [id игрока]");
	new Float:plocx,Float:plocy,Float:plocz;
	new inter = GetPlayerInterior(playerid);
	new worldd = GetPlayerVirtualWorld(playerid);
	if (!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if (PlayerInfo[playerid][bAdmin] < 2) return 1;
	if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return	SCM(playerid, COLOR_GRAD1, "Игрок не вступил в игру!");
	if(PlayerInfo[playerid][bAdmin] < PlayerInfo[params[0]][bAdmin]) return SCM(playerid,COLOR_GREY,"Нельзя телепортиповать администратора, который старше вас!");
	GetPlayerPos(playerid, plocx, plocy, plocz);
	if(PlayerInfo[playerid][pInt])
	{
		SetPlayerInterior(params[0],inter);
		PlayerInfo[params[0]][pInt] = inter;
		PlayerInfo[params[0]][pLocal] = PlayerInfo[playerid][pLocal];
		SetPlayerVirtualWorld(params[0],worldd);
	}
	if(!PlayerInfo[playerid][pInt])
	{
		SetPlayerInterior(params[0],PlayerInfo[playerid][pInt]);
		SetPlayerInterior(params[0],inter);
		SetPlayerVirtualWorld(params[0],worldd);
	}
	if(plocz > 930.0 && !PlayerInfo[playerid][pInt])
	{
		SetPlayerInterior(params[0],inter);
		PlayerInfo[params[0]][pInt] = inter;
	}
	if (GetPlayerState(params[0]) == PLAYER_STATE_DRIVER)
	{
		SetPlayerInterior(params[0],inter);
		new tmpcar = GetPlayerVehicleID(params[0]);
		SetPlayerVirtualWorld(params[0],worldd);
		SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
	}
	else
	{
		SetPlayerPosEx(params[0],plocx,plocy+PLAYER_STATE_DRIVER, plocz);
		SetPlayerInterior(params[0],inter);
		SetPlayerVirtualWorld(params[0],worldd);
	}
	SCM(params[0], COLOR_WHITE, "Вы были телепортированы администратором сервера.");
	format(stringer, MAX_STR, "[%s(%d)] телепортировал к себе: %s[%d]", PlayerInfo[playerid][pNames],playerid, PlayerInfo[params[0]][pNames],params[0]);
	ABroadCast(COLOR_GREY, stringer, 1);
	return 1;
}
CMD:givegun(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 5) return SCM(playerid, COLOR_GRAD1, "Вы не уполномочены использовать эту команду!");
	if(sscanf(params,"ddd",params[0],params[1],params[2])) return SCM(playerid, COLOR_WHITE, "Используйте: /givegun [id] [id оружия] [патроны]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GRAD1, "Ошибка!");
	if(params[1] == 9 || params[1] == 26 || params[1] == 16 || params[1] == 27 || params[1] == 37 || params[1] == 38 || params[1] == 35 || params[1] == 36 || params[1] == 39 || params[1] == 44 || params[1] == 45) return SCM(playerid, COLOR_GRAD1, "Нельзя выдавать запрещенное оружие");
	if(params[2] <1||params[2] > 9999) return SCM(playerid, COLOR_GRAD1, "Нельзя меньше 1 или больше 9999 патронов!");
	GivePlayerWeaponAC(params[0], params[1], params[2]);
	SCM(playerid, COLOR_GRAD1, "'Вы успешно Выдали оружие'");
	format(stringer, MAX_STR, "Администратор: %s выдал оружие %d с %d патронами игроку %s", PlayerInfo[playerid][pNames], params[1], params[2], PlayerInfo[params[0]][pNames]);
	ABroadCast(COLOR_GREY, stringer, 1);
	return 1;
}
CMD:gotome(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid,COLOR_GREY,"Используйте: /gotome [playerid]");
	if(!IsACop(playerid)) return SCM(playerid,COLOR_LIGHTRED,"Вы не законик!");
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(params[0])) return SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Один из Вас находится в автомобиле.");
	if(GetPVarInt(params[0], "PlayerCuffed") < 0) return SCM(playerid,COLOR_LIGHTRED,"Игрок не в наручниках!");
	if(!ProxDetectorS(10.0, playerid, params[0])) return SCM(playerid,COLOR_LIGHTRED,"Вы слишком далеко от игрока!");
	new Float:xe, Float:ye, Float:ze;
	GetPlayerPos(playerid,xe,ye,ze);
	SetPlayerPosEx(params[0],xe+0.5,ye+0.5,ze);
	SCM(params[0],COLOR_LIGHTRED,"Вас насильно потащили за собой!");
	SCM(playerid,COLOR_LIGHTRED,"Вы насильно потащили");
	return 1;
}
CMD:cput(playerid, params[])
{
	if(!IsACop(playerid) && !ISAMAFIA(playerid)) return 1;
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в авто!");
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /cput [id игрока]");
	if(!IsPlayerConnected(params[0])) return 1;
	new string1[90];
	if(!GetPVarInt(params[0], "PlayerCuffed")) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в наручниках!");
	if(!ProxDetectorS(4.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с вами!");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете затащить в автомобиль самого себя!");
	PutPlayerInVehicle(params[0], GetPlayerVehicleID(playerid), 3);
	format(string1, 90, "%s затащил(а) в авто %s", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames]);
	ProxDetector(7.0, playerid, string1, 0xDD90FFFF, 0xDD90FFFF, 0xDD90FFFF, 0xDD90FFFF, 0xDD90FFFF);
	return 1;
}
CMD:tie(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /tie [id]");
	if(!ISAMAFIA(playerid)) return SCM(playerid, COLOR_WHITE, " Вам недоступна данная команда.");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if(GetPlayerState(playerid)!=PLAYER_STATE_DRIVER) return SCM(playerid,COLOR_GREY,"Вы не водитель!");
	if(PlayerTied{playerid} > false)  return SCM(playerid, COLOR_GREY, "Вы связаны!");
	if(PlayerTied{params[0]} > false) return SCM(playerid, COLOR_GREY, "Человек уже связан!");
	if (!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Человек не рядом с вами!");
	new car = GetPlayerVehicleID(playerid);
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Нельзя связать самого себя!");
	if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) != 2 && !IsPlayerInVehicle(params[0], car)) return SCM(playerid, COLOR_GREY, "Человек не в мащине!");
	format(stringer1,126, "%s достал веревку и завязал %s на узел.", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	TogglePlayerControllable(params[0], 0);
	PlayerTied{params[0]} = true;
	return 1;
}
CMD:klyap(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /klyap [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Нельзя у самого себя вытащить кляп.");
	if(PlayerTied{params[0]} == false)  return SCM(playerid, COLOR_GREY, "Игрок не связан!");
	if(PlayerTied{playerid} > false)  return SCM(playerid, COLOR_GREY, "Вы связаны");
	if (!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Человек не рядом с вами!");
	if(GetPVarInt(params[0], "gag") > 0)
	{
		DeletePVar(params[0],"gag");
		format(stringer1,90, "%s вытащил кляп у %s'a", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
		ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
		return 1;
	}
	else
	{
		if(!ISAMAFIA(playerid)) return SCM(playerid, COLOR_WHITE, " Вам недоступна данная команда.");
		SetPVarInt(params[0], "gag",1);
		SetTimerEx("tieTime", 600, 0, "d", playerid);
		format(stringer1,90, "%s вставил кляп в рот %s'у", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
		ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	}
	return 1;
}
CMD:klyapoff(playerid)
{
	if(!GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_GREY, "У Вас нету кляпа");
	if(PlayerTied{playerid} > false)  return SCM(playerid, COLOR_GREY, "Вы связаны!");
	DeletePVar(playerid, "gag");
	format(stringer1,90, "%s выплевывает кляп из рта.", PlayerInfo[playerid][pNames]);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	return 1;
}
CMD:untie(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /untie [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if (!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко от этого человека!");
	if(PlayerTied{playerid} > false)  return SendClientMessage(playerid, COLOR_GREY, "Вы связаны!");
	if(PlayerTied{params[0]} == false)  return SendClientMessage(playerid, COLOR_GREY, "Игрок не связан!");
	if(params[0] == playerid)  return SendClientMessage(playerid, COLOR_GREY, "Нельзя связывать себя!");
	if(!PlayerTied{params[0]}) return SendClientMessage(playerid, COLOR_GREY, "Этот человек не связан!");
	format(stringer,SMALL_SIZE, "%s развязал %s", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
	ProxDetector(30.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	TogglePlayerControllable(params[0], 1);
	PlayerTied{params[0]} = false;
	return 1;
}
CMD:hp(playerid)
{
	if(PlayerInfo[playerid][bAdmin] < 3 && PlayerInfo[playerid][pHelper] < 3) return 1;
	if(IsPlayerInAnyVehicle(playerid))
	{
		RepairVehicle(GetPlayerVehicleID(playerid));
		VehInfo[GetPlayerVehicleID(playerid)][vFuel] = 300;
		PlayerInfo[playerid][pFuelcar] = 300;
		SCM(playerid, COLOR_WHITE, "Машина отремонтирована!");
		SetPlayerHealthAC(playerid, 100.0);
	}
	PlayerInfo[playerid][pHealthPlayer] = 100;
	SetPlayerHealthAC(playerid, 100.0);
	return 1;
}
CMD:usekey(playerid)
{
	if(!IsAGang(playerid)) return 1;
	if(PlayerInfo[playerid][pJailed] != 1) return SCM(playerid, COLOR_GRAD1, "Вы не в тюрьме!");
	if(keys[playerid] <=0) return  SCM(playerid, COLOR_GRAD1, "У Вас нет ключа от тюрьмы!");
	keys[playerid] -=1;
	SetPlayerInterior(playerid, 0);
	PlayerInfo[playerid][pInt] = 0;
	SetPlayerPosEx(playerid,1553.4962,-1675.2714,16.1953);
	SetPlayerFacingAngle(playerid, 95.0636);
	SCM(playerid, COLOR_YELLOW, "::: Вы совершили побег из тюрьмы");
	return 1;
}
CMD:keys(playerid)
{
	if(!IsAGang(playerid)) return 1;
	if(keys[playerid] <=0) return  SCM(playerid, COLOR_GRAD1, "У Вас нет ключей от тюрьмы!");
	format(stringer1,30, "У Вас %d ключей", keys[playerid]);
	SCM(playerid, COLOR_YELLOW, stringer1);
	format(stringer1,30, "%s достаёт ключи", PlayerInfo[playerid][pNames]);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	return 1;
}
CMD:showskill(playerid, params[])
{
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /showskill [ID]");
	if(!ProxDetectorS(1.5, playerid, params[0])) return SCM(playerid, COLOR_GRAD1, "Вы слишком далеко от игрока.");
	format(stringer1,260, "{FFFFFF}SDPistol:\t\t%d процентов.\nDesertEagle:\t\t%d процентов.\nShotGun:\t\t%d процентов.\nMP5:\t\t\t%d процентов.\nAK47:\t\t\t%d процентов.\nM4:\t\t\t%d процентов.",
	PlayerInfo[playerid][pSkills][0],PlayerInfo[playerid][pSkills][1],PlayerInfo[playerid][pSkills][2],PlayerInfo[playerid][pSkills][3],PlayerInfo[playerid][pSkills][4],PlayerInfo[playerid][pSkills][5]);
	SPD(params[0],0000,DIALOG_STYLE_MSGBOX,"Skill",stringer1,"Принять","");
	return 1;
}
CMD:givecopkeys(playerid, params[])
{
	if(PlayerInfo[playerid][pMRInections] != 1 && PlayerInfo[playerid][pMRInections] != 2 && PlayerInfo[playerid][pMRInections] != 10 && PlayerInfo[playerid][pMRInections] != 21) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"d",params[0])) return 	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/givecopkeys [ид]");
	if(!ProxDetectorS(1.5, playerid, params[0])) return SCM(playerid, COLOR_GRAD1, "Вы слишком далеко от игрока.");
	if(!IsPlayerConnected(params[0])) return 1;
	keys[params[0]] = 1;
	format(stringer1,126, "Офицер %s выдал ключи от полицейского участка %s", PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	return 1;
}
CMD:heal(playerid, params[])
{
	if(PlayerInfo[playerid][pMRInections] != 4) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"d",params[0])) return    SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/heal [id]");
	if(!ProxDetectorS(1.5, playerid, params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы слишком далеко от игрока.");
	if(params[0] == INVALID_PLAYER_ID) return 1;
	if(params[0] == playerid) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не можете вылечить себя!");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!vehicleid && !pTemp[playerid][pInHospital]) return SendClientMessage(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Вы должны быть в карете скорой помощи либо в больнице");
	format(stringer1,126, "{FFFFFF}Вы предложили вылечить %s за %d вирт.",PlayerInfo[params[0]][pNames],healpric);
	SCM(playerid, 0x6ab1ffaa, stringer1);
	new healdialog[50];
	format(healdialog,sizeof(healdialog), "{FFFFFF}Желаете вылечиться за %d вирт?",healpric);
	SPD(params[0],5522,DIALOG_STYLE_MSGBOX,"{FF6F00}Лечение", healdialog, "Да", "Нет");
	SetPVarInt(params[0], "HealOffer", playerid);
	SetPVarInt(params[0], "HealPrice", healpric);
	return 1;
}
CMD:sethp(playerid, params[])
{
	if(sscanf(params,"dd",params[0],params[1])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/sethp [id] [уровень hp]");
	if(PlayerInfo[playerid][bAdmin] < 7) return 1;
	if(!IsPlayerConnected(params[0])) return 1;
	PlayerInfo[params[0]][pHealthPlayer] = params[1];
	if(antiwarn[playerid] >= 30 && anti{playerid} == false) anti{playerid} = true, antiwarn[playerid] = 300;
	SetPlayerHealthAC(params[0], params[1]);
	SCM(playerid, COLOR_WHITE, "Уровень hp игроку установлен");
	format(stringer, MAX_STR, "Администратор: %s установил уровень HP игроку %s на %d", PlayerInfo[playerid][pNames], PlayerInfo[params[0]][pNames], params[1]);
	ABroadCast(COLOR_GREY, stringer, 1);
	return 1;
}
CMD:veh(playerid, params[])
{
    if (PlayerInfo[playerid][bAdmin] < 10) return  SCM(playerid, COLOR_GRAD1, "Вам недоступна данная функция");
    if(sscanf(params,"iii", params[0], params[1], params[2])) return SendClientMessage(playerid, -1, "Используйте: /veh [ид] [цвет 1] [цвет 1]");
    if(params[0] < 0x190 || params[0] > 0x263) return SendClientMessage(playerid, -1, "Номер машины не может быть меньше 400 и больше чем 611!");
    if((params[1] < 0x0 || params[1] > 0x7E) || (params[2] < 0x0 || params[2] > 0x7E)) return SendClientMessage(playerid, -1, "Номер цвета не может быть меньше 0 и больше 126!");
    createdvehs ++ ;
    new Float:mesto[3];
    GetPlayerPos(playerid, mesto[0], mesto[1], mesto[2]);
    createdvehicles[createdvehs] = Forveh_AddStaticVehicle(params[0],  mesto[0] + 2, mesto[1], mesto[2], 0.0, params[1], params[2]);
    vehcreat[createdvehicles[createdvehs]] = true;
    new mes [ 124 ] ;
    format(mes, 124, "Администратор: %s[%d] создал автомобиль %d", PlayerInfo[playerid][pNames], playerid, params[0]);
    ABroadCast(COLOR_GREY, mes, 1);
    return 1;
}
CMD:agivevip(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] != 13) return 1;
	if(sscanf(params,"ddd",params[0],params[1],params[2])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/agivevip [ид] [уровень вип] [кол-во дней]");
	if(!IsPlayerConnected(params[0])) return 1;
	switch(params[1])
	{
		case 1: SCM(params[0], COLOR_WHITE, "Поздравляем, Вы получили от администрации {FFA500}Bronze VIP");
		case 2: SCM(params[0], COLOR_WHITE, "Поздравляем, Вы получили от администрации {FFA500}Silver VIP");
		case 3: SCM(params[0], COLOR_WHITE, "Поздравляем, Вы получили от администрации {FFA500}Gold VIP");
		default: SCM(params[0], COLOR_WHITE, "Администратор забрал у Вас VIP Аккаунт");
	}
	if(!params[2])
	{
		PlayerInfo[params[0]][pDRInections] = 0;
		PlayerInfo[params[0]][pVipTime] = 0;
		PlayerInfo[params[0]][pVipData] = 0;
		SCM(playerid, COLOR_WHITE, "- Вы забрали у игрока VIP Статус.");
	}
	else
	{
		new Date[3];
		getdate(Date[0], Date[1], Date[2]);
		new curdate = getdate(Date[0],Date[1],Date[2]);
		PlayerInfo[params[0]][pDRInections] = params[1];
		PlayerInfo[params[0]][pVipTime] = curdate+params[2];
		PlayerInfo[params[0]][pVipData] = curdate;
		SCM(playerid, COLOR_WHITE, "- Вы выдали игроку VIP Статус.");
	}
	return 1;
}
CMD:viphelp(playerid)
{
	if(PlayerInfo[playerid][pDRInections] < 0) return SCM(playerid, COLOR_WHITE, "(( Вы не имеете VIP аккаунта! /mm - Донат ))");
	SCM(playerid, 0xCD7F32FF, ":: Bronze VIP ::  Нету доступных команд ");
	SCM(playerid, 0xC0C0C0FF, ":: Silver VIP ::  /togphone - Выключить телефон | ");
	SCM(playerid, 0xFFD700FF, ":: Gold VIP ::  /fstyle - Стиль боя | /vipuninvite - Уволится из фракции | ");
	SCM(playerid, COLOR_LIGHTRED, " - Тут описаны только команды. Подробнее можно узнать на форуме.");
	return 1;
}
CMD:vipuninvite(playerid)
{
	if(PlayerInfo[playerid][pMRInections] < 0) return SCM(playerid, COLOR_GREY, "Вы не состоите в организации");
	if(PlayerInfo[playerid][pDRInections] != 3) return SCM(playerid,COLOR_GRAD1,"У Вас нет статуса {FFA500}Gold VIP");
	if(PlayerInfo[playerid][pLRInections] > 0) return SCM(playerid,COLOR_GRAD1,"Лидер не может уволится по С/Ж.");
	if(StartRabWork(playerid))
	{
		SCM(playerid,COLOR_BLUE,"Ваш рабочий день завершен!");
		SetPVarInt(playerid, "StartRabWork", 0);
	}
	format(stringer, 144, "{FFFFFF}Вы состоите в организации ''%s''.\nВы хотите покинуть ее по собственному желанию.\nПри этом, все Ваши достижения останутся позади.\n\nВы уверены что хотите уволится из организации?",
	GetMember[PlayerInfo[playerid][pMRInections]-1]);
	ShowPlayerDialog(playerid, 9191, DIALOG_STYLE_MSGBOX, "{FF6F00}Предупреждение", stringer, "Да","Нет");
	return 1;
}
ALTX:licenses("/mylic");
CMD:licenses(playerid)
{
	SCMF(playerid, 0xC0E1EEFF, "Водительские права: %s",(PlayerInfo[playerid][pLicenses][0] ? ("Есть") : ("Отсутствует")));
	SCMF(playerid, 0xC0E1EEFF, "Лицензия пилоты: %s",(PlayerInfo[playerid][pLicenses][1] ? ("Есть") : ("Отсутствует")));
	SCMF(playerid, 0xC0E1EEFF, "Лицензия на катера: %s",(PlayerInfo[playerid][pLicenses][2] ? ("Есть") : ("Отсутствует")));
	SCMF(playerid, 0xC0E1EEFF, "Лицензия на оружие: %s",(PlayerInfo[playerid][pLicenses][3] ? ("Есть") : ("Отсутствует")));
	MeAction(playerid, "смотрит свои лицензии");
	return 1;
}
ALTX:showlicenses("/sl");
CMD:showlicenses(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return  SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/showlicenses [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if (!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Человек не рядом с вами!");
	SCM(params[0],0x0AA8DAFF,"-------======[ LICENSES ]======-------");
	SCMF(params[0], 0xC0E1EEFF, "Водительские права: %s",(PlayerInfo[playerid][pLicenses][0] ? ("Есть") : ("Отсутствует")));
	SCMF(params[0], 0xC0E1EEFF, "Лицензия пилоты: %s",(PlayerInfo[playerid][pLicenses][1] ? ("Есть") : ("Отсутствует")));
	SCMF(params[0], 0xC0E1EEFF, "Лицензия на катера: %s",(PlayerInfo[playerid][pLicenses][2] ? ("Есть") : ("Отсутствует")));
	SCMF(params[0], 0xC0E1EEFF, "Лицензия на оружие: %s",(PlayerInfo[playerid][pLicenses][3] ? ("Есть") : ("Отсутствует")));
	SCM(params[0],0x0AA8DAFF,"===============================");
	format(stringer1,64, "%s показал(-а) свои лицензии %s'у",PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	format(stringer1,64, "показал(-а) свои лицензии %s'у",PlayerInfo[params[0]][pNames]);
	SetPlayerChatBubble(playerid,stringer1,0xDD90FFFF,30.0,10000);
	return 1;
}
CMD:divorce(playerid)
{
	if(PlayerInfo[playerid][pMarried] < 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не женаты (замужем) !");
	SCM(playerid, COLOR_GREY, "Вы развелись, ваш(а) супруг(а) должна сделать тоже самое");
	PlayerInfo[playerid][pMarried] = 0;
	return 1;
}
CMD:propose(playerid, params[])
{
	if(PlayerInfo[playerid][pCash] < 100000) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вам нужно 100.000$ на свадьбу!");
	if(PlayerInfo[playerid][pMarried] > 0) return   SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы уже женаты/замужем!");
	if(sscanf(params,"d",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /propose [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if(PlayerInfo[params[0]][pMarried] > 0) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек уже состоит в браке!");
	if (!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Человек не рядом с вами!");
	if(params[0] == playerid) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы указали свой ID");
	format(stringer1,64, "Вы предложили руку и сердце %s.", PlayerInfo[params[0]][pNames]);
	SCM(playerid, 0x6ab1ffaa, stringer1);
	format(stringer1,126, "%s предлагает вам руку и сердце. (( Введите: /accept marriage, чтобы принять )).", PlayerInfo[playerid][pNames]);
	SCM(params[0], COLOR_BLUE, stringer1);
	SetPVarInt(params[0], "ProposeOffer", playerid);
	return 1;
}
CMD:witness(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /witness [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if (!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Человек не рядом с вами!");
	if(params[0] == playerid) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы указали свой ID");
	format(stringer1,126, "Вы преложили %s быть свидетелем на вашей свадьбе.", PlayerInfo[params[0]][pNames]);
	SCM(playerid, COLOR_BLUE, stringer1);
	format(stringer1,126, "%s предлагает Вам быть свидетелем на его/её свадьбе.(( Введите /accept witness, чтобы принять )).", PlayerInfo[playerid][pNames]);
	SCM(params[0], COLOR_BLUE, stringer1);
	SetPVarInt(params[0], "MarryWitnessOffer", playerid);
	return 1;
}
CMD:ram(playerid)
{
	if(!IsACop(playerid) && !IsAArm(playerid) && PlayerInfo[playerid][bAdmin] < 3) return 1;
	if(StartRabWork(playerid) && !GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	for(new i = 0; i < sizeof(HouseInfo); i++)
	{
		if (!PlayerToPoint(3, playerid,HouseInfo[i][hEnter][0], HouseInfo[i][hEnter][1], HouseInfo[i][hEnter][2])) continue;
		SetPlayerVirtualWorld(playerid,i+50);
		SetPlayerInterior(playerid,HouseInfo[i][hInt]);
		SetPlayerPosEx(playerid,HouseInfo[i][hExit][0],HouseInfo[i][hExit][1],HouseInfo[i][hExit][2]);
		PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
		PlayerInfo[playerid][pLocal] = i;
	}
	return 1;
}
CMD:take(playerid)
{
    if(PlayerTied{playerid} > false)  return SCM(playerid, COLOR_GREY, "Вы связаны!");
	if(!IsACop(playerid)) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	SPD(playerid, 7779, DIALOG_STYLE_LIST, "{FF6F00}Отобрать лицензии:", "{FFFFFF}- Отобрать водительские права\n- Отобрать лицензию на полёты \n- Отобрать лицензию на вождение водного транспорта\n- Отобрать лицензия на оружие\n- Наркотики\n- Оружие\n- Материалы", "Скрыть", "Отмена");
	return 1;
}
CMD:spawnchange(playerid)
{
	if(GetPVarInt(playerid, "pSpawnFlood") > gettime()) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Использовать эту команду можно раз в 5 секунд.");
	if(!PlayerInfo[playerid][pSpawn])
	{
		PlayerInfo[playerid][pSpawn] = 1;
		UpdatePlayerData(playerid,"pSpawn",PlayerInfo[playerid][pSpawn]);
		if(PlayerInfo[playerid][pMRInections] == 11) SCM(playerid, COLOR_GREY, "Теперь вы будуте возраждаться в автошколе!");
		else SCM(playerid, COLOR_GREY, "Теперь вы будете возраждаться дома!");
	}
	else if(PlayerInfo[playerid][pSpawn])
	{
		PlayerInfo[playerid][pSpawn] = 0;
		UpdatePlayerData(playerid,"pSpawn",PlayerInfo[playerid][pSpawn]);
		SCM(playerid, COLOR_GREY, "Теперь вы будете возраждаться в обычном месте");
	}
	SetPVarInt(playerid, "pSpawnFlood",gettime()+5);
	return 1;
}
CMD:home(playerid)
{
	if(PlayerInfo[playerid][pHouse] == -1) return 1;
	SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pHouse]][hEnter][0], HouseInfo[PlayerInfo[playerid][pHouse]][hEnter][1], HouseInfo[PlayerInfo[playerid][pHouse]][hEnter][2], 4.0);
	SCM(playerid, COLOR_WHITE, "Ваш дом обозначен на карте красной меткой");
	SetPVarInt(playerid, "playerisGPS", 1);
	DeletePVar(playerid, "gps_pic");
	return 1;
}
CMD:clear(playerid, params[])
{
    if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"d",params[0])) return  SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/clear [id]");
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете снять розыск себе!");
	if(PlayerInfo[playerid][pMRInections] == 1 &&  PlayerInfo[playerid][pRKInections] >= 2)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596) return SCM(playerid, COLOR_GRAD1, "Вы не в полицейской машине");
		format(stringer1,64, "Вы сняли уровни розыска у %s.", PlayerInfo[params[0]][pNames]);
		SCM(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1,64, "Офицер %s зашёл в базу данных", PlayerInfo[playerid][pNames]);
		ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
		format(stringer1,64, "Офицер %s снял с Вас уровни розыска.", PlayerInfo[playerid][pNames]);
		SCM(params[0], 0x6ab1ffaa, stringer1);
		WantedPoints[params[0]] = 0;
		WantedLevel[params[0]] = 0;
		PlayerInfo[params[0]][pWanted] =0;
		SetPlayerWantedLevel(params[0], 0);
		UpdatePlayerData(params[0], "pWanted", PlayerInfo[params[0]][pWanted]);
	}
	else  if(PlayerInfo[playerid][pMRInections] == 10 &&  PlayerInfo[playerid][pRKInections] >= 2)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 597) return SCM(playerid, COLOR_GRAD1, "Вы не в полицейской машине");
		format(stringer1,64, "Вы сняли уровни розыска у %s.", PlayerInfo[params[0]][pNames]);
		SCM(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1,64, "Офицер %s зашёл в базу данных", PlayerInfo[playerid][pNames]);
		ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
		format(stringer1,64, "Офицер %s снял с Вас уровни розыска.", PlayerInfo[playerid][pNames]);
		SCM(params[0], 0x6ab1ffaa, stringer1);
		WantedPoints[params[0]] = 0;
		WantedLevel[params[0]] = 0;
		SetPlayerWantedLevel(params[0], 0);
	}
	else if(PlayerInfo[playerid][pMRInections] == 21 &&  PlayerInfo[playerid][pRKInections] >= 2)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 598) return SCM(playerid, COLOR_GRAD1, "Вы не в полицейской машине");
		format(stringer1,64, "Вы сняли уровни розыска у %s.", PlayerInfo[params[0]][pNames]);
		SCM(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1,64, "Офицер %s зашёл в базу данных", PlayerInfo[playerid][pNames]);
		ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
		format(stringer1,64, "Офицер %s снял с Вас уровни розыска.", PlayerInfo[playerid][pNames]);
		SCM(params[0], 0x6ab1ffaa, stringer1);
		WantedPoints[params[0]] = 0;
		WantedLevel[params[0]] = 0;
		SetPlayerWantedLevel(params[0], 0);
	}
	else if(PlayerInfo[playerid][pMRInections] == 2 &&  PlayerInfo[playerid][pRKInections] >= 2)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 490) return SCM(playerid, COLOR_GRAD1, "Вы не в машине FBI");
		format(stringer1,64, "Вы сняли уровни розыска у %s.", PlayerInfo[params[0]][pNames]);
		SCM(playerid, 0x6ab1ffaa, stringer1);
		format(stringer1,64, "Агент ФБР %s зашёл в базу данных", PlayerInfo[playerid][pNames]);
		ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
		format(stringer1,64, "Агент ФБР %s снял с Вас уровни розыска.", PlayerInfo[playerid][pNames]);
		SCM(params[0], 0x6ab1ffaa, stringer1);
		WantedPoints[params[0]] = 0;
		WantedLevel[params[0]] = 0;
		SetPlayerWantedLevel(params[0], 0);
	}
	return 1;
}
CMD:spveh(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 4) return 1;
	if(sscanf(params,"d",params[0])) return SCM(playerid,COLOR_WHITE," Введите: /spveh [радиус]");
	if(params[0] < 1 || params[0] > 300) return SCM(playerid, COLOR_GREY, "Запрещено ниже 1 и больше 300");
	new Float:car_x,Float:car_y,Float:car_z;
    forveh(cars)
	if(GetVehicleModel(cars) > 399) { if(GetVehicleModel(cars) == 508) continue; GetVehiclePos(cars,car_x,car_y,car_z); if(IsPlayerInRangeOfPoint(playerid,params[0],car_x,car_y,car_z)) { SetVehicleToRespawn(cars); } }
	format(stringer1,126, "Администратор %s зареспавнил весь транспорт рядом с ним.",PlayerInfo[playerid][pNames]);
	ABroadCast(COLOR_LIGHTRED,stringer1,1);
	return 1;
}
CMD:arrest(playerid, params[])
{
	if(!IsACop(playerid)) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(!PlayerToPoint(6.0,playerid,268.3327,77.8972,1001.0391) && !PlayerToPoint(6.0, playerid, 218.2263,114.9286,999.0156) && !PlayerToPoint(6.0, playerid, 198.3940,157.9389,1003.0234)) return 1;
	if(sscanf(params, "d",params[0])) return	SendClientMessage(playerid, -1, "• {FFC800}[Подсказка] {ffffff}/arrest [кол-во минут]");
	if(params[0] < 10 || params[0] > 40) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Количество минут от 10 до 40");
	new suspect = GetClosestPlayer(playerid);
	if(!IsPlayerConnected(suspect)) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок не найден");
	if(!ProxDetectorS(4.0, playerid, suspect)) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Рядом с вами никого нет!");
	if(PlayerInfo[suspect][pWanted] < 1) return  SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек должен иметь хотя бы один уровень розыска!");
	SCMF(suspect,0x6ab1ffaa, "Вас посадил в тюрьму %s на %d секунд", PlayerInfo[playerid][pNames],  params[0]*60);
	SCMF(playerid,0x6ab1ffaa, "Вы посадили в тюрьму %s на %d секунд", PlayerInfo[suspect][pNames],  params[0]*60);
	ResetPlayerWeapons(suspect);
	SetPlayerSpecialAction(suspect,SPECIAL_ACTION_NONE);
	TogglePlayerControllable(suspect, 1);
	DeletePVar(suspect, "PlayerCuffed");
	SetPlayerWantedLevel(suspect, 0);
	PlayerInfo[suspect][pJailTime] = params[0]*60;
	PlayerInfo[suspect][pWanted] = 0;
	PlayerInfo[suspect][pZakonp] --;
	if(PlayerToPoint(6.0,playerid,268.3327,77.8972,1001.0391))
	{
		PlayerInfo[suspect][pMestoJail] = 1;
		SetPlayerInterior(suspect, 6);
		PlayerInfo[suspect][pInt] = 6;
		SetPlayerPosEx(suspect,264.1425,77.4712,1001.0391);
		SetPlayerFacingAngle(suspect, 263.0160);
	}
	else if(PlayerToPoint(6.0, playerid, 218.2263,114.9286,999.0156))
	{
		PlayerInfo[suspect][pMestoJail] = 2;
		SetPlayerInterior(playerid, 10);
		PlayerInfo[playerid][pInt] = 10;
		SetPlayerPosEx(playerid,219.5400,109.9767,999.0156);
		SetPlayerFacingAngle(playerid, 1.0000);
	}
	else if(PlayerToPoint(6.0, playerid, 198.3940,157.9389,1003.0234))
	{
		PlayerInfo[suspect][pMestoJail] = 3;
		SetPlayerInterior(playerid, 3);
		PlayerInfo[playerid][pInt] = 3;
		SetPlayerPosEx(playerid,198.3642,161.8103,1003.0300);
		SetPlayerFacingAngle(playerid, 1.0000);
	}
	PlayerInfo[suspect][pJailed] = 1;
	UpdatePlayerData(suspect, "pJailed", PlayerInfo[suspect][pJailed]), UpdatePlayerData(suspect, "pMestoJail", PlayerInfo[suspect][pMestoJail]);
	return 1;
}
CMD:loadbenz(playerid)
{
	if(PlayerInfo[playerid][pJob] != 5 && PlayerInfo[playerid][pMRInections] != 0) return 1;
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) return SCM(playerid,COLOR_GREY,"Вы не в бензовозе!");
	SCM(playerid, COLOR_GREEN, "Загрузите бензит, и цепляйте прицеп!");
	SetPlayerCheckpoint(playerid,-1053.1475,-649.7113,32.0078,5);
	MatsArmyCar[playerid]=2525;
	DeletePVar(playerid, "gps_pic");
	return 1;
}
CMD:load(playerid)
{
	if(PlayerInfo[playerid][pJob] != 5 && PlayerInfo[playerid][pMRInections] != 0) return 1;
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 440) return SCM(playerid,COLOR_GREY,"Вы не в машине развозки продуктов!");
	SCM(playerid, COLOR_GREEN, "Езжайте на склад, чтобы загрузиться продуктами!");
	SetPlayerCheckpoint(playerid,-56.7245,-224.1406,5.4297,5);
	MatsArmyCar[playerid]=1000;
	DeletePVar(playerid, "gps_pic");
	return 1;
}
CMD:frisk(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не член Полиции/ФБР/Армии!");
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"d",params[0])) return    SCM(playerid, COLOR_WHITE, "Введите: /frisk [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Человек не найден!");
	if (!ProxDetectorS(3.0, playerid, params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Этого игрока рядом с вами нет !");
	if(params[0] == playerid) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не можете обыскать себя!");
	new text1[20], text2[20];
	if(PlayerInfo[params[0]][pDrugs] > 0) { text1 = "| Наркотики."; } else { text1 = "| Пустой карман."; }
	if(PlayerInfo[params[0]][pMats] > 0) { text2 = "| Материалы."; } else { text2 = "| Пустой карман."; }
	SCMF(playerid, COLOR_WHITE, ":::: Вещи %s ::::", PlayerInfo[params[0]][pNames]);
	SCMF(playerid, COLOR_GREY, "%s.", text1);
	SCMF(playerid, COLOR_GREY, "%s.", text2);
	format(stringer1,64, "%s обыскал %s", PlayerInfo[playerid][pNames] ,PlayerInfo[params[0]][pNames]);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	return 1;
}
CMD:wanted(playerid)
{
	if(!IsACop(playerid)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не коп / FBI / National Guard.");
	SCM(playerid, COLOR_WHITE, "Внимание, розыскиваются:");
	foreach(new i: Player)
	{
		if(PlayerInfo[i][pWanted] < 1) continue;
		SCMF(playerid, COLOR_WHITE, "Имя: {6495ED}%s {FFFFFF}ID: {6495ED}%d {FFFFFF}Уровень розыска: {6495ED}%d", PlayerInfo[i][pNames],i,PlayerInfo[i][pWanted]);
	}
	return 1;
}
CMD:patrul(playerid)
{
	if((PlayerInfo[playerid][pMRInections] != 1 && PlayerInfo[playerid][pMRInections] != 2 && PlayerInfo[playerid][pMRInections] != 10 && PlayerInfo[playerid][pMRInections] != 21) && PlayerInfo[playerid][pRKInections] < 3) return SCM(playerid, -1,"• {AC0000}[Ошибка] {ffffff}Вы не состоите в полиции или FBI.");
	if(GetPVarInt(playerid, "Patrul"))
	{
		DeletePVar(playerid, "Patrul");
		patrul_id[playerid] = -1;
		KillTimer(time_wanted[playerid]);
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid,COLOR_GREEN,"Преследование окончено.");
		return 1;
	}
	WantedList(playerid);
	return 1;
}
ALTX:pickup("/p");
CMD:pickup(playerid)
{
	if(GetPVarInt(playerid, "Mobile") != 999) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы уже разговариваете...");
	foreach(new i: Player)
	{
		if(GetPVarInt(i, "Mobile") != playerid) continue;
		SetPVarInt(playerid, "Mobile", i);
		SCM(i,  COLOR_GRAD2, "Поднял(а) трубку телефона.");
		if(!GetPVarInt(playerid, "PlayerCuffed")) {     SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE); }
		MeAction(playerid,"ответил на звонок", 5.0);
		PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);

	}
	return 1;
}
ALTX:hangup("/h");
CMD:hangup(playerid)
{
	new caller = GetPVarInt(playerid, "Mobile");
	if(!IsPlayerConnected(caller)) return 1;
	if(caller != 999)
	{
		SCM(caller,  COLOR_GRAD2, "Абонент положил(a) трубку");
		SetPlayerSpecialAction(caller,SPECIAL_ACTION_STOPUSECELLPHONE);
		CellTime[caller] = false;
		CellTime[playerid] = false;
		SetPVarInt(caller, "Mobile", 999);
		SCM(playerid,  COLOR_GRAD2, "Вы положили трубку.");
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		format(stringer1,64, "%s положил трубку", PlayerInfo[playerid][pNames]);
		ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	}
	SetPVarInt(playerid, "Mobile", 999);
	SetPVarInt(caller, "Mobile", 999);
	CellTime[playerid] = false;
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	SetPVarInt(playerid, "TalkingLive", 999);
	SetPVarInt(playerid, "TalkingLivels", 999);
	DeletePVar(playerid, "phone_call");
	SetPVarInt(playerid, "Tel", 999);
	return 1;
}
CMD:tpcor(playerid,params[])
{
	if(PlayerInfo[playerid][bAdmin] < 13) return 1;
	new Float:x,Float:z,Float:y;
	if(sscanf(params,"fff",x,y,z)) return SCM(playerid,-1,"• {FFC800}[Подсказка] {ffffff}Используйте /tpcor [x] [y] [z]");
	SetPlayerPosEx(playerid,Float:x,Float:y,Float:z);
	return 1;
}
ALT:re:recon;
CMD:re(playerid,params[])
{
	if(PlayerInfo[playerid][bAdmin] < 1) return 1;
	if(strcmp(params[0],"off",true) == 0)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) return TogglePlayerSpectating(playerid,false);
	}
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /re(con) [ид игрока]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(PlayerInfo[params[0]][bAdmin] == 13 && PlayerInfo[playerid][bAdmin] < 13) return SCM(playerid, -1,"• {AC0000}[Ошибка] {ffffff}Вы не можете следить за администратором 13-го уровня.");
	PlayerSpects(playerid,params[0]);
	return 1;
}
CMD:startbase(playerid)
{
	if(!PlayerInfo[playerid][pLogin]) return 1;
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3,true) || !strcmp(PlayerInfo[playerid][pNames], "No",true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
	{
	    if(BaseStarting[1] == 1 || BaseStarting[1] == 3) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Бейсджампинг уже идет.");
	    BaseStarting[1] = 3;
		BaseStarting[0] = 300;
		SendClientMessageToAll(COLOR_LIGHTBLUE,"Внимание! Через 5 минут пройдут соревнования по {FFFFFF}Бейсджампингу. | Максимальное количество участников: 30 человек.");
		SendClientMessageToAll(COLOR_LIGHTBLUE,"Внимание! Желающим прибыть в центр {FFFFFF}г.Las-Venturas \"/gps -> Развлечения -> Бейсджампинг\"");
	}
	return 1;
}
CMD:startrace(playerid, params[]) //<RaceStarted:No>
{
	if(!PlayerInfo[playerid][pLogin]) return 1;
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3,true) || !strcmp(PlayerInfo[playerid][pNames], "No",true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
	{
		if(RaceStarting[2] == 1 || RaceStarting[2] == 3) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Гоночные мероприятия уже начались");
		RaceStarting[2] = 3;
		RaceStarting[0] = 300;
		SendClientMessageToAll(COLOR_YELLOW,"Внимание! Через 5 минут пройдут {FFFFFF}гоночные мероприятия. | Максимальное количество участников: 40 человек.");
		SendClientMessageToAll(COLOR_YELLOW,"Внимание! Желающим прибыть в центр {FFFFFF}г.Los-Santos \"/gps -> Развлечения -> Гонки\"");
		switch(random(4))
		{
		    case 0: SendClientMessageToAll(COLOR_YELLOW,"Карта: {FFFFFF}Wolking Street Race."), typeRace = 0;
		    case 1: SendClientMessageToAll(COLOR_YELLOW,"Карта: {FFFFFF}Las-Venturas / San-Fierro Race"), typeRace = 1;
		    case 2: SendClientMessageToAll(COLOR_YELLOW,"Карта: {FFFFFF}Las-Venturas / San-Fierro Race"), typeRace = 1;
		    case 3: SendClientMessageToAll(COLOR_YELLOW,"Карта: {FFFFFF}Wolking Street Race."), typeRace = 0;
		    default: SendClientMessageToAll(COLOR_YELLOW,"Карта: {FFFFFF}Las-Venturas / San-Fierro Race"), typeRace = 1;
		}
	}
	return 1;
}
CMD:business(playerid)
{
	if(PlayerInfo[playerid][pBusiness] == -1) return SCM(playerid, -1,"• {AC0000}[Ошибка] {ffffff}У вас нету бизнеса.");
	SPD(playerid,dBusiness,DIALOG_STYLE_LIST,"{FF6F00}Управление бизнесом","1.Статистика\n2.Открыть / закрыть\n3.Продать бизнес\n4.Установить цены\n5.Поставить маркер у входа в бизнес\n6.Касса","Далее","Отмена");
	return 1;
}
CMD:adminpanel(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 13) return 1;
	SPD(playerid, 333, DIALOG_STYLE_LIST, "{FF6F00}ADMIN-PANEL", "{FFFFFF}Администрация Online\nИнформация о администраторе", "Далее", "Выход");
	return 1;
}

CMD:ahelp(playerid)
{
	if(PlayerInfo[playerid][bAdmin] < 1) return 1;
	if(PlayerInfo[playerid][bAdmin] >= 1) SCM(playerid, COLOR_YELLOW, "Администратор 1lvl: /gg /mp /skin /re /pm /admin(/a) /prison /mute /alogin /tp /ap /gotoderby");
	if(PlayerInfo[playerid][bAdmin] >= 2) SCM(playerid, COLOR_YELLOW, "Администратор 2lvl: /mpwin /getstats /fstyle /chat /goto /gethere /gm /sp /freeze /unfreeze /alock");
	if(PlayerInfo[playerid][bAdmin] >= 3) SCM(playerid, COLOR_YELLOW, "Администратор 3lvl: /hp /slap /ban /warehouse /ram /mark /gotomark /o /fuelcars");
	if(PlayerInfo[playerid][bAdmin] >= 4) SCM(playerid, COLOR_YELLOW, "Администратор 4lvl: /delveh /spveh /getip");
	if(PlayerInfo[playerid][bAdmin] >= 5) SCM(playerid, COLOR_YELLOW, "Администратор 5lvl: /uval /givegun /templeader /getban /unbanip /unban /geton");
	if(PlayerInfo[playerid][bAdmin] >= 6) SCM(playerid, COLOR_YELLOW, "Администратор 6lvl: /balance /unwarn /pgetip /agetip /agetipreg /aad");
	if(PlayerInfo[playerid][bAdmin] >= 7) SCM(playerid, COLOR_YELLOW, "Администратор 7lvl: /setskin /sethp");
	if(PlayerInfo[playerid][bAdmin] >= 8) SCM(playerid, COLOR_YELLOW, "Администратор 8lvl: /sban /getschet /clear /money");
	if(PlayerInfo[playerid][bAdmin] >= 9) SCM(playerid, COLOR_YELLOW, "Администратор 9lvl: /house");
	if(PlayerInfo[playerid][bAdmin] >= 10) SCM(playerid, COLOR_YELLOW, "Администратор 10lvl: /offwarn /object /iban /veh");
	if(PlayerInfo[playerid][bAdmin] >= 11) SCM(playerid, COLOR_YELLOW, "Администратор 11lvl: /offban /banip /gzcolor /setskill");
	if(PlayerInfo[playerid][bAdmin] >= 12) SCM(playerid, COLOR_YELLOW, "Администратор 12lvl: NO-ONE");
	if(PlayerInfo[playerid][bAdmin] >= 13) SCM(playerid, COLOR_YELLOW, "Администратор 13lvl #1: /diamond (Поставить на админку Online / Offline), /sniat (снять онлайн админку)");
	if(PlayerInfo[playerid][bAdmin] >= 13) SCM(playerid, COLOR_YELLOW, "Администратор 13lvl #2: /adminpanel, /addbiz, /addhotel, /mv, /redmv, /makehelper");
	return 1;
}

CMD:dice(playerid, params[])
{
	if(!PlayerToPoint(30.0,playerid,1130.7448,-1.4491,1000.6797)) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы должны находиться в казино!");
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /dice [id игрока] [ставка]");
	if(params[1] < 100000 || params[1] > 500000) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Минимальная ставка 100 000$ максимальная 500 000$");
	if(GetPVarInt(params[0], "ZapretDice")) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}В данный момент игрок не может играть!");
	if(PlayerInfo[params[0]][pCash] < params[1]) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У этого игрока нет столько денег!");
	if(dicetime > gettime()) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}В данный момент вы не можете играть");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Игрок оффлайн");
	if(!ProxDetectorS(6.0, playerid, params[0])) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Игрок не рядом с вами!");
	if(params[0] == playerid) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Вы указали свой ID");
	SCMF(playerid, 0x269BD8FF, "Вы предложили {FFFFFF}%s {"#cINFO"} бросить кости. Ставка: {FFFFFF}$%i",PlayerInfo[params[0]][pNames],params[1]);
	SCMF(params[0], COLOR_WHITE, "%s {"#cINFO"}предлагает бросить кости. Ставка: {FFFFFF}$%i. {"#cINFO"}Чтобы подтвердить нажмите {33AA33}Y{"#cINFO"}, иначе {"#cRED"}N",PlayerInfo[playerid][pNames],params[1]);
	SetPVarInt(playerid, "ZapretDice",1);
	SetPVarInt(params[0], "KostiName",playerid);
	SetPVarInt(params[0], "KostiMoney",params[1]);
	SetPVarInt(params[0], "ProverkaDice",1);
	return 1;
}

CMD:addhotel(playerid, params[])
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3,true) || !strcmp(PlayerInfo[playerid][pNames], "No",true) || !strcmp(PlayerInfo[playerid][pNames], "No", true))
	{
		addhotel++;
		new Float:pPos[3], Float:Pos[3];
		Pos[0] = 1326.4353; Pos[1] = -1071.0850; Pos[2] = 3458.9060;
		GetPlayerPos(playerid, pPos[0],pPos[1],pPos[2]);
		HotelInfo[addhotel][mID] = addhotel;
		HotelInfo[addhotel][mOwner] = 0;
		HotelInfo[addhotel][mEnter][0] = pPos[0];
		HotelInfo[addhotel][mEnter][1] = pPos[1];
		HotelInfo[addhotel][mEnter][2] = pPos[2];
		HotelInfo[addhotel][mExit][0] = Pos[0];
		HotelInfo[addhotel][mExit][1] = Pos[1];
		HotelInfo[addhotel][mExit][2] = Pos[2];
		HotelInfo[addhotel][mVW] = addhotel;
		HotelInfo[addhotel][mCar] = 405;
		HotelInfo[addhotel][mLock] = 0;
		HotelInfo[addhotel][mMoney] = 2000;
		HotelInfo[addhotel][mOplata] = 1000;
		if(HotelInfo[addhotel][mID] > 15) HotelInfo[addhotel][mVirt] = 2;
		else HotelInfo[addhotel][mVirt] = 1;
		HotelInfo[addhotel][mCarDrived] = 0;
		format(stringer, 130, "{FFFFFF}Комната в отеле - {FF7800}№%d{FFFFFF}\nКомната свободна\nНажмите на клавишу {FF7800}L-ALT{FFFFFF} чтобы заселится",HotelInfo[addhotel][mID]);
		HotelInfo[addhotel][hLabelHot] = CreateDynamic3DTextLabel(stringer, 0x317CDFFF, HotelInfo[addhotel][mEnter][0], HotelInfo[addhotel][mEnter][1], HotelInfo[addhotel][mEnter][2], 7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1,-1, 100.0);
		format(stringer, 300, "INSERT INTO `hotel` (mID,mOwned,mOwner,mX,mY,mZ,mVW,mCar,eX,eY,eZ,mLock,mMoney,mOplata,mVirt,mCarDrived) VALUES ('%d', 'None', '%d', '%f', '%f', '%f', '%d', '%d', '%f', '%f', '%f', '0', '2000', '1000', '%d', '0')", HotelInfo[addhotel][mID], HotelInfo[addhotel][mOwner], HotelInfo[addhotel][mEnter][0], HotelInfo[addhotel][mEnter][1], HotelInfo[addhotel][mEnter][2], HotelInfo[addhotel][mVW],
		HotelInfo[addhotel][mCar], HotelInfo[addhotel][mExit][0], HotelInfo[addhotel][mExit][1], HotelInfo[addhotel][mExit][2],HotelInfo[addhotel][mVirt]);
		mysql_empty(connects, stringer);
		format(stringer, 60, "Комната с номером {FF7800}%d {FFFFFF}была создана.", addhotel),SCM(playerid, COLOR_WHITE, stringer);
	}
	return 1;
}
CMD:dhouse(playerid)
{
	if(PlayerInfo[playerid][pCar][0] != 508 ) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет дома на колесах");
	new Float:X, Float:Y, Float:Z;
	GetVehiclePos(caridhouse[playerid], X, Y, Z);
	SetPlayerCheckpoint(playerid,X+3,Y+1,Z,8.0);
	SendClientMessage(playerid,-1,"• {FFC800}[Подсказка] {ffffff}Внимание. Вы установили чекпоинт. Данный чекпоинт показывает где находится ваш Дом на колесах. Езжайте туда, для того что бы его использовать.");
	SetPVarInt(playerid, "gps_pic", 5);
	return 1;
}
CMD:familypanel(playerid, params[])
{
	if(!player_family [ playerid ])return SCM(playerid, -1,"• {AC0000}[Ошибка] {ffffff}Вы не состоите в семье!");
	SPD(playerid,994,DIALOG_STYLE_LIST,"{FF6F00}Меню семьи","{FFFFFF}Информация о семье\nЧлены семьи\nЧлены семьи[{00FF7F}Онлайн{FFFFFF}]\n{8B0000}Покинуть семью{FFFFFF}\nИзменить цвет рации семьи\nИзменить национальность семьи","Выбрать","Отмена");
	return 1;
}
CMD:finvite(playerid, params[])
{
	if(!player_family [ playerid ])return SCM(playerid, -1,"• {AC0000}[Ошибка] {ffffff}Вы не состоите в семье!");
	if( sscanf(params, "u", params [0]))return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /finvite [id]" ) ;
	if(strcmp(family_info [ player_family [ playerid ] ] [ f_creator ],PlayerInfo[playerid][pNames])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не являетесь владельцем семьи");
	if(!IsPlayerConnected(params [ 0 ]))return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок не найден!" ) ;
	if(player_family[ params [ 0 ] ])return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Уже состоит в семье!" ) ;
	if(!ProxDetectorS(10.0, playerid, params[0])) return SCM(playerid, COLOR_WHITE, "• {AC0000}[Ошибка] {ffffff}Игрок, не рядом с вами !");
	new fam_id = player_family [ playerid ];
	if(family_info [ fam_id ] [ f_members_amount ] >= 30) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Максимальное количество игроков в семье - 30 чел.");
	new text_string [ 46 + 24 + 32 ];
	format(text_string,sizeof(text_string),"Вы пригласили %s присоединиться к семье %s", PlayerInfo[params[0]][pNames],family_info [ player_family [ playerid ] ] [ f_name ]);
	SendClientMessage(playerid,-1,text_string);
	new dialog_string [ 128 ];
	format(dialog_string,sizeof(dialog_string),"{FFFFFF}%s приглашает вас присоединиться к семье %s.\nВы согласны присоединиться?",PlayerInfo[playerid][pNames],family_info [ player_family [ playerid ] ] [ f_name ]);
	SPD(params [ 0 ],999,DIALOG_STYLE_MSGBOX,"{FF6F00}Приглашение в семью",dialog_string,"Да","Нет");
	SetPVarInt(params [ 0 ],"family_id",player_family [ playerid ]);
	return 1;
}
CMD:funinvite(playerid, params[])
{
	if(!player_family[playerid]) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не состоите в семье!");
	if( sscanf(params, "u", params [0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /funinvite [id]" ) ;
	if(strcmp(family_info [ player_family [ playerid ] ] [ f_creator ],PlayerInfo[playerid][pNames])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не являетесь владельцем семьи");
	if(!IsPlayerConnected(params [ 0 ])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок не найден!" ) ;
	if(player_family[ params [ 0 ] ] != player_family [ playerid ]) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок состоит не в Вашей семьей");
	player_family [ params[0] ] = GetPVarInt(params[0],"family_id");
	DeletePVar(params[0],"family_id");
	new text_string [ 128 ];
	format(text_string,sizeof(text_string),"{%s}[Family %s] %s был выгнан из семьи.",family_chat_color [ family_info [ player_family [ params[0] ]] [ f_chat_color ] ],family_info [ player_family [ params[0] ] ] [ f_name ],PlayerInfo[params[0]][pNames]);
	family_message(player_family [ playerid ],-1, text_string);
	family_info [ player_family [ params[0] ] ] [ f_online ] = 0;
	family_info [ player_family [ params[0] ] ] [ f_members_amount ] = 0;
	family_info [ player_family [ params[0] ] ] [ f_chat_color ] = 0;
	new query_string [ 128 ];
	format ( query_string, sizeof query_string, "UPDATE `family_system` SET `fam_members_amount` = '%d' WHERE `fam_id` = '%d' LIMIT 1",family_info [ player_family [ params[0] ] ] [ f_members_amount ], player_family [ params[0] ]);
	mysql_empty ( connects, query_string) ;
	UpdatePlayerData(params[0], "family", player_family[params[0]]);
	return 1;
}
CMD:k(playerid, params[])
{
	if(!player_family [ playerid ])return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не состоите в семье!");
	if( sscanf(params, "s[128]", params [0]))return SCM(playerid, -1, "Ввведите: /k [текст]" ) ;
	new text_string [ 144 ];
	format(text_string,sizeof(text_string),"{%s}[Family %s]{FFDD73}: %s: %s",family_chat_color [ family_info [ player_family [ playerid ] ] [ f_chat_color ] ],family_info [ player_family [ playerid ] ] [ f_name ],PlayerInfo[playerid][pNames],params [0]);
	family_message(player_family [ playerid ],-1, text_string);
	return 1;
}
CMD:restart(playerid, params[])
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3,true) || !strcmp(PlayerInfo[playerid][pNames], "No",true))
	{
	    ServerRestart[1] = 10;
		SendClientMessageToAll(COLOR_REDD, "< Inspire Role Play > - Перезагрузка игрового режима через 10 секунд!");
	}
	return 1;
}
CMD:tv(playerid, params[])
{
	if(PlayerInfo[playerid][pHouse] == -1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет дома.");
	if(!PlayerToPoint(2,playerid, 2484.3877,-2567.5808,2501.0859) && !GetPVarInt(playerid, "Television")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не у телевизора, он находится в гараже Вашего дома");
	SPD(playerid, 2221, DIALOG_STYLE_LIST, "{FF6F00}Местное телевиденье | Прямой эфир", "{FFFFFF}Second Life Television\nInteractive Television", "Вкл", "Выкл");
	return 1;
}

CMD:ghetto(playerid, params[])
{
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3,true) || !strcmp(PlayerInfo[playerid][pNames], "No",true)) SPD(playerid, 1193, DIALOG_STYLE_LIST, "{FF6F00}Ghetto Life", "{FFFFFF}Grove\nAztec\nBallas\nRifa\nVagos", "Принять", "Выход");
	return 1;
}
CMD:payday(playerid)
{
	if(PlayerInfo[playerid][bAdmin] != 13) return 1;
	PayDay();
	return 1;
}
CMD:selfie(playerid)
{
	if(!GetPVarInt(playerid,"Selfie"))
	{
		PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
		SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Введите /headmove , чтобы ваша голова при сельфи смотрела в камеру.");
		SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Нажмите 'F8' , чтобы сделать селфи.");
		SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Напишите '/selfie' , чтобы закончить съемку.");
		SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Чтобы сменить позицию камеры, нажимайте на клавишу 'ПРОБЕЛ'");
		GetPlayerPos(playerid,posCam[playerid][0],posCam[playerid][1],posCam[playerid][2]);
		static Float: n1X, Float: n1Y, Float:PosCam;
		GetPlayerFacingAngle(playerid, PosCam);
		n1X = posCam[playerid][0] + Radius * floatcos(180.0, degrees);
		n1Y = posCam[playerid][1] + Radius * floatsin(180.0, degrees);
		SetPlayerAttachedObject(playerid, 0, 18868, 6, 0.06, 0.01, 0.08, 180.0, 90.0, 0.0);
		SetPlayerCameraPos(playerid, n1X, n1Y, posCam[playerid][2] + Height);
		SetPlayerCameraLookAt(playerid, posCam[playerid][0],posCam[playerid][1],posCam[playerid][2]+1);
		SetPlayerFacingAngle(playerid, Degree[playerid] - 270.0);
		ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
		SetPVarInt(playerid,"Selfie",1);
		SetPVarInt(playerid,"selfie_knopka",1);
	}
	else
	{
		TogglePlayerControllable(playerid,1);
		SetCameraBehindPlayer(playerid);
		RemovePlayerAttachedObject(playerid, 0);
		ApplyAnimation(playerid, "PED", "ATM", 4.1, 0, 1, 1, 0, 1, 1);
		DeletePVar(playerid,"Selfie");
		DeletePVar(playerid,"selfie_knopka");
	}
}
CMD:hi(playerid, params[])
{
	if(GetPVarInt(playerid, "hiFlood") > gettime()) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /hi [id]");
	if(IsPlayerInAnyVehicle(playerid)) return 1;
	if(!IsPlayerConnected(params[0])) return 1;
	if(!ProxDetectorS(2.0, playerid, params[0])) return 1;
	new Float:Boshka;
	GetPlayerFacingAngle(playerid, Boshka);
	SetPlayerFacingAngle(params[0], Boshka + 180);
	format(stringer, SMALL_SIZE+10, "%s пожал(-а) руку %s", PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
	ProxDetector(10.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0);
	ApplyAnimation(params[0],"GANGS","hndshkfa",4.0,0,0,0,0,0);
	SetPVarInt(playerid, "hiFlood", gettime()+5);
	return 1;
}
CMD:flower(playerid, params[])
{
	if(GetPlayerWeapon(playerid) != 14) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет цветов!");
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /flower [id]");
	if(params[0] == playerid) return 1;
	if(!ProxDetectorS(2.0, playerid, params[0])) return 1;
	if(GetPlayerWeapon(params[0]) == 14) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У игрока уже есть цветы!");
	RemovePlayerWeapon(playerid, 14);
	GivePlayerWeaponAC(params[0], 14, 1);
	SCMF(playerid, -1, "Вы успешно передали игроку {00CC00}%s(%d){FFFFFF} Ваши цветы.", PlayerInfo[params[0]][pNames],params[0]);
	SCMF(params[0], -1, "{00CC00}%s(%d){FFFFFF} передал Вам свои цветы.", PlayerInfo[playerid][pNames], playerid);
	return 1;
}
CMD:kiss(playerid, params[])
{
	if(GetPVarInt(playerid, "kissFlood") > gettime()) return 1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /kiss [id]");
	if(IsPlayerInAnyVehicle(playerid)) return 1;
	if(!IsPlayerConnected(params[0])) return 1;
	if(!ProxDetectorS(2.0, playerid, params[0])) return 1;
	new Float:Boshka;
	GetPlayerFacingAngle(playerid, Boshka);
	SetPlayerFacingAngle(params[0], Boshka + 180);
	format(stringer, SMALL_SIZE+10, "%s поцеловал(-а) %s", PlayerInfo[playerid][pNames],PlayerInfo[params[0]][pNames]);
	ProxDetector(10.0, playerid, stringer, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 3.0, 0, 0, 0, 0, 0);
	ApplyAnimation(params[0], "KISSING", "Playa_Kiss_02", 3.0, 0, 0, 0, 0, 0);
	SetPVarInt(playerid, "kissFlood", gettime()+5);
	return 1;
}
CMD:geton(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 5) return 1;
	if(GetPVarInt(playerid, "AntiFloodGeton") > gettime()) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Не флудите!");
	new name[32];
	if(sscanf(params, "s[30]", name)) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /geton [имя_аккаунта]");
	mysql_format(connects, stringer, 128, "SELECT `Name`, `pGetonDate` FROM `accounts` WHERE `Name` = '%s'", name);
	mysql_tquery(connects, stringer, "getonDate", "ds", playerid, name);
	SetPVarInt(playerid, "AntiFloodGeton", gettime()+5);
	return 1;
}
CMD:recorder(playerid, params[])
{
	if(!GetPVarInt(playerid, "boomBox")) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас нет магнитофона, купите его в 24/7");
    if(GetPVarInt(playerid, "PlacedBB")) return SCM(playerid, -1, "Вы уже установили магнитофон.");
	new string[128], Float:BBCoord[4];
	GetPlayerPos(playerid, BBCoord[0], BBCoord[1], BBCoord[2]);
	GetPlayerFacingAngle(playerid, BBCoord[3]);
	SetPVarFloat(playerid, "BBX", BBCoord[0]);
	SetPVarFloat(playerid, "BBY", BBCoord[1]);
	SetPVarFloat(playerid, "BBZ", BBCoord[2]);
	BBCoord[0] += (2 * floatsin(-BBCoord[3], degrees));
	BBCoord[1] += (2 * floatcos(-BBCoord[3], degrees));
	BBCoord[2] -= 1.0;
	foreach(new i: Player)
	{
		if(!GetPVarType(i, "PlacedBB") || !IsPlayerInRangeOfPoint(playerid, 30.0, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ"))) continue;
		return SendClientMessage(playerid, COLOR_WHITE, "Магнитофон установлен на землю");
	}
	MeAction(playerid, "установил магнитофон");
	SetPVarInt(playerid, "PlacedBB", CreateDynamicObject(2226, BBCoord[0], BBCoord[1], BBCoord[2], 0.0, 0.0, 0.0, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
	format(string, sizeof string, "Установил: %s [%d]\n/setrecorder - Сменить песню\n/giverecorder - Убрать", PlayerInfo[playerid][pNames], playerid);
	SetPVarInt(playerid, "BBLabel", _:CreateDynamic3DTextLabel(string, -1, BBCoord[0], BBCoord[1], BBCoord[2]+0.6, 8, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
	SetPVarInt(playerid, "BBArea", CreateDynamicSphere(BBCoord[0], BBCoord[1], BBCoord[2], 30.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
	SetPVarInt(playerid, "BBInt", GetPlayerInterior(playerid));
	SetPVarInt(playerid, "BBVW", GetPlayerVirtualWorld(playerid));
	ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
	ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
	return 1;
}
CMD:setrecorder(playerid, params[])
{
	if(!GetPVarType(playerid, "PlacedBB")) return SendClientMessage(playerid, -1, "Магнитофон не установлен");
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"))) return SendClientMessage(playerid, -1, "Вы не возле магнитофона");
	ShowPlayerDialog(playerid,17504,DIALOG_STYLE_LIST,"{FF6F00}Radio List","{FFFFFF}Record FM\nZaycev FM - Dance\nШансон\nРадио мелодия\nKiss FM\nSky Radio\nСвоя мелодия\n{FF6F00}INSPIRE-FM{FFFFFF}\nZaycev FM - РЕП\nВыключить","Выбрать", "Выключить");
	return 1;
}
CMD:giverecorder(playerid, params[])
{
	if(!GetPVarInt(playerid, "PlacedBB")) return SendClientMessage(playerid, -1, "Вы не ставили магнитофон");
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"))) return 1;
	BoomBox(playerid);
	SendClientMessage(playerid, -1, "Вы убрали магнитофон");
	return 1;
}
CMD:makegun(playerid)
{
	if(PlayerInfo[playerid][pMRInections] == 3 || PlayerInfo[playerid][pMRInections] == 19 || PlayerInfo[playerid][pMRInections] == 27) ShowMakeGunList(playerid);
	else return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не служите в Армии.");
	return 1;
}
CMD:givemedcard(playerid, params[])
{
	if(PlayerInfo[playerid][pMRInections] != 4 && PlayerInfo[playerid][pRKInections] < 3) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не мед.работник, или не достигли 3-го ранга.");
	if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}Используйте /givemedcard [ИД] [ЦЕНА]");
	if(PlayerInfo[params[0]][pMedCard] == 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок уже имеет медицинскую карту.");
	if(params[0] == playerid) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Нельзя самому себе!");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок не в сети.");
	if(params[1] > 20000 || params[1] < 1) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Сумма не должна быть больше 20.000$ и меньше 1$");
	if(!ProxDetectorS(2.0, playerid, params[0])) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок не рядом с вами!");
	if(PlayerInfo[params[0]][pCash] < params[1]) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У игрока не достаточно средств");
	new mes[180];
	format(mes , sizeof mes , "{FFFFFF}Медицинский работник: {FF6F00}%s{FFFFFF}\nПредлагает Вам пройти мед.осмотр и получить медицинскую карту.\n\nДля этого Вам понадобится паспорт и {FF6F00}%d${FFFFFF} в кармане.\n- Вы согласны ?", PlayerInfo[playerid][pNames], params[1]);
	ShowPlayerDialog(params[0], 9588, DIALOG_STYLE_MSGBOX, "{FF6F00}Получение медицинской карты", mes, "Приобрести", "Отмена");
	SCMF(playerid, COLOR_GREY, "Вы предложили %s получить медицинскую карту за %d$", PlayerInfo[params[0]][pNames], params[1]);
	SetPVarInt(params[0], "myID", playerid);
	SetPVarInt(params[0], "myCenaCard", params[1]);
	return 1;
}
CMD:medcard(playerid, params[])
{
	if(sscanf(params,"d", params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /medcard [ИД]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок не в сети.");
	if(!ProxDetectorS(2.0, playerid, params[0])) return	SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок не рядом с вами!");
	new messages[200];
	if(PlayerInfo[playerid][pMRInections] != 0) format(messages , sizeof messages , "\n{FFFFFF}Имя: {FF6F00}%s{FFFFFF}\nЛет в штате: {FF6F00}%d{FFFFFF}\nМедицинский осмотр: %s{FFFFFF}\nМесто работы: %s%s\n", PlayerInfo[playerid][pNames], PlayerInfo[playerid][pLevel], (PlayerInfo[playerid][pMedCard] ? ("{"#cGREEN"}Пройден"):("{FF0000}Не пройден")), GetFractionColor(PlayerInfo[playerid][pMRInections]), GetMember[PlayerInfo[playerid][pMRInections]-1]);
	else format(messages , sizeof messages , "\n{FFFFFF}Имя: {FF6F00}%s{FFFFFF}\nЛет в штате: {FF6F00}%d{FFFFFF}\nМедицинский осмотр: %s{FFFFFF}\nМесто работы: Безработный\n", PlayerInfo[playerid][pNames], PlayerInfo[playerid][pLevel], (PlayerInfo[playerid][pMedCard] ? ("{"#cGREEN"}Пройден"):("{FF0000}Не пройден")));
	ShowPlayerDialog(params[0], 1019, DIALOG_STYLE_MSGBOX, "{FFDD73}Медицинская карта", messages, "Скрыть", "");
	return 1;
}
CMD:racelist(playerid,params[])
{
	if(!strlen(race_str)) return 1;
	ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"{FF6F00}Список победителей:",race_str,"Закрыть","");
	return 1;
}
CMD:mv(playerid)
{
	if(PlayerInfo[playerid][bAdmin] != 13) return 1;
	ShowPlayerDialog(playerid, dVibMar, DIALOG_STYLE_LIST,"{FF6F00}Система выборов", "{FFFFFF}Начать выборы\nИзменить кандидатов\nЗавершить выборы", "Выбрать", "Выйти");
	return 1;
}
CMD:redmv(playerid)
{
	if(PlayerInfo[playerid][bAdmin] != 13) return 1;
	new string[400];
	format(string, sizeof(string), "{FFFFFF}1. Проголосовать за - %s {"#cBLUE"}( Голосов: %i ){FFFFFF}\n2. Проголосовать за - %s {"#cBLUE"}( Голосов: %i ){FFFFFF}\n3. Проголосовать за - %s {"#cBLUE"}( Голосов: %i )\n",CandidatsOne,KandidatsGolosa[0],CandidatsTwo,KandidatsGolosa[1],CandidatsThree,KandidatsGolosa[2]);
	ShowPlayerDialog(playerid, dVibMarEdit, DIALOG_STYLE_LIST,"{FF6F00}Редактор кандидатов:", string, "Редактировать", "Выход");
	return 1;
}
CMD:candidates(playerid)
{
    if(StartVibori == false) return	SendClientMessage(playerid, CRED, "Выборы не проводятся.");
    if(!IsPlayerInRangeOfPoint(playerid,1.5,319.5459,1888.9373,907.8959) && !IsPlayerInRangeOfPoint(playerid,1.5,323.1256,1888.9172,907.8959)) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не на месте голосования.");
	if(PlayerInfo[playerid][pPayDayHad] < 2) return	SCM(playerid, -1,"• {AC0000}[Ошибка] {ffffff}Голосовать можно только после двух часов игры.");
	if(PlayerInfo[playerid][pVoted] == 1) return SCM(playerid, -1,"• {AC0000}[Ошибка] {ffffff}Вы уже голосовали.");
	new string[400];
	format(string, sizeof(string), "{FFFFFF}1. Проголосовать за - %s {"#cBLUE"}( Голосов: %i ){FFFFFF}\n2. Проголосовать за - %s {"#cBLUE"}( Голосов: %i ){FFFFFF}\n3. Проголосовать за - %s {"#cBLUE"}( Голосов: %i )\n",CandidatsOne,KandidatsGolosa[0],CandidatsTwo,KandidatsGolosa[1],CandidatsThree,KandidatsGolosa[2]);
	ShowPlayerDialog(playerid, dVibGolos, DIALOG_STYLE_LIST,"{FF6F00}Кандидаты:", string, "Голос", "Отмена");
	return 1;
}
CMD:exam(playerid, params[])
{
	if(PlayerInfo[playerid][pMRInections] != 11) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(pTemp[playerid][pOnExam])
	{
		new actplayerid = pTemp[playerid][pExamCandidate];
		if(!IsPlayerConnected(actplayerid) || !pTemp[actplayerid][pOnExam])
		{
			pTemp[playerid][pOnExam] = false;
			pTemp[playerid][pExamCandidate] = INVALID_PLAYER_ID;
			return SendClientMessage(playerid,CWHITE,"Экзаменуемый вышел. Экзамен завершен");
		}
		new mes[128];
		format(mes,sizeof(mes),"%s экзамен:\n{"#cGREEN"}Сдал\n{"#cRED"}Провалил",PlayerInfo[actplayerid][pNames]);
		ShowPlayerDialog(playerid,dExamResult,2,"{FF6F00}Экзамен",mes,"Принять","Отмена");
		return 1;
	}
	if(gDSTurn[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"В очереди на экзамен никого нет");
	new actplayerid = gDSTurn[0];
	if(!IsPlayerConnected(actplayerid) || !pTemp[actplayerid][pWaitingExam]) return SendClientMessage(playerid,CGRAY,"Игрок вышел из очереди");
	if(GetPlayerDistanceToPlayer(playerid,actplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
	new mes[128],type[24];
	switch(pTemp[actplayerid][pExamType])
	{
		case false: type = "Наземный";
		case true: type = "Воздушный";
	}
	format(mes,sizeof(mes),"Инструктор %s Вызвал Вас на прохождение экзамена, следуйте за ним",PlayerInfo[playerid][pNames]);
	SendClientMessage(actplayerid,CINFO,mes);
	format(mes,sizeof(mes),"Вы Вызвали %s на прохождение экзамена. [%s]",PlayerInfo[actplayerid][pNames],type);
	SendClientMessage(playerid,CINFO,mes);
	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Чтобы поставить печать 'СДАЛ' или же 'ПРОВАЛИЛ' снова введите команду '/exam'");
	pTemp[actplayerid][pWaitingExam] = false;
	pTemp[actplayerid][pOnExam] = true;
	pTemp[playerid][pOnExam] = true;
	pTemp[playerid][pExamCandidate] = actplayerid;
	gDSTurn[0] = INVALID_PLAYER_ID;
	return 1;
}
CMD:loadfs(playerid, params[])
{
    if(PlayerInfo[playerid][bAdmin] < 13) return 1;
    if(sscanf(params, "s[64]", params[0])) return SCM(playerid, COLOR_WHITE, "Использование: /loadsc [Имя скрипта]");
	new mes[100];
	format(mes, sizeof(mes), "loadfs %s", params[0]);
	SendRconCommand(mes);
	SCMF(playerid, COLOR_YELLOW, "FilterScript %s успешно загружен", params[0]);
	return 1;
}
ALTX:advertise("/ad");
CMD:advertise(playerid, params[])
{
	if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid,CGRAY,"К сожалению, очередь на объявления занята, попробуйте позже");
	if(pTemp[playerid][pAdvertTime]) return SendClientMessage(playerid,CGRAY,"Нельзя посылать чаще одного объявления в минуту");
	if(sscanf(params, "s[100]", params[0])) return SCM(playerid, CGRAY, "/ad [текст объявления]");
	SetPVarString(playerid,"advert",params[0]);
	new price = params[0] * gAdvertPrice;
	new mes[128];
	format(mes,sizeof(mes),"{"#cWHITE"}Цена объявления: {"#cRED"}$%d.\n{"#cWHITE"}Вы действительно хотите отправить объявление?",price);
	ShowPlayerDialog(playerid,dAdvertSend,0,"{FF6F00}Объявление",mes,"Да","Нет");
	return 1;
}
CMD:edit(playerid)
{
	if(PlayerInfo[playerid][pMRInections] != 16) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только сотрудникам новостной сети");
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	ShowAdvertList(playerid);
	return 1;
}
CMD:helpers(playerid, params[])
{
	new ttext[32];
	stringer = "";
	foreach(new i: Player)
	{
		if(PlayerInfo[i][pHelper] <= 0) continue;
		switch(PlayerInfo[i][pHelper])
		{
			case 1: ttext = "{FFD700}[1](Агент Поддержки)";
			case 2: ttext = "{FFD700}[2](Практикант)";
			case 3: ttext = "{FFD700}[3](Ст.Практикант)";
			case 4: ttext = "{FFD700}[4](Мл.Хелпер)";
			case 5: ttext = "{FFD700}[5](Хелпер)";
			case 6: ttext = "{FFD700}[6](Ст.Хелпер)";
			case 7: ttext = "{FF5000}[7](Зам.Гл.Хелпера)";
			case 8: ttext = "{FF0000}[8](Главный хелпер)";
			default: ttext = "{FFD700}[1](Агент Поддержки)";
		}
		format(stringer,1500,"%s %s{FFFFFF} %s[%d]\n",stringer,ttext,PlayerInfo[i][pNames],i);
	}
	if(strlen(stringer) < 1) strcat(stringer, "{FFFFFF}Нет помощников онлайн.");
	SPD(playerid, 1019, DIALOG_STYLE_MSGBOX, "{00C0FF}»{FFFFFF} Помощники Online {00C0FF}«{FFFFFF}", stringer, "Скрыть", "");
	return 1;
}
CMD:break(playerid, params[])
{
	if((PlayerInfo[playerid][pMRInections] != 1 && PlayerInfo[playerid][pMRInections] != 2 && PlayerInfo[playerid][pMRInections] != 10 && PlayerInfo[playerid][pMRInections] != 21) && PlayerInfo[playerid][pRKInections] < 3) return SendClientMessage(playerid, CWHITE, "• {AC0000}[Ошибка] {ffffff}Данная функция Вам недоступна");
 	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, CWHITE, "• {AC0000}[Ошибка] {ffffff}Вы находитесь в интерьере");
 	if(GetPVarInt(playerid,"breaked"))
 	{
  		DestroyDynamicObject(GetPVarInt(playerid, "break_object"));
  		DeletePVar(playerid, "breaked");
  		DeletePVar(playerid, "break_object");
        DestroyDynamic3DTextLabel(Text3D:breakText[playerid]);
		SendClientMessage(playerid,-1,"Вы убрали дорожное заграждение.");
		return 1;
	}
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CWHITE, "• {FFC800}[Подсказка] {ffffff}Введите: /break [тип (1-4)]");
	#define type params[0]
	new Float:pos[4];
  	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
   	GetPlayerFacingAngle(playerid, pos[3]);
   	pos[0] += floatsin(-pos[3], degrees);
    pos[1] += floatcos(-pos[3], degrees);
   	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
	if(!GetPVarInt(playerid,"breaked"))
	{
		switch(type)
		{
			case 1: SetPVarInt(playerid, "break_object", _:CreateDynamicObject(997, pos[0], pos[1], pos[2]-1.0, 0, 0, 0));
			case 2: SetPVarInt(playerid, "break_object", _:CreateDynamicObject(1237, pos[0], pos[1], pos[2]-1.0, 0, 0, 0));
			case 3: SetPVarInt(playerid, "break_object", _:CreateDynamicObject(1423, pos[0], pos[1], pos[2]-0.3, 0, 0, 0));
			case 4: SetPVarInt(playerid, "break_object", _:CreateDynamicObject(1422, pos[0], pos[1], pos[2]-0.49, 0, 0, 0));
		}
		new string[30];
 	    format(string, 30, "%s(%d)", PlayerInfo[playerid][pNames], playerid);
 	    breakText[playerid] = CreateDynamic3DTextLabel(string,-1,pos[0], pos[1], pos[2]-0.7,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
        SetPVarInt(playerid,"breaked",1),SendClientMessage(playerid, CWHITE, "• {FFC800}[Подсказка] {ffffff}Вы установили дорожное заграждение. Введите '/break' ещё раз, чтобы убрать его.");
	}
	#undef type
	return 1;
}
ALTX:ex7plays("/Ex7pLays");
CMD:ex7plays(playerid)
{
	if(PlayerInfo[playerid][pBonus]) return 1;
	PlayerInfo[playerid][pCash] += 30000;
	SCM(playerid, -1, "Вам было выдано: 30.000$");
	PlayerInfo[playerid][pBonus] = 1, UpdatePlayerData(playerid, "bonus", PlayerInfo[playerid][pBonus]);
	return 1;
}
CMD:admins(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 1 && PlayerInfo[playerid][pDRInections] != 3) return SCM(playerid, COLOR_GREY, "Команда доступна только игрокам Gold-VIP статуса!");
	new ttext[50];
	stringer = "";
	foreach(new i: Player)
	{
		if(IsPlayerNPC(i) || (PlayerInfo[i][bAdmin] <= 0)) continue;
		switch (PlayerInfo[i][bAdmin])
		{
			case 1: ttext = "{33AA33}(Практикант){FFFFFF}";
			case 2: ttext = "{33AA33}(Ст.Практикант){FFFFFF}";
			case 3: ttext = "{33AA33}(Мл.Модератор){FFFFFF}";
			case 4: ttext = "{33AA33}(Модератор){FFFFFF}";
			case 5: ttext = "{33AA33}(Ст.Модератор){FFFFFF}";
			case 6: ttext = "{33CCFF}(Гл.Модератор){FFFFFF}";
			case 7: ttext = "{33CCFF}(Мл.Администратор){FFFFFF}";
			case 8: ttext = "{"#cBLUE"}(Администратор){FFFFFF}";
			case 9: ttext = "{"#cBLUE"}(Гл.Администратор){FFFFFF}";
			case 10: ttext = "{D900D3}(Главный Администратор){FFFFFF}";
			case 11: ttext = "{EAC700}(Спец.Администратор){FFFFFF}";
			case 12: ttext = "{FF8C00}(Помощник Основателя){FFFFFF}";
			case 13: ttext = "{FF0000}(Основатель проекта){FFFFFF}";
		}
		if(PlayerInfo[i][pAdmDonate] == 2) ttext = "{FF6F00}(Донат Администратор){FFFFFF}";
		if(GetPVarInt(i, "pIsAFK")) format(stringer, sizeof(stringer), "%s%s %s [lvl: %d] [ID: {FF8C00}%d{FFFFFF}] [{FF0000}AFK{FFFFFF}] [Выговоров: {FF6F00}%d / 3{FFFFFF}]\n",stringer,ttext, PlayerInfo[i][pNames],PlayerInfo[i][bAdmin],i,PlayerInfo[i][pAvig]);
		else format(stringer, sizeof(stringer), "%s%s %s [lvl: %d] [ID: {FF8C00}%d{FFFFFF}] [Выговоров: {FF6F00}%d / 3{FFFFFF}]\n", stringer,ttext, PlayerInfo[i][pNames],PlayerInfo[i][bAdmin],i,PlayerInfo[i][pAvig]);
	}
	if (strlen(stringer) < 1) strcat(stringer, "{FFFFFF}Нету администрации в сети.");
	SPD(playerid, 1019, DIALOG_STYLE_MSGBOX, "{FF6F00}Администрация онлайн:", stringer, "Закрыть", "");
	return 1;
}
CMD:ainfoip(playerid)
{
	if(PlayerInfo[playerid][bAdmin] < 13) return 1;
	foreach(new i: Player)
	{
		if(PlayerInfo[i][bAdmin] < 1) continue;
		SCMF(playerid,COLOR_GRAD1,"{FF6F00}> {FFFFFF}%s[%d] | ADM LVL: %d | IP: %s | R-IP: %s",PlayerInfo[i][pNames],i,PlayerInfo[i][bAdmin],PlayerInfo[i][pIP],PlayerInfo[i][pIpReg]);
	}
	return 1;
}
CMD:play(playerid) return SPD(playerid, 0099, DIALOG_STYLE_LIST,"{FF6F00}Radio-List","{FFFFFF}Radio-Record\nZaycev FM\nRadio-Trap\nRadio-Dubstep\n{FF6F00}INSPIRE FM{FFFFFF}\nRadio-Record ROCK\nВыключить радио","Выбрать","Выход");
CMD:aleaders(playerid)
{
	if(PlayerInfo[playerid][bAdmin] > 0) return mysql_tquery(connects, "SELECT * FROM  `accounts` WHERE  `pLRInections` !=0 ORDER BY  `accounts`.`pLRInections` DESC", "Leaders", "i", playerid);
	return 1;
}
CMD:leaders(playerid, params[])
{
	SCM(playerid, COLOR_ORANGE, "Лидеры в сети:");
	new b = 0, ttext[32];
	foreach(new i: Player)
	{
		if (PlayerInfo[i][pLRInections] > 0)
		{
			switch (PlayerInfo[i][pLRInections])
			{
				case 1: ttext = "{2641FE}LSPD";			case 2: ttext = "{313131}ФБР";				case 3: ttext = "{33AA33}Армия Авианосец";
				case 4: ttext = "{A52A2A}МЧС";			case 5: ttext = "{DDA701}LCN";				case 6: ttext = "{FF0000}Yakuza";
				case 7: ttext = "{114D71}Мэрия г.Los-Santos";		case 10: ttext = "{2641FE}SFPD";			case 11: ttext = "{139BEC}Инструкторы";
				case 12: ttext = "{8813E7}The Ballas";	case 13: ttext = "{DBD604}The Vagos";		case 14: ttext = "{B4B5B7}Русская мафия";
				case 15: ttext = "{009F00}The Grove";	case 16: ttext = "{40848B}LS News";		case 17: ttext = "{01FCFF}The Aztecas";
				case 18: ttext = "{83BFBF}The Rifa";	case 19: ttext = "{33AA33}Армия: Зона 51";	case 21: ttext = "{2641FE}LVPD";
				case 24: ttext = "{F45000}Street Racers";	case 25: ttext = "{2E8B57}SWAT";
				case 26: ttext = "{708090}Правительство"; case 27: ttext = "{33AA33}Военно-Морской Флот"; case 28: ttext = "{114D71}Мэрия г.San-Fierro";
			}
			b++;
			format(stringer, ADM_SIZE, "%s - %s[%d]", ttext, PlayerInfo[i][pNames], i);
			SCM(playerid, 0xAFAFAFAA, stringer);
		}
	}
	if(b > 0) SCMF(playerid, 0xAFAFAFAA, "В сети всего %d лидеров.", b);
	else SCM(playerid, 0xAFAFAFAA, "Нету ни кого из лидеров в сети.");
	return 1;
}
CMD:yes(playerid, params[])
{
	if(PlayerInfo[playerid][pMRInections] != 16) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"d",params[0])) return 	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /yes [id]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(GetPVarInt(params[0], "phone_call") != 1) return  SCM(playerid, COLOR_GRAD1, "Этот человек не звонил в студию!");
	if(params[0] == playerid) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Вы указали свой ID");
	format(stringer1,64, "Вы приняли звонок от %s", PlayerInfo[params[0]][pNames]);
	SCM(playerid, COLOR_WHITE, stringer1);
	SetPVarInt(params[0], "Tel", 1);
	SCM(params[0], COLOR_YELLOW, "Вы попали в прямой эфир, вы можете говорить.");
	SetPVarInt(params[0], "TalkingLivels", 2);
	PlayerInfo[params[0]][pBank] -= smspricels;
	FracBank[0][fLsnews] += smspricels;
	return 1;
}
CMD:off(playerid, params[])
{
	if(PlayerInfo[playerid][pMRInections] != 16) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"d",params[0]))  return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /off [id]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(GetPVarInt(params[0], "phone_call") != 1) return   SCM(playerid, COLOR_GRAD1, "Этот человек не звонил в студию!");
	format(stringer1,64, "Вы завершили звонок от %s", PlayerInfo[params[0]][pNames]);
	SCM(playerid, COLOR_BLUE, stringer1);
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_STOPUSECELLPHONE);
	SCM(params[0], COLOR_YELLOW, "Звонок завершён...");
	DeletePVar(params[0], "phone_call");
	SetPVarInt(params[0], "Tel", 999);
	if(PlayerInfo[playerid][pMRInections] == 16) SetPVarInt(params[0], "TalkingLivels", 999);
	return 1;
}
ALTX:call("/c");
CMD:call(playerid, params[])
{
	if(PlayerInfo[playerid][pBank] <= 0)
	{
	    SCM(playerid, COLOR_GREY, "[0] Сумма на вашем счету не достаточна для совершения звонка");
		format(stringer1,64, "%s набирает телефонный номер", PlayerInfo[playerid][pNames]);
		ProxDetector(5.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
		return 1;
	}
	if(GetPVarInt(playerid, "gag")) return SCM(playerid, COLOR_LIGHTRED, "У Вас кляп, вы не можете говорить!");
	if(GetPVarInt(playerid, "takephone")) return SCM(playerid, COLOR_LIGHTRED, "У Вас нет телефона");
	if(sscanf(params,"d",params[0])) return    SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/call [номер]");
	format(stringer1,64, "%s достаёт телефон", PlayerInfo[playerid][pNames]);
	ProxDetector(30.0, playerid, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	if(params[0] == PlayerInfo[playerid][pPnumber])
	{
		SCM(playerid, COLOR_GRAD2, "Линия занята");
		SetPlayerSpecialAction(playerid,13);
		return 1;
	}
	foreach(new i: Player)
	{
		if(params[0] == 11888)
		{
			if(smsls == false) return    SCM(playerid, COLOR_GREY, "Прямой эфир отключен...");
			format(stringer1,64, "[Звонок] В студию звонит %s: Введите /yes [%d], чтобы ответить",PlayerInfo[playerid][pNames], playerid);
			SendFamilyMessage(16, COLOR_YELLOW2, stringer1);
			SCM(playerid,  COLOR_WHITE, "Чтобы повесить трубку введите /h");
			SetPlayerSpecialAction(playerid,11);
			SetPVarInt(playerid, "phone_call",1);
			PlayerInfo[playerid][pBank] -= smspricels;
			FracBank[0][fLsnews] += smspricels;
			return 1;
		}
		if(GetPVarInt(playerid, "Mobile") != 999) return    SCM(playerid, COLOR_GRAD2, "Вы уже разговариваете по телефону ");
		if(!IsPlayerConnected(i)) return 1;
		if(PlayerInfo[i][pPnumber] == params[0] && params[0] != 0)
		{
			params[0] = i;
			SetPVarInt(playerid, "Mobile", params[0]);
			if(!IsPlayerConnected(params[0])) return 1;
			if(PhoneOnline{params[0]} > false) return SCM(playerid, COLOR_GREY, "Телефон абонента выключен...");
			if (GetPVarInt(params[0], "Mobile") == 999)
			{
				format(stringer1,64, "Входящий звонок от: %s", PlayerInfo[playerid][pNames]);
				SCM(params[0], COLOR_YELLOW2, stringer1);
				SCM(params[0], COLOR_WHITE, " Введите /p, чтобы ответить ");
				format(stringer1,64, "У %s звонит мобильник", PlayerInfo[params[0]][pNames]);
				SCM(playerid, COLOR_WHITE, " Чтобы завершить звонок введите /h ");
				ProxDetector(30.0, i, stringer1, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
				SetPlayerSpecialAction(playerid,11);
				CellTime[playerid] = true;
				return 1;
			}
		}
	}
	SCM(playerid, COLOR_GRAD2, "Вы ошиблись номером.");
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	return 1;
}
CMD:house(playerid, params[])
{
	if(PlayerInfo[playerid][bAdmin] < 9) return 1;
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/house [housenumber]");
	if(params[0] > MAX_HOUSE-1) return 1;
	SetPlayerPosEx(playerid,HouseInfo[params[0]][hEnter][0],HouseInfo[params[0]][hEnter][1],HouseInfo[params[0]][hEnter][2]);
	GameTextForPlayer(playerid, "~w~HOUSE", 5000, 1);
	return 1;
}
CMD:chat(playerid)
{
	if(PlayerInfo[playerid][bAdmin] < 2) return 1;
	if (!BigEar[playerid]) BigEar[playerid] = true,SCM(playerid, COLOR_GRAD2, "Слушать чат ON");
	else if (BigEar[playerid]) BigEar[playerid] = false,SCM(playerid, COLOR_GRAD2, "Слушать чат OFF");
	return 1;
}
CMD:chatsms(playerid)
{
	if(PlayerInfo[playerid][bAdmin] != 13) return 1;
	if (!BigEarSms[playerid]) BigEarSms[playerid] = true,SCM(playerid, COLOR_GRAD2, "Слушать смс чат ON");
	else if (BigEarSms[playerid]) BigEarSms[playerid] = false,SCM(playerid, COLOR_GRAD2, "Слушать смс чат OFF");
	return 1;
}
CMD:gbankwithdraw(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/gbankwithdraw [количество]");
	if(PlayerInfo[playerid][pMRInections] == 12 && PlayerInfo[playerid][pRKInections] == 10)
	{
		if(FracBank[0][fBallas] == 0) return SCM(playerid, COLOR_GREY, "В банке банды Balls нет денег");
		if(FracBank[0][fBallas] < params[0]) return SCM(playerid, COLOR_GREY, "В банке банды Balls нет столько денег");
		if(params[0] < 1 || params[0] > 100000000) return SCM(playerid, COLOR_GREY, "Неправильный количество денег!");
		FracBank[0][fBallas] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		format(stringer1,64, "Вы сняли с банка банды Ballas: %d вирт", params[0]);
		SCM(playerid, 0x6ab1ffaa, stringer1);
	}
	else if(PlayerInfo[playerid][pMRInections] == 13 && PlayerInfo[playerid][pRKInections] == 11)
	{
		if(FracBank[0][fVagos] == 0) return SCM(playerid, COLOR_GREY, "В банке банды Vagos нет денег");
		if(FracBank[0][fVagos] < params[0]) return SCM(playerid, COLOR_GREY, "В банке банды Vagos нет столько денег");
		if(params[0] < 1 || params[0] > 100000000) return SCM(playerid, COLOR_GREY, "Неправильный количество денег!");
		FracBank[0][fVagos] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		format(stringer1,64, "Вы сняли с банка банды Vagos: %d вирт", params[0]);
		SCM(playerid, 0x6ab1ffaa, stringer1);
	}
	else if(PlayerInfo[playerid][pMRInections] == 15 && PlayerInfo[playerid][pRKInections] == 10)
	{
		if(FracBank[0][fGrove] == 0) return SCM(playerid, COLOR_GREY, "В банке банды Grove нет денег");
		if(FracBank[0][fGrove] < params[0]) return SCM(playerid, COLOR_GREY, "В банке банды Grove нет столько денег");
		if(params[0] < 1 || params[0] > 100000000) return SCM(playerid, COLOR_GREY, "Неправильный количество денег!");
		FracBank[0][fGrove] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		format(stringer1,64, "Вы сняли с банка банды Grove: %d вирт", params[0]);
		SCM(playerid, 0x6ab1ffaa, stringer1);
	}
	else if(PlayerInfo[playerid][pMRInections] == 17 && PlayerInfo[playerid][pRKInections] == 10)
	{
		if(FracBank[0][fAztek] == 0) return SCM(playerid, COLOR_GREY, "В банке банды Aztec нет денег");
		if(FracBank[0][fAztek] < params[0]) return SCM(playerid, COLOR_GREY, "В банке банды Aztec нет столько денег");
		if(params[0] < 1 || params[0] > 100000000) return SCM(playerid, COLOR_GREY, "Неправильный количество денег!");
		FracBank[0][fAztek] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		format(stringer1,64, "Вы сняли с банка банды Aztec: %d вирт", params[0]);
		SCM(playerid, 0x6ab1ffaa, stringer1);
	}
	else if(PlayerInfo[playerid][pMRInections] == 18 && PlayerInfo[playerid][pRKInections] == 10)
	{
		if(FracBank[0][fRifa] == 0) return SCM(playerid, COLOR_GREY, "В банке банды Rifa нет денег");
		if(FracBank[0][fRifa] < params[0]) return SCM(playerid, COLOR_GREY, "В банке банды Rifa нет столько денег");
		if(params[0] < 1 || params[0] > 100000000) return SCM(playerid, COLOR_GREY, "Неправильный количество денег!");
		FracBank[0][fRifa] -= params[0];
		PlayerInfo[playerid][pCash] +=params[0];
		format(stringer1,64, "Вы сняли с банка банды Rifa: %d вирт", params[0]);
		SCM(playerid, 0x6ab1ffaa, stringer1);
	}
	ObshiakGang();
	SaveBankFrac();
	return 1;
}
CMD:gbankput(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /gbankput [количество]");
	if(PlayerInfo[playerid][pCash] < params[0]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег!");
	if(params[0] < 1 || params[0] > 100000000) return SCM(playerid, COLOR_GREY, "Неправильный количество денег!");
	if(PlayerInfo[playerid][pMRInections] == 15) {FracBank[0][fGrove] += params[0];SCMF(playerid, 0x6ab1ffaa, "Вы положили в банк Grove: %d вирт", params[0]);}
	if(PlayerInfo[playerid][pMRInections] == 12) {FracBank[0][fBallas] += params[0];SCMF(playerid, 0x6ab1ffaa, "Вы положили в банк Ballas: %d вирт", params[0]);}
	if(PlayerInfo[playerid][pMRInections] == 13) {FracBank[0][fVagos] += params[0];SCMF(playerid, 0x6ab1ffaa, "Вы положили в банк Vagos: %d вирт", params[0]);}
	if(PlayerInfo[playerid][pMRInections] == 17) {FracBank[0][fAztek] += params[0];SCMF(playerid, 0x6ab1ffaa, "Вы положили в банк Aztec: %d вирт", params[0]);}
	if(PlayerInfo[playerid][pMRInections] == 18) {FracBank[0][fRifa] += params[0];SCMF(playerid, 0x6ab1ffaa, "Вы положили в банк Rifa: %d вирт", params[0]);}
	else return 1;
	PlayerInfo[playerid][pCash] -=params[0];
	ObshiakGang();
	SaveBankFrac();
	return 1;
}
CMD:newsbank(playerid)
{
	switch(PlayerInfo[playerid][pMRInections])
	{
		case 16:
		{
		    if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
			SCMF(playerid, 0x6ab1ffaa, "В банке SAN NEWS: %d вирт", FracBank[0][fLsnews]);
		}
	}
	return 1;
}
CMD:newswithdraw(playerid, params[])
{
	if(PlayerInfo[playerid][pLRInections] != 16 && PlayerInfo[playerid][pRKInections] != 13) return 1;
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"d",params[0]))  return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/newswithdraw [количество]");
	if(FracBank[0][fLsnews] == 0) return SCM(playerid, COLOR_GREY, "В банке SAN NEWS нет денег");
	if(FracBank[0][fLsnews] < params[0]) return SCM(playerid, COLOR_GREY, "В банке SAN NEWS нет столько денег");
	if(params[0] < 1 || params[0] > 100000000) return SCM(playerid, COLOR_GREY, "Неправильный количество денег!");
	FracBank[0][fLsnews] -= params[0];
	PlayerInfo[playerid][pCash] +=params[0];
	SCMF(playerid, 0x6ab1ffaa, "Вы сняли с банка SAN NEWS: %d вирт", params[0]);
	SaveBankFrac();
	return 1;
}
CMD:mafiabalance(playerid)
{
	switch(PlayerInfo[playerid][pMRInections])
	{
	case 6: return SCMF(playerid, 0x6ab1ffaa, "В банке мафии Yakuza: %d вирт", MafiaBank[0][nYakuza]);
	case 14: return SCMF(playerid, 0x6ab1ffaa, "В банке Русской мафии: %d вирт", MafiaBank[0][nRm]);
	case 5: return SCMF(playerid, 0x6ab1ffaa, "В банке мафии LCN: %d вирт", MafiaBank[0][nLcn]);
	}
	return 1;
}
CMD:mafiawithdraw(playerid, params[])
{
	if(PlayerInfo[playerid][pLRInections] != 6 && PlayerInfo[playerid][pLRInections] != 14 && PlayerInfo[playerid][pLRInections]!= 5) return 1;
	if(sscanf(params,"d",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /mafiawithdraw [количество]");
	if(MafiaBank[0][nYakuza] <params[0]) return SCM(playerid, COLOR_GREY, "В банке мафии Yakuza нет столько денег");
	if(params[0] < 1) return SCM(playerid, COLOR_GREY, "Неправильный количество денег!");
	if(PlayerInfo[playerid][pMRInections] == 6 && PlayerInfo[playerid][pRKInections] == 10) {MafiaBank[0][nYakuza] -= params[0];SCMF(playerid, 0x6ab1ffaa, "Вы сняли с банка мафии Yakuza: %d вирт", params[0]);}
	else if(PlayerInfo[playerid][pMRInections] == 14 && PlayerInfo[playerid][pRKInections] == 10) {MafiaBank[0][nRm] -= params[0];SCMF(playerid, 0x6ab1ffaa, "Вы сняли с банка Русской мафии: %d вирт", params[0]);}
	else if(PlayerInfo[playerid][pMRInections] == 5 && PlayerInfo[playerid][pRKInections] == 10) {MafiaBank[0][nLcn] -= params[0];SCMF(playerid, 0x6ab1ffaa, "Вы сняли с банка мафии LCN: %d вирт", params[0]);}
	PlayerInfo[playerid][pCash] +=params[0];
	SaveBankMafia();
	return 1;
}
CMD:mafiabankput(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Используйте /mafiabankput [количество]");
	if(PlayerInfo[playerid][pCash] < params[0]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег!");
	if(params[0] < 1) return SCM(playerid, COLOR_GREY, "Неправильный количество денег!");
	if(PlayerInfo[playerid][pMRInections] == 6) {MafiaBank[0][nYakuza] += params[0];SCMF(playerid, 0x6ab1ffaa, "Вы положили в банк мафии Yakuza: %d вирт", params[0]);}
	if(PlayerInfo[playerid][pMRInections] == 14) {MafiaBank[0][nRm] += params[0];SCMF(playerid, 0x6ab1ffaa, "Вы положили в банк Русской мафии: %d вирт", params[0]);}
	else if(PlayerInfo[playerid][pMRInections] == 5) {MafiaBank[0][nLcn] += params[0];SCMF(playerid, 0x6ab1ffaa, "Вы положили в банк мафии LCN: %d вирт", params[0]);}
	else return 1;
	format(stringer1,64, "%s положил в банк мафии %d вирт", PlayerInfo[playerid][pNames],params[0]);
	SendFamilyMessage(PlayerInfo[playerid][pMRInections], COLOR_YELLOW2, stringer1);
	PlayerInfo[playerid][pCash] -=params[0];
	SaveBankMafia();
	return 1;
}
CMD:getweapon(playerid)
{
	switch(PlayerInfo[playerid][pMRInections])
	{
	case 6:
		{
			if(!PlayerToPoint(4.0,playerid,1257.1469,-792.7399,1084.2344)) return 1;
			if(PlayerInfo[playerid][pRKInections] <= 2)return SCM(playerid,COLOR_GRAD1,"Оружие можно взять с 3 ранга!");
			SPD(playerid, 2013, DIALOG_STYLE_LIST, "{FF6F00}Взять оружие со склада Yakuza", "- Deagle [70 матов/50 патронов]\n- Shotgun [50 матов/15 патронов]\n- Rifle [100 матов/10 патронов]\n- M4 [500 матов/100 патронов]\n- AK-47 [500 матов/100 патронов]\n- Mp5 [400 матов/200 патронов]\n- Sdpistol [100 матов/100 патронов])", "Выбрать", "Отмена");
		}
	case 5:
		{
			if(!PlayerToPoint(4.0,playerid,1257.1469,-792.7399,1084.2344)) return 1;
			if(PlayerInfo[playerid][pRKInections] <= 2)return SCM(playerid,COLOR_GRAD1,"Оружие можно взять с 3 ранга!");
			SPD(playerid, 2014, DIALOG_STYLE_LIST, "{FF6F00}Взять оружие со склада LCN", "- Deagle [70 матов/50 патронов]\n- Shotgun [50 матов/15 патронов]\n- Rifle [100 матов/10 патронов]\n- M4 [500 матов/100 патронов]\n- AK-47 [500 матов/100 патронов]\n- Mp5 [400 матов/200 патронов]\n- Sdpistol [100 матов/100 патронов])", "Выбрать", "Отмена");
		}
	case 14:
		{
			if(!PlayerToPoint(4.0,playerid,1257.1469,-792.7399,1084.2344)) return 1;
			if(PlayerInfo[playerid][pRKInections] <= 2)return SCM(playerid,COLOR_GRAD1,"Оружие можно взять с 3 ранга!");
			SPD(playerid, 2015, DIALOG_STYLE_LIST, "{FF6F00}Взять оружие со склада Русской Мафии", "- Deagle [70 матов/50 патронов]\n- Shotgun [50 матов/15 патронов]\n- Rifle [100 матов/10 патронов]\n- M4 [500 матов/100 патронов]\n- AK-47 [500 матов/100 патронов]\n- Mp5 [400 матов/200 патронов]\n- Sdpistol [100 матов/100 патронов])", "Выбрать", "Отмена");
		}
	}
	return 1;
}
CMD:getgun(playerid)
{
	switch(PlayerInfo[playerid][pMRInections])
	{
	case 19:
		{
		    if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 470) return SCM(playerid,COLOR_GREY,"Вы не в Хаммере!");
			if(armmatbi <= 0) return SCM(playerid,COLOR_GRAD1,"На складе нет оружия!");
			if(GetPVarInt(playerid, "gun_time") > gettime()) return 	SCM(playerid,COLOR_GRAD1,"Брать оружие можно раз в 5 минут");
			GivePlayerWeaponAC(playerid, 30, 100);
			SetPlayerArmourAC(playerid, 100);
			SetPlayerHealthAC(playerid,100);
			armmatbi -= 500;
			SetPVarInt(playerid, "gun_time", gettime()+300);
			SetPlayerChatBubble(playerid,"взял(-а) оружие из багажника",0xDD90FFFF,30.0,10000);
			SCM(playerid, COLOR_ISPOLZUY,"Вы достали из багажника: AK-47 (100), Бронижелет, Сухой паёк");
			Update3DTextsArmy();
			return 1;
		}
	case 3:
		{
		    if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 470) return   SCM(playerid,COLOR_GREY,"Вы не в Хаммере!");
			if(armmatsf <= 0) return SCM(playerid,COLOR_GRAD1,"На складе нет оружия!");
			if(GetPVarInt(playerid, "gun_time") > gettime()) return 	SCM(playerid,COLOR_GRAD1,"Брать оружие можно раз в 5 минут");
			GivePlayerWeaponAC(playerid, 31, 100);
			SetPlayerArmourAC(playerid, 100);
			SetPlayerHealthAC(playerid,100);
			armmatsf -= 500;
			SetPVarInt(playerid, "gun_time", gettime()+300);
			SetPlayerChatBubble(playerid,"взял(-а) оружие из багажника",0xDD90FFFF,30.0,10000);
			SCM(playerid, COLOR_ISPOLZUY,"Вы достали из багажника: M4 (100), Бронижелет, Сухой паёк");
			Update3DTextsArmy();
			return 1;
		}
	case 27:
	    {
  			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 470) return   SCM(playerid,COLOR_GREY,"Вы не в Хаммере!");
			if(armyvmf <= 0) return SCM(playerid,COLOR_GRAD1,"На складе нет оружия!");
			if(GetPVarInt(playerid, "gun_time") > gettime()) return 	SCM(playerid,COLOR_GRAD1,"Брать оружие можно раз в 5 минут");
			GivePlayerWeaponAC(playerid, 31, 100);
			SetPlayerArmourAC(playerid, 100);
			SetPlayerHealthAC(playerid,100);
			armyvmf -= 500;
			SetPVarInt(playerid, "gun_time", gettime()+300);
			SetPlayerChatBubble(playerid,"взял(-а) оружие из багажника",0xDD90FFFF,30.0,10000);
			SCM(playerid, COLOR_ISPOLZUY,"Вы достали из багажника: M4 (100), Бронижелет, Сухой паёк");
			Update3DTextsArmy();
			return 1;
	    }
	}
	return 1;
}
CMD:balance(playerid)
{
	if(PlayerInfo[playerid][bAdmin] < 6) return 1;
	SCMF(playerid, COLOR_WHITE, "Якудза: %d вирт", MafiaBank[0][nYakuza]);
	SCMF(playerid, COLOR_WHITE, "Русская мафия: %d вирт", MafiaBank[0][nRm]);
	SCMF(playerid, COLOR_WHITE, "LCN: %d вирт", MafiaBank[0][nLcn]);
	SCMF(playerid, COLOR_WHITE, "SAN NEWS: %d вирт", FracBank[0][fLsnews]);
	return 1;
}
CMD:warehouse(playerid)
{
	switch(PlayerInfo[playerid][pMRInections])
	{
	case 1: { SCMF(playerid, 0x6495EDFF, "На складе %d материалов", lspdmatbi);return 1; }
	case 2: { SCMF(playerid, 0x6495EDFF, "На складе %d материалов", fbimats);return 1; }
	case 3: { SCMF(playerid, 0x6495EDFF, "На складе %d материалов", armmatsf);return 1; }
	case 27: { SCMF(playerid, 0x6495EDFF, "На складе %d материалов", armyvmf);return 1; }
	case 5: { SCMF(playerid, 0x6495EDFF, "На складе %d материалов", lcnmats);return 1; }
	case 6: { SCMF(playerid, 0x6495EDFF, "На складе %d материалов", yakuzamats);return 1; }
	case 10: { SCMF(playerid, 0x6495EDFF, "На складе %d материалов", sfpdmats); return 1; }
	case 12: { SCMF(playerid, 0x6495EDFF, "На складе %d материалов", ballasmatbi); return 1; }
	case 13: { SCMF(playerid, 0x6495EDFF, "На складе %d материалов", vagosmatbi); return 1; }
	case 14: { SCMF(playerid, 0x6495EDFF, "На складе %d материалов", rmmats); return 1; }
	case 15: { SCMF(playerid, 0x6495EDFF, "На складе %d материалов", groovmatbi); return 1; }
	case 17: { SCMF(playerid, 0x6495EDFF, "На складе %d материалов", aztekmatbi); return 1; }
	case 18: { SCMF(playerid, 0x6495EDFF, "На складе %d материалов", rifamatbi); return 1; }
	case 19: { SCMF(playerid, 0x6495EDFF, "На складе %d материалов", armmatbi); return 1; }
	case 21: { SCMF(playerid, 0x6495EDFF, "На складе %d материалов", lvpdmats); return 1; }
	}
	if(PlayerInfo[playerid][bAdmin] >= 3)
	{
		SCMF(playerid, 0x6495EDFF, "[ЛСПД] На складе %d материалов", lspdmatbi);
		SCMF(playerid, 0x6495EDFF, "[ФБР] На складе %d материалов", fbimats);
		SCMF(playerid, 0x6495EDFF, "[СФА] На складе %d материалов", armmatsf);
		SCMF(playerid, 0x6495EDFF, "[ВМФ] На складе %d материалов", armyvmf);
		SCMF(playerid, 0x6495EDFF, "[ЛКН] На складе %d материалов", lcnmats);
		SCMF(playerid, 0x6495EDFF, "[Якудза] На складе %d материалов", yakuzamats);
		SCMF(playerid, 0x6495EDFF, "[СФПД] На складе %d материалов", sfpdmats);
		SCMF(playerid, 0x6495EDFF, "[БАЛЛАС] На складе %d материалов", ballasmatbi);
		SCMF(playerid, 0x6495EDFF, "[ВАГОС] На складе %d материалов", vagosmatbi);
		SCMF(playerid, 0x6495EDFF, "[РМ] На складе %d материалов", rmmats);
		SCMF(playerid, 0x6495EDFF, "[ГРУВ] На складе %d материалов", groovmatbi);
		SCMF(playerid, 0x6495EDFF, "[АЦТЕК] На складе %d материалов", aztekmatbi);
		SCMF(playerid, 0x6495EDFF, "[РИФА] На складе %d материалов", rifamatbi);
		SCMF(playerid, 0x6495EDFF, "[ЛВА] На складе %d материалов", armmatbi);
		SCMF(playerid, 0x6495EDFF, "[ЛВПД] На складе %d материалов", lvpdmats);
	}
	return 1;
}
ALTX:clearchat("/cc");
CMD:clearchat(playerid)
{
	if(PlayerInfo[playerid][bAdmin] < 5) return 1;
	for(new i = 0; i < 100; i++) SendClientMessageToAll(COLOR_GREY, " ");
	SendClientMessageToAll(COLOR_GREY, "Чат очищен администрацией!");
	format(stringer1,80, "Администратор %s очистил чат.",PlayerInfo[playerid][pNames]);
	ABroadCast(COLOR_GREY,stringer1,1);
	return 1;
}
CMD:free(playerid, params[])
{
	if(PlayerInfo[playerid][pMRInections] != 7 && PlayerInfo[playerid][pRKInections] != 2) return SCM(playerid, COLOR_GREY, "Вы не адвокат!");
	if(!GetPVarInt(playerid,"StartRabWork")) return SCM(playerid,COLOR_WHITE,"• {AC0000}[Ошибка] {ffffff}Вы не начали рабочий день!");
	if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/free [id] [цена]");
	if(PlayerInfo[params[0]][pJailed] != 1) return SCM(playerid, COLOR_GRAD1, "Человек не в тюрьме!");
	if(params[1] < 100 || params[1] > 50000) return SCM(playerid, COLOR_GREY, "Цена не может быть меньше 100 и больше 50000!");
	if(params[0] == playerid)  return  SCM(playerid,-1,"• {AC0000}[Ошибка] {ffffff}Вы указали свой ID");
	format(stringer1,126, "[Адвокат] Вы предложили %s выпустить его за %d вирт",PlayerInfo[params[0]][pNames],params[1]);
	SCM(playerid, 0x6ab1ffaa, stringer1);
	format(stringer1,126, "[Адвокат] Адвокат %s предлагает Вам свободу за %d вирт",PlayerInfo[playerid][pNames],params[1]);
	SCM(params[0], 0x6ab1ffaa, stringer1);
	SPD(params[0],6622,DIALOG_STYLE_MSGBOX,"{FF6F00}Адвокатские услуги", "{FFFFFF}Выберите способ оплаты:", "Наличные", "Банк");
	SetPVarInt(params[0], "FreeOffer", playerid);
	SetPVarInt(params[0], "FreePrice", params[1]);
	DeletePVar(params[0], "SposobOffer");
	return 1;
}
CMD:setskin(playerid, params[])
{
    if (PlayerInfo[playerid][bAdmin] < 7) return 1;
	if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/setskin [id игрока] [номер скина (1-299)]");
	if(params[1] > 311 || params[1] < 1) return SCM(playerid, COLOR_GREY, "Неправильный ID скина!");
	if(params[1] == 74 || params[1] == 0) return 1;
	if(!IsPlayerConnected(params[0])) return 1;
	PlayerInfo[params[0]][pChar] = params[1];
	format(stringer1,64, "Ваш скин был изменен администратором %s ", PlayerInfo[playerid][pNames]);
	SCM(params[0], 0x6ab1ffaa, stringer1);
	format(stringer1,64, "Вы изменили скин %s на номер: %d.", PlayerInfo[params[0]][pNames],params[1]);
	SCM(playerid, 0x6ab1ffaa, stringer1);
	SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar]);
	return 1;
}
CMD:setmats(playerid, params[])
{
	if(sscanf(params,"dd",params[0],params[1])) return	SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}/setmats [номер] [количество]"), SCM(playerid, COLOR_WHITE, "• {FFC800}[Подсказка] {ffffff}11 - всем фракциям");
	if(!strcmp(PlayerInfo[playerid][pNames], FD1, true) || !strcmp(PlayerInfo[playerid][pNames], FD2, true) || !strcmp(PlayerInfo[playerid][pNames], FD3, true))
	{
		switch (params[0])
		{
		case 1: { armmatbi = params[1]; format(stringer1,SMALL_SIZE, "Маты армии 51 изменены на: %d", params[1]); Update3DTextsArmy(); }
		case 2: { armmatsf = params[1]; format(stringer1,SMALL_SIZE, "Маты армии Авианосец изменены на: %d", params[1]); Update3DTextsArmy(); }
		case 3: { armyvmf = params[1]; format(stringer1,SMALL_SIZE, "Маты армии ВМФ изменены на: %d", params[1]); Update3DTextsArmy(); }
		case 4: { fbimats = params[1]; format(stringer1,SMALL_SIZE, "Маты FBI изменены на: %d", params[1]); Update3DTextsArmy(); }
		case 5: { lspdmatbi = params[1]; format(stringer1,SMALL_SIZE, "Маты LSP изменены на: %d", params[1]); Update3DTextsArmy(); }
		case 6: { sfpdmats = params[1]; format(stringer1,SMALL_SIZE, "Маты SFPD изменены на: %d", params[1]); Update3DTextsArmy(); }
		case 7: { lvpdmats = params[1]; format(stringer1,SMALL_SIZE, "Маты LVPD изменены на: %d", params[1]); Update3DTextsArmy(); }
		case 8: { yakuzamats = params[1]; format(stringer1,SMALL_SIZE, "Маты Якудза изменены на: %d", params[1]); Update3DTextsArmy(); }
		case 9: { lcnmats = params[1]; format(stringer1,SMALL_SIZE, "Маты ЛКН изменены на: %d", params[1]); Update3DTextsArmy(); }
		case 10: { rmmats = params[1]; format(stringer1,SMALL_SIZE, "Маты РМ изменены на: %d", params[1]); Update3DTextsArmy(); }
		case 11:
			{
				armmatbi = params[1];
				armmatsf = params[1];
				rifamatbi = params[1];
				ballasmatbi = params[1];
				aztekmatbi = params[1];
				vagosmatbi = params[1];
				groovmatbi = params[1];
				lspdmatbi = params[1];
				fbimats = params[1];
				yakuzamats = params[1];
				rmmats = params[1];
				lcnmats = params[1];
				sfpdmats = params[1];
				lvpdmats = params[1];
				armyvmf = params[1];
				format(stringer1,SMALL_SIZE, "Маты ВСЕМ фракциям изменены на %d", params[1]);
				Update3DTextsArmy();
				ObshiakGang();
			}
		default: format(stringer1,10, "• {AC0000}[Ошибка] {ffffff}");
		}
		SCM(playerid, COLOR_GRAD1, stringer1);
	}
	else SCM(playerid, COLOR_GRAD1, "Нет прав доступа!");
	SaveMaterials();
	return 1;
}
publics: CookTawersName(playerid)
{
	if(cache_get_row_count(connects)) return SCM(playerid, COLOR_WHITE, "Смена Ника: Данный Ник-Нейм занят");
	ChangichName(playerid);
	return 1;
}
stock ChangichName(playerid)
{
	new name[24];
	GetPlayerName(playerid, PlayerInfo[playerid][pNames], 24);
	mysql_real_escape_string(PlayerInfo[playerid][pNames], name);
	mysql_format(connects,stringer,MAX_STR, "UPDATE `accounts` SET `Name`='%s' WHERE `Name` = '%e'",WantNickChange[playerid],name);
	mysql_empty(connects, stringer);
	if(PlayerInfo[playerid][pHouse] != -1) strmid(HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 255), SaveHouse(PlayerInfo[playerid][pHouse]);
	if(PlayerInfo[playerid][pBusiness] != -1) strmid(BizInfo[PlayerInfo[playerid][pBusiness]][bOwner], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 255), SaveBusiness(PlayerInfo[playerid][pBusiness]);
	if(PlayerInfo[playerid][pFuelBiz] != -1) strmid(SBizzInfo[PlayerInfo[playerid][pFuelBiz]][sOwner], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 255), SaveSBizz(PlayerInfo[playerid][pFuelBiz]);
	new string2[MAX_STR];
	format(string2,sizeof(string2), "Игрок: %s сменил игровое Имя на %s",PlayerInfo[playerid][pNames],WantNickChange[playerid]);
	SendClientMessageToAll(0xFF8000FF, string2);
	SCM(playerid,COLOR_GREEN,"Пропишите новый ник в окне SA-MP, и продолжайте игру на сервере.");
	SetPlayerName(playerid, WantNickChange[playerid]);
	PlayerInfo[playerid][pRubInfo][0] -= 20;
	DonateLog(playerid, 20, "Смена игрового имени");
	new years, months, days,data[32];
	getdate(years, months, days);
	format(data, 32, "%02d.%02d.%04d", days, months, years);
	mysql_format(connects,stringer, 200, "INSERT INTO `log_name` (`Name`, `NewName`, `Date`) VALUES ('%s','%s','%s')", PlayerInfo[playerid][pNames], WantNickChange[playerid], data);
	mysql_empty(connects,stringer);
	KickEx(playerid,40);
	return 1;
}
stock IsTextInvalid(text[])
{
 	return (strfind(text, "none", true) != -1 || strfind(text, "None", true) != -1 || strfind(text, "NONE", true) != -1 || strfind(text, "'", true) != -1 || strfind(text, "/", true) != -1 ||
	strfind(text, "%", true) != -1 || strfind(text, ".", true) != -1 || strfind(text, "&", true) != -1 || strfind(text, "*", true) != -1 || strfind(text, "@", true) != -1 || strfind(text, "(", true) != -1 ||
	strfind(text, ")", true) != -1 || strfind(text, "`", true) != -1 || strfind(text, "[", true) != -1 || strfind(text, "]", true) != -1 || strfind(text, ",", true) != -1 || strfind(text, ".ru", true) != -1 ||
	strfind(text, ".com", true) != -1 || strfind(text, "roleplay", true) != -1 || strfind(text, "loh", true) != -1 || strfind(text, "pidar", true) != -1 || strfind(text, "noob", true) != -1 ||
	strfind(text, "huita", true) != -1 || strfind(text, "gavno", true) != -1 || strfind(text, "Admina", true) != -1 || strfind(text, "Ebal", true) != -1 || strfind(text, "Mamky", true) != -1 || strfind(text, "Мамку", true) != -1 ||
	strfind(text, "[Fuck This Server]", true) != -1 || strfind(text, "ARPBAN", true) != -1 || strfind(text, "DRPFAKT", true) != -1 || strfind(text, "RolePlay", true) != -1 || strfind(text, "GRP", true) != -1) ? true : false;
}
stock Deleted(playerid)
{
	for(new i = 0x0; i < 6; i++) PlayerTextDrawDestroy(playerid, Capture[playerid][i]);
	for(new i = 0x0; i < 3; i++) PlayerTextDrawDestroy(playerid, Bizwar[playerid][i]);
	for(new i = 0x0; i != 21; i++) PlayerTextDrawDestroy(playerid, DartProjectTD[i][playerid]);
	for(new i = 0x0; i != 10; i++) PlayerTextDrawDestroy(playerid, Race[i][playerid]);
	TextDrawDestroy(ProcentDraw[playerid]);
	TextDrawDestroy(AmountLDraw[playerid]);
	PlayerTextDrawDestroy(playerid, ShopACcost[playerid]);
	for(new i; i < 13; i++) TextDrawHideForPlayer(playerid, CounterSText[i]);
	DeletePVar(playerid,"PlayerInfo_MP");
	PlayerInfo_MP_START[playerid] = false;
	DeletePVar(playerid,"Pos_X_MP");
	DeletePVar(playerid,"Pos_Y_MP");
	DeletePVar(playerid,"Pos_Z_MP");
	DeletePVar(playerid,"Pos_A_MP");
	DeletePVar(playerid,"Pos_VW_MP");
	DeletePVar(playerid,"Pos_INT_MP");
	DeletePVar(playerid,"PlayerInfo_MP_Staus");
}
stock LoadDrawsInit()
{
    //Counter Strike
	CounterSText[0] = TextDrawCreate(163.250000, 244.166641, "usebox");
	TextDrawLetterSize(CounterSText[0], 0.000000, 9.794443);
	TextDrawTextSize(CounterSText[0], 21.750000, 0.000000);
	TextDrawAlignment(CounterSText[0], 1);
	TextDrawColor(CounterSText[0], 0);
	TextDrawUseBox(CounterSText[0], true);
	TextDrawBoxColor(CounterSText[0], 102);
	TextDrawSetShadow(CounterSText[0], 0);
	TextDrawSetOutline(CounterSText[0], 0);
	TextDrawBackgroundColor(CounterSText[0], 0x00000000);
	TextDrawFont(CounterSText[0], 0);

	CounterSText[1] = TextDrawCreate(24.375000, 241.499984, "LD_SPAC:white");
	TextDrawLetterSize(CounterSText[1], 0.000000, 0.000000);
	TextDrawTextSize(CounterSText[1], 136.250000, 1.750000);
	TextDrawAlignment(CounterSText[1], 1);
	TextDrawColor(CounterSText[1], -10083585);
	TextDrawSetShadow(CounterSText[1], 0);
	TextDrawSetOutline(CounterSText[1], 0);
	TextDrawBackgroundColor(CounterSText[1], 0x00000000);
	TextDrawFont(CounterSText[1], 4);

	CounterSText[2] = TextDrawCreate(24.125000, 333.500366, "LD_SPAC:white");
	TextDrawLetterSize(CounterSText[2], 0.000000, 0.000000);
	TextDrawTextSize(CounterSText[2], 136.250000, 1.750000);
	TextDrawAlignment(CounterSText[2], 1);
	TextDrawColor(CounterSText[2], -10083585);
	TextDrawSetShadow(CounterSText[2], 0);
	TextDrawSetOutline(CounterSText[2], 0);
	TextDrawBackgroundColor(CounterSText[2], 0x00000000);
	TextDrawFont(CounterSText[2], 4);

	CounterSText[3] = TextDrawCreate(24.375000, 241.500000, "LD_SPAC:white");
	TextDrawLetterSize(CounterSText[3], 0.000000, 0.000000);
	TextDrawTextSize(CounterSText[3], 1.250000, 93.333312);
	TextDrawAlignment(CounterSText[3], 1);
	TextDrawColor(CounterSText[3], -10083585);
	TextDrawSetShadow(CounterSText[3], 0);
	TextDrawSetOutline(CounterSText[3], 0);
	TextDrawBackgroundColor(CounterSText[3], 0x00000000);
	TextDrawFont(CounterSText[3], 4);

	CounterSText[4] = TextDrawCreate(160.375000, 241.916656, "LD_SPAC:white");
	TextDrawLetterSize(CounterSText[4], 0.000000, 0.000000);
	TextDrawTextSize(CounterSText[4], 1.250000, 93.333312);
	TextDrawAlignment(CounterSText[4], 1);
	TextDrawColor(CounterSText[4], -10083585);
	TextDrawSetShadow(CounterSText[4], 0);
	TextDrawSetOutline(CounterSText[4], 0);
	TextDrawBackgroundColor(CounterSText[4], 0x00000000);
	TextDrawFont(CounterSText[4], 4);

	CounterSText[5] = TextDrawCreate(24.375000, 255.500000, "LD_SPAC:white");
	TextDrawLetterSize(CounterSText[5], 0.000000, 0.000000);
	TextDrawTextSize(CounterSText[5], 136.875000, 0.583311);
	TextDrawAlignment(CounterSText[5], 1);
	TextDrawColor(CounterSText[5], -10083585);
	TextDrawSetShadow(CounterSText[5], 0);
	TextDrawSetOutline(CounterSText[5], 0);
	TextDrawBackgroundColor(CounterSText[5], 0x00000000);
	TextDrawFont(CounterSText[5], 4);

	CounterSText[6] = TextDrawCreate(93.125000, 244.999984, "Counter Strike");
	TextDrawLetterSize(CounterSText[6], 0.361248, 0.870832);
	TextDrawAlignment(CounterSText[6], 2);
	TextDrawColor(CounterSText[6], -1209889281);
	TextDrawSetShadow(CounterSText[6], 0);
	TextDrawSetOutline(CounterSText[6], 1);
	TextDrawBackgroundColor(CounterSText[6], 51);
	TextDrawFont(CounterSText[6], 2);
	TextDrawSetProportional(CounterSText[6], 1);

	CounterSText[7] = TextDrawCreate(24.125000, 320.083374, "LD_SPAC:white");
	TextDrawLetterSize(CounterSText[7], 0.000000, 0.000000);
	TextDrawTextSize(CounterSText[7], 136.875000, 0.583311);
	TextDrawAlignment(CounterSText[7], 1);
	TextDrawColor(CounterSText[7], -10083585);
	TextDrawSetShadow(CounterSText[7], 0);
	TextDrawSetOutline(CounterSText[7], 0);
	TextDrawBackgroundColor(CounterSText[7], 0x00000000);
	TextDrawFont(CounterSText[7], 4);

	CounterSText[8] = TextDrawCreate(94.375000, 279.416839, "C.TERRORIST: ~w~0");
	TextDrawLetterSize(CounterSText[8], 0.310000, 1.197499);
	TextDrawAlignment(CounterSText[8], 2);
	TextDrawColor(CounterSText[8], 439746559);
	TextDrawSetShadow(CounterSText[8], 0);
	TextDrawSetOutline(CounterSText[8], 1);
	TextDrawBackgroundColor(CounterSText[8], 51);
	TextDrawFont(CounterSText[8], 2);
	TextDrawSetProportional(CounterSText[8], 1);

	CounterSText[9] = TextDrawCreate(93.500000, 299.667266, "TERRORIST: ~w~0");
	TextDrawLetterSize(CounterSText[9], 0.310000, 1.197499);
	TextDrawAlignment(CounterSText[9], 2);
	TextDrawColor(CounterSText[9], -14276353);
	TextDrawSetShadow(CounterSText[9], 0);
	TextDrawSetOutline(CounterSText[9], 1);
	TextDrawBackgroundColor(CounterSText[9], 51);
	TextDrawFont(CounterSText[9], 2);
	TextDrawSetProportional(CounterSText[9], 1);

	CounterSText[10] = TextDrawCreate(92.500000, 322.583435, "_"); // JeyLo k VW
	TextDrawLetterSize(CounterSText[10], 0.214374, 0.835833);
	TextDrawAlignment(CounterSText[10], 2);
	TextDrawColor(CounterSText[10], -1);
	TextDrawSetShadow(CounterSText[10], 0);
	TextDrawSetOutline(CounterSText[10], 1);
	TextDrawBackgroundColor(CounterSText[10], 51);
	TextDrawFont(CounterSText[10], 1);
	TextDrawSetProportional(CounterSText[10], 1);

	CounterSText[11] = TextDrawCreate(25.375000, 270.500244, "LD_SPAC:white");
	TextDrawLetterSize(CounterSText[11], 0.000000, 0.000000);
	TextDrawTextSize(CounterSText[11], 136.250000, 1.750000);
	TextDrawAlignment(CounterSText[11], 1);
	TextDrawColor(CounterSText[11], -10083585);
	TextDrawSetShadow(CounterSText[11], 0);
	TextDrawSetOutline(CounterSText[11], 0);
	TextDrawBackgroundColor(CounterSText[11], 0x00000000);
	TextDrawFont(CounterSText[11], 4);

	CounterSText[12] = TextDrawCreate(92.500000, 258.999969, "TIME: ~w~10:00");
	TextDrawLetterSize(CounterSText[12], 0.307499, 0.882499);
	TextDrawAlignment(CounterSText[12], 2);
	TextDrawColor(CounterSText[12], -1610631169);
	TextDrawSetShadow(CounterSText[12], 0);
	TextDrawSetOutline(CounterSText[12], 1);
	TextDrawBackgroundColor(CounterSText[12], 51);
	TextDrawFont(CounterSText[12], 2);
	TextDrawSetProportional(CounterSText[12], 1);
	// Tuning
    Tuning[0] = TextDrawCreate(560.000000, 102.000000, "_");
    TextDrawBackgroundColor(Tuning[0], 255);
    TextDrawFont(Tuning[0], 1);
    TextDrawLetterSize(Tuning[0], 0.709999, 1.599998);
    TextDrawColor(Tuning[0], 0xFF9900AA);
    TextDrawSetOutline(Tuning[0], 0);
    TextDrawSetProportional(Tuning[0], 1);
    TextDrawSetShadow(Tuning[0], 1);
    TextDrawUseBox(Tuning[0], 1);
    TextDrawBoxColor(Tuning[0], 0xFF9900AA);
    TextDrawTextSize(Tuning[0], 72.000000, 20.000000);
    TextDrawSetSelectable(Tuning[0], 0);

    Tuning[1] = TextDrawCreate(560.000000, 120.000000, "_");
    TextDrawBackgroundColor(Tuning[1], 255);
    TextDrawFont(Tuning[1], 1);
    TextDrawLetterSize(Tuning[1], 0.709999, 1.699998);
    TextDrawColor(Tuning[1], -1);
    TextDrawSetOutline(Tuning[1], 0);
    TextDrawSetProportional(Tuning[1], 1);
    TextDrawSetShadow(Tuning[1], 1);
    TextDrawUseBox(Tuning[1], 1);
    TextDrawBoxColor(Tuning[1], 150);
    TextDrawTextSize(Tuning[1], 72.000000, 20.000000);
    TextDrawSetSelectable(Tuning[1], 0);

    Tuning[2] = TextDrawCreate(243.000000, 144.000000, "_");
    TextDrawBackgroundColor(Tuning[2], 255);
    TextDrawFont(Tuning[2], 1);
    TextDrawLetterSize(Tuning[2], 0.709999, 21.299999);
    TextDrawColor(Tuning[2], -1);
    TextDrawSetOutline(Tuning[2], 0);
    TextDrawSetProportional(Tuning[2], 1);
    TextDrawSetShadow(Tuning[2], 1);
    TextDrawUseBox(Tuning[2], 1);
    TextDrawBoxColor(Tuning[2], 150);
    TextDrawTextSize(Tuning[2], 72.000000, 19.000000);
    TextDrawSetSelectable(Tuning[2], 0);

    Tuning[3] = TextDrawCreate(271.000000, 105.000000, "Tuning Car");
    TextDrawBackgroundColor(Tuning[3], 255);
    TextDrawFont(Tuning[3], 2);
    TextDrawLetterSize(Tuning[3], 0.300000, 1.000000);
    TextDrawColor(Tuning[3], -1);
    TextDrawSetOutline(Tuning[3], 0);
    TextDrawSetProportional(Tuning[3], 1);
    TextDrawSetShadow(Tuning[3], 0);
    TextDrawSetSelectable(Tuning[3], 0);

    Tuning[4] = TextDrawCreate(368.000000, 152.000000, "Inspire RP");
    TextDrawBackgroundColor(Tuning[4], 255);
    TextDrawFont(Tuning[4], 2);
    TextDrawLetterSize(Tuning[4], 0.250000, 1.100000);
    TextDrawColor(Tuning[4], -1);
    TextDrawSetOutline(Tuning[4], 0);
    TextDrawSetProportional(Tuning[4], 1);
    TextDrawSetShadow(Tuning[4], 0);
    TextDrawSetSelectable(Tuning[4], 0);

    Tuning[5] = TextDrawCreate(560.000000, 144.000000, "_");
    TextDrawBackgroundColor(Tuning[5], 255);
    TextDrawFont(Tuning[5], 1);
    TextDrawLetterSize(Tuning[5], 0.709999, 2.900000);
    TextDrawColor(Tuning[5], -1);
    TextDrawSetOutline(Tuning[5], 0);
    TextDrawSetProportional(Tuning[5], 1);
    TextDrawSetShadow(Tuning[5], 1);
    TextDrawUseBox(Tuning[5], 1);
    TextDrawBoxColor(Tuning[5], 0xFF9900AA);
    TextDrawTextSize(Tuning[5], 247.000000, 19.000000);
    TextDrawSetSelectable(Tuning[5], 0);

    Tuning[6] = TextDrawCreate(538.000000, 105.000000, "X");
    TextDrawBackgroundColor(Tuning[6], 255);
    TextDrawFont(Tuning[6], 1);
    TextDrawLetterSize(Tuning[6], 0.500000, 1.000000);
    TextDrawColor(Tuning[6], 255);
    TextDrawSetOutline(Tuning[6], 0);
    TextDrawSetProportional(Tuning[6], 1);
    TextDrawSetShadow(Tuning[6], 0);
    TextDrawUseBox(Tuning[6], 1);
    TextDrawBoxColor(Tuning[6], 0);
    TextDrawTextSize(Tuning[6], 550.000000, 10.000000);
    TextDrawSetSelectable(Tuning[6], true);

    Tuning[7] = TextDrawCreate(88.000000, 123.000000, "Wheels");
    TextDrawBackgroundColor(Tuning[7], 255);
    TextDrawFont(Tuning[7], 2);
    TextDrawLetterSize(Tuning[7], 0.300000, 1.000000);
    TextDrawColor(Tuning[7], -1);
    TextDrawSetOutline(Tuning[7], 0);
    TextDrawSetProportional(Tuning[7], 1);
    TextDrawSetShadow(Tuning[7], 0);
    TextDrawUseBox(Tuning[7], 1);
    TextDrawBoxColor(Tuning[7], 0);
    TextDrawTextSize(Tuning[7], 137.000000, 10.000000);
    TextDrawSetSelectable(Tuning[7], true);

    Tuning[8] = TextDrawCreate(150.000000, 123.000000, "Color");
    TextDrawBackgroundColor(Tuning[8], 255);
    TextDrawFont(Tuning[8], 2);
    TextDrawLetterSize(Tuning[8], 0.300000, 1.000000);
    TextDrawColor(Tuning[8], -1);
    TextDrawSetOutline(Tuning[8], 0);
    TextDrawSetProportional(Tuning[8], 1);
    TextDrawSetShadow(Tuning[8], 0);
    TextDrawUseBox(Tuning[8], 1);
    TextDrawBoxColor(Tuning[8], 0);
    TextDrawTextSize(Tuning[8], 190.000000, 10.000000);
    TextDrawSetSelectable(Tuning[8], true);

    Tuning[9] = TextDrawCreate(204.000000, 123.000000, "paintjobs");
    TextDrawBackgroundColor(Tuning[9], 255);
    TextDrawFont(Tuning[9], 2);
    TextDrawLetterSize(Tuning[9], 0.300000, 1.000000);
    TextDrawColor(Tuning[9], -1);
    TextDrawSetOutline(Tuning[9], 0);
    TextDrawSetProportional(Tuning[9], 1);
    TextDrawSetShadow(Tuning[9], 0);
    TextDrawUseBox(Tuning[9], 1);
    TextDrawBoxColor(Tuning[9], 0);
    TextDrawTextSize(Tuning[9], 274.000000, 10.000000);
    TextDrawSetSelectable(Tuning[9], true);

    Tuning[10] = TextDrawCreate(284.000000, 123.000000, "nitro");
    TextDrawBackgroundColor(Tuning[10], 255);
    TextDrawFont(Tuning[10], 2);
    TextDrawLetterSize(Tuning[10], 0.300000, 1.000000);
    TextDrawColor(Tuning[10], -1);
    TextDrawSetOutline(Tuning[10], 0);
    TextDrawSetProportional(Tuning[10], 1);
    TextDrawSetShadow(Tuning[10], 0);
    TextDrawUseBox(Tuning[10], 1);
    TextDrawBoxColor(Tuning[10], 0);
    TextDrawTextSize(Tuning[10], 320.000000, 10.000000);
    TextDrawSetSelectable(Tuning[10], true);

    Tuning[11] = TextDrawCreate(334.000000, 123.000000, "hydraulics");
    TextDrawBackgroundColor(Tuning[11], 255);
    TextDrawFont(Tuning[11], 2);
    TextDrawLetterSize(Tuning[11], 0.300000, 1.000000);
    TextDrawColor(Tuning[11], -1);
    TextDrawSetOutline(Tuning[11], 0);
    TextDrawSetProportional(Tuning[11], 1);
    TextDrawSetShadow(Tuning[11], 0);
    TextDrawUseBox(Tuning[11], 1);
    TextDrawBoxColor(Tuning[11], 0);
    TextDrawTextSize(Tuning[11], 411.000000, 10.000000);
    TextDrawSetSelectable(Tuning[11], true);

    Tuning[12] = TextDrawCreate(424.000000, 123.000000, "else");
    TextDrawBackgroundColor(Tuning[12], 255);
    TextDrawFont(Tuning[12], 2);
    TextDrawLetterSize(Tuning[12], 0.300000, 1.000000);
    TextDrawColor(Tuning[12], -1);
    TextDrawSetOutline(Tuning[12], 0);
    TextDrawSetProportional(Tuning[12], 1);
    TextDrawSetShadow(Tuning[12], 0);
    TextDrawUseBox(Tuning[12], 1);
    TextDrawBoxColor(Tuning[12], 0);
    TextDrawTextSize(Tuning[12], 457.000000, 10.000000);
    TextDrawSetSelectable(Tuning[12], true);

    Tuning[13] = TextDrawCreate(466.000000, 123.000000, "external");
    TextDrawBackgroundColor(Tuning[13], 255);
    TextDrawFont(Tuning[13], 2);
    TextDrawLetterSize(Tuning[13], 0.300000, 1.000000);
    TextDrawColor(Tuning[13], -1);
    TextDrawSetOutline(Tuning[13], 0);
    TextDrawSetProportional(Tuning[13], 1);
    TextDrawSetShadow(Tuning[13], 0);
    TextDrawUseBox(Tuning[13], 1);
    TextDrawBoxColor(Tuning[13], 0);
    TextDrawTextSize(Tuning[13], 542.000000, 10.000000);
    TextDrawSetSelectable(Tuning[13], true);
	//
    ACshop[0] = TextDrawCreate(544.333129, 352.433349, "usebox");
	TextDrawLetterSize(ACshop[0], 0.000000, 0.743412);	TextDrawTextSize(ACshop[0], 506.333404, 0.000000);
	TextDrawAlignment(ACshop[0], 1);	TextDrawColor(ACshop[0], 0);
	TextDrawUseBox(ACshop[0], true);	TextDrawBoxColor(ACshop[0], -1523963137);
	TextDrawSetShadow(ACshop[0], 0);	TextDrawSetOutline(ACshop[0], 0);	TextDrawFont(ACshop[0], 0);

	ACshop[1] = TextDrawCreate(511.666625, 350.518615, "CONFIRM");
	TextDrawLetterSize(ACshop[1], 0.152999, 0.952889);	TextDrawAlignment(ACshop[1], 1);
	TextDrawColor(ACshop[1], -1);	TextDrawSetShadow(ACshop[1], 1);
	TextDrawSetOutline(ACshop[1], 0);	TextDrawBackgroundColor(ACshop[1], 51);
	TextDrawFont(ACshop[1], 2);	TextDrawSetProportional(ACshop[1], 1);	TextDrawSetSelectable(ACshop[1], true);

	ACshop[2] = TextDrawCreate(578.666381, 352.433319, "usebox");
	TextDrawLetterSize(ACshop[2], 0.000000, 0.710082);	TextDrawTextSize(ACshop[2], 542.333374, 0.000000);
	TextDrawAlignment(ACshop[2], 1);	TextDrawColor(ACshop[2], 0);
	TextDrawUseBox(ACshop[2], true);	TextDrawBoxColor(ACshop[2], -1523963137);
	TextDrawSetShadow(ACshop[2], 0);	TextDrawSetOutline(ACshop[2], 0);	TextDrawFont(ACshop[2], 0);

	ACshop[3] = TextDrawCreate(551.000122, 350.933441, "Exit");
	TextDrawLetterSize(ACshop[3], 0.213000, 0.911407);	TextDrawAlignment(ACshop[3], 1);
	TextDrawColor(ACshop[3], -1);	TextDrawUseBox(ACshop[3], true);
	TextDrawBoxColor(ACshop[3], 0);	TextDrawSetShadow(ACshop[3], 1);
	TextDrawSetOutline(ACshop[3], 0);	TextDrawBackgroundColor(ACshop[3], 51);
	TextDrawFont(ACshop[3], 2);	TextDrawSetProportional(ACshop[3], 1);	TextDrawSetSelectable(ACshop[3], true);

	ACshop[4] = TextDrawCreate(559.666625, 309.292510, "usebox");
	TextDrawLetterSize(ACshop[4], 0.000000, 3.508847);	TextDrawTextSize(ACshop[4], 522.333312, 0.000000);	TextDrawAlignment(ACshop[4], 1);
	TextDrawColor(ACshop[4], 0);	TextDrawUseBox(ACshop[4], true);	TextDrawBoxColor(ACshop[4], 102);	TextDrawSetShadow(ACshop[4], 0);
	TextDrawSetOutline(ACshop[4], 0);	TextDrawFont(ACshop[4], 0);

	ACshop[5] = TextDrawCreate(523.666625, 308.207397, "Wlypa");
	TextDrawLetterSize(ACshop[5], 0.000000, 0.000000);	TextDrawTextSize(ACshop[5], 34.333374, 34.014831);
	TextDrawAlignment(ACshop[5], 1);	TextDrawColor(ACshop[5], -1);
	TextDrawUseBox(ACshop[5], true);	TextDrawBoxColor(ACshop[5], 0);	TextDrawSetShadow(ACshop[5], 0);
	TextDrawSetOutline(ACshop[5], 0);	TextDrawFont(ACshop[5], 5);
	TextDrawSetPreviewModel(ACshop[5], 18950);	TextDrawBackgroundColor(ACshop[5], 2130706432);
	TextDrawSetPreviewRot(ACshop[5], 180.000000, 90.000000, 0.000000, 1.000000);	TextDrawSetSelectable(ACshop[5], true);

	ACshop[6] = TextDrawCreate(559.666564, 273.618408, "usebox");
	TextDrawLetterSize(ACshop[6], 0.000000, 3.420781);	TextDrawTextSize(ACshop[6], 522.333312, 0.000000);	TextDrawAlignment(ACshop[6], 1);	TextDrawColor(ACshop[6], 0);
	TextDrawUseBox(ACshop[6], true);	TextDrawBoxColor(ACshop[6], 102);	TextDrawSetShadow(ACshop[6], 0);	TextDrawSetOutline(ACshop[6], 0);	TextDrawFont(ACshop[6], 0);

	ACshop[7] = TextDrawCreate(523.999938, 272.533355, "Ochki");
	TextDrawLetterSize(ACshop[7], 0.000000, 0.000000);	TextDrawTextSize(ACshop[7], 33.666625, 33.185180);	TextDrawAlignment(ACshop[7], 1);	TextDrawColor(ACshop[7], -1);
	TextDrawUseBox(ACshop[7], true);	TextDrawBoxColor(ACshop[7], 0);	TextDrawSetShadow(ACshop[7], 0);	TextDrawSetOutline(ACshop[7], 0);
	TextDrawFont(ACshop[7], 5);TextDrawSetPreviewModel(ACshop[7], 19019);	TextDrawBackgroundColor(ACshop[7], 2130706432);	TextDrawSetPreviewRot(ACshop[7], 200.000000, 180.000000, 300.000000, 1.000000);
	TextDrawSetSelectable(ACshop[7], true);

	ACshop[8] = TextDrawCreate(555.000000, 362.803710, "usebox");
	TextDrawLetterSize(ACshop[8], 0.000000, 0.466872);TextDrawTextSize(ACshop[8], 528.666748, 0.000000);
	TextDrawAlignment(ACshop[8], 1);	TextDrawColor(ACshop[8], 0);
	TextDrawUseBox(ACshop[8], true);	TextDrawBoxColor(ACshop[8], -1523963137);
	TextDrawSetShadow(ACshop[8], 0);	TextDrawSetOutline(ACshop[8], 0);	TextDrawFont(ACshop[8], 0);

	ANIMATION[0] = TextDrawCreate(444.666595, 417.718505, "PRESS");
	TextDrawLetterSize(ANIMATION[0], 0.402000, 1.512888);

	ANIMATION[1] = TextDrawCreate(488.000000, 417.718566, "L-ALT");
	TextDrawLetterSize(ANIMATION[1], 0.381999, 1.521185);

	ANIMATION[2] = TextDrawCreate(530.666687, 417.303680, "TO STOP ANIM");
	TextDrawLetterSize(ANIMATION[2], 0.330666, 1.554370);

	TextDrawAlignment(ANIMATION[0], 1);	TextDrawColor(ANIMATION[0], -1);
	TextDrawSetShadow(ANIMATION[0], 0); TextDrawSetOutline(ANIMATION[0], 1);
	TextDrawBackgroundColor(ANIMATION[0], 51);	TextDrawFont(ANIMATION[0], 1);	TextDrawSetProportional(ANIMATION[0], 1);

	TextDrawAlignment(ANIMATION[1], 1);	TextDrawColor(ANIMATION[1], -1523963137);	TextDrawUseBox(ANIMATION[1], true);
	TextDrawBoxColor(ANIMATION[1], 0);	TextDrawSetShadow(ANIMATION[1], 0);	TextDrawSetOutline(ANIMATION[1], 1);
	TextDrawBackgroundColor(ANIMATION[1], 51);	TextDrawFont(ANIMATION[1], 1);	TextDrawSetProportional(ANIMATION[1], 1);

	TextDrawAlignment(ANIMATION[2], 1);	TextDrawColor(ANIMATION[2], -1);
	TextDrawSetShadow(ANIMATION[2], 0);	TextDrawSetOutline(ANIMATION[2], 1);
	TextDrawBackgroundColor(ANIMATION[2], 51);	TextDrawFont(ANIMATION[2], 1);	TextDrawSetProportional(ANIMATION[2], 1);

	SHOPAUTOTEXT[0] = TextDrawCreate(527.000000, 230.000000, "<<");
	TextDrawLetterSize(SHOPAUTOTEXT[0], 0.220000, 1.199999);

	SHOPAUTOTEXT[1] = TextDrawCreate(581.000000, 230.000000, ">>");
	TextDrawLetterSize(SHOPAUTOTEXT[1], 0.220000, 1.199999);

	SHOPAUTOTEXT[2] = TextDrawCreate(581.000000, 271.000000, ">");
	TextDrawLetterSize(SHOPAUTOTEXT[2], 0.220000, 0.599999);

	SHOPAUTOTEXT[3] = TextDrawCreate(581.000000, 281.000000, ">");
	TextDrawLetterSize(SHOPAUTOTEXT[3], 0.220000, 0.599999);

	SHOPAUTOTEXT[4] = TextDrawCreate(527.000000, 281.000000, "<");
	TextDrawLetterSize(SHOPAUTOTEXT[4], 0.220000, 0.599999);

	SHOPAUTOTEXT[5] = TextDrawCreate(527.000000, 271.000000, "<");
	TextDrawLetterSize(SHOPAUTOTEXT[5], 0.220000, 0.599999);

	for(new s; s < 6; s++)
	{
		TextDrawTextSize(SHOPAUTOTEXT[s], 10.10, 40.40);		TextDrawAlignment(SHOPAUTOTEXT[s], 2);
		TextDrawBackgroundColor(SHOPAUTOTEXT[s], 255);		TextDrawFont(SHOPAUTOTEXT[s], 2);
		TextDrawColor(SHOPAUTOTEXT[s], -1);		TextDrawSetProportional(SHOPAUTOTEXT[s], 1);
		TextDrawSetShadow(SHOPAUTOTEXT[s], 1);		TextDrawUseBox(SHOPAUTOTEXT[s], 1);
		TextDrawBoxColor(SHOPAUTOTEXT[s], 144);		TextDrawSetSelectable(SHOPAUTOTEXT[s],true);
	}

	SHOPAUTOTEXT[6] = TextDrawCreate(556.000000, 311.000000, "buy");	TextDrawLetterSize(SHOPAUTOTEXT[6], 0.450000, 0.899999);
	TextDrawBoxColor(SHOPAUTOTEXT[6], 144);	TextDrawTextSize(SHOPAUTOTEXT[6], 10.10, 56.56);	TextDrawSetSelectable(SHOPAUTOTEXT[6], 1);

	SHOPAUTOTEXT[7] = TextDrawCreate(556.000000, 331.000000, "exit");	TextDrawLetterSize(SHOPAUTOTEXT[7], 0.450000, 0.899999);
	TextDrawBoxColor(SHOPAUTOTEXT[7], 144);	TextDrawTextSize(SHOPAUTOTEXT[7], 10.10, 56.56);	TextDrawSetSelectable(SHOPAUTOTEXT[7],true);

	SHOPAUTOTEXT[8] = TextDrawCreate(554.000000, 161.000000, "_");	TextDrawLetterSize(SHOPAUTOTEXT[8], 0.500000, 22.200017);
	TextDrawSetProportional(SHOPAUTOTEXT[8], 1);	TextDrawBoxColor(SHOPAUTOTEXT[8], 69);	TextDrawTextSize(SHOPAUTOTEXT[8], 0.000000, 105.000000);

	for(new e = 6; e < 9; e++)
	{
		TextDrawAlignment(SHOPAUTOTEXT[e], 2);	TextDrawBackgroundColor(SHOPAUTOTEXT[e], 255);
		TextDrawFont(SHOPAUTOTEXT[e], 3);		TextDrawColor(SHOPAUTOTEXT[e], -1);
		TextDrawSetProportional(SHOPAUTOTEXT[e], 1);		TextDrawSetShadow(SHOPAUTOTEXT[e], 1);		TextDrawUseBox(SHOPAUTOTEXT[e], 1);
	}

	SHOPAUTOTEXT[9] = TextDrawCreate(522.000000, 211.000000, "SELECT CAR");
	SHOPAUTOTEXT[10] = TextDrawCreate(537.000000, 251.000000, "COLOR");
	SHOPAUTOTEXT[11] = TextDrawCreate(541.000000, 165.000000, "INFO");

	for(new r = 9; r < 12; r++)
	{
		TextDrawBackgroundColor(SHOPAUTOTEXT[r], 255);		TextDrawFont(SHOPAUTOTEXT[r], 2);
		TextDrawSetOutline(SHOPAUTOTEXT[r], 0);		TextDrawSetShadow(SHOPAUTOTEXT[r], 0);
		TextDrawLetterSize(SHOPAUTOTEXT[r], 0.260000, 1.300000);		TextDrawColor(SHOPAUTOTEXT[r], -2016477185);		TextDrawSetProportional(SHOPAUTOTEXT[r], 1);
	}

	bankmenu[0] = TextDrawCreate(192.333328, 258.270355, "usebox");	TextDrawLetterSize(bankmenu[0], 0.000000, -6.400615);
	TextDrawTextSize(bankmenu[0], 442.666687, 0.000000);	TextDrawAlignment(bankmenu[0], 1);
	TextDrawColor(bankmenu[0], 0);	TextDrawUseBox(bankmenu[0], true);
	TextDrawBoxColor(bankmenu[0], 102);	TextDrawSetShadow(bankmenu[0], 0);
	TextDrawSetOutline(bankmenu[0], 0);	TextDrawFont(bankmenu[0], 0);

	bankmenu[1] = TextDrawCreate(248.666656, 204.759262, "usebox");	TextDrawLetterSize(bankmenu[1], 0.000000, 5.444648);
	TextDrawTextSize(bankmenu[1], 189.666656, 0.000000);	TextDrawAlignment(bankmenu[1], 1);
	TextDrawColor(bankmenu[1], 0);	TextDrawUseBox(bankmenu[1], true);
	TextDrawBoxColor(bankmenu[1], 102);	TextDrawSetShadow(bankmenu[1], 0);	TextDrawSetOutline(bankmenu[1], 0);	TextDrawFont(bankmenu[1], 0);

	bankmenu[2] = TextDrawCreate(249.000000, 258.685180, "usebox");	TextDrawLetterSize(bankmenu[2], 0.000000, 1.480866);
	TextDrawTextSize(bankmenu[2], 189.666656, 0.000000);	TextDrawAlignment(bankmenu[2], 1);
	TextDrawColor(bankmenu[2], 0);	TextDrawUseBox(bankmenu[2], true);
	TextDrawBoxColor(bankmenu[2], -1523963137);	TextDrawSetShadow(bankmenu[2], 0);
	TextDrawSetOutline(bankmenu[2], 0);	TextDrawFont(bankmenu[2], 0);

	bankmenu[3] = TextDrawCreate(194.000000, 256.770385, "WITHDRAW");	TextDrawLetterSize(bankmenu[3], 0.228666, 1.550222);
	TextDrawAlignment(bankmenu[3], 1);	TextDrawColor(bankmenu[3], -1);
	TextDrawSetShadow(bankmenu[3], 0);	TextDrawSetOutline(bankmenu[3], 1);
	TextDrawBackgroundColor(bankmenu[3], 51);	TextDrawFont(bankmenu[3], 2);
	TextDrawSetProportional(bankmenu[3], 1);	TextDrawSetSelectable(bankmenu[3], true);

	bankmenu[4] = TextDrawCreate(304.666656, 204.759262, "usebox");	TextDrawLetterSize(bankmenu[4], 0.000000, 5.444648);
	TextDrawTextSize(bankmenu[4], 246.666671, 0.000000);	TextDrawAlignment(bankmenu[4], 1);
	TextDrawColor(bankmenu[4], 0);	TextDrawUseBox(bankmenu[4], true);
	TextDrawBoxColor(bankmenu[4], 102);	TextDrawSetShadow(bankmenu[4], 0);
	TextDrawSetOutline(bankmenu[4], 0);	TextDrawFont(bankmenu[4], 0);

	bankmenu[5] = TextDrawCreate(304.666656, 258.685180, "usebox");	TextDrawLetterSize(bankmenu[5], 0.000000, 1.480866);
	TextDrawTextSize(bankmenu[5], 246.666671, 0.000000);	TextDrawAlignment(bankmenu[5], 1);
	TextDrawColor(bankmenu[5], 0);	TextDrawUseBox(bankmenu[5], true);
	TextDrawBoxColor(bankmenu[5], -1523963137);	TextDrawSetShadow(bankmenu[5], 0);
	TextDrawSetOutline(bankmenu[5], 0);	TextDrawFont(bankmenu[5], 0);

	bankmenu[6] = TextDrawCreate(252.666580, 256.770385, "PUT MONEY");	TextDrawLetterSize(bankmenu[6], 0.192333, 1.566814);
	TextDrawAlignment(bankmenu[6], 1);	TextDrawColor(bankmenu[6], -1);
	TextDrawSetShadow(bankmenu[6], 0);	TextDrawSetOutline(bankmenu[6], 1);
	TextDrawBackgroundColor(bankmenu[6], 51);	TextDrawFont(bankmenu[6], 2);	TextDrawSetProportional(bankmenu[6], 1);	TextDrawSetSelectable(bankmenu[6], true);

	bankmenu[7] = TextDrawCreate(305.333343, 257.025939, "usebox");	TextDrawLetterSize(bankmenu[7], 0.000000, -6.170166);	TextDrawTextSize(bankmenu[7], 357.333343, 0.000000);
	TextDrawAlignment(bankmenu[7], 1);	TextDrawColor(bankmenu[7], 0);	TextDrawUseBox(bankmenu[7], true);	TextDrawBoxColor(bankmenu[7], 102);
	TextDrawSetShadow(bankmenu[7], 0);	TextDrawSetOutline(bankmenu[7], 0);	TextDrawFont(bankmenu[7], 0);

	bankmenu[8] = TextDrawCreate(360.000000, 258.685180, "usebox");	TextDrawLetterSize(bankmenu[8], 0.000000, 1.480866);
	TextDrawTextSize(bankmenu[8], 302.333312, 0.000000);	TextDrawAlignment(bankmenu[8], 1);
	TextDrawColor(bankmenu[8], 0);	TextDrawUseBox(bankmenu[8], true);
	TextDrawBoxColor(bankmenu[8], -1523963137);	TextDrawSetShadow(bankmenu[8], 0);
	TextDrawSetOutline(bankmenu[8], 0);	TextDrawFont(bankmenu[8], 0);

	bankmenu[9] = TextDrawCreate(307.666595, 257.185150, "GET MONEY");	TextDrawLetterSize(bankmenu[9], 0.201000, 1.500444);
	TextDrawAlignment(bankmenu[9], 1);	TextDrawColor(bankmenu[9], -1);
	TextDrawSetShadow(bankmenu[9], 0);	TextDrawSetOutline(bankmenu[9], 1);
	TextDrawBackgroundColor(bankmenu[9], 51);	TextDrawFont(bankmenu[9], 2);
	TextDrawSetProportional(bankmenu[9], 1);	TextDrawSetSelectable(bankmenu[9], true);

	bankmenu[10] = TextDrawCreate(444.999786, 189.825927, "usebox");	TextDrawLetterSize(bankmenu[10], 0.000000, 1.158229);
	TextDrawTextSize(bankmenu[10], 405.666473, 0.000000);	TextDrawAlignment(bankmenu[10], 1);
	TextDrawColor(bankmenu[10], 0);	TextDrawUseBox(bankmenu[10], true);
	TextDrawBoxColor(bankmenu[10], -1523963137);	TextDrawSetShadow(bankmenu[10], 0);
	TextDrawSetOutline(bankmenu[10], 0);	TextDrawFont(bankmenu[10], 0);

	bankmenu[11] = TextDrawCreate(411.000183, 188.740676, "Close");	TextDrawLetterSize(bankmenu[11], 0.224666, 1.172740);
	TextDrawAlignment(bankmenu[11], 1);	TextDrawColor(bankmenu[11], -1);
	TextDrawSetShadow(bankmenu[11], 0);	TextDrawSetOutline(bankmenu[11], 1);
	TextDrawBackgroundColor(bankmenu[11], 51);	TextDrawFont(bankmenu[11], 2);
	TextDrawSetProportional(bankmenu[11], 1);	TextDrawSetSelectable(bankmenu[11], true);

	bankmenu[12] = TextDrawCreate(304.000000, 189.411102, "usebox");	TextDrawLetterSize(bankmenu[12], 0.000000, -0.270574);
	TextDrawTextSize(bankmenu[12], 300.000000, 0.000000);	TextDrawAlignment(bankmenu[12], 1);
	TextDrawColor(bankmenu[12], 0);	TextDrawUseBox(bankmenu[12], true);
	TextDrawBoxColor(bankmenu[12], 102);	TextDrawSetShadow(bankmenu[12], 0);
	TextDrawSetOutline(bankmenu[12], 0);	TextDrawFont(bankmenu[12], 0);

	bankmenu[13] = TextDrawCreate(413.666687, 204.759262, "usebox");	TextDrawLetterSize(bankmenu[13], 0.000000, 5.444648);
	TextDrawTextSize(bankmenu[13], 358.000000, 0.000000);	TextDrawAlignment(bankmenu[13], 1);
	TextDrawColor(bankmenu[13], 0);	TextDrawUseBox(bankmenu[13], true);
	TextDrawBoxColor(bankmenu[13], 102);	TextDrawSetShadow(bankmenu[13], 0);
	TextDrawSetOutline(bankmenu[13], 0);	TextDrawFont(bankmenu[13], 0);

	bankmenu[14] = TextDrawCreate(413.666687, 258.685180, "usebox");	TextDrawLetterSize(bankmenu[14], 0.000000, 1.480866);
	TextDrawTextSize(bankmenu[14], 357.666687, 0.000000);	TextDrawAlignment(bankmenu[14], 1);
	TextDrawColor(bankmenu[14], 0);	TextDrawUseBox(bankmenu[14], true);
	TextDrawBoxColor(bankmenu[14], -1523963137);	TextDrawSetShadow(bankmenu[14], 0);
	TextDrawSetOutline(bankmenu[14], 0);	TextDrawFont(bankmenu[14], 0);

	bankmenu[15] = TextDrawCreate(360.333496, 256.770385, "PUT IN BIZZ");	TextDrawLetterSize(bankmenu[15], 0.208000, 1.583407);
	TextDrawAlignment(bankmenu[15], 1);	TextDrawColor(bankmenu[15], -1);
	TextDrawSetShadow(bankmenu[15], 0);	TextDrawSetOutline(bankmenu[15], 1);
	TextDrawBackgroundColor(bankmenu[15], 51);	TextDrawFont(bankmenu[15], 2);	TextDrawSetProportional(bankmenu[15], 1);	TextDrawSetSelectable(bankmenu[15], true);

	bankmenu[16] = TextDrawCreate(443.000000, 224.255554, "usebox");	TextDrawLetterSize(bankmenu[16], 0.000000, 1.019959);
	TextDrawTextSize(bankmenu[16], 413.000000, 0.000000);	TextDrawAlignment(bankmenu[16], 1);
	TextDrawColor(bankmenu[16], 0);	TextDrawUseBox(bankmenu[16], true);
	TextDrawBoxColor(bankmenu[16], -1523963137);	TextDrawSetShadow(bankmenu[16], 0);
	TextDrawSetOutline(bankmenu[16], 0);	TextDrawFont(bankmenu[16], 0);

	bankmenu[17] = TextDrawCreate(416.666748, 223.170394, "BANK");	TextDrawLetterSize(bankmenu[17], 0.200333, 1.098073);
	TextDrawAlignment(bankmenu[17], 1);	TextDrawColor(bankmenu[17], -1);
	TextDrawSetShadow(bankmenu[17], 0);	TextDrawSetOutline(bankmenu[17], 1);
	TextDrawBackgroundColor(bankmenu[17], 51);	TextDrawFont(bankmenu[17], 2);	TextDrawSetProportional(bankmenu[17], 1);

	bankmenu[18] = TextDrawCreate(192.000000, 204.088897, "LD_SPAC:white");	TextDrawLetterSize(bankmenu[18], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[18], 54.333328, 51.437026);	TextDrawAlignment(bankmenu[18], 1);
	TextDrawColor(bankmenu[18], -1);	TextDrawUseBox(bankmenu[18], true);
	TextDrawBoxColor(bankmenu[18], 0);	TextDrawSetShadow(bankmenu[18], 0);
	TextDrawSetOutline(bankmenu[18], 0);	TextDrawFont(bankmenu[18], 5);
	TextDrawSetPreviewModel(bankmenu[18], 1274);	TextDrawBackgroundColor(bankmenu[18], 2130706432);	TextDrawSetPreviewRot(bankmenu[18], 0.000000, 0.000000, 180.000000, 1.000000);

	bankmenu[19] = TextDrawCreate(248.999984, 204.088897, "LD_SPAC:white");	TextDrawLetterSize(bankmenu[19], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[19], 53.666656, 50.607391);	TextDrawAlignment(bankmenu[19], 1);
	TextDrawColor(bankmenu[19], -1);	TextDrawUseBox(bankmenu[19], true);
	TextDrawBoxColor(bankmenu[19], 0);	TextDrawSetShadow(bankmenu[19], 0);
	TextDrawSetOutline(bankmenu[19], 0);	TextDrawFont(bankmenu[19], 5);
	TextDrawSetPreviewModel(bankmenu[19], 1274);	TextDrawBackgroundColor(bankmenu[19], 2130706432);	TextDrawSetPreviewRot(bankmenu[19], 0.000000, 0.000000, 180.000000, 1.000000);

	bankmenu[20] = TextDrawCreate(356.999938, 199.940780, "LD_SPAC:white");	TextDrawLetterSize(bankmenu[20], 0.019666, 0.116148);
	TextDrawTextSize(bankmenu[20], 59.333362, 58.074092);	TextDrawAlignment(bankmenu[20], 1);
	TextDrawColor(bankmenu[20], -1);	TextDrawUseBox(bankmenu[20], true);
	TextDrawBoxColor(bankmenu[20], 0);	TextDrawSetShadow(bankmenu[20], 0);
	TextDrawSetOutline(bankmenu[20], 0);	TextDrawFont(bankmenu[20], 5);
	TextDrawSetPreviewModel(bankmenu[20], 1277);	TextDrawBackgroundColor(bankmenu[20], 2130706432);	TextDrawSetPreviewRot(bankmenu[20], 0.000000, 0.000000, 0.000000, 1.000000);

	bankmenu[21] = TextDrawCreate(305.666687, 204.503707, "LD_SPAC:white");	TextDrawLetterSize(bankmenu[21], 0.000000, 0.000000);
	TextDrawTextSize(bankmenu[21], 52.333312, 49.777786);	TextDrawAlignment(bankmenu[21], 1);
	TextDrawColor(bankmenu[21], -1);	TextDrawUseBox(bankmenu[21], true);
	TextDrawBoxColor(bankmenu[21], 0);	TextDrawSetShadow(bankmenu[21], 0);
	TextDrawSetOutline(bankmenu[21], 0);	TextDrawFont(bankmenu[21], 5);
	TextDrawSetPreviewModel(bankmenu[21], 1273);	TextDrawBackgroundColor(bankmenu[21], 2130706432);	TextDrawSetPreviewRot(bankmenu[21], 0.000000, 0.000000, 0.000000, 1.000000);

	bankmenu[22] = TextDrawCreate(445.333312, 258.685180, "usebox");	TextDrawLetterSize(bankmenu[22], 0.000000, 1.480866);
	TextDrawTextSize(bankmenu[22], 411.333312, 0.000000);	TextDrawAlignment(bankmenu[22], 1);
	TextDrawColor(bankmenu[22], 0);	TextDrawUseBox(bankmenu[22], true);	TextDrawBoxColor(bankmenu[22], -1523963137);
	TextDrawSetShadow(bankmenu[22], 0);	TextDrawSetOutline(bankmenu[22], 0);	TextDrawFont(bankmenu[22], 0);

	bankmenu[23] = TextDrawCreate(416.000000, 259.259124, "INFO");	TextDrawLetterSize(bankmenu[23], 0.250666, 1.077333);
	TextDrawAlignment(bankmenu[23], 1);	TextDrawColor(bankmenu[23], -1);
	TextDrawSetShadow(bankmenu[23], 0);	TextDrawSetOutline(bankmenu[23], 1);
	TextDrawBackgroundColor(bankmenu[23], 51);	TextDrawFont(bankmenu[23], 2);
	TextDrawSetProportional(bankmenu[23], 1);	TextDrawSetSelectable(bankmenu[23], true);
    // Rega Login
	TextDraw_Register[0] = TextDrawCreate(433.500000, 151.562500, "usebox");
	TextDrawLetterSize(TextDraw_Register[0], 0.000000, 23.650003);
	TextDrawTextSize(TextDraw_Register[0], 206.000000, 0.000000);
	TextDrawUseBox(TextDraw_Register[0], true);
	TextDrawBoxColor(TextDraw_Register[0], 102);

	TextDraw_Register[1] = TextDrawCreate(209.749969, 151.556320, "usebox");
	TextDrawLetterSize(TextDraw_Register[1], 0.000000, 1.530004);
	TextDrawTextSize(TextDraw_Register[1], 429.249969, 0.000000);
	TextDrawUseBox(TextDraw_Register[1], true);
	TextDrawBoxColor(TextDraw_Register[1], 0xFF9900AA);

	TextDraw_Register[2] = TextDrawCreate(425.049926, 153.774978, "registration");
	TextDrawLetterSize(TextDraw_Register[2], 0.196499, 0.856250);
	TextDrawAlignment(TextDraw_Register[2], 3);
	TextDrawColor(TextDraw_Register[2], -1);
	TextDrawSetShadow(TextDraw_Register[2], 0);
	TextDrawSetOutline(TextDraw_Register[2], 1);
	TextDrawBackgroundColor(TextDraw_Register[2], 0x00000000);
	TextDrawFont(TextDraw_Register[2], 2);
	TextDrawSetProportional(TextDraw_Register[2], 1);

	TextDraw_Register[3] = TextDrawCreate(281.850006, 328.212615, "LD_SPAC:white"); // click register
	TextDrawTextSize(TextDraw_Register[3], 80.000000, 23.187500);
	TextDrawColor(TextDraw_Register[3], 0xFF9900AA);
	TextDrawFont(TextDraw_Register[3], 4);
	TextDrawSetSelectable(TextDraw_Register[3], true);

	TextDraw_Register[4] = TextDrawCreate(322.899993, 333.637390, "register");
	TextDrawLetterSize(TextDraw_Register[4], 0.284499, 1.188750);
	TextDrawAlignment(TextDraw_Register[4], 2);
	TextDrawColor(TextDraw_Register[4], -1);
	TextDrawSetShadow(TextDraw_Register[4], 0);
	TextDrawSetOutline(TextDraw_Register[4], 1);
	TextDrawBackgroundColor(TextDraw_Register[4], 0x00000000);
	TextDrawFont(TextDraw_Register[4], 2);
	TextDrawSetProportional(TextDraw_Register[4], 1);

	TextDraw_Register[5] = TextDrawCreate(243.299926, 285.556121, "LD_SPAC:white"); // male
	TextDrawTextSize(TextDraw_Register[5], 16.000000, 13.562500);
	TextDrawColor(TextDraw_Register[5], 0xFF9900AA);
	TextDrawFont(TextDraw_Register[5], 4);
	TextDrawSetSelectable(TextDraw_Register[5], true);

	TextDraw_Register[6] = TextDrawCreate(348.450134, 285.375213, "LD_SPAC:white"); // female
	TextDrawTextSize(TextDraw_Register[6], 16.000000, 13.562500);
	TextDrawColor(TextDraw_Register[6], 0xFF9900AA);
	TextDrawFont(TextDraw_Register[6], 4);
	TextDrawSetSelectable(TextDraw_Register[6], true);

	TextDraw_Register[7] = TextDrawCreate(264.099761, 287.437438, "male");
	TextDrawLetterSize(TextDraw_Register[7], 0.200999, 0.834375);
	TextDrawAlignment(TextDraw_Register[7], 1);
	TextDrawColor(TextDraw_Register[7], -1);
	TextDrawSetShadow(TextDraw_Register[7], 0);
	TextDrawSetOutline(TextDraw_Register[7], 1);
	TextDrawBackgroundColor(TextDraw_Register[7], 0x00000000);
	TextDrawFont(TextDraw_Register[7], 2);
	TextDrawSetProportional(TextDraw_Register[7], 1);

	TextDraw_Register[8] = TextDrawCreate(370.799774, 287.212463, "female");
	TextDrawLetterSize(TextDraw_Register[8], 0.200999, 0.834375);
	TextDrawAlignment(TextDraw_Register[8], 1);
	TextDrawColor(TextDraw_Register[8], -1);
	TextDrawSetShadow(TextDraw_Register[8], 0);
	TextDrawSetOutline(TextDraw_Register[8], 1);
	TextDrawBackgroundColor(TextDraw_Register[8], 0x00000000);
	TextDrawFont(TextDraw_Register[8], 2);
	TextDrawSetProportional(TextDraw_Register[8], 1);

	TextDraw_Register[9] = TextDrawCreate(238.850036, 183.268753, "password:");
	TextDrawLetterSize(TextDraw_Register[9], 0.170000, 0.799375);
	TextDrawAlignment(TextDraw_Register[9], 1);
	TextDrawColor(TextDraw_Register[9], -1);
	TextDrawSetShadow(TextDraw_Register[9], 0);
	TextDrawSetOutline(TextDraw_Register[9], 1);
	TextDrawBackgroundColor(TextDraw_Register[9], 0x00000000);
	TextDrawFont(TextDraw_Register[9], 2);
	TextDrawSetProportional(TextDraw_Register[9], 1);

	TextDraw_Register[10] = TextDrawCreate(237.949966, 192.325027, "LD_SPAC:white"); // password
	TextDrawTextSize(TextDraw_Register[10], 135.500000, 22.750000);
	TextDrawColor(TextDraw_Register[10], 0xFF9900AA);
	TextDrawFont(TextDraw_Register[10], 4);
	TextDrawSetSelectable(TextDraw_Register[10], true);

	TextDraw_Register[11] = TextDrawCreate(403.299926, 194.087509, "usebox");
	TextDrawLetterSize(TextDraw_Register[11], 0.000000, 2.109722);
	TextDrawTextSize(TextDraw_Register[11], 371.399993, 0.000000);
	TextDrawUseBox(TextDraw_Register[11], true);
	TextDrawBoxColor(TextDraw_Register[11], 0xFF9900AA);

	TextDraw_Register[12] = TextDrawCreate(238.700042, 227.493713, "@E-mail:");
	TextDrawLetterSize(TextDraw_Register[12], 0.170000, 0.799375);
	TextDrawAlignment(TextDraw_Register[12], 1);
	TextDrawColor(TextDraw_Register[12], -1);
	TextDrawSetShadow(TextDraw_Register[12], 0);
	TextDrawSetOutline(TextDraw_Register[12], 1);
	TextDrawBackgroundColor(TextDraw_Register[12], 0x00000000);
	TextDrawFont(TextDraw_Register[12], 2);
	TextDrawSetProportional(TextDraw_Register[12], 1);

	TextDraw_Register[13] = TextDrawCreate(433.200012, 367.600006, "usebox");
	TextDrawLetterSize(TextDraw_Register[13], 0.000000, -0.459722);
	TextDrawTextSize(TextDraw_Register[13], 205.200012, 0.000000);
	TextDrawUseBox(TextDraw_Register[13], true);
	TextDrawBoxColor(TextDraw_Register[13], 0x4169E1FF);

	TextDraw_Register[14] = TextDrawCreate(238.199905, 237.031295, "LD_SPAC:white"); // Email
	TextDrawTextSize(TextDraw_Register[14], 135.500000, 22.750000);
	TextDrawAlignment(TextDraw_Register[14], 1);
	TextDrawColor(TextDraw_Register[14], 0xFF9900AA);
	TextDrawFont(TextDraw_Register[14], 4);
	TextDrawSetSelectable(TextDraw_Register[14], true);

	TextDraw_Register[15] = TextDrawCreate(402.999755, 238.793685, "usebox");
	TextDrawLetterSize(TextDraw_Register[15], 0.000000, 2.099722);
	TextDrawTextSize(TextDraw_Register[15], 371.449707, 0.000000);
	TextDrawUseBox(TextDraw_Register[15], true);
	TextDrawBoxColor(TextDraw_Register[15], 286331391);

	TextDraw_Register[16] = TextDrawCreate(376.749847, 194.468780, "LD_SPAC:white");
	TextDrawTextSize(TextDraw_Register[16], 22.600002, 18.724992);
	TextDrawAlignment(TextDraw_Register[16], 1);
	TextDrawColor(TextDraw_Register[16], 255);
	TextDrawBackgroundColor(TextDraw_Register[16], 0x00000000);
	TextDrawFont(TextDraw_Register[16], 5);
	TextDrawSetPreviewModel(TextDraw_Register[16], 8530);
	TextDrawSetPreviewRot(TextDraw_Register[16], 0.000000, 35.000000, 90.000000, 1.000000);

	TextDraw_Register[17] = TextDrawCreate(377.699798, 240.006286, "LD_SPAC:white");
	TextDrawTextSize(TextDraw_Register[17], 22.600002, 18.724992);
	TextDrawAlignment(TextDraw_Register[17], 1);
	TextDrawColor(TextDraw_Register[17], 255);
	TextDrawBackgroundColor(TextDraw_Register[17], 0x00000000);
	TextDrawFont(TextDraw_Register[17], 5);
	TextDrawSetPreviewModel(TextDraw_Register[17], 8530);
	TextDrawSetPreviewRot(TextDraw_Register[17], 0.000000, 35.000000, 90.000000, 1.000000);

	TextDraw_Register[18] = TextDrawCreate(248.300155, 287.687438, "X");
	TextDrawLetterSize(TextDraw_Register[18], 0.230999, 0.873749);
	TextDrawAlignment(TextDraw_Register[18], 1);
	TextDrawColor(TextDraw_Register[18], 858993663);
	TextDrawSetShadow(TextDraw_Register[18], 0);
	TextDrawSetOutline(TextDraw_Register[18], 1);
	TextDrawBackgroundColor(TextDraw_Register[18], 0x00000000);
	TextDrawFont(TextDraw_Register[18], 2);
	TextDrawSetProportional(TextDraw_Register[18], 1);

	TextDraw_Register[19] = TextDrawCreate(353.500122, 287.593750, "X");
	TextDrawLetterSize(TextDraw_Register[19], 0.230999, 0.873749);
	TextDrawAlignment(TextDraw_Register[19], 1);
	TextDrawColor(TextDraw_Register[19], 858993663);
	TextDrawSetShadow(TextDraw_Register[19], 0);
	TextDrawSetOutline(TextDraw_Register[19], 1);
	TextDrawBackgroundColor(TextDraw_Register[19], 0x00000000);
	TextDrawFont(TextDraw_Register[19], 2);
	TextDrawSetProportional(TextDraw_Register[19], 1);

	TextDraw_Login[0] = TextDrawCreate(433.500000, 151.562500, "usebox");
	TextDrawLetterSize(TextDraw_Login[0], 0.000000, 13.929996);
	TextDrawTextSize(TextDraw_Login[0], 206.000000, 0.000000);
	TextDrawUseBox(TextDraw_Login[0], true);
	TextDrawBoxColor(TextDraw_Login[0], 102);

	TextDraw_Login[1] = TextDrawCreate(209.749969, 151.556320, "usebox");
	TextDrawLetterSize(TextDraw_Login[1], 0.000000, 1.530004);
	TextDrawTextSize(TextDraw_Login[1], 429.249969, 0.000000);
	TextDrawUseBox(TextDraw_Login[1], true);
	TextDrawBoxColor(TextDraw_Login[1], 0xFF9900AA);

	TextDraw_Login[2] = TextDrawCreate(425.049926, 153.774978, "login");
	TextDrawLetterSize(TextDraw_Login[2], 0.196499, 0.856250);
	TextDrawAlignment(TextDraw_Login[2], 3);
	TextDrawColor(TextDraw_Login[2], -1);
	TextDrawSetShadow(TextDraw_Login[2], 0);
	TextDrawSetOutline(TextDraw_Login[2], 1);
	TextDrawBackgroundColor(TextDraw_Login[2], 0x00000000);
	TextDrawFont(TextDraw_Login[2], 2);
	TextDrawSetProportional(TextDraw_Login[2], 1);

	TextDraw_Login[3] = TextDrawCreate(280.949981, 241.543823, "LD_SPAC:white");
	TextDrawTextSize(TextDraw_Login[3], 79.849998, 23.231250);
	TextDrawColor(TextDraw_Login[3], 0xFF9900AA);
	TextDrawFont(TextDraw_Login[3], 4);
	TextDrawSetSelectable(TextDraw_Login[3], true);

	TextDraw_Login[4] = TextDrawCreate(321.400024, 246.706100, "LOGIN");
	TextDrawLetterSize(TextDraw_Login[4], 0.284499, 1.188750);
	TextDrawAlignment(TextDraw_Login[4], 2);
	TextDrawColor(TextDraw_Login[4], -1);
	TextDrawSetShadow(TextDraw_Login[4], 0);
	TextDrawSetOutline(TextDraw_Login[4], 1);
	TextDrawBackgroundColor(TextDraw_Login[4], 0x00000000);
	TextDrawFont(TextDraw_Login[4], 2);
	TextDrawSetProportional(TextDraw_Login[4], 1);

	TextDraw_Login[5] = TextDrawCreate(263.150085, 180.856094, "password:");
	TextDrawLetterSize(TextDraw_Login[5], 0.180999, 0.900000);
	TextDrawAlignment(TextDraw_Login[5], 2);
	TextDrawColor(TextDraw_Login[5], -1);
	TextDrawSetShadow(TextDraw_Login[5], 0);
	TextDrawSetOutline(TextDraw_Login[5], 1);
	TextDrawBackgroundColor(TextDraw_Login[5], 0x00000000);
	TextDrawFont(TextDraw_Login[5], 2);
	TextDrawSetProportional(TextDraw_Login[5], 1);

	TextDraw_Login[6] = TextDrawCreate(241.099990, 191.143753, "LD_SPAC:white");
	TextDrawTextSize(TextDraw_Login[6], 130.949996, 22.750000);
	TextDrawColor(TextDraw_Login[6], 0xFF9900AA);
	TextDrawFont(TextDraw_Login[6], 4);
	TextDrawSetSelectable(TextDraw_Login[6], true);

	TextDraw_Login[7] = TextDrawCreate(433.349975, 280.143646, "usebox");
	TextDrawLetterSize(TextDraw_Login[7], 0.000000, -0.477499);
	TextDrawTextSize(TextDraw_Login[7], 205.850021, 0.000000);
	TextDrawUseBox(TextDraw_Login[7], true);
	TextDrawBoxColor(TextDraw_Login[7], 0xFF9900AA);

	TextDraw_Login[8] = TextDrawCreate(402.999847, 192.556274, "usebox");
	TextDrawLetterSize(TextDraw_Login[8], 0.000000, 2.162499);
	TextDrawTextSize(TextDraw_Login[8], 370.499847, 0.000000);
	TextDrawUseBox(TextDraw_Login[8], true);
	TextDrawBoxColor(TextDraw_Login[8], 0xFF9900AA);

	TextDraw_Login[9] = TextDrawCreate(374.799957, 193.156219, "LD_SPAC:white");
	TextDrawTextSize(TextDraw_Login[9], 24.500000, 18.375000);
	TextDrawAlignment(TextDraw_Login[9], 1);
	TextDrawColor(TextDraw_Login[9], 255);
	TextDrawBackgroundColor(TextDraw_Login[9], 0x00000000);
	TextDrawFont(TextDraw_Login[9], 5);
	TextDrawSetPreviewModel(TextDraw_Login[9], 8530);
	TextDrawSetPreviewRot(TextDraw_Login[9], 0.000000, 35.000000, 90.000000, 1.000000);
	//
	Logo[0] = TextDrawCreate(525.446655, 6.241667, "INS");
	TextDrawLetterSize(Logo[0], 0.449999, 1.600000);
	TextDrawAlignment(Logo[0], 1);
	TextDrawColor(Logo[0], -1);
	TextDrawSetShadow(Logo[0], 0);
	TextDrawSetOutline(Logo[0], 0);
	TextDrawBackgroundColor(Logo[0], 51);
	TextDrawFont(Logo[0], 2);
	TextDrawSetProportional(Logo[0], 1);

	Logo[1] = TextDrawCreate(552.637390, 6.133336, "Pire");
	TextDrawLetterSize(Logo[1], 0.449999, 1.600000);
	TextDrawAlignment(Logo[1], 1);
	TextDrawColor(Logo[1], -10083585);
	TextDrawSetShadow(Logo[1], 0);
	TextDrawSetOutline(Logo[1], 0);
	TextDrawBackgroundColor(Logo[1], 51);
	TextDrawFont(Logo[1], 2);
	TextDrawSetProportional(Logo[1], 1);

	Logo[2] = TextDrawCreate(551.589599, 17.033344, "ROLE");
	TextDrawLetterSize(Logo[2], 0.180178, 1.333417);
	TextDrawAlignment(Logo[2], 1);
	TextDrawColor(Logo[2], -1);
	TextDrawSetShadow(Logo[2], 0);
	TextDrawSetOutline(Logo[2], 0);
	TextDrawBackgroundColor(Logo[2], 51);
	TextDrawFont(Logo[2], 2);
	TextDrawSetProportional(Logo[2], 1);

	Logo[3] = TextDrawCreate(570.627746, 16.925016, "PLAY");
	TextDrawLetterSize(Logo[3], 0.180178, 1.333417);
	TextDrawAlignment(Logo[3], 1);
	TextDrawColor(Logo[3], -10083585);
	TextDrawSetShadow(Logo[3], 0);
	TextDrawSetOutline(Logo[3], 0);
	TextDrawBackgroundColor(Logo[3], 51);
	TextDrawFont(Logo[3], 2);
	TextDrawSetProportional(Logo[3], 1);

	ReconText[0] = TextDrawCreate(27.000000, 139.000000, "_");
	TextDrawBoxColor(ReconText[0], -192);
	TextDrawTextSize(ReconText[0], 77.000000, 50.000000);
	TextDrawLetterSize(ReconText[0], 0.00, 13.799999);

	ReconText[1] = TextDrawCreate(26.000000, 140.000000, "_");
	TextDrawBoxColor(ReconText[1], 100);
	TextDrawTextSize(ReconText[1], 77.000000, 50.000000);
	TextDrawLetterSize(ReconText[1], 0.500000, 13.599998);

	ReconText[2] = TextDrawCreate(587.000000, 139.000000, "__");
	TextDrawLetterSize(ReconText[2], 0.500000, 14.799999);
	TextDrawBoxColor(ReconText[2], -192);
	TextDrawTextSize(ReconText[2], 77.000000, 110.000000);

	ReconText[3] = TextDrawCreate(586.000000, 140.000000, "__");
	TextDrawLetterSize(ReconText[3], 0.500000, 14.599998);
	TextDrawBoxColor(ReconText[3], 100);
	TextDrawTextSize(ReconText[3], 0.000000, 105.000000);

	for(new x; x < 4; x++)
	{
		TextDrawAlignment(ReconText[x], 2);
		TextDrawBackgroundColor(ReconText[x], 255);
		TextDrawFont(ReconText[x], 1);
		TextDrawColor(ReconText[x], -1);
		TextDrawSetOutline(ReconText[x], 0);
		TextDrawSetProportional(ReconText[x], 1);
		TextDrawSetShadow(ReconText[x], 0);
		TextDrawUseBox(ReconText[x], 1);
	}

	ReconText[4] = TextDrawCreate(537.00, 165.00, "~g~::Level:~n~~g~::Warns:~n~~r~::Armour:~n~~r~::Health:~n~~b~::CarHP:~n~~b~::Speed:~n~~y~::Ping:~n~~y~::Ammo:~n~~p~::Shot:~n~~p~::TimeShot:~n~~g~::AFKTime:");
	TextDrawLetterSize(ReconText[4],  0.199999, 0.899999);
	TextDrawBackgroundColor(ReconText[4], 255);
	TextDrawFont(ReconText[4], 1);
	TextDrawColor(ReconText[4], -1);
	TextDrawSetOutline(ReconText[4], 1);
	TextDrawSetProportional(ReconText[4], 1);
	TextDrawSetShadow(ReconText[4], 0);


	ReconText[5] = TextDrawCreate(25.00, 147.00, "Change");
	ReconText[6] = TextDrawCreate(25.00, 160.00, "Check >>");
	ReconText[7] = TextDrawCreate(25.00, 173.00, "Drop >>");
	ReconText[8] = TextDrawCreate(25.00, 186.00, "Kick >>");
	ReconText[9] = TextDrawCreate(25.00, 199.00, "Warn");
	ReconText[10] = TextDrawCreate(25.00, 212.00, "Ban >>");
	ReconText[11] = TextDrawCreate(25.00, 225.00, "Stats >>");
	ReconText[12] = TextDrawCreate(25.00, 238.00, "Refresh");
	ReconText[13] = TextDrawCreate(25.00, 251.00, "Exit");
	ReconText[14] = TextDrawCreate(589.00, 261.00, "Help");
	ReconText[15] = TextDrawCreate(75.00, 160.00, "Check GM");
	ReconText[16] = TextDrawCreate(75.00, 173.00, "Check GM 2");
	ReconText[17] = TextDrawCreate(75.00, 186.00, "Check GMCar");
	ReconText[18] = TextDrawCreate(75.00, 199.00, "ResetShot");
	ReconText[19] = TextDrawCreate(75.00, 173.00, "Mute");
	ReconText[20] = TextDrawCreate(75.00, 186.00, "Slap");
	ReconText[21] = TextDrawCreate(75.00, 199.00, "Prison");
	ReconText[22] = TextDrawCreate(75.00, 212.00, "Freeze");
	ReconText[23] = TextDrawCreate(75.00, 225.00, "UnFreeze");
	ReconText[24] = TextDrawCreate(75.00, 186.00, "Kick");
	ReconText[25] = TextDrawCreate(75.00, 199.00, "SKick");
	ReconText[26] = TextDrawCreate(75.00, 212.00, "Ban");
	ReconText[27] = TextDrawCreate(75.00, 225.00, "SBan");
	ReconText[28] = TextDrawCreate(75.00, 238.00, "IBan");
	ReconText[29] = TextDrawCreate(75.00, 225.00, "Stats");
	ReconText[30] = TextDrawCreate(75.00, 238.00, "IWep");
	ReconText[31] = TextDrawCreate(75.00, 251.00, "GetIP");


	for(new x = 5; x < 32; x++)
	{
		TextDrawTextSize(ReconText[x], 10.10, 44.44);
		TextDrawAlignment(ReconText[x], 2);
		TextDrawBackgroundColor(ReconText[x], 255);
		TextDrawFont(ReconText[x], 1);
		TextDrawLetterSize(ReconText[x], 0.20, 0.899999);
		TextDrawColor(ReconText[x], -112);
		TextDrawSetOutline(ReconText[x], 0);
		TextDrawSetProportional(ReconText[x], 1);
		TextDrawSetShadow(ReconText[x], 0);
		TextDrawUseBox(ReconText[x], 1);
		TextDrawBoxColor(ReconText[x], 144);
		TextDrawSetSelectable(ReconText[x], true);
	}
}
stock TimeConverter(seconds)
{
	new minutes = floatround(seconds/60);
	seconds -= minutes*60;
	format(stringer1, 64, "%02d:%02d", minutes, seconds);
	return stringer1;
}
stock FracCD(one,two,item)
{
	FrakCD[one] = item;
	FrakCD[two] = item;
	FracV(one,two,1);
	return 1;
}
stock FracV(one,two,item)
{
	FracVoina[one] = item;
	FracVoina[two] = item;
	return 1;
}
stock SendBand(one,two,color,str1[])
{
	foreach(new x: Player)
	{
		if(PlayerInfo[x][pMRInections] == one || PlayerInfo[x][pMRInections] == two) SCM(x,color,str1);
	}
	return 1;
}
stock GFrac(frac)
{
	new namegang[20];
	switch(frac)
	{
		case 15: namegang = "Grove Street";
		case 17: namegang = "Varrios Los Aztecas";
		case 12: namegang = "East Side Ballas";
		case 18: namegang = "Rifa";
		case 13: namegang = "Los Santos Vagos";
	}
	return namegang;
}
stock GetPlayer2DZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	for(new i = 0; i != sizeof(gSAZones); i++ )
	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4]) return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
	}
	return 0;
}
public GetZonaName  ( Float: x,  Float: y )
{
    for ( new i = 0; i != sizeof ( gSAZones ); i++ )
    {
        if ( x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4]) return i;
    }
    return 1;
}
public GetCityName ( Float: x,  Float: y)
{
    for ( new i = 0; i != sizeof ( gSAZonesCity ); i++ )
    {
        if ( x >= gSAZonesCity[i][SAZONE_AREA][0] && x <= gSAZonesCity[i][SAZONE_AREA][3] && y >= gSAZonesCity[i][SAZONE_AREA][1] && y <= gSAZonesCity[i][SAZONE_AREA][4] ) return i;
    }
    return 1;
}
stock SendDead(ids,whoids,killerid,playerid,reason)
{
	foreach(new m: Player)
	{
		if(PlayerInfo[m][pMRInections] == ids || PlayerInfo[m][pMRInections] == whoids) SendDeathMessageToPlayer(m, killerid, playerid, reason);
	}
	return 1;
}

publics: GzCheck(i,napad,vlad)
{
	foreach(new m: Player)
	{
		if(PlayerInfo[m][kapture][0] == true && !IsAGang(m)) EndCapt(m);
		if(PlayerInfo[m][pMRInections] == napad || PlayerInfo[m][pMRInections] == vlad)
		{
			if(PlayerInfo[m][kapture][0] == false)
			{
				GangZoneFlashForPlayer(m,GZInfo[i][gID],GetGangColor(napad));
				PlayerTextDrawShow(m, Capture[m][0]);
				PlayerTextDrawShow(m, Capture[m][1]);
				format(GZInfo[i][strcpt],30,"Time: %s",TimeConverter(GZInfo[i][gTime]));
				PlayerTextDrawSetString(m,Capture[m][1],GZInfo[i][strcpt]);
				format(GZInfo[i][strcpt],30,"~w~%s ~r~0",GFrac(vlad));
				PlayerTextDrawSetString(m,Capture[m][2],GZInfo[i][strcpt]);
				PlayerTextDrawShow(m, Capture[m][2]);
				format(GZInfo[i][strcpt],30,"~w~%s ~r~0",GFrac(napad));
				PlayerTextDrawSetString(m,Capture[m][3],GZInfo[i][strcpt]);
				PlayerTextDrawShow(m, Capture[m][3]);
				PlayerInfo[m][kapture][0] = true;
			}
			else
			{
				format(GZInfo[i][strcpt],30,"Time: %s",TimeConverter(GZInfo[i][gTime]));
				PlayerTextDrawSetString(m,Capture[m][1],GZInfo[i][strcpt]);
				format(GZInfo[i][strcpt],30,"~w~%s ~r~%d",GFrac(vlad),CountOnZone[vlad]);
				PlayerTextDrawSetString(m,Capture[m][2],GZInfo[i][strcpt]);
				format(GZInfo[i][strcpt],30,"~w~%s ~r~%d",GFrac(napad),CountOnZone[napad]);
				PlayerTextDrawSetString(m,Capture[m][3],GZInfo[i][strcpt]);
			}
		}
	}
	if(GZInfo[i][gTime] > 0)GZInfo[i][gTime] -= 1;
	if(GZInfo[i][gTime] <= 0)
	{
		if(GZInfo[i][ZoneOnBattle] == 1)
		{
			new strlolka[112];
			if(CountOnZone[vlad] == CountOnZone[napad] || CountOnZone[vlad] > CountOnZone[napad]) format(strlolka,112,"%s захватили территорию у банды %s в районе %s",GFrac(vlad),GFrac(napad),GZInfo[i][GZName]);
			else
			{
				format(strlolka,112,"%s захватили территорию у банды %s в районе %s",GFrac(napad),GFrac(vlad),GZInfo[i][GZName]);
				GZInfo[i][gFrakVlad] = GZInfo[i][gNapad];
			}
			SendBand(napad,vlad,COLOR_ORANGE,strlolka);
			GZInfo[i][ZoneOnBattle] = 2;
		}
		if(GZInfo[i][ZoneOnBattle] == 2)
		{
			foreach(new m: Player)
			{
				if(PlayerInfo[m][pMRInections] == napad || PlayerInfo[m][pMRInections] == vlad) EndCapt(m);
			}
			CountOnZone[napad] = 0;
			CountOnZone[vlad] = 0;
			GZInfo[i][ZoneOnBattle] = 0;
			FracV(napad,vlad,0);
			GangZoneStopFlashForAll(GZInfo[i][gID]);
			GangZoneHideForAll(GZInfo[i][gID]);
			GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
			SaveGZ(i);
			KillTimer(GZInfo[i][gzTimer]);
			return 1;
		}
	}
	return 1;
}
stock EndCapt(m)
{
    for(new t = 0x0; t != 4;t++) PlayerTextDrawHide(m,Capture[m][t]);
	for(new num; num < 10; num++) SendDeathMessageToPlayer(m,6000,5005, 255);
	PlayerInfo[m][kapture][0] = false;
	return 1;
}
stock EndBizwar(m)
{
	for(new t = 0x0; t != 3;t++) PlayerTextDrawHide(m,Bizwar[m][t]);
	PlayerInfo[m][kapture][1] = false;
	for(new num; num < 10; num++) SendDeathMessageToPlayer(m,6000,5005, 255);
	return 1;
}
stock GetGangName(nnid)
{
	new namegang[24];
	switch(nnid)
	{
		case 12: namegang = "East Side Ballas";
		case 13: namegang = "Los Santos Vagos";
		case 15: namegang = "Grove Street";
		case 17: namegang = "Varios Los Aztecas";
		case 18: namegang = "Rifa Gang";
		default: namegang = "None";
	}
	return namegang;
}

stock OnPlayerAmmoChange(playerid, newammo, oldammo)
{
	if(newammo < oldammo)
	{
	    GivePVarInt(playerid, "Shot", 1);
		switch(GetPlayerWeapon(playerid))
		{
			case 24: if(GetPVarInt(playerid, "Shot") >= 25 && PlayerInfo[playerid][pSkills][1] < 100) PlayerInfo[playerid][pSkills][1]++, DeletePVar(playerid, "Shot");
			case 23: if(GetPVarInt(playerid, "Shot") >= 25 && PlayerInfo[playerid][pSkills][0] < 100) PlayerInfo[playerid][pSkills][0]++, DeletePVar(playerid, "Shot");
			case 25: if(GetPVarInt(playerid, "Shot") >= 50 && PlayerInfo[playerid][pSkills][2] < 100) PlayerInfo[playerid][pSkills][2]++, DeletePVar(playerid, "Shot");
			case 29: if(GetPVarInt(playerid, "Shot") >= 50 && PlayerInfo[playerid][pSkills][3] < 100) PlayerInfo[playerid][pSkills][3]++, DeletePVar(playerid, "Shot");
			case 30: if(GetPVarInt(playerid, "Shot") >= 50 && PlayerInfo[playerid][pSkills][4] < 100) PlayerInfo[playerid][pSkills][4]++, DeletePVar(playerid, "Shot");
			case 31: if(GetPVarInt(playerid, "Shot") >= 50 && PlayerInfo[playerid][pSkills][5] < 100) PlayerInfo[playerid][pSkills][5]++, DeletePVar(playerid, "Shot");
		}
	}
	return 1;
}

publics: house_color_car(playerid)
{
	new carid = caridhouse[playerid];
	new Float:cx, Float:cy, Float:cz;
	GetVehiclePos(carid, cx, cy, cz);
	if(PlayerToPoint(10.0,playerid,2485.8572,-2560.5715,2501.0859))
	{
		if(PlayerToPoint(5.0,playerid, cx, cy, cz))
		{
			if(ProsInfo[playerid][carid] < 15000) ProsInfo[playerid][carid] += 2500;
			else if(ProsInfo[playerid][carid] >= 15000)
			{
				ChangeVehicleColor(carid,balonCraska[playerid],balonCraska[playerid]);
				vehicle_components_add[playerid][0][0] = balonCraska[playerid];
				ProsInfo[playerid][carid] = 0;
				SCM(playerid, COLOR_GREEN, "Успех! Вы перекрасили свой автомобиль в нужный Вам цвет");
				KillTimer(timerP[playerid]);
				DeletePVar(playerid, "clicked_house");
    			format(c_vehicle_components_add[playerid][0],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][0][0],vehicle_components_add[playerid][0][1],vehicle_components_add[playerid][0][2],vehicle_components_add[playerid][0][3],vehicle_components_add[playerid][0][4],
				vehicle_components_add[playerid][0][5],vehicle_components_add[playerid][0][6],vehicle_components_add[playerid][0][7],
				vehicle_components_add[playerid][0][8],vehicle_components_add[playerid][0][9],vehicle_components_add[playerid][0][10],vehicle_components_add[playerid][0][11],vehicle_components_add[playerid][0][12],vehicle_components_add[playerid][0][13]);
				UpdatePlayerDataEx(playerid, "cVehcom", c_vehicle_components_add[playerid][0]);
			}
		}
	}
	return 1;
}
public OnDynamicObjectMoved(objectid) return SaluteOnObjectMovedEx(objectid);
stock CreateSalut(Float:x,Float:y,Float:z)
{
	new sal = CheckSalut();
	if(sal == -1) return 0;
	Salut[sal][SaluteObject] = CreateDynamicObject(SaluteColorTypes[random(sizeof(SaluteColorTypes))],x,y,z,0.0,0.0,0.0);
	Salut[sal][SaluteInUse] = true;
	Salut[sal][SaluteStatus] = 1;
	GetXYInFrontOfPosition(x,y,random(360),18);
	MoveDynamicObject(Salut[sal][SaluteObject],x,y,z+45,30);
	return 1;
}
stock CheckSalut()
{
	for(new i = 0; i < MAX_SALUTE; i++) if(!Salut[i][SaluteInUse]) return i;
	return -1;
}
stock DestroySalut(id)
{
	DestroyDynamicObject(Salut[id][SaluteObject]);
	Salut[id][SaluteInUse] = false;
}
stock SaluteOnObjectMovedEx(objectid)
{
	for(new id = 0; id < MAX_SALUTE; id++)
	{
		if(Salut[id][SaluteObject] == objectid)
		{
			switch(Salut[id][SaluteStatus])
			{
				case 1..4:
				{
					new Float:x, Float:y, Float:z;
					GetDynamicObjectPos(objectid,x,y,z);
					GetXYInFrontOfPosition(x,y,Salut[id][SaluteLeanDir],Salut[id][SaluteWindOffset] / 5);
					z += Salut[id][height] / 5;
					Salut[id][SaluteStatus]++;
					MoveDynamicObject(Salut[id][SaluteObject],x,y,z,Salut[id][SaluteClimeSpeed]);
					GetDynamicObjectPos(objectid,x,y,z);
					CreateExplosion(x,y,z,Salut[id][SaluteExplType],Salut[id][SaluteExplSize]);
					DestroySalut(id);
				}
			}
		}
	}
	return 1;
}
stock FindSalut()
{
	for (new i=0;i<sizeof(SALUTEINFOS);i++) if (!SALUTEINFOS[i][SaluteUse]) return i;
	return -1;
}
publics: SaluteMachineTimer(id,playerid)
{
	if(SALUTEINFOS[id][Salute])
	{
		CreateSalut(SALUTEINFOS[id][SalutePos][0]+random(3),SALUTEINFOS[id][SalutePos][1],SALUTEINFOS[id][SalutePos][2]);
		CreateSalut(SALUTEINFOS[id][SalutePos][0],SALUTEINFOS[id][SalutePos][1]+random(3),SALUTEINFOS[id][SalutePos][2]);
		CreateSalut(SALUTEINFOS[id][SalutePos][0]+random(3),SALUTEINFOS[id][SalutePos][1],SALUTEINFOS[id][SalutePos][2]);
		CreateSalut(SALUTEINFOS[id][SalutePos][0],SALUTEINFOS[id][SalutePos][1]+random(3),SALUTEINFOS[id][SalutePos][2]);
		CreateSalut(SALUTEINFOS[id][SalutePos][0]+random(3),SALUTEINFOS[id][SalutePos][1],SALUTEINFOS[id][SalutePos][2]);
		CreateSalut(SALUTEINFOS[id][SalutePos][0],SALUTEINFOS[id][SalutePos][1]+random(3),SALUTEINFOS[id][SalutePos][2]);
		CreateSalut(SALUTEINFOS[id][SalutePos][0]+random(3),SALUTEINFOS[id][SalutePos][1],SALUTEINFOS[id][SalutePos][2]);
		CreateSalut(SALUTEINFOS[id][SalutePos][0],SALUTEINFOS[id][SalutePos][1]+random(3),SALUTEINFOS[id][SalutePos][2]);
		SALUTEINFOS[id][Salute]--;
		SALUTEINFOS[id][SaluteTimer] = SetTimerEx("SaluteMachineTimer",floatround((400 + random(300)) * 0.26),false,"ii",id,playerid);
	}
	else
	{
		KillTimer(SALUTEINFOS[id][SaluteTimer]);
		SALUTEINFOS[id][SaluteTimer] = -1;
		SALUTEINFOS[id][SaluteUse] = false;
		DestroyDynamicObject(SALUTEINFOS[id][SaluteBox]);
		DeletePVar(playerid, "salut_check");
	}
}
publics:OffUninvite (playerid, name[])
{
	if(!cache_get_row_count(connects)) return SCMF(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Игрок %s не состоит в Вашей организации",name);
	mysql_format(connects, stringer, MAX_STR, "UPDATE `accounts` SET `pMRInections` = '0', `pRKInections` = '0' WHERE `Name` = '%s'", name);
	mysql_empty(connects, stringer);
	new string_archibalt[128];
	format(string_archibalt,sizeof(string_archibalt),"Лидер организации %s уволил в оффлайне игрока %s",PlayerInfo[playerid][pNames], name);
	SendFamilyMessage(PlayerInfo[playerid][pMRInections], 0xFFBC00FF, string_archibalt);
	return 1;
}
publics:OnUnAdmin (playerid, name[])
{
	if(!cache_get_row_count(connects)) return SCMF(playerid, COLOR_GREY, "[ MySql ] Аккаунт %s не найден в базе данных.",name);
	mysql_format(connects, stringer, MAX_STR, "UPDATE `accounts` SET `bAdmin` = '0' WHERE `Name` = '%s'", name);
	mysql_empty(connects, stringer);
	SCMF(playerid, COLOR_GREY, "[ MySql ] Аккаунт %s успешно снят с поста администратора.", name);
	return 1;
}
publics:OnUnLeader (playerid, name[])
{
	if(!cache_get_row_count(connects)) return SCMF(playerid, COLOR_GREY, "[ MySql ] Аккаунт %s не найден в базе данных.",name);
	mysql_format(connects,stringer, MAX_STR, "UPDATE `accounts` SET `pLRInections` = '0', `pMRInections` = '0', `pRKInections` = '0' WHERE `Name` = '%s'", name);
	mysql_empty(connects, stringer);
	SCMF(playerid, COLOR_GREY, "[ MySql ] Аккаунт %s успешно снят с поста администратора.", name);
	return 1;
}
publics:OnUvalPlayer (playerid, name[], bool:isadmin)
{
	if (!cache_get_row_count(connects)) return SCMF(playerid, COLOR_GREY, "[ MySql ] Аккаунт %s не найден в базе данных.",name);
	if(!isadmin)
	{
		new tmp = cache_get_field_content_int(0, "pMRInections", connects);
		if(tmp != PlayerInfo[playerid][pMRInections]) return SCMF(playerid,COLOR_GREY,"[ MySql ] Аккаунт %s не является вашим членом фракции.",name);
	}
	mysql_format(connects, stringer, MAX_STR, "UPDATE `accounts` SET `pMRInections` = '0', `pRKInections` = '0' WHERE `Name` = '%s'", name);
	mysql_empty(connects, stringer);
	SCMF(playerid, COLOR_GREY, "[ MySql ] Аккаунт %s успешно уволен из фракции.", name);
	return 1;
}
publics: DiceOff()
{
	foreach(new i: Player)
	{
		if(GetPVarInt(i, "OpustitRuki"))
		{
			DeletePVar(i, "OpustitRuki");
			if(IsPlayerAttachedObjectSlotUsed(i,1)) RemovePlayerAttachedObject(i,1);
			ClearAnimations(i);
			ApplyAnimation(i,"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
		}
	}
}
publics: ClearAnimText(playerid)
{
	//ClearAnimations(playerid);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0);
	return true;
}
stock UpdateBusinessData(idx, stolb[], znach)
{
	new QUERY[128];
	format(QUERY,128,"UPDATE business SET  %s = '%d' WHERE bID = '%d' LIMIT 1", stolb, znach, idx);
	mysql_empty(connects, QUERY);
	return 1;
}
stock UpdatePlayerDataEx(playerid, stolb[], znach[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE accounts SET  %s = '%s' WHERE id = '%d' LIMIT 1", stolb, znach, PlayerInfo[playerid][pID]);
	mysql_empty(connects, Query);
	return 1;
}
stock UpdatePlayerData(playerid, fields[], data)
{
	new str [144];
	format(str, 144, "UPDATE accounts SET %s = '%d' WHERE id = '%d' LIMIT 1",fields, data, PlayerInfo[playerid][pID]);
	mysql_empty (connects, str);
	return 1;
}

stock GetXYInFrontOfPosition(&Float:x, &Float:y, Float:a, Float:distance)
{
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
}
stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	if (IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	else GetPlayerFacingAngle(playerid, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return 1;
}

stock explode(aExplode[][], const sSource[], const sDelimiter[] = " ", iVertices = sizeof aExplode, iLength = sizeof aExplode[])
{
	new
		iNode,
		iPointer,
		iPrevious = -1,
		iDelimiter = strlen(sDelimiter);

	while(iNode < iVertices)
	{
		iPointer = strfind(sSource, sDelimiter, false, iPointer);
		if(iPointer == -1)
		{
			strmid(aExplode[iNode], sSource, iPrevious, strlen(sSource), iLength);
			break;
		}
		else strmid(aExplode[iNode], sSource, iPrevious, iPointer, iLength);
		iPrevious = (iPointer += iDelimiter);
		++iNode;
	}

	return iPrevious;
}

stock OnPlayerCheat(playerid, code)
{
	switch(code) { case 20..25: return SCMF(playerid, COLOR_REDD, "Вы были кикнуты по подозрению в читерстве: [Crasher][Code: %d]",code), KickEx(playerid, code); }
	if(PlayerInfo[playerid][bAdmin]) return 1;
	new years, months, days, data[32], hour1, minute1, second1;
	getdate(years, months, days); gettime(hour1, minute1, second1);
	format(data, 32, "%02d.%02d.%04d", days, months, years);
	new strrcheat[197];
	if(code < 10) format(strrcheat, sizeof strrcheat, "{FFFFFF}Вы были кикнуты по подозрении в читерстве Code: {FF6F00}#00%d{FFFFFF}\nИмя: {FF6F00}%s{FFFFFF}\nДата: {FF6F00}%s{FFFFFF}\nВремя: {FF6F00}%d:%d",code,PlayerInfo[playerid][pNames],data,hour1,minute1);
	else format(strrcheat, sizeof strrcheat, "{FFFFFF}Вы были кикнуты по подозрении в читерстве Code: {FF6F00}#0%d{FFFFFF}\nИмя: {FF6F00}%s{FFFFFF}\nДата: {FF6F00}%s{FFFFFF}\nВремя: {FF6F00}%d:%d",code,PlayerInfo[playerid][pNames],data,hour1,minute1);
	SPD(playerid, 1019, DIALOG_STYLE_MSGBOX, PlayerInfo[playerid][pNames], strrcheat , "Выход","");
	SCM(playerid, COLOR_REDD, "Если Вас кикнуло ложно, сообщите на форум, в технический раздел (Баги / Недоработки сервера).");
	SCM(playerid, COLOR_REDD, "Код кика анти чита указан в данный момент в диалоге. Если Вы сообщите нам, то качество работы сервера будет улучшено!");
	KickEx(playerid, code);
	return 1;
}
publics: OnPlayerSelectPassword(playerid, password[])
{
	if(cache_get_row_count(connects)) return SPD(playerid,156,DIALOG_STYLE_PASSWORD,"{FF6F00}Смена пароля","{FFFFFF}Внимание! Мы убедительно просим Вас придумать вполне себе сложный пароль, состоящий из букв и цифр.", "Принять", "Отмена");
	else SPD(playerid,155,DIALOG_STYLE_PASSWORD,"{FF6F00}Смена пароля","{FFFFFF}Внимание! Для продолжения данного действия, введите Ваш прошлый пароль.", "Готово", "Отмена");
	return 1;
}
stock SaveBusiness(bizid)
{
    stringer="";
	format(stringer, BIG_SIZE, "UPDATE `business` SET `bOwner` = '%s', `bPrice` = '%d', `bLock` = '%d', `bKrisha` = '%d', `bPribil` = '%d', `bCena1` = '%d', `bCena2` = '%d', `bCena3` = '%d', `bCena4` = '%d', `bCena5` = '%d', `bCena6` = '%d', `bCena7` = '%d', `bCena8` = '%d', `bCena9` = '%d', `bVhod` = '%d', `bNalog` = '%d', `bBank` = '%d', `bCheck` = '%d' WHERE `bID` = '%d'",
	BizInfo[bizid][bOwner],BizInfo[bizid][bPrice],BizInfo[bizid][bLock],BizInfo[bizid][bKrisha],BizInfo[bizid][bPribil],BizInfo[bizid][bCena][0],BizInfo[bizid][bCena][1],BizInfo[bizid][bCena][2],BizInfo[bizid][bCena][3],BizInfo[bizid][bCena][4],BizInfo[bizid][bCena][5],BizInfo[bizid][bCena][6],BizInfo[bizid][bCena][7],BizInfo[bizid][bCena][8],BizInfo[bizid][bVhod],BizInfo[bizid][bNalog],BizInfo[bizid][bBank],
	BizInfo[bizid][bCheck], bizid);
	mysql_empty(connects, stringer);
	return 1;
}
stock SaveHotel(hotelid)
{
    stringer="";
	mysql_format(connects, stringer, 300, "UPDATE `hotel` SET `mOwned` = '%s', `mOwner` = '%d', `mVW` = '%d', `mCar` = '%d', `mLock` = '%d', `mMoney` = '%d', `mOplata` = '%d', `mVirt` = '%d', `mCarDrived` = '%.2f' WHERE `mID` = '%d'",HotelInfo[hotelid][mOwned], HotelInfo[hotelid][mOwner], HotelInfo[hotelid][mVW], HotelInfo[hotelid][mCar], HotelInfo[hotelid][mLock], HotelInfo[hotelid][mMoney], HotelInfo[hotelid][mOplata], HotelInfo[hotelid][mVirt], HotelInfo[hotelid][mCarDrived], hotelid);
	mysql_empty(connects, stringer);
	return 1;
}
stock SaveHouse(houseid)
{
	stringer="";
	format(stringer, 1100,
	"UPDATE `house` SET `hOwner`='%s',`hValue`='%d',`hHel`='%d',`hLock`='%d',`hOwned`='%d',`hTakings`='%d',`hKlass`='%d',`hVehSost`='%d',`hStyle`='%d',`hKolesa`='%d',`hBenz`='%d', `hBal1` = '%d', `hBal2` = '%d', `hBal3` = '%d', `hBal4` = '%d', `hSafe` = '%d', `hNarko` = '%d',`hGun1` = '%d',`hGun2` = '%d',`hGun3` = '%d',`hGun4` = '%d',`hGun5` = '%d',`hGunAmmo1` = '%d',`hGunAmmo2` = '%d',`hGunAmmo3` = '%d',`hGunAmmo4` = '%d',`hGunAmmo5` = '%d',`hGarage` = '%d' WHERE `hID` = '%d'",
	HouseInfo[houseid][hOwner],HouseInfo[houseid][hValue],HouseInfo[houseid][hHel],HouseInfo[houseid][hLock],HouseInfo[houseid][hOwned],HouseInfo[houseid][hTakings],HouseInfo[houseid][hKlass],HouseInfo[houseid][hVehSost],HouseInfo[houseid][hStyle],HouseInfo[houseid][hKolesa],HouseInfo[houseid][hBenz],HouseInfo[houseid][hBal][0],HouseInfo[houseid][hBal][1],HouseInfo[houseid][hBal][2],HouseInfo[houseid][hBal][3],HouseInfo[houseid][hSafe],HouseInfo[houseid][hNarko],
	HouseInfo[houseid][hGun][0],HouseInfo[houseid][hGun][1],HouseInfo[houseid][hGun][2],HouseInfo[houseid][hGun][3],HouseInfo[houseid][hGun][4],HouseInfo[houseid][hGunAmmo][0],HouseInfo[houseid][hGunAmmo][1],HouseInfo[houseid][hGunAmmo][2],HouseInfo[houseid][hGunAmmo][3],HouseInfo[houseid][hGunAmmo][4],HouseInfo[houseid][hGarage],houseid);
	mysql_empty(connects, stringer);
	return 1;
}
stock SaveSBizz(id)
{
	stringer="";
	format(stringer, 200, "UPDATE `sbizz` SET sOwned = '%d', sMessage = '%s', sBuyPrice = '%d', sLocked = '%d', sPrice = '%d', sBenz = '%d', sPriceBenz = '%d', sTill = '%d' WHERE sID = '%d'",
	SBizzInfo[id][sOwned],SBizzInfo[id][sMessage],SBizzInfo[id][sBuyPrice],SBizzInfo[id][sLocked],SBizzInfo[id][sPrice],SBizzInfo[id][sBenz],SBizzInfo[id][sPriceBenz],SBizzInfo[id][sTill], id);
	mysql_empty(connects, stringer);
	return 1;
}
stock Maintenance()
{
	SendRconCommand("password ASD123");
	SendRconCommand("hostname « Inspire Role Play » | Перезагрузка сервера");
	SetGameModeText("Reloading....");
	OOCOff(0xAA3333AA, "{AA3333}Перезагрузка{FFFF00}: Сохранение аккаунтов...");
	foreach(new pls: Player) KickEx(pls, 225);
	OOCOff(0xAA3333AA, "{AA3333}Перезагрузка{FFFF00}: Сохранение аккаунтов выполнено!");
	OOCOff(0xAA3333AA, "{AA3333}Перезагрузка{FFFF00}: Сохранение всех параметров...");
	SaveMaterials();	SaveBankMafia();	SaveBankFrac();
	for(new h = 0; h < sizeof(HouseInfo); h++) SaveHouse(h);
	OOCOff(0xAA3333AA, "{AA3333}Перезагрузка{FFFF00}: Сохранение гангзон...");
	for(new g= 0; g < sizeof(GZInfo); g++) SaveGZ(g);
	OOCOff(0xAA3333AA, "{AA3333}Перезагрузка{FFFF00}: Сохранение бизнесов...");
	for(new i = 1; i <= BIZES; i ++) SaveBusiness(i);
	OOCOff(0xAA3333AA, "{AA3333}Перезагрузка{FFFF00}: Сохранение отелей...");
	for(new i = 1; i < MAX_HOTEL; i++) SaveHotel(i);
	ServerRestart[2] = 10;
	return 1;
}
stock FinishMaintenance()
{
	DestroyAllDynamicObjects();
	DestroyAllDynamic3DTextLabels();
	DestroyAllDynamicCPs();
	DestroyAllDynamicMapIcons();
	DestroyAllDynamicRaceCPs();
	DestroyAllDynamicAreas();
	OOCOff(0xAA3333AA, "{AA3333}Перезагрузка{FFFF00}: Плагин 'STREAMER' закончил свою работу...");
	SendRconCommand("exit");
	return 1;
}
stock GetNumberOfPlayersOnThisIP(test_ip[])
{
	new against_ip[32];
	new ip_count = 0;
	foreach(new x: Player)
	{
		if(!IsPlayerConnected(x)) continue;
		GetPlayerIp(x,against_ip,32);
		if(!strcmp(against_ip,test_ip)) ip_count++;
	}
	return ip_count;
}
stock AddRubPlus(targetid, status, cena)
{
	if(status < PlayerInfo[targetid][pRubInfo][1]) return SCM(targetid, -1, "• {AC0000}[Ошибка] {ffffff}Вы не можете купить статус который меньше Вашего");
	if(PlayerInfo[targetid][pRubInfo][1] == status) return SCM(targetid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас уже имеется данный статус.");
	if(PlayerInfo[targetid][pRubInfo][0] < cena) return SCM(targetid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас недостаточно средств.");
	PlayerInfo[targetid][pRubInfo][0] -= cena, PlayerInfo[targetid][pRubInfo][1] = status;
	DonateLog(targetid, cena, "Покупка инвестирования рублей");
	new year, month,day;
	getdate(year, month, day);
	new dateRub = getdate(year,month,day);
	PlayerInfo[targetid][pRubInfo][2] += dateRub+5;
	new update_mysql [ 24+50 ] ;
	mysql_format(connects, update_mysql, 24+50, "UPDATE `accounts` SET `pRub` = '%d', `pRubPlus` = '%d', `pRubTimePlus` = '%d' WHERE `Name` = '%s'", PlayerInfo[targetid][pRubInfo][0], PlayerInfo[targetid][pRubInfo][1], PlayerInfo[targetid][pRubInfo][2], PlayerInfo[targetid][pNames]);
	mysql_empty(connects, update_mysql);
	SCMF(targetid, -1, "Вы приобрели статус номер (#%d), на 5 дней.", status);
	SCM(targetid, -1, "• {FFC800}[Подсказка] {ffffff}Теперь, в каждый PayDay Вам будут приходить дополнительные рубли.");
	SCM(targetid, -1, "• {FFC800}[Подсказка] {ffffff}Мы советуем Вам не находится в AFK во время PayDay.");
	SCM(targetid, -1, "• {FFC800}[Подсказка] {ffffff}А также, чтобы получить выгоду, играть больше и получать больше рублей! (Окупить это все возможно!)");
	return 1;
}
stock AddHelper(targetid, cena, lvl)
{
	if(PlayerInfo[targetid][pHelper]) return 1;
	if(PlayerInfo[targetid][pRubInfo][0] < cena) return SCMF(targetid, -1, "• {AC0000}[Ошибка] {ffffff}Для приобретения хелперки данного уровня Вам нужно %d рублей",cena);
	PlayerInfo[targetid][pHelper] = lvl;
	PlayerInfo[targetid][pRubInfo][0] -= cena;
	DonateLog(targetid, cena, "Покупка прав хелпера");
	UpdatePlayerData(targetid, "pRub", PlayerInfo[targetid][pRubInfo][0]);
	UpdatePlayerData(targetid, "pHelper", PlayerInfo[targetid][pHelper]);
	SCMF(targetid, -1, "Вы успешно приобрели права хелпера %d-го уровня.",lvl);
	SCM(targetid, -1, "• {FFC800}[Подсказка] {ffffff}Узнать Ваши команды Вы можете введя команду /hhelp");
	return 1;
}
stock AddAdmin(targetid, cena, lvl)
{
	if(PlayerInfo[targetid][bAdmin]) return 1;
	if(PlayerInfo[targetid][pRubInfo][0] < cena) return SCMF(targetid, -1, "• {AC0000}[Ошибка] {ffffff}Для приобретения админ-прав данного уровня Вам нужно %d рублей",cena);
	PlayerInfo[targetid][bAdmin] = lvl;
	PlayerInfo[targetid][pRubInfo][0] -= cena;
	DonateLog(targetid, cena, "Покупка прав администратора");
	UpdatePlayerData(targetid, "pRub", PlayerInfo[targetid][pRubInfo][0]);
	mysql_format(connects, stringer, 200, "INSERT INTO `admin` (`Name`, `level`, `password`, `LastCon`, `Postavil`,`Date`,`Type`) VALUES ('%s','%d','qwerty','0','System','0','2')",PlayerInfo[targetid][pNames], lvl);
	mysql_empty(connects, stringer);
	SCMF(targetid, -1, "Вы успешно приобрели админ-права %d-го уровня.",lvl);
	SCM(targetid, -1, "• {FFC800}[Подсказка] {ffffff}Введите команду /alogin и придумайте себе пароль. (Обязательно его запишите)");
	return 1;
}
stock HelperLevel(playerid)
{
	if(!PlayerInfo[playerid][pHelper]) return 1;
	if(PlayerInfo[playerid][pHelper] >= 8) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас максимальный уровень прав хелпера.");
	if(PlayerInfo[playerid][pHelper] <= 4)
	{
		if(PlayerInfo[playerid][pRubInfo][0] < 100) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Для повышения прав хелпера Вам потребуется 100 рублей.");
		PlayerInfo[playerid][pRubInfo][0] -= 100;
		PlayerInfo[playerid][pHelper] ++;
		DonateLog(playerid, 100, "Повышение уровня хелперства");
		UpdatePlayerData(playerid, "pHelper", PlayerInfo[playerid][pHelper]);
		SCMF(playerid, COLOR_GREEN, "Вы успешно повысили свой уровень хелперки до %d.", PlayerInfo[playerid][pHelper]);
		SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Просмотреть новые команды Вы можете введя команду ''/hhelp''");
		return 1;
	}
	else if(PlayerInfo[playerid][pHelper] > 4)
	{
		if(PlayerInfo[playerid][pRubInfo][0] < 200) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Для повышения прав хелпера Вам потребуется 200 рублей.");
		PlayerInfo[playerid][pRubInfo][0] -= 200;
		PlayerInfo[playerid][pHelper] ++;
		DonateLog(playerid, 200, "Повышение уровня хелперства");
		UpdatePlayerData(playerid, "pHelper", PlayerInfo[playerid][pHelper]);
		SCMF(playerid, COLOR_GREEN, "Вы успешно повысили свой уровень хелперки до %d.", PlayerInfo[playerid][pHelper]);
		SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Просмотреть новые команды Вы можете введя команду ''/hhelp''");
		return 1;
	}
	return 1;
}

stock AdminLevel(playerid)
{
	if(!PlayerInfo[playerid][bAdmin]) return 1;
	if(PlayerInfo[playerid][bAdmin] >= 12) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас максимальный уровень админ-прав");
	if(PlayerInfo[playerid][bAdmin] < 9)
	{
		if(PlayerInfo[playerid][pRubInfo][0] < 100) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Для повышение админ-уровня Вам требуется 100 рублей на балансе");
		PlayerInfo[playerid][pRubInfo][0] -= 100;
		PlayerInfo[playerid][bAdmin] ++;
		DonateLog(playerid, 100, "Повышение уровня администратирования");
		mysql_format(connects, stringer, MAX_STR, "UPDATE `admin` SET `level` = '%d' WHERE `Name` = '%s'", PlayerInfo[playerid][bAdmin], PlayerInfo[playerid][pNames]);
		mysql_empty(connects, stringer);
		SCMF(playerid, COLOR_GREEN, "Вы успешно повысили свой админ-уровень до %d.", PlayerInfo[playerid][bAdmin]);
		SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Введите команду /alogin по новой, что бы Ваш уровень обновился.");
		return 1;
	}
	else if(PlayerInfo[playerid][bAdmin] >= 9)
	{
		if(PlayerInfo[playerid][pRubInfo][0] < 300) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}Для повышение админ-уровня Вам требуется 300 рублей на балансе");
		PlayerInfo[playerid][pRubInfo][0] -= 300;
		PlayerInfo[playerid][bAdmin] ++;
		DonateLog(playerid, 300, "Повышение уровня администратирования");
		mysql_format(connects, stringer, MAX_STR, "UPDATE `admin` SET `level` = '%d' WHERE `Name` = '%s'", PlayerInfo[playerid][bAdmin], PlayerInfo[playerid][pNames]);
		mysql_empty(connects, stringer);
		SCMF(playerid, COLOR_GREEN, "Вы успешно повысили свой админ-уровень до %d.", PlayerInfo[playerid][bAdmin]);
		SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Введите команду /alogin по новой, что бы Ваш уровень обновился.");
		return 1;
	}
	return 1;
}
stock ServerName()
{
	new	ipadress[16], zpassword[32];
	GetServerVarAsString("bind", ipadress, sizeof (ipadress));
	GetServerVarAsString("password", zpassword, sizeof (zpassword));
	if(!strcmp(ipadress, "176.32.39.129"))
	{
		if(strlen(zpassword)) SendRconCommand("hostname « Inspire Role Play » | Технические работы");
		else SendRconCommand("hostname « Inspire Role Play » Бонус новичкам [0.3.7]");
	}
	//SendRconCommand("hostname « Inspire Role Play » | [0.3.7]");
	return 1;
}
stock CheckHotel(hotelid)
{
	new query[400];
	new playeridd = GetPlayerID(HotelInfo[hotelid][mOwned]);
	if(!strcmp(HotelInfo[hotelid][mOwned], "None",true)) {}
	else
	{
		if(HotelInfo[hotelid][mMoney] < HotelInfo[hotelid][mOplata])
		{
			if(!IsPlayerConnected(playeridd))
			{
				mysql_format(connects, query, MAX_STR, "UPDATE `accounts` SET `pHotel` = '-1' WHERE `Name` = '%s'", HotelInfo[hotelid][mOwned]);
				mysql_empty(connects, query);
			}
			else
			{
				SCM(playeridd, COLOR_REDD, "Ваша комната в одном из отелей была забрана государством за неуплату.");
				PlayerInfo[playeridd][pHotel] = -1;
			}
			HotelInfo[hotelid][mLock] = 0;
			HotelInfo[hotelid][mMoney] = 2000;
			HotelInfo[hotelid][mCarDrived] = 0;
			HotelInfo[hotelid][mOwner] = 0;
			strmid(HotelInfo[hotelid][mOwned], "None", 0, strlen("None"), 255);
			new stringer13[150];
			mysql_format(connects, stringer13,sizeof(stringer13),"UPDATE `hotel` SET mOwner=0,mLock=0,mMoney=2000,mCarDrived=0,mOwned='None' WHERE mID = %d",hotelid);
			mysql_empty(connects,stringer13);
			format(stringer, 130, "{FFFFFF}Комната в отеле - {FF7800}№%d{FFFFFF}\nКомната свободна\nНажмите на клавишу {FF7800}L-ALT{FFFFFF} чтобы заселится", hotelid);
			UpdateDynamic3DTextLabelText(HotelInfo[hotelid][hLabelHot], 0xC4DAADFF, stringer);
			SaveHotel(hotelid);
		}
		else HotelInfo[hotelid][mMoney] -= HotelInfo[hotelid][mOplata];
	}
}
stock CheckHouse(houseid)
{
	new query[400];
	new playeridd = GetPlayerID(HouseInfo[houseid][hOwner]);
	if(!strcmp(HouseInfo[houseid][hOwner], "The State",true)) {}
	else
	{
		if(HouseInfo[houseid][hTakings] <= 0)
		{
			if(!IsPlayerConnected(playeridd))
			{
				new housecash = HouseInfo[houseid][hValue];
				mysql_format(connects, query, 160, "UPDATE `accounts` SET `pPhousekey` = '-1', `pHousecash` = '%d' WHERE `Name` = '%s'", housecash , HouseInfo[houseid][hOwner]);
				mysql_empty(connects, query);
			}
			else
			{
				SCM(playeridd, COLOR_REDD, "Ваш дом был продан за неуплату государтсву.");
				PlayerInfo[playeridd][pHouse] = -1;
			}
			HouseInfo[houseid][hHel] = 0;
			HouseInfo[houseid][hLock] = 1;
			HouseInfo[houseid][hOwned] = 0;
			HouseInfo[houseid][hKolesa] = 0;
			HouseInfo[houseid][hGarage] = 0;
			HouseInfo[houseid][CarDrived][0] = 0;
			HouseInfo[houseid][CarDrived][1] = 0;
			HouseInfo[houseid][hBenz] = 0;
			HouseInfo[houseid][hSafe] = 0;
			for(new i = 0; i != 4; i++) HouseInfo[houseid][hBal][i] = 0;
			for(new i = 0; i != 5; i++) HouseInfo[houseid][hGun][i] = 0, HouseInfo[houseid][hGunAmmo][i] = 0;
			strmid(HouseInfo[houseid][hOwner], "The State", 0, strlen("The State"), 255);
			if(HouseInfo[houseid][hOwned] == 0)
			{
				DestroyDynamicMapIcon(HouseInfo[houseid][hMIcon]);
				DestroyPickup(HouseInfo[houseid][hPickup]);
				AddStaticPickup(1273, 23, HouseInfo[houseid][hEnter][0], HouseInfo[houseid][hEnter][1], HouseInfo[houseid][hEnter][2]);
				HouseInfo[houseid][hMIcon] = CreateDynamicMapIcon(HouseInfo[houseid][hEnter][0], HouseInfo[houseid][hEnter][1], HouseInfo[houseid][hEnter][2], 31, COLOR_WHITE, 0, -1, -1, 200.0);
			}
			if(HouseInfo[houseid][hOwned] == 1)
			{
				DestroyDynamicMapIcon(HouseInfo[houseid][hMIcon]);
				DestroyPickup(HouseInfo[houseid][hPickup]);
				AddStaticPickup(19522, 23, HouseInfo[houseid][hEnter][0], HouseInfo[houseid][hEnter][1], HouseInfo[houseid][hEnter][2]);
				HouseInfo[houseid][hMIcon] = CreateDynamicMapIcon(HouseInfo[houseid][hEnter][0], HouseInfo[houseid][hEnter][1], HouseInfo[houseid][hEnter][2], 32, COLOR_WHITE, 0, -1, -1, 200.0);
			}
			SaveHouse(houseid);
		}
		else
		{
		    if(HouseInfo[houseid][hOwned]) {
				switch(HouseInfo[houseid][hKlass]) {
					case 0..4: HouseInfo[houseid][hTakings] -= 100;
				}
			}
		}
	}
}
stock IsNumeric(string[])
{
	for (new i = 0, j = strlen(string); i < j; i++) if(string[i] > '9' || string[i] < '0') return 0;
	return 1;
}
publics: MailCallback(playerid, email[])
{
	if(cache_get_row_count(connects)) return SPD(playerid,3,DIALOG_STYLE_INPUT,"{FF6F00}Электорнный адрес","{FFFFFF}\n\nДанный электронный адрес уже используется другим игроком, попробуйте ввести другой!\n\n","Ввод","Отмена");
	else return mysql_real_escape_string(email,RegistrationInfo[playerid][1]), SPD(playerid,7,DIALOG_STYLE_INPUT,"{FF6F00}Реферал","{FFFFFF}\n\nЕсли вас кто-то пригласил на сервер - введите его ник.\nДанный игрок получит игровой бонус.\n\n","Принять","Пропустить");
}
stock NextSelfie(playerid)
{
	if(!GetPVarInt(playerid, "Selfie")) return 1;
	GetPlayerPos(playerid,posCam[playerid][0],posCam[playerid][1],posCam[playerid][2]);
	if(GetPVarInt(playerid, "selfie_knopka") == 1)
	{
		static Float: n1X, Float: n1Y;
		n1X = posCam[playerid][0] + Radius * floatcos(90.0, degrees);
		n1Y = posCam[playerid][1] + Radius * floatsin(90.0, degrees);
		SetPVarInt(playerid, "selfie_knopka", 2);
		SetPlayerCameraPos(playerid, n1X, n1Y, posCam[playerid][2] + Height);
		SetPlayerCameraLookAt(playerid, posCam[playerid][0],posCam[playerid][1],posCam[playerid][2]+1);
		SetPlayerFacingAngle(playerid, Degree[playerid] - 0.0);
	}
	else if(GetPVarInt(playerid, "selfie_knopka") == 2)
	{
		static Float: n1X, Float: n1Y;
		n1X = posCam[playerid][0] + Radius * floatcos(0.0, degrees);
		n1Y = posCam[playerid][1] + Radius * floatsin(0.0, degrees);
		SetPVarInt(playerid, "selfie_knopka", 3);
		SetPlayerCameraPos(playerid, n1X, n1Y, posCam[playerid][2] + Height);
		SetPlayerCameraLookAt(playerid, posCam[playerid][0],posCam[playerid][1],posCam[playerid][2]+1);
		SetPlayerFacingAngle(playerid, Degree[playerid] - 90.0);
	}
	else if(GetPVarInt(playerid, "selfie_knopka") == 3)
	{
		static Float: n1X, Float: n1Y;
		n1X = posCam[playerid][0] + Radius * floatcos(270.0, degrees);
		n1Y = posCam[playerid][1] + Radius * floatsin(270.0, degrees);
		SetPVarInt(playerid, "selfie_knopka", 4);
		SetPlayerCameraPos(playerid, n1X, n1Y, posCam[playerid][2] + Height);
		SetPlayerCameraLookAt(playerid, posCam[playerid][0],posCam[playerid][1],posCam[playerid][2]+1);
		SetPlayerFacingAngle(playerid, Degree[playerid] - 180.0);
	}
	else if(GetPVarInt(playerid, "selfie_knopka") == 4)
	{
		static Float: n1X, Float: n1Y;
		n1X = posCam[playerid][0] + Radius * floatcos(180.0, degrees);
		n1Y = posCam[playerid][1] + Radius * floatsin(180.0, degrees);
		SetPVarInt(playerid, "selfie_knopka", 1);
		SetPlayerCameraPos(playerid, n1X, n1Y, posCam[playerid][2] + Height);
		SetPlayerCameraLookAt(playerid, posCam[playerid][0],posCam[playerid][1],posCam[playerid][2]+1);
		SetPlayerFacingAngle(playerid, Degree[playerid] - 270.0);
	}
	SetPlayerAttachedObject(playerid, 0, 18868, 6, 0.06, 0.01, 0.08, 180.0, 90.0, 0.0);
	ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
	return 1;
}
stock BoomBox(playerid)
{
	foreach(new i: Player)
	{
		if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) StopStream(i);
	}
	DeletePVar(playerid, "BBArea");
	DestroyDynamicObject(GetPVarInt(playerid, "PlacedBB"));
	DestroyDynamic3DTextLabel(Text3D:GetPVarInt(playerid, "BBLabel"));
	DeletePVar(playerid, "PlacedBB"); DeletePVar(playerid, "BBLabel");
	DeletePVar(playerid, "BBX"); DeletePVar(playerid, "BBY"); DeletePVar(playerid, "BBZ");
	DeletePVar(playerid, "BBInt");
	DeletePVar(playerid, "BBVW");
	DeletePVar(playerid, "BBStation");
	return 1;
}
stock MatsArmyGive(playerid)
{
	new frc = PlayerInfo[playerid][pMRInections];
 	if(frc == 3 || frc == 12 || frc == 13 || frc == 15 || frc == 17 || frc == 18 || frc == 19 || frc == 5 || frc == 6 || frc == 14 || frc == 27)
	{
		new plmats = random(5) + 1;
		if(PlayerInfo[playerid][pMats] + plmats > 1000) plmats = 1000 - PlayerInfo[playerid][pMats];
		if(1000 < plmats + PlayerInfo[playerid][pMats]) return SendClientMessage(playerid, -1, "• {AC0000}[Ошибка] {ffffff}У Вас уже достаточно личных материалов."), GameTextForPlayer(playerid, "No Slot for Materials.", 2000, 4);
  		new string[64];
  		if(PlayerToPoint(4.0, playerid, 312.4241,-165.9406,1000.3010))
  		{
  		    if(armmatbi < plmats) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}На складе не достаточно материалов");
  			armmatbi -= plmats;
		}
  		else if(PlayerToPoint(4.0, playerid, 1542.5778,-1773.6821,1506.5640) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 1)
		{
		    if(armmatsf < plmats) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}На складе не достаточно материалов");
	 		armmatsf -= plmats;
		}
  		else if(PlayerToPoint(4.0, playerid, 1542.5778,-1773.6821,1506.5640) && GetPlayerInterior(playerid) == 3 && GetPlayerVirtualWorld(playerid) == 3)
  		{
    		if(armyvmf < plmats) return SCM(playerid, -1, "• {AC0000}[Ошибка] {ffffff}На складе не достаточно материалов");
  			armyvmf -= plmats;
		}
        PlayerInfo[playerid][pMats] += plmats;
        format(string, sizeof(string), "~y~Materials: +%d~n~~b~Total: %d", plmats, PlayerInfo[playerid][pMats]);
        GameTextForPlayer(playerid, string, 2000, 4);
        format(string, sizeof(string), "+%d шт материалов.", plmats);
        SetPlayerChatBubble(playerid, string, COLOR_YELLOW, 15.0, 1500);
        PlayerPlaySound(playerid, 17803, 0, 0,0);
        Update3DTextsArmy();
	}
    else return SendClientMessage(playerid, COLOR_GREY, "У Вас нет доступа к данному складу");
    return 1;
}
stock Update3DTextsArmy()
{
	new mes[256];
	format(mes,sizeof(mes),"{"#cWHITE"}Ед. Материалов: {"#cGREEN"}%d\n{"#cWHITE"}Армия: {"#cGREEN"}Зона 51\n{"#cWHITE"}Сборка оружия: {"#cGREEN"}'/makegun'",armmatbi);
	UpdateDynamic3DTextLabelText(gArmyText[0],COLOR_WHITE,mes);
	format(mes,sizeof(mes),"{"#cWHITE"}Ед. Материалов: {"#cGREEN"}%d\n{"#cWHITE"}Армия: {"#cGREEN"}Авианосец\n{"#cWHITE"}Сборка оружия: {"#cGREEN"}'/makegun'",armmatsf);
	UpdateDynamic3DTextLabelText(gArmyText[1],COLOR_WHITE,mes);
	format(mes,sizeof(mes),"{"#cWHITE"}Ед. Материалов: {"#cGREEN"}%d\n{"#cWHITE"}Армия: {"#cGREEN"}Военно Морской Флот\n{"#cWHITE"}Сборка оружия: {"#cGREEN"}'/makegun'",armyvmf);
	UpdateDynamic3DTextLabelText(gArmyText[2],COLOR_WHITE,mes);
}
stock ShowMakeGunList(playerid)
{
	new message[256];
	for(new i;i<6;i++)
	{
		new gunnameD[24];
		GetWeaponName(gGunID[i],gunnameD,24);
		if(!i) format(message,sizeof(message),"%s",gunnameD);
		else format(message,sizeof(message),"%s\n%s",message,gunnameD);
	}
	ShowPlayerDialog(playerid,dMakeGun,DIALOG_STYLE_LIST,"{FF6F00}Сборка оружия",message,"Далее","Отмена");
}
stock StartedBase()
{
    BaseStarting[1] = 1;
  	foreach(new i: BaseList) {
    	TogglePlayerControllable(i, false);
		SetTimerEx("UnFreez", 3000, false, "d", i);
		SetPlayerPosEx(i, 377.6851,-161.1450,3366.3403);
		SetPlayerFacingAngle(i, 179.1788);
		SetPlayerInterior(i, 0);
		GivePlayerWeaponAC(i, 46, 1);
	   	SetPVarInt(i, "BasePopitka", 3);
	   	GameTextForPlayer(i, "~p~ START!", 3000, 4);
	   	SCM(i, COLOR_GREEN, "Вам дается 3 попытки на прыжок, если Вы умираете отнимается одна попытка!");
	}
	return 1;
}
stock StartedRaces()
{
	race_str= "";
	RaceStarting[2] = 1;
    foreach(new i: RacersList) {
        PlayerScore{i} = 0;
	   	for ( new s = 0 ; s != 10 ; s ++ ) PlayerTextDrawShow(i, Race[s][i]);
        format(stringer, 20, "Time: %02i:%02i",(raceTime/60),raceTime - (60 * (floatround(raceTime)/60)));
	    PlayerTextDrawSetString(i,Race[8][i], stringer);
    	if (GetTopOne() == -1) PlayerTextDrawSetString(i,Race[2][i], "1. ~w~None");
		else format(stringer, 33,"1. ~w~%s", PlayerInfo[GetTopOne()][pNames]);
		PlayerTextDrawSetString(i,Race[2][i], stringer);
   		if (GetTopTwo() == -1) PlayerTextDrawSetString(i,Race[3][i], "2. ~w~None");
		else format(stringer, 33,"2. ~w~%s", PlayerInfo[GetTopTwo()][pNames]);
		PlayerTextDrawSetString(i,Race[3][i], stringer);
		if (GetTopThree() == -1) PlayerTextDrawSetString(i,Race[4][i], "3. ~w~None");
		else format(stringer, 33,"3. ~w~%s", PlayerInfo[GetTopThree()][pNames]);
		PlayerTextDrawSetString(i,Race[4][i], stringer);
		PlayerTextDrawSetString(i,Race[7][i], PlayerInfo[i][pNames]);
		format(stringer, 50, "Point: ~w~%d/52", PlayerScore{i});
		PlayerTextDrawSetString(i,Race[6][i], stringer);
		format(stringer, 30, "Racers: ~w~%d/40", PlayersInRace{0});
		PlayerTextDrawSetString(i,Race[5][i], stringer);
		GameTextForPlayer(i, "~p~ START!", 3000, 4);
		TogglePlayerControllable(i, true);
		SetPlayerRaceCheckpoint(i, 0, los_santos_race[typeRace][0][0], los_santos_race[typeRace][0][1], los_santos_race[typeRace][0][2], los_santos_race[typeRace][0+1][0], los_santos_race[typeRace][0+1][1], los_santos_race[typeRace][0+1][2], 10.0);
	}
	return 1;
}
publics: SecondStartedRaces()
{
    RaceStarting[1] --;
	if(RaceStarting[1] <= 1) return StartedRaces(), RaceStarting[1] = 0;
	foreach(new i: RacersList) {
        if(RaceStarting[1] < 10) {
		    format(stringer, 10, "~g~%d", RaceStarting[1]);
		    GameTextForPlayer(i, stringer, 1000, 4);
		}
		if(RaceStarting[1] == 10) {
		    DisablePlayerRaceCheckpoint(i);
		    TogglePlayerControllable(i, false);
			new position = PlayerPosition{i};
			SetPlayerPosEx(i, spawn_car[typeRace][PlayersInRace{0}][0], spawn_car[typeRace][PlayersInRace{0}][1], spawn_car[typeRace][PlayersInRace{0}][2]);
			SetPVarInt(i, "engine_on_off", 1);
			SetPVarInt(i,"race_check",_:Forveh_AddStaticVehicle(GetPVarInt(i,"rVehicle"),spawn_car[typeRace][position][0],spawn_car[typeRace][position][1],spawn_car[typeRace][position][2],spawn_car[typeRace][position][3],GetPVarInt(i,"rColor"),0));
			Engines{GetPVarInt(i,"race_check")} = true;
			Light{GetPVarInt(i,"race_check")} = true;
			LinkVehicleToInterior(GetPVarInt(i,"race_check"),0);
			SetVehicleVirtualWorld(GetPVarInt(i,"race_check"),1);
			SetPlayerInterior(i,0);
			SetPlayerVirtualWorld(i,1);
			PutPlayerInVehicle(i, GetPVarInt(i,"race_check"), 0);
			SetVehicleParamsEx(GetPVarInt(i,"race_check"),VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
			DeletePVar(i,"rColor");
			DeletePVar(i,"rVehicle");
		}
	}
	SetTimer("SecondStartedRaces", 1100, false);
	return 1;
}

stock GetTopOne()
{
	new temp = 0, id = -1;
	foreach(new i: RacersList)
	{
		if (i != -1 && PlayerScore {i} > temp)
		{
			temp = PlayerScore {i};
			id = i;
		}
	}
	return id;
}
stock GetTopTwo()
{
	new temp = 0, id = -1;
	foreach(new i: RacersList)
	{
		if (i != -1 && PlayerScore {i} > temp && (i != GetTopOne()))
		{
			temp = PlayerScore {i};
			id = i;
		}
	}
	return id;
}
stock GetTopThree()
{
	new temp = 0, id = -1;
	foreach(new i: RacersList)
	{
		if (i != -1 && PlayerScore {i} > temp && (i != GetTopOne()) && (i != GetTopTwo()))
		{
			temp = PlayerScore {i};
			id = i;
		}
	}
	return id;
}
WantedList(playerid)
{
	new str[128], players[700];
	tick_wanted{Items_Cops} = 0;
	Items_Cops = 0;
	new bool:NoPlayers = false;
	if(!IsPlayerConnected(playerid)) return 1;
	foreach(new i: Player)
	{
	    if(Items_Cops>=15) break;
	    if(!PlayerInfo[i][pLogin] || !PlayerInfo[i][pWanted]) continue;
		wanted_f = true;
    	format(str,128,"{FFFFFF}%s [%d] [Уровень розыска %d]",PlayerInfo[i][pNames],i,PlayerInfo[i][pWanted]); strcat(players,str);
		tick_wanted{Items_Cops} = i, Items_Cops++;
		NoPlayers = true;
	}
	if(NoPlayers) SPD(playerid, 4425, DIALOG_STYLE_LIST, "{FF6F00}Преступники", players, "Выбрать", "Отмена");
	else if(!NoPlayers) return SPD(playerid,0000,DIALOG_STYLE_MSGBOX,"{FF6F00}Преступники","{FFFFFF}\t\tДиспетчер...\n\n-\tНе найдено !","Закрыть","");
	return 1;
}
publics: CopsWanted(playerid,player_id)
{
	if(!IsPlayerConnected(player_id))
	{
		patrul_id[playerid] = -1;
		KillTimer(time_wanted[playerid]);
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid,COLOR_GREEN,"Преследование завершено! Игрок покинул сервер.");
		return 1;
	}
	if(GetPlayerInterior(player_id))
	{
		patrul_id[playerid] = -1;
		KillTimer(time_wanted[playerid]);
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid,COLOR_GREEN,"Преследование завершено! Человек скрылся! [Вход в интерьер]");
		return 1;
	}
	new Float:Position[3];
	GetPlayerPos(player_id, Position[0],Position[1],Position[2]);
	SetPlayerCheckpoint(playerid, Position[0],Position[1],Position[2], 3);
	return 0;
}
stock ShowTestQuestion(playerid,begin,end,dialogid,q=-1)
{
	if(q == -1) q = RandomEx(begin,end);
	SetPVarInt(playerid, "pTestNumber", q);
	new mes[256];
	format(mes,sizeof(mes),"{FFFFFF}%s\n1.%s\n2.%s\n3.%s\n4.%s",gExamQuestions[q],gExamAnswers[q][0],gExamAnswers[q][1],gExamAnswers[q][2],gExamAnswers[q][3]);
	SPD(playerid,dialogid,2,"{FF6F00}Школа вождения",mes,"Далее","Отмена");
	return 1;
}
stock StartRabWork(playerid)
{
	switch(PlayerInfo[playerid][pMRInections]) { case 1,2,3,4,7,10,11,16,19,21,25,26,27: return 1; }
	return 0;
}
stock ShowAdvertList(playerid)
{
	new adlist[500];
	new data[3][30],index, str[100];
	format(data[0],30,"[{"#cGREEN"}Проверено{"#cWHITE"}]"), format(data[1],30,"[{"#cYELLOW"}Проверяется{"#cWHITE"}]");
	for(new i;i<MAX_ADVERT_COUNT;i++)
	{
		if(!gAdvert[i][adBusy]) format(adlist,sizeof(adlist),"%s%d. -\n",adlist,i+1);
		else
		{
			if(gAdvert[i][adCheking]) index = 1;
			else if(gAdvert[i][adCheked]) index = 0;
			else index = 2;
			format(str,100,"%s%d. %s %s\n",adlist,i+1,gAdvert[i][adSender],data[index]); strcat(adlist,str);
		}
	}
	ShowPlayerDialog(playerid,dAdvertList,2,"{FF6F00}Объявления",adlist,"Принять","Отмена");
	return 1;
}
stock SellCar(playerid, car_id)
{
	PlayerInfo[playerid][pCash] += PlayerInfo[playerid][pCarCash][car_id-1];
	vehicle_components_add[playerid][car_id-1][0]=0;vehicle_components_add[playerid][car_id-1][1]=0;
	vehicle_components_add[playerid][car_id-1][2]=0;vehicle_components_add[playerid][car_id-1][3]=3;vehicle_components_add[playerid][car_id-1][4]=0;vehicle_components_add[playerid][car_id-1][5]=0;vehicle_components_add[playerid][car_id-1][6]=0;vehicle_components_add[playerid][car_id-1][13]=0;
	vehicle_components_add[playerid][car_id-1][7]=0;vehicle_components_add[playerid][car_id-1][8]=0;vehicle_components_add[playerid][car_id-1][9]=0;vehicle_components_add[playerid][car_id-1][10]=0;vehicle_components_add[playerid][car_id-1][11]=0;vehicle_components_add[playerid][car_id-1][12]=0;
	PlayerInfo[playerid][pCar][car_id-1] = 462;
	format(c_vehicle_components_add[playerid][car_id-1],74,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",vehicle_components_add[playerid][car_id-1][0],vehicle_components_add[playerid][car_id-1][1],vehicle_components_add[playerid][car_id-1][2],vehicle_components_add[playerid][car_id-1][3],vehicle_components_add[playerid][car_id-1][4],
	vehicle_components_add[playerid][car_id-1][5],vehicle_components_add[playerid][car_id-1][6],vehicle_components_add[playerid][car_id-1][7],
	vehicle_components_add[playerid][car_id-1][8],vehicle_components_add[playerid][car_id-1][9],vehicle_components_add[playerid][car_id-1][10],vehicle_components_add[playerid][car_id-1][11],vehicle_components_add[playerid][car_id-1][12],vehicle_components_add[playerid][car_id-1][13]);
	if(car_id == 1) UpdatePlayerData(playerid, "pCar", PlayerInfo[playerid][pCar][car_id-1]), UpdatePlayerDataEx(playerid, "cVehcom", c_vehicle_components_add[playerid][car_id-1]), LoadCarPlayer(playerid,car_id),PlayerInfo[playerid][pCarCash][car_id-1] = 0,UpdatePlayerData(playerid, "pCarCash", PlayerInfo[playerid][pCarCash][car_id-1]);
	else if(car_id == 2) UpdatePlayerData(playerid, "pCar2", PlayerInfo[playerid][pCar][car_id-1]), UpdatePlayerDataEx(playerid, "cVehcom2", c_vehicle_components_add[playerid][car_id-1]), LoadCarPlayer(playerid,car_id),PlayerInfo[playerid][pCarCash][car_id-1] = 0,UpdatePlayerData(playerid, "pCarCash2", PlayerInfo[playerid][pCarCash][car_id-1]);
	SCMF(playerid,COLOR_GREEN,"Вы успешно продали свое %s транспортное средство по гос.цене", (car_id-1 ? ("первое") : ("второе")));
	return 1;
}
stock ShowSettings(playerid)
{
	new str [ 100 ], setting_string[ 300 ];
	for(new i;i<sizeof(nameSetting);i++)
	{
        new flag[14] = "{"#cRED"}Выкл";
		if(PlayerInfo[playerid][pSettings] & (1 << i)) flag = "{"#cGREEN"}Вкл";
		format(str,100,"%d.%s [%s{"#cWHITE"}]\n",i+1,nameSetting[i],flag);strcat(setting_string, str);
	}
	ShowPlayerDialog(playerid,116,2,"{FF6F00}Выберите настройку",setting_string,"Изменить","Отмена");
}
stock FullFura(playerid, i)
{
	SendClientMessage(playerid, COLOR_RED, "Фургон заполнен, садитесь в него!");
	if(Start{i} == true) {
		DestroyPickup(autopick_mats[i]);
		DestroyDynamic3DTextLabel(mats3Dtxt[i]);
		Start{i} = false;
	}
	return 1;
}
stock GetVehicleKey(playerid, vehicleid)
{
	return ((PlayerInfo[playerid][pMRInections] == 15 &&	vehicleid >= grovecar[0] && vehicleid <= grovecar[1])	|| (PlayerInfo[playerid][pMRInections] == 12 &&
	vehicleid >= ballascar[0] && vehicleid <= ballascar[1])	|| (PlayerInfo[playerid][pMRInections] == 13 &&	vehicleid >= vagoscar[0] && vehicleid <= vagoscar[1])	|| (PlayerInfo[playerid][pMRInections] == 17 &&	vehicleid >= coronoscar[0] && vehicleid <= coronoscar[1])
	|| (PlayerInfo[playerid][pMRInections] == 18 &&	vehicleid >= rifacar[0] && vehicleid <= rifacar[1])	|| (PlayerInfo[playerid][pMRInections] == 5 &&	vehicleid >= lcncar[0] && vehicleid <= lcncar[1])	|| (PlayerInfo[playerid][pMRInections] == 6 &&
	vehicleid >= yakcar[0] && vehicleid <= yakcar[1])	|| (PlayerInfo[playerid][pMRInections] == 14 &&	vehicleid >= ruscar[0] && vehicleid <= ruscar[1])	|| (PlayerInfo[playerid][pMRInections] == 16 &&	vehicleid >= lsnewscar[0] && vehicleid <= lsnewscar[1])
	|| (PlayerInfo[playerid][pMRInections] == 11 &&	vehicleid >= liccar[0] && vehicleid <= liccar[1])	|| (PlayerInfo[playerid][pMRInections] == 1 &&	vehicleid >= sapdcar[0] && vehicleid <= sapdcar[1])	|| (PlayerInfo[playerid][pMRInections] == 2 &&
	vehicleid >= fbicar[0] && vehicleid <= fbicar[4])	|| (PlayerInfo[playerid][pMRInections] == 3 &&	vehicleid >= armycar[0] && vehicleid <= armycar[1])	|| (PlayerInfo[playerid][pMRInections] == 7 &&	vehicleid >= govcar[0] && vehicleid <= govcar[1])	|| (PlayerInfo[playerid][pMRInections] == 19 &&	vehicleid >= armcar[0] && vehicleid <= armcar[1])	|| (PlayerInfo[playerid][pMRInections] == 19 &&	vehicleid >= matscar[0] && vehicleid <= matscar[1])
	|| (PlayerInfo[playerid][pJob] == 2 &&	vehicleid >= mehanik[0] && vehicleid <= mehanik[1])	|| (PlayerInfo[playerid][pJob] == 4 &&	vehicleid >= govcar[0] && vehicleid <= govcar[1])	|| (PlayerInfo[playerid][pJob] == 5 &&
	vehicleid >= comptruck[0] && vehicleid <= comptruck[1])	|| (PlayerInfo[playerid][pJob] == 5 &&	vehicleid >= benzovoz[0] && vehicleid <= benzovoz[1])	|| (GetPVarInt(playerid, "arenda") &&	vehicleid >= rentcarsf[0] && vehicleid <= rentcarsf[1])
	|| (PlayerInfo[playerid][pMRInections] == 27 &&	vehicleid >= vmfcar[0] && vehicleid <= vmfcar[1])	|| (PlayerInfo[playerid][pMRInections] == 25 &&	vehicleid >= swatcar[0] && vehicleid <= swatcar[1])	|| (PlayerInfo[playerid][pMRInections] == 26 &&
	vehicleid >= ministrcar[0] && vehicleid <= ministrcar[1])	|| (PlayerInfo[playerid][pMRInections] == 21 &&	vehicleid >= lvpdcar[0] && vehicleid <= lvpdcar[1])	|| (PlayerInfo[playerid][pMRInections] == 10 &&
	vehicleid >= sfpdcar[0] && vehicleid <= sfpdcar[1])	|| (PlayerInfo[playerid][pMRInections] == 4 &&	vehicleid >= medicsls[0] && vehicleid <= medicsls[1])
	|| (PlayerInfo[playerid][pMRInections] == 24 &&	vehicleid >= streetcar[0] && vehicleid <= streetcar[1])) ? true : false;
}
stock RegistrationPlayer(playerid,skin_id)
{
	if(!PlayerInfo[playerid][pLogin]) return KickEx(playerid,8885);
	new year,month,day,hour,minuite,second,date_reg[50],playersip[16];
	GetPlayerIp(playerid,playersip,sizeof(playersip));
	getdate(year, month, day); gettime(hour,minuite,second);
	format(date_reg,sizeof(date_reg),"%d/%d/%d %d:%d",day,month,year,hour,minuite);
	strmid(PlayerInfo[playerid][pIpReg], playersip, 0, strlen(playersip), 255);
	strmid(PlayerInfo[playerid][pLoadNames], PlayerInfo[playerid][pNames], 0, 24, 255);
	PlayerInfo[playerid][pLevel] = 1;
	PlayerInfo[playerid][pCash] = 5000;
	PlayerInfo[playerid][pDMInections] = 0;
	PlayerInfo[playerid][pHouse] = -1;
	PlayerInfo[playerid][pHotel] = -1;
	PlayerInfo[playerid][pBusiness] = -1;
	PlayerInfo[playerid][pFuelBiz] = -1;
	PlayerInfo[playerid][pLicenses][0] = 1;
	PlayerInfo[playerid][pPnumber] = RandomEx(100000,999999);
	new mysql_total_query[470],mysql_connect_query[128];
	format(mysql_total_query,sizeof(mysql_total_query), "INSERT INTO `accounts` (`Name`, `pKey`, `pLevel`, `pDMInections`, `pPnumber`, `pBank`, `pCash`, `pChar`, `pDataReg`, `pIpReg`, `pTut`, `pCar`, `pCar2`, `pRKInections`, `pEmail`, `pDrug`, `pSex`, `pHotel`, `pPbiskey`, `pPhousekey`, `pPsbiskey`)\
	 VALUES ('%s', '%s', '1', '0', '%d', '0', '5000', '%d', '%s', '%s', '1', '462', '462', '1', '%s', 'None', '%d', '-1', '-1', '-1', '-1')", PlayerInfo[playerid][pNames],
	PlayerInfo[playerid][pKey],PlayerInfo[playerid][pPnumber],skin_id,date_reg,playersip,PlayerInfo[playerid][pEmail],PlayerInfo[playerid][pSex]);
    mysql_empty(connects, mysql_total_query);
    format(PlayerInfo[playerid][pLicense],16,"%d,%d,%d,%d",PlayerInfo[playerid][pLicenses][0],PlayerInfo[playerid][pLicenses][1],PlayerInfo[playerid][pLicenses][2],PlayerInfo[playerid][pLicenses][3]);
	format(mysql_connect_query, sizeof(mysql_connect_query), "UPDATE `accounts` SET `pLics` = '%s' WHERE `Name` = '%s' LIMIT 1", PlayerInfo[playerid][pLicense], PlayerInfo[playerid][pNames]);
	mysql_empty(connects, mysql_connect_query);
	new mysql_string [128];
	mysql_format(connects, mysql_string, 128, "SELECT `id` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", PlayerInfo[playerid][pNames]);
	mysql_tquery(connects, mysql_string, "FindPlayerInTable", "dd", playerid, g_MysqlRaceCheck[playerid]);
	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Добро пожаловать на сервер Inspire Role Play.");
	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Первончально советуем тебе податься на работу для новичков!");
	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Найти их можно в твоем GPS навигаторе ''/gps''");
	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Там ты заработаешь ооочень не плохие средства!");
	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Желаю тебе удачи и приятной игры на нашем сервере!");
	SCM(playerid, -1, "• {FFC800}[Подсказка] {ffffff}Введите /ex7plays в чат, для получения небольшого бонуса!");
	return 1;
}
stock LoadCarPlayer(playerid, carid)
{
	if(PlayerInfo[playerid][pHouse] == -1) return 1;
	new house = PlayerInfo[playerid][pHouse];
	switch(carid)
	{
	    case 1:
		{
			if(caridhouse[playerid] != 0) DestroyVehicleEx(caridhouse[playerid]), caridhouse[playerid] = 0;
			if(HouseInfo[house][hGarage])
			{
				caridhouse[playerid] = CreateVehicleEx(PlayerInfo[playerid][pCar][0], 2484.3015,-2561.6047,2500.7917,359.1732, vehicle_components_add[playerid][carid-1][0] ,vehicle_components_add[playerid][carid-1][1], 7200);
				VehInfo[caridhouse[playerid]-1][vDrived] = HouseInfo[house][CarDrived][0];
				LinkVehicleToInterior(caridhouse[playerid], 1);
				SetVehicleVirtualWorld(caridhouse[playerid], house+50);
			}
			else
			{
				caridhouse[playerid] = CreateVehicleEx(PlayerInfo[playerid][pCar][0], HouseInfo[house][hCar][0],HouseInfo[house][hCar][1],HouseInfo[house][hCar][2],HouseInfo[house][hCar][3], vehicle_components_add[playerid][carid-1][0] ,vehicle_components_add[playerid][carid-1][1], 7200);
                VehInfo[caridhouse[playerid]-1][vDrived] = HouseInfo[house][CarDrived][0];
				LinkVehicleToInterior(caridhouse[playerid], 0);
				SetVehicleVirtualWorld(caridhouse[playerid], 0);
			}
			LockCar(caridhouse[playerid]);
			VehInfo[caridhouse[playerid]][vFuel] = 50;
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		}
		case 2:
		{
			if(HouseInfo[house][hGarage])
			{
			    if(GetPVarInt(playerid,#vehicle_id_two) != 0) DestroyVehicleEx(GetPVarInt(playerid,#vehicle_id_two)),DeletePVar(playerid, #vehicle_id_two);
				SetPVarInt(playerid, #vehicle_id_two,CreateVehicleEx(PlayerInfo[playerid][pCar][1], 2488.2617,-2561.7820,2500.7917,358.1705, vehicle_components_add[playerid][carid-1][0] ,vehicle_components_add[playerid][carid-1][1], 7200));
				VehInfo[GetPVarInt(playerid,#vehicle_id_two)-1][vDrived] = HouseInfo[house][CarDrived][1];
				LinkVehicleToInterior(GetPVarInt(playerid,#vehicle_id_two), 1);
				SetVehicleVirtualWorld(GetPVarInt(playerid,#vehicle_id_two), house+50);
				LockCar(GetPVarInt(playerid,#vehicle_id_two));
				VehInfo[GetPVarInt(playerid,#vehicle_id_two)][vFuel] = 50;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
			else
			{
			    if(caridhouse[playerid] != 0) DestroyVehicleEx(caridhouse[playerid]), caridhouse[playerid] = 0;
				caridhouse[playerid] = CreateVehicleEx(PlayerInfo[playerid][pCar][1], HouseInfo[house][hCar][0],HouseInfo[house][hCar][1],HouseInfo[house][hCar][2],HouseInfo[house][hCar][3], vehicle_components_add[playerid][carid-1][0] ,vehicle_components_add[playerid][carid-1][1], 7200);
                VehInfo[caridhouse[playerid]-1][vDrived] = HouseInfo[house][CarDrived][1];
				LinkVehicleToInterior(caridhouse[playerid], 0);
				SetVehicleVirtualWorld(caridhouse[playerid], 0);
				LockCar(caridhouse[playerid]);
				VehInfo[caridhouse[playerid]][vFuel] = 50;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SetVehicleNumberPlate(caridhouse[playerid], PlayerInfo[playerid][pNumbercar]);
			}
		}
	}
	switch(carid)
	{
	    case 1:
	    {
			SetVehicleNumberPlate(caridhouse[playerid], PlayerInfo[playerid][pNumbercar]);
		    ChangeVehicleColor(caridhouse[playerid],vehicle_components_add[playerid][0][0],vehicle_components_add[playerid][0][1]);
			AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][2]);
			AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][12]);
			AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][13]);
			if(PJ(caridhouse[playerid]))
			{
				ChangeVehiclePaintjob(caridhouse[playerid], vehicle_components_add[playerid][0][3]);
				AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][4]);
				AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][5]);
				AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][6]);
				AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][7]);
				AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][8]);
				AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][9]);
				AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][10]);
				AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][0][11]);
			}
	    }
	    case 2:
	    {
	        if(HouseInfo[house][hGarage])
	        {
	 			ChangeVehicleColor(GetPVarInt(playerid,#vehicle_id_two), vehicle_components_add[playerid][1][0],vehicle_components_add[playerid][1][1]);
				AddVehicleComponent (GetPVarInt(playerid,#vehicle_id_two), vehicle_components_add[playerid][1][2]);
				AddVehicleComponent (GetPVarInt(playerid,#vehicle_id_two), vehicle_components_add[playerid][1][12]);
				AddVehicleComponent (GetPVarInt(playerid,#vehicle_id_two), vehicle_components_add[playerid][1][13]);
				if(PJ(GetPVarInt(playerid,#vehicle_id_two)))
				{
					ChangeVehiclePaintjob(GetPVarInt(playerid,#vehicle_id_two), vehicle_components_add[playerid][1][3]);
					AddVehicleComponent (GetPVarInt(playerid,#vehicle_id_two), vehicle_components_add[playerid][1][4]);
					AddVehicleComponent (GetPVarInt(playerid,#vehicle_id_two), vehicle_components_add[playerid][1][5]);
					AddVehicleComponent (GetPVarInt(playerid,#vehicle_id_two), vehicle_components_add[playerid][1][6]);
					AddVehicleComponent (GetPVarInt(playerid,#vehicle_id_two), vehicle_components_add[playerid][1][7]);
					AddVehicleComponent (GetPVarInt(playerid,#vehicle_id_two), vehicle_components_add[playerid][1][8]);
					AddVehicleComponent (GetPVarInt(playerid,#vehicle_id_two), vehicle_components_add[playerid][1][9]);
					AddVehicleComponent (GetPVarInt(playerid,#vehicle_id_two), vehicle_components_add[playerid][1][10]);
					AddVehicleComponent (GetPVarInt(playerid,#vehicle_id_two), vehicle_components_add[playerid][1][11]);
				}
			}
			else
			{
   				ChangeVehicleColor(caridhouse[playerid],vehicle_components_add[playerid][1][0],vehicle_components_add[playerid][1][1]);
				AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][1][2]);
				AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][1][12]);
				AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][1][13]);
				if(PJ(caridhouse[playerid]))
				{
					ChangeVehiclePaintjob(caridhouse[playerid], vehicle_components_add[playerid][1][3]);
					AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][1][4]);
					AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][1][5]);
					AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][1][6]);
					AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][1][7]);
					AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][1][8]);
					AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][1][9]);
					AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][1][10]);
					AddVehicleComponent (caridhouse[playerid], vehicle_components_add[playerid][1][11]);
				}
			}
	    }
	}
	return 1;
}
publics: bus_stop(playerid)
{
	new pos = GetPVarInt(playerid, #busPos), route = GetPVarInt(playerid, #busRoute), money_ = GetPVarInt(playerid, #busMoney);
	if(pos == 39)
	{
 		PlayerInfo[playerid][pCash] += money_;
   		SCMF(playerid, COLOR_GREEN, "Вы проехали один рейс, Вы заработали: $%i", money_);
   		SetPVarInt(playerid, #busPos, 0), SetPVarInt(playerid, #busMoney, 0);
	}
 	else GivePVarInt(playerid, #busPos, 1), GivePVarInt(playerid, #busMoney, 120);
  	new t_pos = GetPVarInt(playerid, #busPos), type_bus_race = 0;
 	if((route == 0 && (t_pos == 1-1 || t_pos == 14-1 || t_pos == 21-1 || t_pos == 28-1 || t_pos == 32-1 || t_pos == 34-1))) type_bus_race = 1;
 	SetPlayerRaceCheckpoint(playerid,type_bus_race,aBusPos[route][t_pos][0],aBusPos[route][t_pos][1],aBusPos[route][t_pos][2],aBusPos[route][t_pos+1][0],aBusPos[route][t_pos+1][1],aBusPos[route][t_pos+1][2],4.0);
  	return 1;
}
publics: spawned_bus(playerid)
{
    DisablePlayerRaceCheckpoint(playerid);
    SetVehicleToRespawn(GetPVarInt(playerid, #busID));
	DeletePVar(playerid, #busID);
	DeletePVar(playerid, #busRoute);
	PlayerInfo[playerid][pCash] += GetPVarInt(playerid, #busMoney);
	SCMF(playerid, COLOR_GREEN, "Вами было заработано: $%i", GetPVarInt(playerid, #busMoney));
	DeletePVar(playerid, #busMoney);
	DeletePVar(playerid, #busPos);
	if(pTemp[playerid][bus_text] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabel(pTemp[playerid][bus_text]);
	pTemp[playerid][bus_text] = Text3D:INVALID_3DTEXT_ID;
	return 1;
}
publics: TuneCamera(playerid)
{
    switch(GetPVarInt(playerid, "TuneType"))
    {
        case 1:
        {
            InterpolateCameraPos(playerid, 2158.826171, -2174.988281, 16.196464, 2157.244140, -2172.652587, 14.268106, 1000);
			InterpolateCameraLookAt(playerid, 2154.407470, -2174.056640, 14.049816, 2153.750976, -2176.084716, 13.259450, 1000);
		}
		case 4:
		{
		    InterpolateCameraPos(playerid, 2158.826171, -2174.988281, 16.196464, 2150.715087, -2169.608398, 15.604330, 1000);
			InterpolateCameraLookAt(playerid, 2154.407470, -2174.056640, 14.049816, 2154.019531, -2172.957519, 13.911876, 1000);
		}
	}
	return 1;
}
stock OknaGameStart(playerid)
{
	if(OknaGameEnd{playerid} >= 10)
	{
	    DestroyObject(Graz[mOkna[playerid]]);
		GivePVarInt(playerid, #window_money, 1), SetPVarInt(playerid, #window_start, true);
		mOkna[0] = 1;
		SetTimerEx("window", 5000, false, "d", playerid);
		SetTimer("mWin", 60000, false);
		OknaGame[playerid] = -1;
		OknaGameEnd{playerid} = 0;
		new string[70];
		format(string, sizeof(string), "Окон помыто: %d",GetPVarInt(playerid, #window_money));
		SendClientMessage(playerid, CORANGE, string);
		return 1;
	}
	OknaGame[playerid] = random(2);
	new str[70];
	if(OknaGame[playerid] == 1) format(str, sizeof(str), "~w~Press ~r~Y (%d/10)",OknaGameEnd{playerid});
	else format(str, sizeof(str), "~w~Press ~g~N (%d/10)",OknaGameEnd{playerid});
	GameTextForPlayer(playerid, str, 3000, 3);
	ApplyAnimation(playerid,"INT_HOUSE","wash_up", 4.1, 0, 1, 1, 0, 2000);
	return true;
}
publics: window(playerid) return DeletePVar(playerid, #window_start);
publics: mWin()
{
	for(new i; i < 6; i++)
	{
	    if(!mOkna[i]) continue;
 		mOkna[i] = 0;
		Graz[i] = CreateDynamicObject(19898, CordOkno[i][0],CordOkno[i][1],CordOkno[i][2], 90.00000, -13.00000, 0.00000);
		break;
	}
	return 1;
}
publics: drop_derevo(playerid)
{
	KillTimer(GetPVarInt(playerid, #jobTimer));
	DestroyObject(gDerevo[GetPVarInt(playerid, #Derevo)]);
	DisablePlayerCheckpoint(playerid);
	DerevoP[GetPVarInt(playerid, #Derevo)] = CreateDynamicPickup(1463,3,Derevo[GetPVarInt(playerid, #Derevo)][0],Derevo[GetPVarInt(playerid, #Derevo)][1],Derevo[GetPVarInt(playerid, #Derevo)][2]+1.5,-1,-1,playerid);
	return 0;
}
publics: AntiCheatTimer(playerid)
{
	new Float:PoX,Float:PoY,Float:PoZ;
	if(!IsPlayerInAnyVehicle(playerid)) GetPlayerPos(playerid,PoX,PoY,PoZ);
	else GetVehiclePos(GetPlayerVehicleID(playerid),PoX,PoY,PoZ);
    if(GetPVarFloat(playerid,"PosX") != 0.0 && GetPVarFloat(playerid,"PosY") != 0.0 && GetPlayerState(playerid) != PLAYER_STATE_SPECTATING && GetPVarInt(playerid,"Anti_AirFly") < gettime() && !PlayerInfo[playerid][bAdmin])
    {
		new
			string[90],
			Float:xdist = PoX-GetPVarFloat(playerid,"PosX"),
			Float:ydist = PoY-GetPVarFloat(playerid,"PosY"),
		 	Float:sqxdist = xdist*xdist,
			Float:sqydist = ydist*ydist,
			Float:distance = (sqxdist+sqydist)/31;

		if(!IsPlayerInAnyVehicle(playerid))
		{
		    if(GetPVarInt(playerid,"newkeys_128") >= gettime() && distance > 2000) format(string, 90, "» Игрок %s[%d] возможно использует чит(Телепорт по метке). Дистанция: %.1f",PlayerInfo[playerid][pNames],playerid,distance),ABroadCast(COLOR_GREY, string, 1);
			else if(distance < 2000 && distance > 100) format(string, 90, "» Игрок %s[%d] возможно использует чит(Fly/AirBrk). Дистанция: %.1f.",PlayerInfo[playerid][pNames],playerid,distance),ABroadCast(COLOR_GREY, string, 1);
			else if(distance > 2000) format(string, 90, "» Игрок %s[%d] возможно использует чит(TP/Fly/AirBrk). Дистанция: %.1f.",PlayerInfo[playerid][pNames],playerid,distance),ABroadCast(COLOR_GREY, string, 1);
		}
		else if(distance > 300 && !IsAPlane(GetPlayerVehicleID(playerid))) format(string, 90, "» Игрок %s[%d] возможно использует чит(TP/Fly/AirBrk в машине). Дистанция: %.1f.",PlayerInfo[playerid][pNames],playerid,distance),ABroadCast(COLOR_GREY, string, 1);
	}
	SetPVarFloat(playerid,"PosX",PoX);
	SetPVarFloat(playerid,"PosY",PoY);
	return true;
}
publics: hand(playerid)
{
	DeletePVar(playerid,"hand");
    ClearAnimations(playerid);
    ApplyAnimation(playerid,"PED","IDLE_chat",5.0,0,0,0,1,5000,1);
    SetPlayerAttachedObject(playerid,0,341,6);
    SetPlayerAttachedObject(playerid,2,1463,1,-0.39, 1.616571, -0.065124,76.480148, 102.781570, 190.952545,1.1,0.5,1.0);
	//ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",1.0,1,0,0,0,6000,0);
	SetPlayerCheckpoint(playerid, 2224.1985,-717.1133,41.7981, 3.0), SCM(playerid, COLOR_GREEN, "Отнесите дрова на склад!");
	SetPVarInt(playerid, #drova, true), GameTextForPlayer(playerid, "~g~+10 kg", 1000, 1);
}
